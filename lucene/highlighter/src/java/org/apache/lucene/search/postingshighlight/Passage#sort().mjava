  void sort() {
    final int starts[] = matchStarts;
    final int ends[] = matchEnds;
    final Term terms[] = matchTerms;
    new SorterTemplate() {
      @Override
      protected void swap(int i, int j) {
        int temp = starts[i];
        starts[i] = starts[j];
        starts[j] = temp;
        
        temp = ends[i];
        ends[i] = ends[j];
        ends[j] = temp;
        
        Term tempTerm = terms[i];
        terms[i] = terms[j];
        terms[j] = tempTerm;
      }

      @Override
      protected int compare(int i, int j) {
        // TODO: java7 use Integer.compare(starts[i], starts[j])
        return Long.signum(((long)starts[i]) - starts[j]);
      }

      @Override
      protected void setPivot(int i) {
        pivot = starts[i];
      }

      @Override
      protected int comparePivot(int j) {
        // TODO: java7 use Integer.compare(pivot, starts[j])
        return Long.signum(((long)pivot) - starts[j]);
      }
      
      int pivot;
    }.mergeSort(0, numMatches-1);
  }

