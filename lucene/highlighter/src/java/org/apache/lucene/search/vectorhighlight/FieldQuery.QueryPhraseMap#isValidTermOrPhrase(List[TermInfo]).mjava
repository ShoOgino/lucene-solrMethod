    public boolean isValidTermOrPhrase( final List<TermInfo> phraseCandidate ){
      // check terminal
      if( !terminal ) return false;

      // if the candidate is a term, it is valid
      if( phraseCandidate.size() == 1 ) return true;

      
      assert phraseCandidate.size() == positions.length;
      // else check whether the candidate is valid phrase
      // compare position-gaps between terms to slop
      int pos = phraseCandidate.get( 0 ).getPosition();
      int totalDistance = 0;
      for( int i = 1; i < phraseCandidate.size(); i++ ){
        int nextPos = phraseCandidate.get( i ).getPosition();
        final int expectedDelta = positions[i] - positions[i - 1];
        final int actualDelta = nextPos - pos;
        totalDistance += Math.abs(expectedDelta - actualDelta);
        pos = nextPos;
      }
      return totalDistance <= slop;
    }

