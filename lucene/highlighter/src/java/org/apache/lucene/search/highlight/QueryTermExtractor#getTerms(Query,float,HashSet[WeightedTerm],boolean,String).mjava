  private static final void getTerms(Query query, float boost, HashSet<WeightedTerm> terms, boolean prohibited, String fieldName) {
    try {
      if (query instanceof BoostQuery) {
        BoostQuery boostQuery = (BoostQuery) query;
        getTerms(boostQuery.getQuery(), boost * boostQuery.getBoost(), terms, prohibited, fieldName);
      } else if (query instanceof BooleanQuery)
        getTermsFromBooleanQuery((BooleanQuery) query, boost, terms, prohibited, fieldName);
      else {
        HashSet<Term> nonWeightedTerms = new HashSet<>();
        try {
          EMPTY_INDEXSEARCHER.createNormalizedWeight(query, ScoreMode.COMPLETE_NO_SCORES).extractTerms(nonWeightedTerms);
        } catch (IOException bogus) {
          throw new RuntimeException("Should not happen on an empty index", bogus);
        }
        for (Iterator<Term> iter = nonWeightedTerms.iterator(); iter.hasNext(); ) {
          Term term = iter.next();
          if ((fieldName == null) || (term.field().equals(fieldName))) {
            terms.add(new WeightedTerm(boost, term.text()));
          }
        }
      }
    } catch (UnsupportedOperationException ignore) {
      //this is non-fatal for our purposes
    }
  }

