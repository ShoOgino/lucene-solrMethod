  /** Advances to the next position. Always returns -1; the caller is assumed not to care for the highlighter.  */
  @Override
  public int nextPosition() throws IOException {
    if (!firstPositionConsumed) {
      firstPositionConsumed = true;
    } else if (queue.size() == 0) {
      throw new IllegalStateException("nextPosition called too many times");
    } else if (queue.top().nextPosition()) { // advance head
      queue.updateTop(); //the new position may be behind another postingsEnum in the queue
    } else {
      queue.pop(); //this postingsEnum is consumed; get rid of it. Another will take it's place.
    }
    assert queue.size() > 0;
    return -1;
  }

