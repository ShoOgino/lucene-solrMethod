  protected List<OffsetsEnum> createOffsetsEnumsFromReader(LeafReader leafReader, int doc) throws IOException {
    final Terms termsIndex = leafReader.terms(field);
    if (termsIndex == null) {
      return Collections.emptyList();
    }

    final List<OffsetsEnum> offsetsEnums = new ArrayList<>(terms.length + automata.length);

    // Handle position insensitive terms (a subset of this.terms field):
    final BytesRef[] insensitiveTerms;
    if (phraseHelper.hasPositionSensitivity()) {
      insensitiveTerms = phraseHelper.getAllPositionInsensitiveTerms();
      assert insensitiveTerms.length <= terms.length : "insensitive terms should be smaller set of all terms";
    } else {
      insensitiveTerms = terms;
    }
    if (insensitiveTerms.length > 0) {
      createOffsetsEnumsForTerms(insensitiveTerms, termsIndex, doc, offsetsEnums);
    }

    // Handle spans
    if (phraseHelper.hasPositionSensitivity()) {
      phraseHelper.createOffsetsEnumsForSpans(leafReader, doc, offsetsEnums);
    }

    // Handle automata
    if (automata.length > 0) {
      createOffsetsEnumsForAutomata(termsIndex, doc, offsetsEnums);
    }

    return offsetsEnums;
  }

