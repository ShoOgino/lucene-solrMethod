  private static SlicePoint[] slicePoints(Passage p) {
    SlicePoint[] slicePoints = new SlicePoint[p.markers.size() * 2];
    int x = 0;
    for (OffsetRange m : p.markers) {
      slicePoints[x++] = new SlicePoint(SlicePoint.Type.START, m.from, m);
      slicePoints[x++] = new SlicePoint(SlicePoint.Type.END, m.to, m);
    }

    // Order slice points by their offset
    Comparator<SlicePoint> c =
        Comparator.<SlicePoint>comparingInt(pt -> pt.offset)
            .thenComparingInt(pt -> pt.type.ordering)
            .thenComparing(
                (a, b) -> {
                  if (a.type == SlicePoint.Type.START) {
                    // Longer start slice points come first.
                    return Integer.compare(b.marker.to, a.marker.to);
                  } else {
                    // Shorter end slice points come first.
                    return Integer.compare(b.marker.from, a.marker.from);
                  }
                });

    Arrays.sort(slicePoints, c);

    return slicePoints;
  }

