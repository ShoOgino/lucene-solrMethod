  /** Asserts that two breakiterators break the text the same way */
  // TODO: change this to use offsets with non-zero start/end
  public void assertSameBreaks(String text, BreakIterator expected, BreakIterator actual) {
    expected.setText(text);
    actual.setText(text);

    assertEquals(expected.current(), actual.current());

    // next()
    int v = expected.current();
    while (v != BreakIterator.DONE) {
      assertEquals(v = expected.next(), actual.next());
      assertEquals(expected.current(), actual.current());
    }
    
    // first()
    assertEquals(expected.first(), actual.first());
    assertEquals(expected.current(), actual.current());
    // last()
    assertEquals(expected.last(), actual.last());
    assertEquals(expected.current(), actual.current());
    
    // previous()
    v = expected.current();
    while (v != BreakIterator.DONE) {
      assertEquals(v = expected.previous(), actual.previous());
      assertEquals(expected.current(), actual.current());
    }
    
    // following()
    for (int i = 0; i <= text.length(); i++) {
      expected.first();
      actual.first();
      assertEquals(expected.following(i), actual.following(i));
      assertEquals(expected.current(), actual.current());
    }
    
    // preceding()
    for (int i = 0; i <= text.length(); i++) {
      expected.last();
      actual.last();
      assertEquals(expected.preceding(i), actual.preceding(i));
      assertEquals(expected.current(), actual.current());
    }
  }

