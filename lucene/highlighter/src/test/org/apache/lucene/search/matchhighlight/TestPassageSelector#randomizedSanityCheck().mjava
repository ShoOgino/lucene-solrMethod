  @Test
  public void randomizedSanityCheck() {
    PassageSelector selector = new PassageSelector();
    PassageFormatter formatter = new PassageFormatter("...", ">", "<");
    ArrayList<OffsetRange> highlights = new ArrayList<>();
    ArrayList<OffsetRange> permittedRanges = new ArrayList<>();

    for (int i = 0; i < 5000; i++) {
      String value =
          randomBoolean()
              ? randomAsciiLettersOfLengthBetween(0, 100)
              : randomRealisticUnicodeOfCodepointLengthBetween(0, 1000);
      int maxLength = value.length();

      permittedRanges.clear();
      highlights.clear();
      for (int j = randomIntBetween(0, 10); --j >= 0; ) {
        int from = randomIntBetween(0, value.length());
        int to = Math.min(from + randomIntBetween(1, 10), maxLength);
        if (from < to) {
          highlights.add(new OffsetRange(from, to));
        }
      }

      int charWindow = randomIntBetween(1, 100);
      int maxPassages = randomIntBetween(1, 10);

      if (randomIntBetween(0, 5) == 0) {
        int increment = value.length() / 10;
        for (int c = randomIntBetween(0, 20), start = 0; --c >= 0; ) {
          int step = randomIntBetween(0, increment);
          int to = Math.min(start + step, maxLength);
          if (start < to) {
            permittedRanges.add(new OffsetRange(start, to));
          }
          start += step + randomIntBetween(0, 3);
        }
      } else {
        permittedRanges.add(new OffsetRange(0, value.length()));
      }

      // Just make sure there are no exceptions.
      List<Passage> passages =
          selector.pickBest(value, highlights, charWindow, maxPassages, permittedRanges);
      formatter.format(value, passages, permittedRanges);
    }
  }

