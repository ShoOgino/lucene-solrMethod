  /**
   * Parse the given properties file, performing non-recursive Ant-like
   * property value interpolation, and return the resulting Properties.
   */
  private Properties loadPropertiesFile(File file) {
    final InputStream stream;
    try {
      stream = new FileInputStream(file);
    } catch (FileNotFoundException e) {
      throw new BuildException("Properties file does not exist: " + file.getPath());
    }
    // Properties files are encoded as Latin-1
    final Reader reader = new InputStreamReader(stream, Charset.forName("ISO-8859-1"));
    final Properties properties = new Properties(); 
    try {
      properties.load(reader);
    } catch (IOException e) {
      throw new BuildException("Exception reading properties file " + file, e);
    } finally {
      try {
        reader.close();
      } catch (IOException e) {
        // do nothing
      }
    }
    // Perform non-recursive Ant-like property value interpolation
    StringBuffer buffer = new StringBuffer();
    for (Map.Entry entry : properties.entrySet()) {
      buffer.setLength(0);
      Matcher matcher = PROPERTY_REFERENCE_PATTERN.matcher((String)entry.getValue());
      while (matcher.find()) {
        String interpolatedValue = properties.getProperty(matcher.group(1));
        if (null != interpolatedValue) {
          matcher.appendReplacement(buffer, interpolatedValue);
        }
      }
      matcher.appendTail(buffer);
      properties.setProperty((String)entry.getKey(), buffer.toString());
    }
    return properties;
  }

