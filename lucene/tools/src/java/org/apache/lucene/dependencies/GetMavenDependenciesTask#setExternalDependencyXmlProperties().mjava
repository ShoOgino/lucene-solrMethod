  /**
   * For each module, sets a compile-scope and a test-scope property
   * with values that contain the appropriate &lt;dependency&gt;
   * snippets.
   */
  private void setExternalDependencyXmlProperties() {
    for (String module : internalCompileScopeDependencies.keySet()) { // get full module list
      StringBuilder compileScopeBuilder = new StringBuilder();
      StringBuilder testScopeBuilder = new StringBuilder();
      SortedSet<ExternalDependency> extDeps = allExternalDependencies.get(module);
      if (null != extDeps) {
        for (ExternalDependency dep : extDeps) {
          StringBuilder builder = dep.isTestDependency ? testScopeBuilder : compileScopeBuilder;
          appendDependencyXml(builder, dep.groupId, dep.artifactId, "    ", null, 
                              dep.isTestDependency, dep.isOptional, dep.classifier, null);
          // Test POMs for solrj, solr-core, lucene-codecs and lucene-core modules
          // need to include all compile-scope dependencies as test-scope dependencies
          // since we've turned off transitive dependency resolution.
          if ( ! dep.isTestDependency && modulesWithSeparateCompileAndTestPOMs.contains(module)) {
            appendDependencyXml(testScopeBuilder, dep.groupId, dep.artifactId, "    ", null,
                                true, dep.isOptional, dep.classifier, null);
          }
        }
      }
      if (compileScopeBuilder.length() > 0) {
        compileScopeBuilder.setLength(compileScopeBuilder.length() - 1); // drop trailing newline
      }
      if (testScopeBuilder.length() > 0) {
        testScopeBuilder.setLength(testScopeBuilder.length() - 1); // drop trailing newline
      }
      allProperties.setProperty(module + ".external.dependencies", compileScopeBuilder.toString());
      allProperties.setProperty(module + ".external.test.dependencies", testScopeBuilder.toString());
    }
  }

