  @Override
  protected Boolean rectContainsPoint(GeoRect rect, double pointLat, double pointLon) {

    assert Double.isNaN(pointLat) == false;

    int rectLatMinEnc = LatLonPoint.encodeLat(rect.minLat);
    int rectLatMaxEnc = LatLonPoint.encodeLat(rect.maxLat);
    int rectLonMinEnc = LatLonPoint.encodeLon(rect.minLon);
    int rectLonMaxEnc = LatLonPoint.encodeLon(rect.maxLon);

    int pointLatEnc = LatLonPoint.encodeLat(pointLat);
    int pointLonEnc = LatLonPoint.encodeLon(pointLon);

    if (rect.minLon < rect.maxLon) {
      return pointLatEnc >= rectLatMinEnc &&
        pointLatEnc <= rectLatMaxEnc &&
        pointLonEnc >= rectLonMinEnc &&
        pointLonEnc <= rectLonMaxEnc;
    } else {
      // Rect crosses dateline:
      return pointLatEnc >= rectLatMinEnc &&
        pointLatEnc <= rectLatMaxEnc &&
        (pointLonEnc >= rectLonMinEnc ||
         pointLonEnc <= rectLonMaxEnc);
    }
  }

