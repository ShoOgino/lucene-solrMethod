  public void testLineEncoding() {
    double alat = 0.0;
    double blat = 2.0;
    double alon = 0.0;
    double blon = 2.0;
    int alatEnc = GeoEncodingUtils.encodeLatitude(alat);
    int blatEnc = GeoEncodingUtils.encodeLatitude(blat);
    int alonEnc = GeoEncodingUtils.encodeLongitude(alon);
    int blonEnc = GeoEncodingUtils.encodeLongitude(blon);
    byte[] b = new byte[7 * LatLonShape.BYTES];
    LatLonShape.encodeTriangle(b, alatEnc, alonEnc, blatEnc, blonEnc, alatEnc, alonEnc);
    int[] encoded = new int[6];
    LatLonShape.decodeTriangle(b, encoded);
    assertTrue(encoded[0] == alatEnc);
    assertTrue(encoded[1] == alonEnc);
    assertTrue(encoded[2] == blatEnc);
    assertTrue(encoded[3] == blonEnc);
    assertTrue(encoded[4] == alatEnc);
    assertTrue(encoded[5] == alonEnc);
    LatLonShape.encodeTriangle(b, alatEnc, alonEnc, alatEnc, alonEnc, blatEnc, blonEnc);
    encoded = new int[6];
    LatLonShape.decodeTriangle(b, encoded);
    assertTrue(encoded[0] == alatEnc);
    assertTrue(encoded[1] == alonEnc);
    assertTrue(encoded[2] == alatEnc);
    assertTrue(encoded[3] == alonEnc);
    assertTrue(encoded[4] == blatEnc);
    assertTrue(encoded[5] == blonEnc);
    LatLonShape.encodeTriangle(b, blatEnc, blonEnc, alatEnc, alonEnc, alatEnc, alonEnc);
    encoded = new int[6];
    LatLonShape.decodeTriangle(b, encoded);
    assertTrue(encoded[0] == alatEnc);
    assertTrue(encoded[1] == alonEnc);
    assertTrue(encoded[2] == blatEnc);
    assertTrue(encoded[3] == blonEnc);
    assertTrue(encoded[4] == alatEnc);
    assertTrue(encoded[5] == alonEnc);
  }

