  private void verifyEncoding(double ay, double ax, double by, double bx, double cy, double cx) {
    int[] original = new int[]{
        encodeY(ay),
        encodeX(ax),
        encodeY(by),
        encodeX(bx),
        encodeY(cy),
        encodeX(cx)};

    //quantize the triangle
    byte[] b = new byte[7 * ShapeField.BYTES];
    ShapeField.encodeTriangle(b, original[0], original[1], true, original[2], original[3], true, original[4], original[5], true);
    ShapeField.DecodedTriangle encoded = new ShapeField.DecodedTriangle();
    ShapeField.decodeTriangle(b, encoded);
    double[] encodedQuantize = new double[] {
        decodeY(encoded.aY),
        decodeX(encoded.aX),
        decodeY(encoded.bY),
        decodeX(encoded.bX),
        decodeY(encoded.cY),
        decodeX(encoded.cX)};

    int orientation = GeoUtils.orient(original[1], original[0], original[3], original[2], original[5], original[4]);
    //quantize original
    double[] originalQuantize;
    //we need to change the orientation if CW
    if (orientation == -1) {
      originalQuantize = new double[] {
          decodeY(original[4]),
          decodeX(original[5]),
          decodeY(original[2]),
          decodeX(original[3]),
          decodeY(original[0]),
          decodeX(original[1])};
    } else {
      originalQuantize = new double[] {
          decodeY(original[0]),
          decodeX(original[1]),
          decodeY(original[2]),
          decodeX(original[3]),
          decodeY(original[4]),
          decodeX(original[5])};
    }

    for (int i =0; i < 100; i ++) {
      Polygon2D polygon2D = createPolygon2D(nextPolygon());
      PointValues.Relation originalRelation = polygon2D.relateTriangle(originalQuantize[1], originalQuantize[0], originalQuantize[3], originalQuantize[2], originalQuantize[5], originalQuantize[4]);
      PointValues.Relation encodedRelation = polygon2D.relateTriangle(encodedQuantize[1], encodedQuantize[0], encodedQuantize[3], encodedQuantize[2], encodedQuantize[5], encodedQuantize[4]);
      assertTrue(originalRelation == encodedRelation);
    }
  }

