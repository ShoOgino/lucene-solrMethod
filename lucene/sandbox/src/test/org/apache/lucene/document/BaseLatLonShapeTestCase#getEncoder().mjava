  @Override
  protected Encoder getEncoder() {
    return new Encoder() {
      @Override
      double quantizeX(double raw) {
        return decodeLongitude(encodeLongitude(raw));
      }

      @Override
      double quantizeXCeil(double raw) {
        return decodeLongitude(encodeLongitudeCeil(raw));
      }

      @Override
      double quantizeY(double raw) {
        return decodeLatitude(encodeLatitude(raw));
      }

      @Override
      double quantizeYCeil(double raw) {
        return decodeLatitude(encodeLatitudeCeil(raw));
      }

      /** quantizes a latitude value to be consistent with index encoding */
      protected double quantizeLat(double rawLat) {
        return quantizeY(rawLat);
      }

      /** quantizes a provided latitude value rounded up to the nearest encoded integer */
      protected double quantizeLatCeil(double rawLat) {
        return quantizeYCeil(rawLat);
      }

      /** quantizes a longitude value to be consistent with index encoding */
      protected double quantizeLon(double rawLon) {
        return quantizeX(rawLon);
      }

      /** quantizes a provided longitude value rounded up to the nearest encoded integer */
      protected double quantizeLonCeil(double rawLon) {
        return quantizeXCeil(rawLon);
      }

      @Override
      double[] quantizeTriangle(double ax, double ay, double bx, double by, double cx, double cy) {
        int[] decoded = encodeDecodeTriangle(ax, ay, bx, by, cx, cy);
        return new double[]{decodeLatitude(decoded[0]), decodeLongitude(decoded[1]), decodeLatitude(decoded[2]), decodeLongitude(decoded[3]), decodeLatitude(decoded[4]), decodeLongitude(decoded[5])};
      }

      @Override
      int[] encodeDecodeTriangle(double ax, double ay, double bx, double by, double cx, double cy) {
        byte[] encoded = new byte[7 * ShapeField.BYTES];
        ShapeField.encodeTriangle(encoded, encodeLatitude(ay), encodeLongitude(ax), encodeLatitude(by), encodeLongitude(bx), encodeLatitude(cy), encodeLongitude(cx));
        int[] decoded = new int[6];
        ShapeField.decodeTriangle(encoded, decoded);
        return decoded;
      }
    };
  }

