  @Override
  public void setBottom(int slot) {
    bottom = values[slot];
    // make bounding box(es) to exclude non-competitive hits, but start
    // sampling if we get called way too much: don't make gobs of bounding
    // boxes if comparator hits a worst case order (e.g. backwards distance order)
    if (setBottomCounter < 1024 || (setBottomCounter & 0x3F) == 0x3F) {
      GeoRect box = GeoUtils.circleToBBox(latitude, longitude, haversin2(bottom));
      // pre-encode our box to our integer encoding, so we don't have to decode 
      // to double values for uncompetitive hits. This has some cost!
      minLat = LatLonPoint.encodeLatitude(box.minLat);
      maxLat = LatLonPoint.encodeLatitude(box.maxLat);
      if (box.crossesDateline()) {
        // box1
        minLon = Integer.MIN_VALUE;
        maxLon = LatLonPoint.encodeLongitude(box.maxLon);
        // box2
        minLon2 = LatLonPoint.encodeLongitude(box.minLon);
      } else {
        minLon = LatLonPoint.encodeLongitude(box.minLon);
        maxLon = LatLonPoint.encodeLongitude(box.maxLon);
        // disable box2
        minLon2 = Integer.MAX_VALUE;
      }
    }
    setBottomCounter++;
  }

