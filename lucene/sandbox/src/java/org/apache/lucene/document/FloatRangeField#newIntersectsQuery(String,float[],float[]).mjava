  /**
   * Create a query for matching indexed ranges that intersect the defined range.
   * @param field field name. must not be null.
   * @param min array of min values. (accepts {@code Float.NEGATIVE_INFINITY})
   * @param max array of max values. (accepts {@code Float.MAX_VALUE})
   * @return query for matching intersecting ranges (overlap, within, or contains)
   * @throws IllegalArgumentException if {@code field} is null, {@code min} or {@code max} is invalid
   */
  public static Query newIntersectsQuery(String field, final float[] min, final float[] max) {
    return new RangeFieldQuery(field, encode(min, max), min.length, QueryType.INTERSECTS) {
      @Override
      protected String toString(byte[] ranges, int dimension) {
        return FloatRangeField.toString(ranges, dimension);
      }
    };
  }

