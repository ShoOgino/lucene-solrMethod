  /** 
   * Create a query for matching a polygon.
   * <p>
   * The supplied {@code polyLats}/{@code polyLons} must be clockwise or counter-clockwise.
   * @param field field name. must not be null.
   * @param polyLats latitude values for points of the polygon: must be within standard +/-90 coordinate bounds.
   * @param polyLons longitude values for points of the polygon: must be within standard +/-180 coordinate bounds.
   * @return query matching points within this polygon
   * @throws IllegalArgumentException if {@code field} is null, {@code polyLats} is null or has invalid coordinates, 
   *                                  {@code polyLons} is null or has invalid coordinates, if {@code polyLats} has a different
   *                                  length than {@code polyLons}, if the polygon has less than 4 points, or if polygon is 
   *                                  not closed (first and last points should be the same)
   */
  public static Query newPolygonQuery(String field, double[] polyLats, double[] polyLons) {
    return new LatLonPointInPolygonQuery(field, polyLats, polyLons);
  }

