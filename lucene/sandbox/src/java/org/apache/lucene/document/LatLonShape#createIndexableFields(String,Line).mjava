  /** create indexable fields for line geometry */
  public static Field[] createIndexableFields(String fieldName, Line line) {
    int numPoints = line.numPoints();
    List<LatLonTriangle> fields = new ArrayList<>(numPoints - 1);

    // encode the line vertices
    int[] encodedLats = new int[numPoints];
    int[] encodedLons = new int[numPoints];
    for (int i = 0; i < numPoints; ++i) {
      encodedLats[i] = encodeLatitude(line.getLat(i));
      encodedLons[i] = encodeLongitude(line.getLon(i));
    }

    // create "flat" triangles
    int aLat, bLat, aLon, bLon, temp;
    for (int i = 0, j = 1; j < numPoints; ++i, ++j) {
      aLat = encodedLats[i];
      aLon = encodedLons[i];
      bLat = encodedLats[j];
      bLon = encodedLons[j];
      if (aLat > bLat) {
        temp = aLat;
        aLat = bLat;
        bLat = temp;
        temp = aLon;
        aLon = bLon;
        bLon = temp;
      } else if (aLat == bLat) {
        if (aLon > bLon) {
          temp = aLat;
          aLat = bLat;
          bLat = temp;
          temp = aLon;
          aLon = bLon;
          bLon = temp;
        }
      }
      fields.add(new LatLonTriangle(fieldName, aLon, aLat, bLon, bLat, aLon, aLat));
    }
    return fields.toArray(new Field[fields.size()]);
  }

