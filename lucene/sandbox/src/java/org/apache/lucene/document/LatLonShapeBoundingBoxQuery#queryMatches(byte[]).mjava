  /** returns true if the query matches the encoded triangle */
  @Override
  protected boolean queryMatches(byte[] t) {
    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);
    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);
    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);

    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);
    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);
    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);
    int aY = (int)(a & 0x00000000FFFFFFFFL);
    int bY = (int)(b & 0x00000000FFFFFFFFL);
    int cY = (int)(c & 0x00000000FFFFFFFFL);

    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {
      return queryContains(aX, aY) && queryContains(bX, bY) && queryContains(cX, cY);
    }
    return queryMatches(aX, aY, bX, bY, cX, cY);
  }

