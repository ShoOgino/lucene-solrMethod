  /** returns true if the query matches the encoded triangle */
  @Override
  protected boolean queryMatches(byte[] t, ShapeField.DecodedTriangle scratchTriangle, ShapeField.QueryRelation queryRelation) {
    ShapeField.decodeTriangle(t, scratchTriangle);

    double aY = decode(scratchTriangle.aY);
    double aX = decode(scratchTriangle.aX);
    double bY = decode(scratchTriangle.bY);
    double bX = decode(scratchTriangle.bX);
    double cY = decode(scratchTriangle.cY);
    double cX = decode(scratchTriangle.cX);

    switch (queryRelation) {
      case INTERSECTS:
        return point2D.relateTriangle(aX, aY, bX, bY, cX, cY) != Relation.CELL_OUTSIDE_QUERY;
      case WITHIN:
        return point2D.relateTriangle(aX, aY, bX, bY, cX, cY) == Relation.CELL_INSIDE_QUERY;
      case DISJOINT:
        return point2D.relateTriangle(aX, aY, bX, bY, cX, cY) == Relation.CELL_OUTSIDE_QUERY;
      default:
        throw new IllegalArgumentException("Unsupported query type :[" + queryRelation + "]");
    }
  }

