  /**
   * Expert: constructs a new GeoPolygonQuery that will match encoded {@link org.apache.lucene.document.GeoPointField} terms
   * that fall within or on the boundary of the polygon defined by the input parameters.  This constructor requires a
   * precomputed bounding box. As an alternative, {@link #GeoPointInPolygonQuery(String,double[],double[])} can
   * be used to compute the bounding box during construction
   *
   * @param field the field name
   * @param minLon lower longitude (x) value of the bounding box optimizer
   * @param minLat lower latitude (y) value of the bounding box optimizer
   * @param maxLon upper longitude (x) value of the bounding box optimizer
   * @param maxLat upper latitude (y) value of the bounding box optimizer
   * @param polyLons array containing all longitude values for the polygon
   * @param polyLats array containing all latitude values for the polygon
   */
  public GeoPointInPolygonQuery(final String field, final double minLon, final double minLat, final double maxLon,
                                final double maxLat, final double[] polyLons, final double[] polyLats) {
    // TODO: should we remove this?  It's dangerous .. app could accidentally provide too-small bbox?
    // we should at least verify that bbox does in fact fully contain the poly?
    this(field, new GeoBoundingBox(minLon, maxLon, minLat, maxLat), polyLons, polyLats);
  }

