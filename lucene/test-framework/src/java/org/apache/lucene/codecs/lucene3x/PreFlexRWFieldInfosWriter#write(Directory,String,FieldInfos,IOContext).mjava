  @Override
  public void write(Directory directory, String segmentName, FieldInfos infos, IOContext context) throws IOException {
    final String fileName = IndexFileNames.segmentFileName(segmentName, "", FIELD_INFOS_EXTENSION);
    IndexOutput output = directory.createOutput(fileName, context);
    try {
      output.writeVInt(FORMAT_PREFLEX_RW);
      output.writeVInt(infos.size());
      for (FieldInfo fi : infos) {
        assert fi.getIndexOptions() == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !fi.hasPayloads();
        byte bits = 0x0;
        if (fi.isIndexed()) bits |= IS_INDEXED;
        if (fi.hasVectors()) bits |= STORE_TERMVECTOR;
        if (fi.omitsNorms()) bits |= OMIT_NORMS;
        if (fi.hasPayloads()) bits |= STORE_PAYLOADS;
        if (fi.getIndexOptions() == IndexOptions.DOCS_ONLY) {
          bits |= OMIT_TERM_FREQ_AND_POSITIONS;
        } else if (fi.getIndexOptions() == IndexOptions.DOCS_AND_FREQS) {
          bits |= OMIT_POSITIONS;
        }
        output.writeString(fi.name);
        /*
         * we need to write the field number since IW tries
         * to stabelize the field numbers across segments so the
         * FI ordinal is not necessarily equivalent to the field number 
         */
        output.writeInt(fi.number);
        output.writeByte(bits);
        if (fi.isIndexed() && !fi.omitsNorms()) {
          // to allow null norm types we need to indicate if norms are written 
          // only in RW case
          output.writeByte((byte) (fi.getNormType() == null ? 0 : 1));
        }
      }
    } finally {
      output.close();
    }
  }

