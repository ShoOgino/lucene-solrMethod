    private <T> void checkIterator(Iterator<T> iterator, int expectedSize) {
      for (int i = 0; i < expectedSize; i++) {
        boolean hasNext = iterator.hasNext();
        assert hasNext;
        T v = iterator.next();
        assert v != null;
        try {
          iterator.remove();
          throw new AssertionError("broken iterator (supports remove): " + iterator);
        } catch (UnsupportedOperationException expected) {
          // ok
        }
      }
      assert !iterator.hasNext();
      try {
        iterator.next();
        throw new AssertionError("broken iterator (allows next() when hasNext==false) " + iterator);
      } catch (NoSuchElementException expected) {
        // ok
      }
    }

