  private void addVarSortedBytesField(FieldInfo field, IndexOutput data, IndexOutput index, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {
    field.putAttribute(legacyKey, LegacyDocValuesType.BYTES_VAR_SORTED.name());
    
    CodecUtil.writeHeader(data, 
                          Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_DAT,
                          Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);

    CodecUtil.writeHeader(index, 
                          Lucene40DocValuesFormat.BYTES_VAR_SORTED_CODEC_NAME_IDX,
                          Lucene40DocValuesFormat.BYTES_VAR_SORTED_VERSION_CURRENT);

    /* values */
    
    final long startPos = data.getFilePointer();
    
    int valueCount = 0;
    for (BytesRef v : values) {
      data.writeBytes(v.bytes, v.offset, v.length);
      valueCount++;
    }
    
    /* addresses */
    
    final long maxAddress = data.getFilePointer() - startPos;
    index.writeLong(maxAddress);
    
    assert valueCount != Integer.MAX_VALUE; // unsupported by the 4.0 impl
    
    final PackedInts.Writer w = PackedInts.getWriter(index, valueCount+1, PackedInts.bitsRequired(maxAddress), PackedInts.DEFAULT);
    long currentPosition = 0;
    for (BytesRef v : values) {
      w.add(currentPosition);
      currentPosition += v.length;
    }
    // write sentinel
    assert currentPosition == maxAddress;
    w.add(currentPosition);
    w.finish();
    
    /* ordinals */
    
    final int maxDoc = state.segmentInfo.getDocCount();
    assert valueCount > 0;
    final PackedInts.Writer ords = PackedInts.getWriter(index, maxDoc, PackedInts.bitsRequired(valueCount-1), PackedInts.DEFAULT);
    for (Number n : docToOrd) {
      ords.add(n.longValue());
    }
    ords.finish();
  }

