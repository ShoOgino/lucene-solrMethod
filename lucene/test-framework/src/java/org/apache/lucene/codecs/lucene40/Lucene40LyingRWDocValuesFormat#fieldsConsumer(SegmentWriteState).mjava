  // nocommit: a lie
  @Override
  public DocValuesConsumer fieldsConsumer(SegmentWriteState state) throws IOException {
    final DocValuesConsumer delegate = lie.fieldsConsumer(state);
    return new DocValuesConsumer() {

      @Override
      public void addNumericField(FieldInfo field, Iterable<Number> values) throws IOException {
        // hack: here we would examine the numerics and simulate in the impersonator the best we can
        // e.g. if they are all in byte/int range write fixed, otherwise write packed or whatever
        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.VAR_INTS.name());
        delegate.addNumericField(field, values);
      }

      @Override
      public void addBinaryField(FieldInfo field, Iterable<BytesRef> values) throws IOException {
        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.BYTES_VAR_STRAIGHT.name());
        delegate.addBinaryField(field, values);
      }

      @Override
      public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {
        field.putAttribute(Lucene40FieldInfosReader.LEGACY_DV_TYPE_KEY, LegacyDocValuesType.BYTES_VAR_SORTED.name());
        delegate.addSortedField(field, values, docToOrd);
      }
      
      @Override
      public void close() throws IOException {
        delegate.close();
      }
    };
  }

