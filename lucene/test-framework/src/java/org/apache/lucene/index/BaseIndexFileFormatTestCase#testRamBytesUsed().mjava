  /** Test the accuracy of the ramBytesUsed estimations. */
  public void testRamBytesUsed() throws IOException {
    Directory dir = newDirectory();
    IndexWriterConfig cfg = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));
    IndexWriter w = new IndexWriter(dir, cfg);
    // we need to index enough documents so that constant overhead doesn't dominate
    final int numDocs = atLeast(10000);
    for (int i = 0; i < numDocs; ++i) {
      Document d = new Document();
      addRandomFields(d);
      w.addDocument(d);
    }
    w.forceMerge(1);
    w.commit();
    w.close();

    IndexReader reader = DirectoryReader.open(dir);

    for (AtomicReaderContext context : reader.leaves()) {
      final AtomicReader r = context.reader();
      // beware of lazy-loaded stuff
      new SimpleMergedSegmentWarmer(InfoStream.NO_OUTPUT).warm(r);
      final long actualBytes = RamUsageTester.sizeOf(r, new Accumulator(r));
      final long expectedBytes = ((SegmentReader) r).ramBytesUsed();
      final long absoluteError = actualBytes - expectedBytes;
      final double relativeError = (double) absoluteError / actualBytes;
      final String message = "Actual RAM usage " + actualBytes + ", but got " + expectedBytes + ", " + 100*relativeError + "% error";
      assertTrue(message, Math.abs(relativeError) < 0.20d || Math.abs(absoluteError) < 1000);
    }

    reader.close();
    dir.close();
  }

