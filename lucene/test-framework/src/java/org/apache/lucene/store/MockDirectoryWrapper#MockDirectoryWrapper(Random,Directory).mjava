  public MockDirectoryWrapper(Random random, Directory delegate) {
    super(delegate);
    // must make a private random since our methods are
    // called from different threads; else test failures may
    // not be reproducible from the original seed
    this.randomState = new Random(random.nextInt());
    this.throttledOutput = new ThrottledIndexOutput(ThrottledIndexOutput
        .mBitsToBytes(40 + randomState.nextInt(10)), 5 + randomState.nextInt(5), null);
    // force wrapping of lockfactory
    try {
      setLockFactory(new MockLockFactoryWrapper(this, delegate.getLockFactory()));
    } catch (IOException e) {
      throw new RuntimeException(e);
    }

    // 2% of the time use rate limiter
    if (randomState.nextInt(50) == 17) {
      // Use RateLimiter
      double maxMBPerSec = 10 + 5*(randomState.nextDouble()-0.5);
      if (LuceneTestCase.VERBOSE) {
        System.out.println("MockDirectoryWrapper: will rate limit output IO to " + maxMBPerSec + " MB/sec");
      }
      rateLimiter = new RateLimiter(maxMBPerSec);
    } else {
      rateLimiter = null;
    }

    init();
  }

