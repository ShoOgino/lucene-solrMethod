  // naive silly memory heavy uninversion!!  maps docID -> packed values (a Set because a given doc can be multi-valued)
  private Map<Integer,Set<BytesRef>> uninvert(String fieldName, PointValues points) throws IOException {
    final Map<Integer,Set<BytesRef>> docValues = new HashMap<>();
    points.intersect(fieldName, new PointValues.IntersectVisitor() {
        @Override
        public void visit(int docID) {
          throw new UnsupportedOperationException();
        }

        @Override
        public void visit(int docID, byte[] packedValue) throws IOException {
          if (docValues.containsKey(docID) == false) {
            docValues.put(docID, new HashSet<BytesRef>());
          }
          docValues.get(docID).add(new BytesRef(packedValue.clone()));
        }

        @Override
        public PointValues.Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {
          // We pretend our query shape is so hairy that it crosses every single cell:
          return PointValues.Relation.CELL_CROSSES_QUERY;
        }
      });
    return docValues;
  }

