  /**
   * Setup before the tests.
   */
  private final void setUpInternal() throws Exception {
    seed = "random".equals(TEST_SEED) ? seedRand.nextLong() : ThreeLongs.fromString(TEST_SEED).l2;
    random.setSeed(seed);
    
    Thread.currentThread().setName("LTC-main#seed=" + 
        new ThreeLongs(staticSeed, seed, LuceneTestCaseRunner.runnerSeed));

    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();
    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {
      public void uncaughtException(Thread t, Throwable e) {
        // org.junit.internal.AssumptionViolatedException in older releases
        // org.junit.Assume.AssumptionViolatedException in recent ones
        if (e.getClass().getName().endsWith("AssumptionViolatedException")) {
          String where = "<unknown>";
          for (StackTraceElement elem : e.getStackTrace()) {
            if ( ! elem.getClassName().startsWith("org.junit")) {
              where = elem.toString();
              break;
            }
          }
          System.err.print("NOTE: Assume failed at " + where + " (ignored):");
          if (VERBOSE) {
            System.err.println();
            e.printStackTrace(System.err);
          } else {
            System.err.print(" ");
            System.err.println(e.getMessage());
          }
        } else {
          testsFailed = true;
          uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));
          if (savedUncaughtExceptionHandler != null)
            savedUncaughtExceptionHandler.uncaughtException(t, e);
        }
      }
    });

    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();

    if (useNoMemoryExpensiveCodec) {
      String defFormat = _TestUtil.getPostingsFormat("thisCodeMakesAbsolutelyNoSenseCanWeDeleteIt");
      // Stupid: assumeFalse in setUp() does not print any information, because
      // TestWatchman does not watch test during setUp() - getName() is also not defined...
      // => print info directly and use assume without message:
      if ("SimpleText".equals(defFormat) || "Memory".equals(defFormat)) {
        System.err.println("NOTE: A test method in " + getClass().getSimpleName() + " was ignored, as it uses too much memory with " + defFormat + ".");
        Assume.assumeTrue(false);
      }
    }
  }

