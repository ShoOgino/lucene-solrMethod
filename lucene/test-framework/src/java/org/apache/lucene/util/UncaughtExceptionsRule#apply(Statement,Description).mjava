  @Override
  public Statement apply(final Statement s, final Description d) {
    return new Statement() {
      public void evaluate() throws Throwable {
        final ArrayList<Throwable> errors = new ArrayList<Throwable>();
        try {
          setupHandler();
          s.evaluate();
        } catch (Throwable t) {
          errors.add(t);
        } finally {
          restoreHandler();
        }

        synchronized (uncaughtExceptions) {
          for (UncaughtExceptionEntry e : uncaughtExceptions) {
            errors.add(new UncaughtExceptionsInBackgroundThread(e));
          }
          uncaughtExceptions.clear();
        }

        if (hasNonAssumptionErrors(errors)) {
          if (ltc == null) {
            // class level failure (e.g. afterclass)
            LuceneTestCase.reportPartialFailureInfo();
          } else {
            // failure in a method
            ltc.reportAdditionalFailureInfo();
          }
        }
        MultipleFailureException.assertEmpty(errors);
      }
    };
  }

