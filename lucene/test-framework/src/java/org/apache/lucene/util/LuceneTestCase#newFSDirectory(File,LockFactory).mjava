  /** Returns a new FSDirectory instance over the given file, which must be a folder. */
  public static MockDirectoryWrapper newFSDirectory(File f, LockFactory lf) {
    String fsdirClass = TEST_DIRECTORY;
    if (fsdirClass.equals("random")) {
      fsdirClass = RandomPicks.randomFrom(random(), FS_DIRECTORIES); 
    }

    Class<? extends FSDirectory> clazz;
    try {
      try {
        clazz = CommandLineUtil.loadFSDirectoryClass(fsdirClass);
      } catch (ClassCastException e) {
        // TEST_DIRECTORY is not a sub-class of FSDirectory, so draw one at random
        fsdirClass = RandomPicks.randomFrom(random(), FS_DIRECTORIES);
        clazz = CommandLineUtil.loadFSDirectoryClass(fsdirClass);
      }

      Directory fsdir = newFSDirectoryImpl(clazz, f);
      MockDirectoryWrapper dir = new MockDirectoryWrapper(
          random(), maybeNRTWrap(random(), fsdir));
      if (lf != null) {
        dir.setLockFactory(lf);
      }
      closeAfterSuite(new CloseableDirectory(dir, suiteFailureMarker));
      dir.setThrottling(TEST_THROTTLING);
      return dir;
    } catch (Exception e) {
      throw new RuntimeException(e);
    }
  }

