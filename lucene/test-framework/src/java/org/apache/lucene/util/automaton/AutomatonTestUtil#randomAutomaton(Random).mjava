  /** return a random NFA/DFA for testing */
  public static LightAutomaton randomAutomaton(Random random) {
    // get two random Automata from regexps
    LightAutomaton a1 = new RegExp(AutomatonTestUtil.randomRegexp(random), RegExp.NONE).toLightAutomaton();
    if (random.nextBoolean()) {
      a1 = BasicOperations.complementLight(a1);
    }
    
    LightAutomaton a2 = new RegExp(AutomatonTestUtil.randomRegexp(random), RegExp.NONE).toLightAutomaton();
    if (random.nextBoolean()) {
      a2 = BasicOperations.complementLight(a2);
    }

    // combine them in random ways
    switch (random.nextInt(4)) {
      case 0: return BasicOperations.concatenateLight(a1, a2);
      case 1: return BasicOperations.unionLight(a1, a2);
      case 2: return BasicOperations.intersectionLight(a1, a2);
      default: return BasicOperations.minusLight(a1, a2);
    }
  }

