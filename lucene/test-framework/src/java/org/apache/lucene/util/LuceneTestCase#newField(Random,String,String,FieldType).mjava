  public static Field newField(Random random, String name, String value, FieldType type) {
    name = new String(name);
    if (usually(random) || !type.indexed()) {
      // most of the time, don't modify the params
      fieldNamesSeen.add(name);
      return new Field(name, value, type);
    }

    // TODO: once all core & test codecs can index
    // offsets, sometimes randomly turn on offsets if we are
    // already indexing positions...

    FieldType newType = new FieldType(type);
    if (!newType.stored() && random.nextBoolean()) {
      newType.setStored(true); // randomly store it
    }

    // Randomly turn on term vector options, but always do
    // so consistently for the same field name:
    if (!newType.storeTermVectors() && fieldNamesSeen.contains(name) == false && random.nextBoolean()) {
      FieldType prev;
      synchronized(fieldTermVectorOptions) {
        prev = fieldTermVectorOptions.get(name);
        if (prev == null) {
          newType.setStoreTermVectors(true);
          if (!newType.storeTermVectorPositions()) {
            newType.setStoreTermVectorPositions(random.nextBoolean());
        
            if (newType.storeTermVectorPositions()) {
              if (!newType.storeTermVectorPayloads()) {
                newType.setStoreTermVectorPayloads(random.nextBoolean());
              }
              if (!newType.storeTermVectorOffsets()) {
                newType.setStoreTermVectorOffsets(random.nextBoolean());
              }
            }
          }
          fieldTermVectorOptions.put(name, prev);
        }
      }

      if (prev != null) {
        newType.setStoreTermVectors(prev.storeTermVectors());
        newType.setStoreTermVectorOffsets(prev.storeTermVectorOffsets());
        newType.setStoreTermVectorPositions(prev.storeTermVectorPositions());
        newType.setStoreTermVectorPayloads(prev.storeTermVectorPayloads());
      }
      System.out.println("  LTC: upgrade name=" + name + " type=" + newType);
    }
    newType.freeze();

    // TODO: we need to do this, but smarter, ie, most of
    // the time we set the same value for a given field but
    // sometimes (rarely) we change it up:
    /*
    if (newType.omitNorms()) {
      newType.setOmitNorms(random.nextBoolean());
    }
    */
    
    return new Field(name, value, newType);
  }

