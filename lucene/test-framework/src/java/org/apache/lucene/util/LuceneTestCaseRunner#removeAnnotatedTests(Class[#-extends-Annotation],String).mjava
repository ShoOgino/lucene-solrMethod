  private void removeAnnotatedTests(Class<? extends Annotation> annotation, String userFriendlyName) {
    if (getTestClass().getJavaClass().isAnnotationPresent(annotation)) {
      /* the test class is annotated with the annotation, remove all methods */
      String className = getTestClass().getJavaClass().getSimpleName();
      System.err.println("NOTE: Ignoring " + userFriendlyName + " test class '" + className + "'");
      testMethods.clear();
    } else {
      /* remove all methods with the annotation*/
      for (int i = 0; i < testMethods.size(); i++) {
        final FrameworkMethod m = testMethods.get(i);
        if (m.getAnnotation(annotation) != null) {
          System.err.println("NOTE: Ignoring " + userFriendlyName + " test method '" + m.getName() + "'");
          testMethods.remove(i--);
        }
      }
    }
    /* dodge a possible "no-runnable methods" exception by adding a fake ignored test */
    if (testMethods.isEmpty()) {
      try {
        testMethods.add(new FrameworkMethod(LuceneTestCase.class.getMethod("alwaysIgnoredTestMethod")));
      } catch (Exception e) { throw new RuntimeException(e); }
    }
  }

