  @Override
  public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) throws IOException {
    // if the caller asks for in-order scoring or if the weight does not support
    // out-of order scoring then collection will have to happen in-order.
    BulkScorer inScorer = in.bulkScorer(context, scoreDocsInOrder, acceptDocs);
    if (inScorer == null) {
      return null;
    }

    if (AssertingBulkScorer.shouldWrap(inScorer)) {
      // The incoming scorer already has a specialized
      // implementation for BulkScorer, so we should use it:
      inScorer = AssertingBulkScorer.wrap(new Random(random.nextLong()), inScorer);
    } else if (random.nextBoolean()) {
      // Let super wrap this.scorer instead, so we use
      // AssertingScorer:
      inScorer = super.bulkScorer(context, scoreDocsInOrder, acceptDocs);
    }

    if (scoreDocsInOrder == false && random.nextBoolean()) {
      // The caller claims it can handle out-of-order
      // docs; let's confirm that by pulling docs and
      // randomly shuffling them before collection:
      inScorer = new AssertingBulkOutOfOrderScorer(new Random(random.nextLong()), inScorer);
    }
    return inScorer;
  }

