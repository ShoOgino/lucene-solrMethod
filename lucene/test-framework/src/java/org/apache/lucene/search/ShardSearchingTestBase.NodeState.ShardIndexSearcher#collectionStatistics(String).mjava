      @Override
      public CollectionStatistics collectionStatistics(String field) throws IOException {
        // TODO: we could compute this on init and cache,
        // since we are re-inited whenever any nodes have a
        // new reader
        long docCount = 0;
        long sumTotalTermFreq = 0;
        long sumDocFreq = 0;
        long maxDoc = 0;

        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {
          final FieldAndShardVersion key = new FieldAndShardVersion(nodeID, nodeVersions[nodeID], field);
          final CollectionStatistics nodeStats;
          if (nodeID == myNodeID) {
            nodeStats = super.collectionStatistics(field);
          } else {
            nodeStats = collectionStatsCache.get(key);
          }
          if (nodeStats == null) {
            System.out.println("coll stats myNodeID=" + myNodeID + ": " + collectionStatsCache.keySet());
          }
          // Collection stats are pre-shared on reopen, so,
          // we better not have a cache miss:
          assert nodeStats != null: "myNodeID=" + myNodeID + " nodeID=" + nodeID + " version=" + nodeVersions[nodeID] + " field=" + field;
          
          long nodeDocCount = nodeStats.docCount();
          if (docCount >= 0 && nodeDocCount >= 0) {
            docCount += nodeDocCount;
          } else {
            docCount = -1;
          }
          
          long nodeSumTotalTermFreq = nodeStats.sumTotalTermFreq();
          if (sumTotalTermFreq >= 0 && nodeSumTotalTermFreq >= 0) {
            sumTotalTermFreq += nodeSumTotalTermFreq;
          } else {
            sumTotalTermFreq = -1;
          }
          
          long nodeSumDocFreq = nodeStats.sumDocFreq();
          if (sumDocFreq >= 0 && nodeSumDocFreq >= 0) {
            sumDocFreq += nodeSumDocFreq;
          } else {
            sumDocFreq = -1;
          }
          
          assert nodeStats.maxDoc() >= 0;
          maxDoc += nodeStats.maxDoc();
        }

        return new CollectionStatistics(field, maxDoc, docCount, sumTotalTermFreq, sumDocFreq);
      }

