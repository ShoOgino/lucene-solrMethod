  /** Test that the delegate gets closed on exception in HandleTrackingFS#onOpen */
  public void testOnOpenThrowsException() throws IOException {
    Path path = wrap(createTempDir()); // we are using LeakFS under the hood if we don't get closed the test fails
    FileSystem fs = new HandleTrackingFS("test://", path.getFileSystem()) {
      @Override
      protected void onClose(Path path, Object stream) throws IOException {
      }

      @Override
      protected void onOpen(Path path, Object stream) throws IOException {
        throw new IOException("boom");
      }
    }.getFileSystem(URI.create("file:///"));
    Path dir = new FilterPath(path, fs);

    try {
      OutputStream file = Files.newOutputStream(dir.resolve("somefile"));
      fail("expected IOException");
    } catch (IOException ex) {
      // expected
    }

    try {
      SeekableByteChannel channel = Files.newByteChannel(dir.resolve("somefile"));
      fail("expected IOException");
    } catch (IOException ex) {
      // expected
    }

    try {
      InputStream stream = Files.newInputStream(dir.resolve("somefile"));
      fail("expected IOException");
    } catch (IOException ex) {
      // expected
    }
    fs.close();

    try {
      DirectoryStream<Path> dirStream = Files.newDirectoryStream(dir);
      fail("expected IOException");
    } catch (IOException ex) {
      // expected
    }
    fs.close();
  }

