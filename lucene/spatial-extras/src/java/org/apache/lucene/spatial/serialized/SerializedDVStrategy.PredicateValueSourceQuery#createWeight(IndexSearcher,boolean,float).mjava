    @Override
    public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {
      return new ConstantScoreWeight(this, boost) {
        @Override
        public Scorer scorer(LeafReaderContext context) throws IOException {
          DocIdSetIterator approximation = DocIdSetIterator.all(context.reader().maxDoc());
          final FunctionValues predFuncValues = predicateValueSource.getValues(null, context);
          return new ConstantScoreScorer(this, score(), new TwoPhaseIterator(approximation) {

            @Override
            public boolean matches() throws IOException {
              final int docID = approximation.docID();
              return predFuncValues.boolVal(docID);
            }

            @Override
            public float matchCost() {
              // TODO: what is the cost of the predicateValueSource
              return 100f;
            }
          });
        }
      };
    }

