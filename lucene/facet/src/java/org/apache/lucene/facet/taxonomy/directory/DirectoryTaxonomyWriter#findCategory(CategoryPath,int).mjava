  /**
   * Look up the given prefix of the given category in the cache and/or the
   * on-disk storage, returning that prefix's ordinal, or a negative number in
   * case the category does not yet exist in the taxonomy.
   */
  private int findCategory(CategoryPath categoryPath, int prefixLen)
      throws IOException {
    int res = cache.get(categoryPath, prefixLen);
    if (res >= 0) {
      return res;
    }
    if (cacheIsComplete) {
      return -1;
    }
    cacheMisses++;
    if (perhapsFillCache()) {
      return cache.get(categoryPath, prefixLen);
    }
    if (reader == null) {
      reader = openReader();
    }
    
    int base = 0;
    int doc = -1;
    for (AtomicReader r : reader.getSequentialSubReaders()) {
      DocsEnum docs = r.termDocsEnum(null, Consts.FULL, 
          new BytesRef(categoryPath.toString(delimiter, prefixLen)), false);
      if (docs != null) {
        doc = docs.nextDoc() + base;
        break;
      }
      base += r.maxDoc(); // we don't have deletions, so it's ok to call maxDoc
    }
    
    if (doc > 0) {
      addToCache(categoryPath, prefixLen, doc);
    }
    return doc;
  }

