  /**
   * Finds the actual index of a given key with it's baseHashIndex. Some methods
   * use the baseHashIndex. If those call {@link #find} there's no need to
   * re-calculate that hash.
   * 
   * @return the index of the given key, or 0 if the key wasn't found.
   */
  private int findForRemove(K key, int baseHashIndex) {
    // Start from the hash entry.
    prev = 0;
    int index = baseHash[baseHashIndex];

    // while the index does not point to the 'Ground'
    while (index != 0) {
      // returns the index found in case of of a matching key.
      if (keys[index].equals(key)) {
        return index;
      }

      // next the local index
      prev = index;
      index = next[index];
    }

    // If we got thus far, it could only mean we did not find the key we
    // were asked for. return 'Ground' index.
    return prev = 0;
  }

