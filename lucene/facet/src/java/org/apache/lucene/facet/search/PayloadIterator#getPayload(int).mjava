  /**
   * Returns the {@link BytesRef payload} of the given document, or {@code null}
   * if the document does not exist, there are no more documents in the posting
   * list, or the document exists but has not payload. You should call
   * {@link #init()} before the first call to this method.
   */
  public BytesRef getPayload(int docID) throws IOException {
    if (!hasMore) {
      return null;
    }

    // re-basing docId->localDocID is done fewer times than currentDoc->globalDoc
    int localDocID = docID - curDocBase;
    
    if (curDocID > localDocID) {
      // document does not exist
      return null;
    }
    
    if (curDocID < localDocID) {
      // look for the document either in that segment, or others
      while (hasMore && (curDocID = currentDPE.advance(localDocID)) == DocIdSetIterator.NO_MORE_DOCS) {
        nextSegment(); // also updates curDocID
        localDocID = docID - curDocBase;
        // nextSegment advances to nextDoc, so check if we still need to advance
        if (curDocID >= localDocID) {
          break;
        }
      }
      
      // we break from the above loop when:
      // 1. we iterated over all segments (hasMore=false)
      // 2. current segment advanced to a doc, either requested or higher
      if (!hasMore || curDocID != localDocID) {
        return null;
      }
    }

    // we're on the document
    assert currentDPE.freq() == 1 : "expecting freq=1 (got " + currentDPE.freq() + ") term=" + term + " doc=" + (curDocID + curDocBase);
    int pos = currentDPE.nextPosition();
    assert pos != -1 : "no positions for term=" + term + " doc=" + (curDocID + curDocBase);
    return currentDPE.getPayload();
  }

