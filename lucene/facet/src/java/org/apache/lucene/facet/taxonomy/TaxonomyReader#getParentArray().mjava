  /**
   * getParentArray() returns an int array of size getSize() listing the
   * ordinal of the parent category of each category in the taxonomy.
   * <P>
   * The caller can hold on to the array it got indefinitely - it is
   * guaranteed that no-one else will modify it. The other side of the
   * same coin is that the caller must treat the array it got as read-only
   * and <B>not modify it</B>, because other callers might have gotten the
   * same array too (and getParent() calls might be answered from the
   * same array).
   * <P>
   * If you use getParentArray() instead of getParent(), remember that
   * the array you got is (naturally) not modified after a refresh(),
   * so you should always call getParentArray() again after a refresh().
   * <P>
   * This method's function is similar to allocating an array of size
   * getSize() and filling it with getParent() calls, but implementations
   * are encouraged to implement it much more efficiently, with O(1)
   * complexity. This can be done, for example, by the implementation
   * already keeping the parents in an array, and just returning this
   * array (without any allocation or copying) when requested.
   */
  public int[] getParentArray() throws IOException;

