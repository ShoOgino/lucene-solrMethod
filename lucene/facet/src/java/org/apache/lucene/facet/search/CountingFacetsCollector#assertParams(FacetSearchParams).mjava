  /**
   * Asserts that this {@link FacetsCollector} can handle the given
   * {@link FacetSearchParams}. Returns {@code null} if true, otherwise an error
   * message.
   */
  static String assertParams(FacetSearchParams fsp) {
    // verify that all facet requests are CountFacetRequest
    for (FacetRequest fr : fsp.facetRequests) {
      if (!(fr instanceof CountFacetRequest)) {
        return "all FacetRequests must be CountFacetRequest";
      }
      if (fr.getDepth() != 1) {
        return "all requests must be of depth 1";
      }
      if (fr.getNumLabel() < fr.getNumResults()) {
        return "this Collector always labels all requested results";
      }
      if (fr.getSortOrder() != SortOrder.DESCENDING) {
        return "this Collector always sorts results in descending order";
      }
      if (fr.getSortBy() != SortBy.VALUE) {
        return "this Collector always sorts by results' values";
      }
    }
    
    // verify that there's only one CategoryListParams
    List<CategoryListParams> clps = fsp.indexingParams.getAllCategoryListParams();
    if (clps.size() != 1) {
      return "this Collector supports only one CategoryListParams";
    }
    
    // verify DGapVInt decoder
    CategoryListParams clp = clps.get(0);
    if (clp.createEncoder().createMatchingDecoder().getClass() != DGapVInt8IntDecoder.class) {
      return "this Collector supports only DGap + VInt encoding";
    }
    
    // verify that partitions are disabled
    if (fsp.indexingParams.getPartitionSize() != Integer.MAX_VALUE) {
      return "this Collector does not support partitions";
    }
    
    return null;
  }

