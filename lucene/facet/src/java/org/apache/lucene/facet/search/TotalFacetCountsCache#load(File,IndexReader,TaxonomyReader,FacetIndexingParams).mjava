  /**
   * Load {@link TotalFacetCounts} matching input parameters from the provided outputFile 
   * and add them into the cache for the provided indexReader, taxonomy, and facetIndexingParams.
   * If a {@link TotalFacetCounts} for these parameters already exists in the cache, it will be
   * replaced by the loaded one.
   * @param inputFile file from which to read the data 
   * @param indexReader the documents index
   * @param taxonomy the taxonomy index
   * @param facetIndexingParams the facet indexing parameters
   * @throws IOException on error
   * @see #store(File, IndexReader, TaxonomyReader, FacetIndexingParams, CategoryListCache)
   */
  public synchronized void load(File inputFile, IndexReader indexReader, TaxonomyReader taxonomy,
      FacetIndexingParams facetIndexingParams) throws IOException {
    if (!inputFile.isFile() || !inputFile.exists() || !inputFile.canRead()) {
      throw new IllegalArgumentException("Exepecting an existing readable file: "+inputFile);
    }
    TFCKey key = new TFCKey(indexReader, taxonomy, facetIndexingParams);
    TotalFacetCounts tfc = TotalFacetCounts.loadFromFile(inputFile, taxonomy, facetIndexingParams);
    cache.put(key,tfc);
    trimCache();
    markRecentlyUsed(key);
  }

