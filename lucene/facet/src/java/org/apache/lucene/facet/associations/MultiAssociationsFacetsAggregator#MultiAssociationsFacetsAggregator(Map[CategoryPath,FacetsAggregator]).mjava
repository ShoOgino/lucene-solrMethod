  /**
   * Creates a new {@link MultiAssociationsFacetsAggregator} over the given
   * aggregators. The mapping is used by
   * {@link #rollupValues(FacetRequest, int, int[], int[], FacetArrays)} to
   * rollup the values of the specific category by the corresponding
   * {@link FacetsAggregator}. However, since each {@link FacetsAggregator}
   * handles the associations of a specific type, which could cover multiple
   * categories, the aggregation is done on the unique set of aggregators, which
   * are identified by their class.
   */
  public MultiAssociationsFacetsAggregator(Map<CategoryPath,FacetsAggregator> aggregators) {
    this.categoryAggregators = aggregators;
    
    // make sure that each FacetsAggregator class is invoked only once, or
    // otherwise categories may be aggregated multiple times.
    Map<Class<? extends FacetsAggregator>, FacetsAggregator> aggsClasses = 
        new HashMap<Class<? extends FacetsAggregator>,FacetsAggregator>();
    for (FacetsAggregator fa : aggregators.values()) {
      aggsClasses.put(fa.getClass(), fa);
    }
    this.aggregators = new ArrayList<FacetsAggregator>(aggsClasses.values());
  }

