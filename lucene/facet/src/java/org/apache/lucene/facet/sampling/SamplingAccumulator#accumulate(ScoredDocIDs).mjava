  @Override
  public List<FacetResult> accumulate(ScoredDocIDs docids) throws IOException {
    // Replacing the original searchParams with the over-sampled
    FacetSearchParams original = searchParams;
    SampleFixer samplerFixer = sampler.samplingParams.getSampleFixer();
    final boolean shouldOversample = sampler.samplingParams.shouldOverSample();
    if (shouldOversample) {
      searchParams = sampler.overSampledSearchParams(original);
    }
    
    List<FacetResult> sampleRes = super.accumulate(docids);
    
    List<FacetResult> fixedRes = new ArrayList<FacetResult>();
    for (FacetResult fres : sampleRes) {
      // for sure fres is not null because this is guaranteed by the delegee.
      PartitionsFacetResultsHandler frh = createFacetResultsHandler(fres.getFacetRequest());
      if (samplerFixer != null) {
        // fix the result of current request
        samplerFixer.fixResult(docids, fres, samplingRatio);
        
        fres = frh.rearrangeFacetResult(fres); // let delegee's handler do any arranging it needs to

        if (shouldOversample) {
          // Using the sampler to trim the extra (over-sampled) results
          fres = sampler.trimResult(fres);
        }
      }
      
      // final labeling if allowed (because labeling is a costly operation)
      frh.labelResult(fres);
      fixedRes.add(fres); // add to final results
    }
    
    searchParams = original; // Back to original params
    
    return fixedRes; 
  }

