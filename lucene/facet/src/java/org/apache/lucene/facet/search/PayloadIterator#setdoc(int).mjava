  /**
   * Skip forward to document docId. Return true if this document exists and
   * has any payload.
   * <P>
   * Users should call this method with increasing docIds, and implementations
   * can assume that this is the case.
   */
  public boolean setdoc(int docId) throws IOException {
    if (!hasMore) {
      return false;
    }
    
    if (tp.docID() > docId) {
      return false;
    }

    // making sure we have the requested document
    if (tp.docID() < docId) {
      // Skipping to requested document
      if (tp.advance(docId) == DocIdSetIterator.NO_MORE_DOCS) {
        this.hasMore = false;
        return false;
      }

      // If document not found (skipped to much)
      if (tp.docID() != docId) {
        return false;
      }
    }

    // Prepare for payload extraction
    tp.nextPosition();

    // TODO: fix bug in SepCodec and then remove this check (the null check should be enough)
    if (!tp.hasPayload()) {
      return false;
    }

    BytesRef br = tp.getPayload();

    if (br == null || br.length == 0) {
      return false;
    }

    this.payloadLength = br.length;
    
    if (this.payloadLength > this.buffer.length) {
      // Growing if necessary.
      this.buffer = new byte[this.payloadLength * 2 + 1];
    }
    // Loading the payload
    System.arraycopy(br.bytes, br.offset, this.buffer, 0, payloadLength);
    return true;
  }

