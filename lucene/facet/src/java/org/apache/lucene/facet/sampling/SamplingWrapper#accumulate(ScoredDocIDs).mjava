  @Override
  public List<FacetResult> accumulate(ScoredDocIDs docids) throws IOException {
    // Replacing the original searchParams with the over-sampled (and without statistics-compute)
    FacetSearchParams original = delegee.searchParams;
    delegee.searchParams = sampler.overSampledSearchParams(original);
    
    SampleResult sampleSet = sampler.getSampleSet(docids);

    List<FacetResult> sampleRes = delegee.accumulate(sampleSet.docids);

    List<FacetResult> fixedRes = new ArrayList<FacetResult>();
    for (FacetResult fres : sampleRes) {
      // for sure fres is not null because this is guaranteed by the delegee.
      PartitionsFacetResultsHandler frh = createFacetResultsHandler(fres.getFacetRequest());
      // fix the result of current request
      sampler.getSampleFixer(indexReader, taxonomyReader, searchParams).fixResult(docids, fres); 
      fres = frh.rearrangeFacetResult(fres); // let delegee's handler do any
      
      // Using the sampler to trim the extra (over-sampled) results
      fres = sampler.trimResult(fres);
      
      // final labeling if allowed (because labeling is a costly operation)
      frh.labelResult(fres);
      fixedRes.add(fres); // add to final results
    }

    delegee.searchParams = original; // Back to original params
    
    return fixedRes; 
  }

