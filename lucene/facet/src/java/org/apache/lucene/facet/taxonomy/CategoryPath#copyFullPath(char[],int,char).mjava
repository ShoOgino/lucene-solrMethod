  /**
   * Copies the path components to the given {@code char[]}, starting at index
   * {@code start}. {@code delimiter} is copied between the path components.
   * Returns the number of chars copied.
   * 
   * <p>
   * <b>NOTE:</b> this method relies on the array being large enough to hold the
   * components and separators - the amount of needed space can be calculated
   * with {@link #fullPathLength()}.
   */
  public int copyFullPath(char[] buf, int start, char delimiter) {
    if (length == 0) {
      return 0;
    }

    int idx = start;
    int upto = length - 1;
    for (int i = 0; i < upto; i++) {
      int len = components[i].length();
      components[i].getChars(0, len, buf, idx);
      idx += len;
      buf[idx++] = delimiter;
    }
    components[upto].getChars(0, components[upto].length(), buf, idx);
    
    return idx + components[upto].length() - start;
  }

