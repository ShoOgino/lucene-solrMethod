  @Override
  public void collect(int doc) throws IOException {
    //System.out.println("collect doc=" + doc + " main.freq=" + mainScorer.freq() + " main.doc=" + mainScorer.docID() + " exactCount=" + exactCount);
      
    if (mainScorer == null) {
      // This segment did not have any docs with any
      // drill-down field & value:
      return;
    }

    if (mainScorer.freq() == exactCount) {
      // All sub-clauses from the drill-down filters
      // matched, so this is a "real" hit, so we first
      // collect in both the hitCollector and the
      // drillDown collector:
      //System.out.println("  hit " + drillDownCollector);
      hitCollector.collect(doc);
      drillDownCollector.collect(doc);

      // Also collect across all drill-sideways counts so
      // we "merge in" drill-down counts for this
      // dimension.
      for(int i=0;i<subScorers.length;i++) {
        // This cannot be null, because it was a hit,
        // meaning all drill-down dims matched, so all
        // dims must have non-null scorers:
        assert subScorers[i] != null;
        int subDoc = subScorers[i].docID();
        assert subDoc == doc;
        drillSidewaysCollectors[i].collect(doc);
      }

    } else {
      for(int i=0;i<subScorers.length;i++) {
        if (subScorers[i] == null) {
          // This segment did not have any docs with this
          // drill-down field & value:
          continue;
        }
        int subDoc = subScorers[i].docID();
        //System.out.println("  sub: " + subDoc);
        if (subDoc != doc) {
          assert subDoc > doc: "subDoc=" + subDoc + " doc=" + doc;
          drillSidewaysCollectors[i].collect(doc);
          assert allMatchesFrom(i+1, doc);
          break;
        }
      }
    }
  }

