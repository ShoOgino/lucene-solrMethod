  /** Create a DoubleRange. */
  public DoubleRange(String label, double min, boolean minInclusive, double max, boolean maxInclusive) {
    super(label);
    this.min = min;
    this.max = max;
    this.minInclusive = minInclusive;
    this.maxInclusive = maxInclusive;

    // TODO: if DoubleDocValuesField used
    // NumericUtils.doubleToSortableLong format (instead of
    // Double.doubleToRawLongBits) we could do comparisons
    // in long space 

    if (Double.isNaN(min)) {
      throw new IllegalArgumentException("min cannot be NaN");
    }
    if (!minInclusive) {
      min = Math.nextUp(min);
    }

    if (Double.isNaN(max)) {
      throw new IllegalArgumentException("max cannot be NaN");
    }
    if (!maxInclusive) {
      // Why no Math.nextDown?
      max = Math.nextAfter(max, Double.NEGATIVE_INFINITY);
    }

    this.minIncl = min;
    this.maxIncl = max;
  }

