  @Override
  public void decode(BytesRef buf, IntsRef values) {
    values.offset = values.length = 0;

    // grow the buffer up front, even if by a large number of values (buf.length)
    // that saves the need to check inside the loop for every decoded value if
    // the buffer needs to grow.
    if (values.ints.length < buf.length) {
      values.ints = new int[ArrayUtil.oversize(buf.length, RamUsageEstimator.NUM_BYTES_INT)];
    }

    // it is better if the decoding is inlined like so, and not e.g.
    // in a utility method
    int upto = buf.offset + buf.length;
    int value = 0;
    int offset = buf.offset;
    int prev = 0;
    while (offset < upto) {
      byte b = buf.bytes[offset++];
      if (b >= 0) {
        values.ints[values.length] = ((value << 7) | b) + prev;
        value = 0;
        prev = values.ints[values.length];
        values.length++;
      } else {
        value = (value << 7) | (b & 0x7F);
      }
    }
  }

