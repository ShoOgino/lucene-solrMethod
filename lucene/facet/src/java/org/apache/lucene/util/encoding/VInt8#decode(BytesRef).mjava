  /**
   * Decodes an int from the given bytes, starting at {@link BytesRef#offset}.
   * Returns the decoded bytes and updates {@link BytesRef#offset}.
   */
  public static int decode(BytesRef bytes) {
    /*
    This is the original code of this method, but a Hotspot bug
    corrupted the for-loop of DataInput.readVInt() (see LUCENE-2975)
    so the loop was unwounded here too, to be on the safe side
    int value = 0;
    while (true) {
      byte first = bytes.bytes[bytes.offset++];
      value |= first & 0x7F;
      if ((first & 0x80) == 0) {
        return value;
      }
      value <<= 7;
    }
    */

    // byte 1
    byte b = bytes.bytes[bytes.offset++];
    if (b >= 0) return b;
    
    // byte 2
    int value = b & 0x7F;
    b = bytes.bytes[bytes.offset++];
    value = (value << 7) | b & 0x7F;
    if (b >= 0) return value;
    
    // byte 3
    b = bytes.bytes[bytes.offset++];
    value = (value << 7) | b & 0x7F;
    if (b >= 0) return value;
    
    // byte 4
    b = bytes.bytes[bytes.offset++];
    value = (value << 7) | b & 0x7F;
    if (b >= 0) return value;
    
    // byte 5
    b = bytes.bytes[bytes.offset++];
    return (value << 7) | b & 0x7F;
  }

