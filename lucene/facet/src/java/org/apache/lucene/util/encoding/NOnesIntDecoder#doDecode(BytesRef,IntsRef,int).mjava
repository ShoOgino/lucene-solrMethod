  @Override
  protected void doDecode(BytesRef buf, IntsRef values, int upto) {
    super.doDecode(buf, internalBuffer, upto);
    if (values.ints.length < internalBuffer.length) {
      // need space for internalBuffer.length to internalBuffer.length*N,
      // grow mildly at first
      values.grow(internalBuffer.length * n/2);
    }
    
    for (int i = 0; i < internalBuffer.length; i++) {
      int decode = internalBuffer.ints[i];
      if (decode == 1) {
        if (values.length == values.ints.length) {
          values.grow(values.length + 10); // grow by few items, however not too many
        }
        // 1 is 1
        values.ints[values.length++] = 1;
      } else if (decode == 2) {
        if (values.length + n >= values.ints.length) {
          values.grow(values.length + n); // grow by few items, however not too many
        }
        // '2' means N 1's
        for (int j = 0; j < n; j++) {
          values.ints[values.length++] = 1;
        }
      } else {
        if (values.length == values.ints.length) {
          values.grow(values.length + 10); // grow by few items, however not too many
        }
        // any other value is val-1
        values.ints[values.length++] = decode - 1;
      }
    }
  }

