  @Test
  public void testEmptyNullComponents() throws Exception {
    // LUCENE-4724: CategoryPath should not allow empty or null components
    String[][] components_tests = new String[][] {
      new String[] { "", "test" }, // empty in the beginning
      new String[] { "test", "" }, // empty in the end
      new String[] { "test", "", "foo" }, // empty in the middle
      new String[] { null, "test" }, // null at the beginning
      new String[] { "test", null }, // null in the end
      new String[] { "test", null, "foo" }, // null in the middle
    };

    for (String[] components : components_tests) {
      try {
        assertNotNull(new FacetLabel(components));
        fail("empty or null components should not be allowed: " + Arrays.toString(components));
      } catch (IllegalArgumentException e) {
        // expected
      }
      try {
        new FacetField("dim", components);
        fail("empty or null components should not be allowed: " + Arrays.toString(components));
      } catch (IllegalArgumentException e) {
        // expected
      }
      try {
        new AssociationFacetField(new BytesRef(), "dim", components);
        fail("empty or null components should not be allowed: " + Arrays.toString(components));
      } catch (IllegalArgumentException e) {
        // expected
      }
      try {
        new IntAssociationFacetField(17, "dim", components);
        fail("empty or null components should not be allowed: " + Arrays.toString(components));
      } catch (IllegalArgumentException e) {
        // expected
      }
      try {
        new FloatAssociationFacetField(17.0f, "dim", components);
        fail("empty or null components should not be allowed: " + Arrays.toString(components));
      } catch (IllegalArgumentException e) {
        // expected
      }
    }
    try {
      new FacetField(null, new String[] {"abc"});
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new FacetField("", new String[] {"abc"});
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new IntAssociationFacetField(17, null, new String[] {"abc"});
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new IntAssociationFacetField(17, "", new String[] {"abc"});
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new FloatAssociationFacetField(17.0f, null, new String[] {"abc"});
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new FloatAssociationFacetField(17.0f, "", new String[] {"abc"});
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new AssociationFacetField(new BytesRef(), null, new String[] {"abc"});
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new AssociationFacetField(new BytesRef(), "", new String[] {"abc"});
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new SortedSetDocValuesFacetField(null, "abc");
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new SortedSetDocValuesFacetField("", "abc");
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new SortedSetDocValuesFacetField("dim", null);
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
    try {
      new SortedSetDocValuesFacetField("dim", "");
      fail("empty or null components should not be allowed");
    } catch (IllegalArgumentException e) {
      // expected
    }
  }

