  @Test 
  public void testCharSerialization() throws Exception {
    CategoryPath[] testCategories = {
        new CategoryPath("hi", "there", "man"),
        new CategoryPath("hello"),
        new CategoryPath("what's", "up"),
        // See that an empty category, which generates a (char)0,
        // doesn't cause any problems in the middle of the serialization:
        new CategoryPath(),
        new CategoryPath("another", "example"),
        new CategoryPath(),
        new CategoryPath()
    };
    StringBuilder sb = new StringBuilder();
    for (int i=0; i<testCategories.length; i++) {
      testCategories[i].serializeAppendTo(sb);
    }
    
    CategoryPath tmp = new CategoryPath();
    int offset=0;
    for (int i=0; i<testCategories.length; i++) {
      // check equalsToSerialized, in a equal and non-equal case:
      assertTrue(testCategories[i].equalsToSerialized(sb, offset));
      assertFalse(new CategoryPath("Hello", "world").equalsToSerialized(sb, offset));
      assertFalse(new CategoryPath("world").equalsToSerialized(sb, offset));
      // and check hashCodeFromSerialized:
      assertEquals(testCategories[i].hashCode(), CategoryPath.hashCodeOfSerialized(sb, offset));
      // and check setFromSerialized:
      offset = tmp.setFromSerialized(sb, offset);
      assertEquals(testCategories[i], tmp);
    }
    assertEquals(offset, sb.length());
    // A similar test, for a much longer path (though not larger than the
    // 2^15-1 character limit that CategoryPath allows:
    sb = new StringBuilder();
    CategoryPath p = new CategoryPath();
    for (int i=0; i<1000; i++) {
      p.add(Integer.toString(i));
    }
    p.serializeAppendTo(sb);
    p.serializeAppendTo(sb);
    p.serializeAppendTo(sb);
    offset=0;
    assertTrue(p.equalsToSerialized(sb, offset));
    assertEquals(p.hashCode(), CategoryPath.hashCodeOfSerialized(sb, offset));
    offset = tmp.setFromSerialized(sb, offset);
    assertEquals(p, tmp);
    assertTrue(p.equalsToSerialized(sb, offset));
    assertEquals(p.hashCode(), CategoryPath.hashCodeOfSerialized(sb, offset));
    offset = tmp.setFromSerialized(sb, offset);
    assertEquals(p, tmp);
    assertTrue(p.equalsToSerialized(sb, offset));
    assertEquals(p.hashCode(), CategoryPath.hashCodeOfSerialized(sb, offset));
    offset = tmp.setFromSerialized(sb, offset);
    assertEquals(p, tmp);
    assertEquals(offset, sb.length());
    
    // Test the serializeAppendTo variant with a prefixLen
    p = new CategoryPath();
    for (int i=0; i<783; i++) {
      p.add(Integer.toString(i));
    }
    int[] prefixLengths = { 0, 574, 782, 783, 784, -1 };
    for (int prefixLen : prefixLengths) {
      sb = new StringBuilder();
      p.serializeAppendTo(prefixLen, sb);
      assertTrue(new CategoryPath(p, prefixLen).equalsToSerialized(sb, 0));
    }
    
    // Test the equalsToSerialized variant with a prefixLen
    // We use p and prefixLengths set above.
    for (int prefixLen : prefixLengths) {
      sb = new StringBuilder();
      new CategoryPath(p, prefixLen).serializeAppendTo(sb);
      assertTrue(p.equalsToSerialized(prefixLen, sb, 0));
    }
    
    // Check also the false case of equalsToSerialized with prefixLen:
    sb = new StringBuilder();
    new CategoryPath().serializeAppendTo(sb);
    assertTrue(new CategoryPath().equalsToSerialized(0, sb, 0));
    assertTrue(new CategoryPath("a", "b").equalsToSerialized(0, sb, 0));
    assertFalse(new CategoryPath("a", "b").equalsToSerialized(1, sb, 0));
    sb = new StringBuilder();
    new CategoryPath("a", "b").serializeAppendTo(sb);
    assertFalse(new CategoryPath().equalsToSerialized(0, sb, 0));
    assertFalse(new CategoryPath("a").equalsToSerialized(0, sb, 0));
    assertFalse(new CategoryPath("a").equalsToSerialized(1, sb, 0));
    assertFalse(new CategoryPath("a", "b").equalsToSerialized(0, sb, 0));
    assertFalse(new CategoryPath("a", "b").equalsToSerialized(1, sb, 0));
    assertTrue(new CategoryPath("a", "b").equalsToSerialized(2, sb, 0));
    assertTrue(new CategoryPath("a", "b", "c").equalsToSerialized(2, sb, 0));
    assertFalse(new CategoryPath("z", "b", "c").equalsToSerialized(2, sb, 0));
    assertFalse(new CategoryPath("aa", "b", "c").equalsToSerialized(2, sb, 0));
  }

