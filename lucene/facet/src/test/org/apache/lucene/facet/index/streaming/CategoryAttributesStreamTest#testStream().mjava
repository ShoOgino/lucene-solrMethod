  /**
   * Verifies that a {@link CategoryAttributesStream} accepts
   * {@link CategoryAttribute} and passes them on as tokens.
   */
  @Test
  public void testStream() throws IOException {
    ArrayList<CategoryAttribute> attributesList = new ArrayList<CategoryAttribute>();
    for (int i = 0; i < initialCatgeories.length; i++) {
      attributesList.add(new CategoryAttributeImpl(initialCatgeories[i]));
    }

    // test number of tokens
    CategoryAttributesStream stream = new CategoryAttributesStream(
        attributesList);
    int nTokens = 0;
    while (stream.incrementToken()) {
      nTokens++;
    }
    assertEquals("Wrong number of tokens", 3, nTokens);

    // test reset
    stream.reset();
    nTokens = 0;
    while (stream.incrementToken()) {
      nTokens++;
    }
    assertEquals("Wrong number of tokens", 3, nTokens);

    // test reset and contents
    Set<CategoryPath> pathsSet = new HashSet<CategoryPath>();
    for (int i = 0; i < initialCatgeories.length; i++) {
      pathsSet.add(initialCatgeories[i]);
    }
    stream.reset();
    while (stream.incrementToken()) {
      CategoryAttribute fromStream = stream
          .getAttribute(CategoryAttribute.class);
      if (!pathsSet.remove(fromStream.getCategoryPath())) {
        fail("Unexpected category path: "
            + fromStream.getCategoryPath().toString(':'));
      }
    }
    assertTrue("all category paths should have been found", pathsSet
        .isEmpty());
  }

