  private FacetsCollector performSearch(FacetIndexingParams iParams, TaxonomyReader tr, IndexReader ir, 
      IndexSearcher searcher) throws IOException {
    // step 1: collect matching documents into a collector
    Query q = new MatchAllDocsQuery();
    TopScoreDocCollector topDocsCollector = TopScoreDocCollector.create(10, true);

    List<FacetRequest> facetRequests = new ArrayList<FacetRequest>();
    facetRequests.add(new CountFacetRequest(new FacetLabel("Band"), 10));
    CountFacetRequest bandDepth = new CountFacetRequest(new FacetLabel("Band"), 10);
    bandDepth.setDepth(2);
    // makes it easier to check the results in the test.
    bandDepth.setResultMode(ResultMode.GLOBAL_FLAT);
    facetRequests.add(bandDepth);
    facetRequests.add(new CountFacetRequest(new FacetLabel("Author"), 10));
    facetRequests.add(new CountFacetRequest(new FacetLabel("Band", "Rock & Pop"), 10));

    // Faceted search parameters indicate which facets are we interested in
    FacetSearchParams facetSearchParams = new FacetSearchParams(iParams, facetRequests);

    // perform documents search and facets accumulation
    FacetsCollector facetsCollector = FacetsCollector.create(facetSearchParams, ir, tr);
    searcher.search(q, MultiCollector.wrap(topDocsCollector, facetsCollector));
    return facetsCollector;
  }

