  /**
   * Returns a {@link FacetIndexingParams} per the given partition size. If
   * requested, then {@link OrdinalPolicy} will be set to
   * {@link OrdinalPolicy#ALL_PARENTS}, otherwise it will randomize.
   */
  protected FacetIndexingParams getFacetIndexingParams(final int partSize, final boolean forceAllParents) {
    FacetIndexingParams fip = fipPerPartitionSize.get(partSize);
    if (fip == null) {
      // randomize OrdinalPolicy. Since not all Collectors / Accumulators
      // support NO_PARENTS, don't include it.
      // TODO: once all code paths support NO_PARENTS, randomize it too.
      CategoryListParams randomOP = new CategoryListParams() {
        final OrdinalPolicy op = random().nextBoolean() ? OrdinalPolicy.ALL_BUT_DIMENSION : OrdinalPolicy.ALL_PARENTS;
        @Override
        public OrdinalPolicy getOrdinalPolicy(String dimension) {
          return forceAllParents ? OrdinalPolicy.ALL_PARENTS : op;
        }
      };
      
      // several of our encoders don't support the value 0, 
      // which is one of the values encoded when dealing w/ partitions,
      // therefore don't randomize the encoder.
      fip = new FacetIndexingParams(randomOP) {
        @Override
        public int getPartitionSize() {
          return partSize;
        }
      };
      fipPerPartitionSize.put(partSize, fip);
    }
    return fip;
  }

