  @Test 
  public void testPrefixCopyConstructor() {
    CategoryPath p = new CategoryPath(0,0);
    p.add("hi");
    p.add("there");
    p.add("man");
    assertEquals(p.length(), 3);
    
    CategoryPath p1 = new CategoryPath(p,2);
    assertEquals(2, p1.length());
    assertEquals("hi/there", p1.toString('/'));
    // the new prefix object should only take the space it needs: 
    assertEquals(2, p1.capacityComponents());
    assertEquals(7, p1.capacityChars());

    p1 = new CategoryPath(p,1);
    assertEquals(1, p1.length());
    assertEquals("hi", p1.toString('/'));
    assertEquals(1, p1.capacityComponents());
    assertEquals(2, p1.capacityChars());

    p1 = new CategoryPath(p,0);
    assertEquals(0, p1.length());
    assertEquals("", p1.toString('/'));
    assertEquals(0, p1.capacityComponents());
    assertEquals(0, p1.capacityChars());

    // with all the following lengths, the prefix should be the whole path: 
    int[] lengths = { 3, -1, 4 };
    for (int i=0; i<lengths.length; i++) {
      p1 = new CategoryPath(p, lengths[i]);
      assertEquals(3, p1.length());
      assertEquals("hi/there/man", p1.toString('/'));
      assertEquals(p, p1);
      assertEquals(3, p1.capacityComponents());
      assertEquals(10, p1.capacityChars());
    }
  }

