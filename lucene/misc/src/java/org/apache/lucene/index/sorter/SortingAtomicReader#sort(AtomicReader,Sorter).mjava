  /** Return a sorted view of <code>reader</code> according to the order
   *  defined by <code>sorter</code>. If the reader is already sorted, this
   *  method might return the reader as-is. */
  public static AtomicReader sort(AtomicReader reader, Sorter sorter) throws IOException {
    final Sorter.DocMap docMap = sorter.sort(reader);
    if (docMap == null) {
      // the reader is already sorter
      return reader;
    }
    assert Sorter.isConsistent(docMap, reader.maxDoc());
    return new SortingAtomicReader(reader, docMap);
  }

