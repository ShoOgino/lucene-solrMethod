    @Override
    public DocsAndPositionsEnum docsAndPositions(Bits liveDocs, DocsAndPositionsEnum reuse, final int flags) throws IOException {
      if (liveDocs != null) {
        liveDocs = inLiveDocs;
      }
      
      // if we're asked to reuse the given DocsAndPositionsEnum and it is
      // Sorting, return the wrapped one, since some Codecs expect it.
      if (reuse != null && reuse instanceof SortingDocsAndPositionsEnum) {
        reuse = ((SortingDocsAndPositionsEnum) reuse).getWrapped();
      }
      
      final DocsAndPositionsEnum positions = in.docsAndPositions(liveDocs, reuse, flags);
      if (positions == null) {
        return null;
      } else {
        // we ignore the fact that offsets may be stored but not asked for,
        // since this code is expected to be used during addIndexes which will
        // ask for everything. if that assumption changes in the future, we can
        // factor in whether 'flags' says offsets are not required.
        boolean storeOffsets = indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
        return new SortingDocsAndPositionsEnum(positions, docMap, storeOffsets);
      }
    }

