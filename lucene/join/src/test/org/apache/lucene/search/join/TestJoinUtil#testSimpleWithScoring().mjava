  public void testSimpleWithScoring() throws Exception {
    final String idField = "id";
    final String toField = "movieId";

    Directory dir = newDirectory();
    RandomIndexWriter w = new RandomIndexWriter(
        random(),
        dir,
        newIndexWriterConfig(TEST_VERSION_CURRENT,
            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));

    // 0
    Document doc = new Document();
    doc.add(new Field("description", "A random movie", TextField.TYPE_UNSTORED));
    doc.add(new Field("name", "Movie 1", TextField.TYPE_UNSTORED));
    doc.add(new Field(idField, "1", TextField.TYPE_UNSTORED));
    w.addDocument(doc);

    // 1
    doc = new Document();
    doc.add(new Field("subtitle", "The first subtitle of this movie", TextField.TYPE_UNSTORED));
    doc.add(new Field(idField, "2", TextField.TYPE_UNSTORED));
    doc.add(new Field(toField, "1", TextField.TYPE_UNSTORED));
    w.addDocument(doc);

    // 2
    doc = new Document();
    doc.add(new Field("subtitle", "random subtitle; random event movie", TextField.TYPE_UNSTORED));
    doc.add(new Field(idField, "3", TextField.TYPE_UNSTORED));
    doc.add(new Field(toField, "1", TextField.TYPE_UNSTORED));
    w.addDocument(doc);

    // 3
    doc = new Document();
    doc.add(new Field("description", "A second random movie", TextField.TYPE_UNSTORED));
    doc.add(new Field("name", "Movie 2", TextField.TYPE_UNSTORED));
    doc.add(new Field(idField, "4", TextField.TYPE_UNSTORED));
    w.addDocument(doc);
    w.commit();

    // 4
    doc = new Document();
    doc.add(new Field("subtitle", "a very random event happened during christmas night", TextField.TYPE_UNSTORED));
    doc.add(new Field(idField, "5", TextField.TYPE_UNSTORED));
    doc.add(new Field(toField, "4", TextField.TYPE_UNSTORED));
    w.addDocument(doc);

    // 5
    doc = new Document();
    doc.add(new Field("subtitle", "movie end movie test 123 test 123 random", TextField.TYPE_UNSTORED));
    doc.add(new Field(idField, "6", TextField.TYPE_UNSTORED));
    doc.add(new Field(toField, "4", TextField.TYPE_UNSTORED));
    w.addDocument(doc);

    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());
    w.close();

    // Search for movie via subtitle
    Query joinQuery =
        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term("subtitle", "random")), indexSearcher, ScoreMode.Max);
    TopDocs result = indexSearcher.search(joinQuery, 10);
    assertEquals(2, result.totalHits);
    assertEquals(0, result.scoreDocs[0].doc);
    assertEquals(3, result.scoreDocs[1].doc);

    // Score mode max.
    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term("subtitle", "movie")), indexSearcher, ScoreMode.Max);
    result = indexSearcher.search(joinQuery, 10);
    assertEquals(2, result.totalHits);
    assertEquals(3, result.scoreDocs[0].doc);
    assertEquals(0, result.scoreDocs[1].doc);

    // Score mode total
    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term("subtitle", "movie")), indexSearcher, ScoreMode.Total);
    result = indexSearcher.search(joinQuery, 10);
    assertEquals(2, result.totalHits);
    assertEquals(0, result.scoreDocs[0].doc);
    assertEquals(3, result.scoreDocs[1].doc);

    //Score mode avg
    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term("subtitle", "movie")), indexSearcher, ScoreMode.Avg);
    result = indexSearcher.search(joinQuery, 10);
    assertEquals(2, result.totalHits);
    assertEquals(3, result.scoreDocs[0].doc);
    assertEquals(0, result.scoreDocs[1].doc);

    indexSearcher.getIndexReader().close();
    dir.close();
  }

