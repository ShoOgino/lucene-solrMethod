  public void testAdvanceValidationForToChildBjq() throws Exception {
    int randomChildNumber = getRandomChildNumber(0);
    // we need to make advance method meet wrong document, so random child number
    // in BJQ must be greater than child number in Boolean clause
    int nextRandomChildNumber = getRandomChildNumber(randomChildNumber);
    Query parentQueryWithRandomChild = createParentsQueryWithOneChild(nextRandomChildNumber);
    ToChildBlockJoinQuery blockJoinQuery = new ToChildBlockJoinQuery(parentQueryWithRandomChild, parentsFilter);
    // advance() method is used by ConjunctionScorer, so we need to create Boolean conjunction query
    BooleanQuery.Builder conjunctionQuery = new BooleanQuery.Builder();
    WildcardQuery childQuery = new WildcardQuery(new Term("child", createFieldValue(randomChildNumber)));
    conjunctionQuery.add(childQuery, BooleanClause.Occur.MUST);
    conjunctionQuery.add(blockJoinQuery, BooleanClause.Occur.MUST);
    
    try {
      indexSearcher.search(conjunctionQuery.build(), 1);
      fail("didn't get expected exception");
    } catch (IllegalStateException expected) {
      assertTrue(expected.getMessage() != null && expected.getMessage().contains(ToChildBlockJoinQuery.INVALID_QUERY_MESSAGE));
    }
  }

