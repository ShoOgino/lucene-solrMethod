  /** this adapter is quite weird. ords are per doc index, don't use ords across different docs*/
  static Function<SortedSetDocValues> sortedNumericAsSortedSetDocValues(String field, LegacyNumericType numTyp) {
    return (ctx) -> {
      final SortedNumericDocValues numerics = DocValues.getSortedNumeric(ctx, field);
      final BytesRefBuilder bytes = new BytesRefBuilder();
      
      final LongConsumer coder = coder(bytes, numTyp, field);
      
      return new SortedSetDocValues() {

        private int index = Integer.MIN_VALUE;

        @Override
        public long nextOrd() {
          return index < numerics.count()-1 ? ++index : NO_MORE_ORDS;
        }

        @Override
        public void setDocument(int docID) {
          numerics.setDocument(docID);
          index=-1;
        }

        @Override
        public BytesRef lookupOrd(long ord) {
          assert ord>=0 && ord<numerics.count();
          final long value = numerics.valueAt((int)ord);
          coder.accept(value);
          return bytes.get();
        }

        @Override
        public long getValueCount() {
          throw new UnsupportedOperationException("it's just number encoding wrapper");
        }
        
        @Override
        public long lookupTerm(BytesRef key) {
          throw new UnsupportedOperationException("it's just number encoding wrapper");
        }
      };
    };
  }

