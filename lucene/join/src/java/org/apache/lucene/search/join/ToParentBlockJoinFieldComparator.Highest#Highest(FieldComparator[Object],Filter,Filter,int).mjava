    /**
     * Create ToParentBlockJoinFieldComparator.Highest
     *
     * @param wrappedComparator The {@link FieldComparator} on the child / nested level.
     * @param parentFilter Filter (must produce FixedBitSet per-segment) that identifies the parent documents.
     * @param childFilter Filter that defines which child / nested documents participates in sorting.
     * @param spareSlot The extra slot inside the wrapped comparator that is used to compare which nested document
     *                  inside the parent document scope is most competitive.
     */
    public Highest(FieldComparator<Object> wrappedComparator, Filter parentFilter, Filter childFilter, int spareSlot) {
      super(wrappedComparator, parentFilter, childFilter, spareSlot);
    }

