    /**
     * Create ToParentBlockJoinFieldComparator.Lowest
     *
     * @param wrappedComparator The {@link LeafFieldComparator} on the child / nested level.
     * @param parentFilter Filter that identifies the parent documents.
     * @param childFilter Filter that defines which child / nested documents participates in sorting.
     * @param spareSlot The extra slot inside the wrapped comparator that is used to compare which nested document
     *                  inside the parent document scope is most competitive.
     */
    public Lowest(FieldComparator<Object> wrappedComparator, BitDocIdSetFilter parentFilter, BitDocIdSetFilter childFilter, int spareSlot) {
      super(wrappedComparator, parentFilter, childFilter, spareSlot);
    }

