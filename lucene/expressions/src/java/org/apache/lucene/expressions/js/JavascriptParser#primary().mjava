  // $ANTLR start "primary"
  // src/java/org/apache/lucene/expressions/js/Javascript.g:315:1: primary : ( VARIABLE | numeric | AT_LPAREN ! conditional AT_RPAREN !);
  public final JavascriptParser.primary_return primary() throws RecognitionException {
    JavascriptParser.primary_return retval = new JavascriptParser.primary_return();
    retval.start = input.LT(1);

    CommonTree root_0 = null;

    Token VARIABLE49=null;
    Token AT_LPAREN51=null;
    Token AT_RPAREN53=null;
    ParserRuleReturnScope numeric50 =null;
    ParserRuleReturnScope conditional52 =null;

    CommonTree VARIABLE49_tree=null;
    CommonTree AT_LPAREN51_tree=null;
    CommonTree AT_RPAREN53_tree=null;

    try {
      // src/java/org/apache/lucene/expressions/js/Javascript.g:316:5: ( VARIABLE | numeric | AT_LPAREN ! conditional AT_RPAREN !)
      int alt15=3;
      switch ( input.LA(1) ) {
      case VARIABLE:
        {
        alt15=1;
        }
        break;
      case DECIMAL:
      case HEX:
      case OCTAL:
        {
        alt15=2;
        }
        break;
      case AT_LPAREN:
        {
        alt15=3;
        }
        break;
      default:
        NoViableAltException nvae =
          new NoViableAltException("", 15, 0, input);
        throw nvae;
      }
      switch (alt15) {
        case 1 :
          // src/java/org/apache/lucene/expressions/js/Javascript.g:316:7: VARIABLE
          {
          root_0 = (CommonTree)adaptor.nil();


          VARIABLE49=(Token)match(input,VARIABLE,FOLLOW_VARIABLE_in_primary1198); 
          VARIABLE49_tree = (CommonTree)adaptor.create(VARIABLE49);
          adaptor.addChild(root_0, VARIABLE49_tree);

          }
          break;
        case 2 :
          // src/java/org/apache/lucene/expressions/js/Javascript.g:317:7: numeric
          {
          root_0 = (CommonTree)adaptor.nil();


          pushFollow(FOLLOW_numeric_in_primary1206);
          numeric50=numeric();
          state._fsp--;

          adaptor.addChild(root_0, numeric50.getTree());

          }
          break;
        case 3 :
          // src/java/org/apache/lucene/expressions/js/Javascript.g:318:7: AT_LPAREN ! conditional AT_RPAREN !
          {
          root_0 = (CommonTree)adaptor.nil();


          AT_LPAREN51=(Token)match(input,AT_LPAREN,FOLLOW_AT_LPAREN_in_primary1214); 
          pushFollow(FOLLOW_conditional_in_primary1217);
          conditional52=conditional();
          state._fsp--;

          adaptor.addChild(root_0, conditional52.getTree());

          AT_RPAREN53=(Token)match(input,AT_RPAREN,FOLLOW_AT_RPAREN_in_primary1219); 
          }
          break;

      }
      retval.stop = input.LT(-1);

      retval.tree = (CommonTree)adaptor.rulePostProcessing(root_0);
      adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);

    }
    catch (RecognitionException re) {
      reportError(re);
      recover(input,re);
      retval.tree = (CommonTree)adaptor.errorNode(input, retval.start, input.LT(-1), re);
    }
    finally {
      // do for sure before leaving
    }
    return retval;
  }
  // $ANTLR end "primary"

