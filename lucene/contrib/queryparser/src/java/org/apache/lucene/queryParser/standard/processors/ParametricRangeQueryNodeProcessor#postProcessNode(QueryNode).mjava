  @Override
  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {

    if (node instanceof ParametricRangeQueryNode) {
      ParametricRangeQueryNode parametricRangeNode = (ParametricRangeQueryNode) node;
      ParametricQueryNode upper = parametricRangeNode.getUpperBound();
      ParametricQueryNode lower = parametricRangeNode.getLowerBound();
      Locale locale = Locale.getDefault();
      DateTools.Resolution dateRes = null;
      boolean inclusive = false;

      if (getQueryConfigHandler().hasAttribute(LocaleAttribute.class)) {

        locale = getQueryConfigHandler().getAttribute(LocaleAttribute.class)
            .getLocale();

      }

      CharSequence field = parametricRangeNode.getField();
      String fieldStr = null;

      if (field != null) {
        fieldStr = field.toString();
      }

      FieldConfig fieldConfig = getQueryConfigHandler()
          .getFieldConfig(fieldStr);

      if (fieldConfig != null) {

        if (fieldConfig.hasAttribute(DateResolutionAttribute.class)) {

          dateRes = fieldConfig.getAttribute(DateResolutionAttribute.class)
              .getDateResolution();

        }

      }

      if (upper.getOperator() == CompareOperator.LE) {
        inclusive = true;

      } else if (lower.getOperator() == CompareOperator.GE) {
        inclusive = true;
      }

      String part1 = lower.getTextAsString();
      String part2 = upper.getTextAsString();

      try {
        DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT, locale);
        df.setLenient(true);
        Date d1 = df.parse(part1);
        Date d2 = df.parse(part2);
        if (inclusive) {
          // The user can only specify the date, not the time, so make sure
          // the time is set to the latest possible time of that date to really
          // include all documents:
          Calendar cal = Calendar.getInstance(locale);
          cal.setTime(d2);
          cal.set(Calendar.HOUR_OF_DAY, 23);
          cal.set(Calendar.MINUTE, 59);
          cal.set(Calendar.SECOND, 59);
          cal.set(Calendar.MILLISECOND, 999);
          d2 = cal.getTime();
        }

        part1 = DateTools.dateToString(d1, dateRes);
        part2 = DateTools.dateToString(d2, dateRes);
      } catch (Exception e) {
        // do nothing
      }

      lower.setText(part1);
      upper.setText(part2);

      return new RangeQueryNode(lower, upper);

    }

    return node;

  }

