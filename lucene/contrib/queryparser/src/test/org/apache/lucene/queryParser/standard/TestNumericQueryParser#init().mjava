  static void init() {
    try {
      LOCALE = randomLocale(random);
      LOCALE = Locale.getDefault();
      TIMEZONE = randomTimeZone(random);
      DATE_STYLE = randomDateStyle(random);
      TIME_STYLE = randomDateStyle(random);
      ANALYZER = new MockAnalyzer(random);
      qp = new StandardQueryParser(ANALYZER);
      NUMBER_FORMAT = NumberFormat.getNumberInstance(LOCALE);
      NUMBER_FORMAT.setMaximumFractionDigits((random.nextInt() & 20) + 1);
      NUMBER_FORMAT.setMinimumFractionDigits((random.nextInt() & 20) + 1);
      NUMBER_FORMAT.setMaximumIntegerDigits((random.nextInt() & 20) + 1);
      NUMBER_FORMAT.setMinimumIntegerDigits((random.nextInt() & 20) + 4); // the loop checks for < 1000, this is a must!
      
      // assumes localized date pattern will have at least year, month, day, hour, minute
      SimpleDateFormat dateFormat = (SimpleDateFormat) DateFormat.getDateTimeInstance(
          DATE_STYLE, TIME_STYLE, LOCALE);
      
      // not all date patterns includes era, full year, timezone and second, so we add them here
      dateFormat.applyPattern(dateFormat.toPattern() + " G s Z yyyy");
      dateFormat.setTimeZone(TIMEZONE);
      DATE_FORMAT  = new NumberDateFormat(dateFormat);
      
      HashMap<String,Number> randomNumberMap = new HashMap<String,Number>();
      
      double randomDouble;
      long randomLong;
      int randomInt;
      float randomFloat;
      long randomDate;
      
      while ((randomLong = normalizeNumber(Math.abs(random.nextLong()))
          .longValue()) == 0)
        ;
      while ((randomDouble = normalizeNumber(Math.abs(random.nextDouble()))
          .doubleValue()) == 0)
        ;
      while ((randomFloat = normalizeNumber(Math.abs(random.nextFloat()))
          .floatValue()) == 0)
        ;
      while ((randomInt = normalizeNumber(Math.abs(random.nextInt()))
          .intValue()) == 0)
        ;
      
      // make sure random date is at least one second from 0
      while ((randomDate = normalizeNumber(Math.abs(random.nextLong()))
          .longValue()) < 1000)
        ;

      // prune date value so it doesn't pass in insane values to some calendars.
      randomDate = randomDate % 3400000000000l;

      // truncate to second
      randomDate = (randomDate / 1000) * 1000;
      
      randomNumberMap.put(NumericField.DataType.LONG.name(), randomLong);
      randomNumberMap.put(NumericField.DataType.INT.name(), randomInt);
      randomNumberMap.put(NumericField.DataType.FLOAT.name(), randomFloat);
      randomNumberMap.put(NumericField.DataType.DOUBLE.name(), randomDouble);
      randomNumberMap.put(DATE_FIELD_NAME, randomDate);
      
      RANDOM_NUMBER_MAP = Collections.unmodifiableMap(randomNumberMap);
      
    } catch (ParseException e) {
      throw new RuntimeException(e);
    }
  }

