  public void testOptions() throws Exception {
    Directory dir = newDirectory();
    RandomIndexWriter writer = new RandomIndexWriter(random, dir, 
        new MockAnalyzer(random, MockTokenizer.SIMPLE, true));

    Document doc = new Document();
    doc.add(newField("text", "foobar", Field.Store.NO, Field.Index.ANALYZED));
    writer.addDocument(doc);
    doc.add(newField("text", "foobar", Field.Store.NO, Field.Index.ANALYZED));
    writer.addDocument(doc);
    doc.add(newField("text", "foobaz", Field.Store.NO, Field.Index.ANALYZED));
    writer.addDocument(doc);
    doc.add(newField("text", "fobar", Field.Store.NO, Field.Index.ANALYZED));
    writer.addDocument(doc);
   
    IndexReader ir = writer.getReader();
    
    DirectSpellChecker spellChecker = new DirectSpellChecker();
    spellChecker.setMaxQueryFrequency(0F);
    SuggestWord[] similar = spellChecker.suggestSimilar(new Term("text", "fobar"), 1, ir, true);
    assertEquals(0, similar.length);
    
    spellChecker = new DirectSpellChecker(); // reset defaults
    spellChecker.setMinQueryLength(5);
    similar = spellChecker.suggestSimilar(new Term("text", "foba"), 1, ir, true);
    assertEquals(0, similar.length);
    
    spellChecker = new DirectSpellChecker(); // reset defaults
    spellChecker.setMaxEdits(1);
    similar = spellChecker.suggestSimilar(new Term("text", "foobazzz"), 1, ir, true);
    assertEquals(0, similar.length);
    
    spellChecker = new DirectSpellChecker(); // reset defaults
    spellChecker.setAccuracy(0.9F);
    similar = spellChecker.suggestSimilar(new Term("text", "foobazzz"), 1, ir, true);
    assertEquals(0, similar.length);
    
    spellChecker = new DirectSpellChecker(); // reset defaults
    spellChecker.setMinPrefix(0);
    similar = spellChecker.suggestSimilar(new Term("text", "roobaz"), 1, ir, true);
    assertEquals(1, similar.length);
    
    spellChecker = new DirectSpellChecker(); // reset defaults
    spellChecker.setMinPrefix(1);
    similar = spellChecker.suggestSimilar(new Term("text", "roobaz"), 1, ir, true);
    assertEquals(0, similar.length);
    
    ir.close();
    writer.close();
    dir.close();
  }

