        private boolean r_prelude() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            // (, line 25
            // unset Y_found, line 26
            B_Y_found = false;
            // do, line 27
            v_1 = cursor;
            lab0: do {
                // (, line 27
                // [, line 27
                bra = cursor;
                // literal, line 27
                if (!(eq_s(1, "'")))
                {
                    break lab0;
                }
                // ], line 27
                ket = cursor;
                // delete, line 27
                slice_del();
            } while (false);
            cursor = v_1;
            // do, line 28
            v_2 = cursor;
            lab1: do {
                // (, line 28
                // [, line 28
                bra = cursor;
                // literal, line 28
                if (!(eq_s(1, "y")))
                {
                    break lab1;
                }
                // ], line 28
                ket = cursor;
                // <-, line 28
                slice_from("Y");
                // set Y_found, line 28
                B_Y_found = true;
            } while (false);
            cursor = v_2;
            // do, line 29
            v_3 = cursor;
            lab2: do {
                // repeat, line 29
                replab3: while(true)
                {
                    v_4 = cursor;
                    lab4: do {
                        // (, line 29
                        // goto, line 29
                        golab5: while(true)
                        {
                            v_5 = cursor;
                            lab6: do {
                                // (, line 29
                                if (!(in_grouping(g_v, 97, 121)))
                                {
                                    break lab6;
                                }
                                // [, line 29
                                bra = cursor;
                                // literal, line 29
                                if (!(eq_s(1, "y")))
                                {
                                    break lab6;
                                }
                                // ], line 29
                                ket = cursor;
                                cursor = v_5;
                                break golab5;
                            } while (false);
                            cursor = v_5;
                            if (cursor >= limit)
                            {
                                break lab4;
                            }
                            cursor++;
                        }
                        // <-, line 29
                        slice_from("Y");
                        // set Y_found, line 29
                        B_Y_found = true;
                        continue replab3;
                    } while (false);
                    cursor = v_4;
                    break replab3;
                }
            } while (false);
            cursor = v_3;
            return true;
        }

