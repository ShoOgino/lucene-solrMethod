  /**
   * Resets the norms for the specified field.
   *
   * <p>
   * Opens a new IndexReader on the Directory given to this instance,
   * modifies the norms using the Similarity given to this instance,
   * and closes the IndexReader.
   * </p>
   *
   * @param field the field whose norms should be reset
   */
  public void reSetNorms(String field) throws IOException {
    String fieldName = StringHelper.intern(field);
    int[] termCounts = new int[0];
    
    IndexReader reader = IndexReader.open(dir, false);
    try {

      termCounts = new int[reader.maxDoc()];
      Bits delDocs = MultiFields.getDeletedDocs(reader);
      DocsEnum docs = null;

      Terms terms = MultiFields.getTerms(reader, field);
      if (terms != null) {
        TermsEnum termsEnum = terms.iterator();
        while(termsEnum.next() != null) {
          docs = termsEnum.docs(delDocs, docs);
          int doc;
          while ((doc = docs.nextDoc()) != DocsEnum.NO_MORE_DOCS) {
            termCounts[doc] += docs.freq();
          }
        }
      }

      for (int d = 0; d < termCounts.length; d++) {
        if (!delDocs.get(d)) {
          byte norm = Similarity.encodeNorm(sim.lengthNorm(fieldName, termCounts[d]));
          reader.setNorm(d, fieldName, norm);
        }
      }
    } finally {
      reader.close();
    }
  }

