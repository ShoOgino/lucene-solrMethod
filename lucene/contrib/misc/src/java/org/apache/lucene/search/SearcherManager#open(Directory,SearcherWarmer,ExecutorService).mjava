  /**
   * Creates and returns a new SearcherManager from the given {@link Directory}. 
   * @param dir the directory to open the IndexReader on.
   * @param warmer An optional {@link SearcherWarmer}.  Pass
   *        <code>null</code> if you don't require the searcher to warmed
   *        before going live.  If this is  <code>non-null</code> then a
   *        merged segment warmer is installed on the
   *        provided IndexWriter's config.
   * @param es And optional {@link ExecutorService} so different segments can
   *        be searched concurrently (see {@link
   *        IndexSearcher#IndexSearcher(IndexReader,ExecutorService)}.  Pass <code>null</code>
   *        to search segments sequentially.
   *        
   * @throws IOException
   */
  public static SearcherManager open(Directory dir, SearcherWarmer warmer,
      ExecutorService es) throws IOException {
    final IndexReader open = IndexReader.open(dir, true);
    boolean success = false;
    try {
      SearcherManager manager = new DirectorySearchManager(open, warmer, es);
      success = true;
      return manager;
    } finally {
      if (!success) {
        open.close();
      }
    }
  }

