  @Override
  public DocIdSet getDocIdSet(ReaderContext context) throws IOException {

    final double[] latIndex = FieldCache.DEFAULT.getDoubles(context.reader, latField);
    final double[] lngIndex = FieldCache.DEFAULT.getDoubles(context.reader, lngField);

    final int docBase = nextDocBase;
    nextDocBase += context.reader.maxDoc();

    return new FilteredDocIdSet(startingFilter.getDocIdSet(context)) {
      @Override
      protected boolean match(int doc) {
        double x = latIndex[doc];
        double y = lngIndex[doc];
      
        // round off lat / longs if necessary
        //      x = DistanceHandler.getPrecision(x, precise);
        //      y = DistanceHandler.getPrecision(y, precise);
      
        String ck = Double.toString(x)+","+Double.toString(y);
        Double cachedDistance = distanceLookupCache.get(ck);

        double d;
        if (cachedDistance != null){
          d = cachedDistance.doubleValue();
        } else {
          d = DistanceUtils.getDistanceMi(lat, lng, x, y);
          distanceLookupCache.put(ck, d);
        }

        if (d < distance) {
          // Save distances, so they can be pulled for
          // sorting after filtering is done:
          distances.put(doc+docBase, d);
          return true;
        } else {
          return false;
        }
      }
    };
  }

