  /**
   * Test that we can create ShingleAnalyzerWrappers.
   */
  public void testShingleAnalyzer() throws Exception {
    String text = "one,two,three, four five six";
    
    // Default analyzer, maxShingleSize, and outputUnigrams
    Benchmark benchmark = execBenchmark(getShingleConfig(""));
    benchmark.getRunData().getAnalyzer().tokenStream
      ("bogus", new StringReader(text)).close();
    assertEqualShingle(benchmark.getRunData().getAnalyzer(), text,
                       new String[] {"one", "one two", "two", "two three",
                                     "three", "three four", "four", "four five",
                                     "five", "five six", "six"});
    // Default analyzer, maxShingleSize = 3, and outputUnigrams = false
    benchmark = execBenchmark
      (getShingleConfig("maxShingleSize:3,outputUnigrams:false"));
    assertEqualShingle(benchmark.getRunData().getAnalyzer(), text,
                       new String[] { "one two", "one two three", "two three",
                                      "two three four", "three four", 
                                      "three four five", "four five",
                                      "four five six", "five six" });
    // WhitespaceAnalyzer, default maxShingleSize and outputUnigrams
    benchmark = execBenchmark
      (getShingleConfig("analyzer:WhitespaceAnalyzer"));
    assertEqualShingle(benchmark.getRunData().getAnalyzer(), text,
                       new String[] { "one,two,three,", "one,two,three, four",
                                      "four", "four five", "five", "five six", 
                                      "six" });
    
    // WhitespaceAnalyzer, maxShingleSize=3 and outputUnigrams=false
    benchmark = execBenchmark
      (getShingleConfig
        ("outputUnigrams:false,maxShingleSize:3,analyzer:WhitespaceAnalyzer"));
    assertEqualShingle(benchmark.getRunData().getAnalyzer(), text,
                       new String[] { "one,two,three, four", 
                                      "one,two,three, four five",
                                      "four five", "four five six",
                                      "five six" });
  }

