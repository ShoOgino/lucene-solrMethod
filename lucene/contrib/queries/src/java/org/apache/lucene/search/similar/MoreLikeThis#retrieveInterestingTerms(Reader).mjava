  /**
   * Convenience routine to make it easy to return the most interesting words in a document.
   * More advanced users will call {@link #retrieveTerms(java.io.Reader) retrieveTerms()} directly.
   *
   * @param r the source document
   * @return the most interesting words in the document
   * @see #retrieveTerms(java.io.Reader)
   * @see #setMaxQueryTerms
   */
  public String[] retrieveInterestingTerms(Reader r) throws IOException {
    ArrayList<Object> al = new ArrayList<Object>(maxQueryTerms);
    PriorityQueue<Object[]> pq = retrieveTerms(r);
    Object cur;
    int lim = maxQueryTerms; // have to be careful, retrieveTerms returns all words but that's probably not useful to our caller...
    // we just want to return the top words
    while (((cur = pq.pop()) != null) && lim-- > 0) {
      Object[] ar = (Object[]) cur;
      al.add(ar[0]); // the 1st entry is the interesting word
    }
    String[] res = new String[al.size()];
    return al.toArray(res);
  }

