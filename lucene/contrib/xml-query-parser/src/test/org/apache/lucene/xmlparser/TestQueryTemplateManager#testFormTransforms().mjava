  public void testFormTransforms() throws SAXException, IOException, ParserConfigurationException, TransformerException, ParserException {
    // Sun 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963
    if (Constants.JAVA_VENDOR.startsWith("Sun") && Constants.JAVA_VERSION.startsWith("1.5")) {
      String defLang = Locale.getDefault().getLanguage();
      assumeFalse("Sun JRE 1.5 suffers from http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6240963 under Turkish locale", defLang.equals("tr") || defLang.equals("az"));
    }
    //Cache all the query templates we will be referring to.
    QueryTemplateManager qtm = new QueryTemplateManager();
    qtm.addQueryTemplate("albumBooleanQuery", getClass().getResourceAsStream("albumBooleanQuery.xsl"));
    qtm.addQueryTemplate("albumFilteredQuery", getClass().getResourceAsStream("albumFilteredQuery.xsl"));
    qtm.addQueryTemplate("albumLuceneClassicQuery", getClass().getResourceAsStream("albumLuceneClassicQuery.xsl"));
    //Run all of our test queries
    for (String queryForm : queryForms) {
      Properties queryFormProperties = getPropsFromString(queryForm);

      //Get the required query XSL template for this test
//			Templates template=getTemplate(queryFormProperties.getProperty("template"));

      //Transform the queryFormProperties into a Lucene XML query
      Document doc = qtm.getQueryAsDOM(queryFormProperties, queryFormProperties.getProperty("template"));

      //Parse the XML query using the XML parser
      Query q = builder.getQuery(doc.getDocumentElement());

      //Run the query
      int h = searcher.search(q, null, 1000).totalHits;

      //Check we have the expected number of results
      int expectedHits = Integer.parseInt(queryFormProperties.getProperty("expectedMatches"));
      assertEquals("Number of results should match for query " + queryForm, expectedHits, h);

    }
  }

