  /**
   * Copies the content of a given {@link FileChannel} to a destination one. The
   * copy is done in chunks of 2MB because if transferFrom is used without a
   * limit when copying a very large file, then an OOM may be thrown (depends on
   * the state of the RAM in the machine, as well as the OS used). Performance
   * measurements showed that chunk sizes larger than 2MB do not result in much
   * faster file copy, therefore we limit the size to be safe with different
   * file sizes and systems.
   */
  static void copy(FileChannel input, FileChannel output, long numBytes) throws IOException {
    long pos = output.position();
    long writeTo = numBytes + pos;
    while (pos < writeTo) {
      pos += output.transferFrom(input, pos, Math.min(CHANNEL_CHUNK_SIZE, writeTo - pos));
    }
    // transferFrom does not change the position of the channel. Need to change it manually
    output.position(pos);
  }

