  /** Helper method that reads CFS entries from an input stream */
  public static final Map<String,FileEntry> readEntries(IndexInput stream, Directory dir, String name) throws IOException {
    // read the first VInt. If it is negative, it's the version number
    // otherwise it's the count (pre-3.1 indexes)
    final int firstInt = stream.readVInt();
    if (firstInt == CompoundFileWriter.FORMAT_CURRENT) {
      IndexInput input = null;
      try {
        input = dir.openInput(IndexFileNames.segmentFileName(IndexFileNames.stripExtension(name), "",
            IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));
        final int readInt = input.readInt(); // unused right now
        assert readInt == CompoundFileWriter.ENTRY_FORMAT_CURRENT;
        final int numEntries = input.readVInt();
        final Map<String, FileEntry> mapping = new HashMap<String, CompoundFileDirectory.FileEntry>(
            numEntries);
        for (int i = 0; i < numEntries; i++) {
          final FileEntry fileEntry = new FileEntry();
          mapping.put(input.readString(), fileEntry);
          fileEntry.offset = input.readLong();
          fileEntry.length = input.readLong();
        }
        return mapping;
      } finally {
        IOUtils.closeSafely(true, input);
      }
    }
    
    // TODO remove once 3.x is not supported anymore
    return readLegacyEntries(stream, firstInt);
  }

