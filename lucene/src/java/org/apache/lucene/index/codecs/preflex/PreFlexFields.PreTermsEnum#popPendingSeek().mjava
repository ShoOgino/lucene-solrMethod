    private boolean popPendingSeek() throws IOException {
      if (DEBUG_SURROGATES) {
        System.out.println("  check pop newSuffix=" + newSuffixStart + " stack=" + getStack());
      }
      // if a .next() has advanced beyond the
      // after-surrogates range we had last seeked to, we
      // must seek back to the start and resume .next from
      // there.  this pops the pending seek off the stack.
      final Term t = termEnum.term();
      if (surrogateSeekUpto > 0) {
        final int seekPrefix = surrogateSeekPending[surrogateSeekUpto-1];
        if (DEBUG_SURROGATES) {
          System.out.println("    seekPrefix=" + seekPrefix);
        }
        if (newSuffixStart < seekPrefix) {
          assert pendingPrefix != null;
          assert pendingPrefix.length > seekPrefix;
          pendingPrefix[seekPrefix] = UnicodeUtil.UNI_SUR_HIGH_START;
          Term t2 = protoTerm.createTerm(new String(pendingPrefix, 0, 1+seekPrefix));
          if (DEBUG_SURROGATES) {
            System.out.println("    do pop; seek back to " + UnicodeUtil.toHexString(t2.text()));
          }
          getTermsDict().seekEnum(termEnum, t2);
          surrogateDidSeekBack[surrogateSeekUpto-1] = true;

          // +2 because we don't want to re-check the
          // surrogates we just seek'd back to
          newSuffixStart = seekPrefix + 2;
          return true;
        } else if (newSuffixStart == seekPrefix && surrogateDidSeekBack[surrogateSeekUpto-1] && t != null && t.field() == fieldInfo.name && t.text().charAt(seekPrefix) > UnicodeUtil.UNI_SUR_LOW_END) {
          assert pendingPrefix != null;
          assert pendingPrefix.length > seekPrefix;
          pendingPrefix[seekPrefix] = 0xffff;
          Term t2 = protoTerm.createTerm(new String(pendingPrefix, 0, 1+seekPrefix));
          if (DEBUG_SURROGATES) {
            System.out.println("    finish pop; seek fwd to " + UnicodeUtil.toHexString(t2.text()));
          }
          getTermsDict().seekEnum(termEnum, t2);
          if (DEBUG_SURROGATES) {
            System.out.println("    found term=" + (termEnum.term() == null ? null : UnicodeUtil.toHexString(termEnum.term().text())));
          }
          surrogateSeekUpto--;

          if (termEnum.term() == null || termEnum.term().field() != fieldInfo.name) {
            // force pop
            newSuffixStart = -1;
          } else {
            newSuffixStart = termEnum.newSuffixStart;
          }

          return true;
        }
      }

      return false;
    }

