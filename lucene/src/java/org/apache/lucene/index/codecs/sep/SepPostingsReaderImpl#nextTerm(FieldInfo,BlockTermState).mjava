  @Override
  public void nextTerm(FieldInfo fieldInfo, BlockTermState _termState) throws IOException {
    final SepTermState termState = (SepTermState) _termState;
    //System.out.println("SepR.nextTerm termCount=" + termState.termCount);
    //System.out.println("  docFreq=" + termState.docFreq);
    final boolean isFirstTerm = termState.termCount == 0;
    termState.docIndex.read(termState.bytesReader, isFirstTerm);
    //System.out.println("  docIndex=" + termState.docIndex);
    if (!fieldInfo.omitTermFreqAndPositions) {
      termState.freqIndex.read(termState.bytesReader, isFirstTerm);
      //System.out.println("  freqIndex=" + termState.freqIndex);
      termState.posIndex.read(termState.bytesReader, isFirstTerm);
      //System.out.println("  posIndex=" + termState.posIndex);
      if (fieldInfo.storePayloads) {
        if (isFirstTerm) {
          termState.payloadFP = termState.bytesReader.readVLong();
        } else {
          termState.payloadFP += termState.bytesReader.readVLong();
        }
        //System.out.println("  payloadFP=" + termState.payloadFP);
      }
    }
    if (termState.docFreq >= skipMinimum) {
      //System.out.println("   readSkip @ " + termState.bytesReader.pos);
      if (isFirstTerm) {
        termState.skipFP = termState.bytesReader.readVLong();
      } else {
        termState.skipFP += termState.bytesReader.readVLong();
      }
      //System.out.println("  skipFP=" + termState.skipFP);
    } else if (isFirstTerm) {
      termState.skipFP = 0;
    }
  }

