  @Override
  public void visitDocument(int n, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {
    in.seek(offsets.get(n));
    readLine();
    assert scratch.startsWith(NUM);
    int numFields = parseIntAt(NUM.length);
    
    for (int i = 0; i < numFields; i++) {
      readLine();
      assert scratch.startsWith(FIELD);
      int fieldNumber = parseIntAt(FIELD.length);
      FieldInfo fieldInfo = fieldInfos.fieldInfo(fieldNumber);
      readLine();
      assert scratch.startsWith(NAME);
      readLine();
      assert scratch.startsWith(TYPE);
      
      final BytesRef type;
      if (equalsAt(TYPE_STRING, scratch, TYPE.length)) {
        type = TYPE_STRING;
      } else if (equalsAt(TYPE_BINARY, scratch, TYPE.length)) {
        type = TYPE_BINARY;
      } else if (equalsAt(TYPE_INT, scratch, TYPE.length)) {
        type = TYPE_INT;
      } else if (equalsAt(TYPE_LONG, scratch, TYPE.length)) {
        type = TYPE_LONG;
      } else if (equalsAt(TYPE_FLOAT, scratch, TYPE.length)) {
        type = TYPE_FLOAT;
      } else if (equalsAt(TYPE_DOUBLE, scratch, TYPE.length)) {
        type = TYPE_DOUBLE;
      } else {
        throw new RuntimeException("unknown field type");
      }
      
      switch (visitor.needsField(fieldInfo)) {
        case YES:  
          readField(type, fieldInfo, visitor);
          break;
        case NO:   
          readLine();
          assert scratch.startsWith(VALUE);
          break;
        case STOP: return;
      }
    }
  }

