  @Override
  public void writeField(int fieldNumber, IndexableField field) throws IOException {
    write(FIELD);
    write(Integer.toString(fieldNumber));
    newLine();
    
    write(NAME);
    write(field.name());
    newLine();
    
    write(TYPE);
    if (field.numeric()) {
      switch (field.numericDataType()) {
        case INT:
          write(TYPE_INT);
          newLine();
          
          write(VALUE);
          write(Integer.toString(field.numericValue().intValue()));
          newLine();
          
          break;
        case LONG:
          write(TYPE_LONG);
          newLine();
          
          write(VALUE);
          write(Long.toString(field.numericValue().longValue()));
          newLine();
          
          break;
        case FLOAT:
          write(TYPE_FLOAT);
          newLine();
          
          write(VALUE);
          write(Float.toString(field.numericValue().floatValue()));
          newLine();
          
          break;
        case DOUBLE:
          write(TYPE_DOUBLE);
          newLine();
          
          write(VALUE);
          write(Double.toString(field.numericValue().doubleValue()));
          newLine();
          
          break;
        default:
          assert false : "Should never get here";
      }
    } else { 
      BytesRef bytes = field.binaryValue();
      if (bytes != null) {
        write(TYPE_BINARY);
        newLine();
        
        write(VALUE);
        write(bytes);
        newLine();
      } else {
        write(TYPE_STRING);
        newLine();
        
        write(VALUE);
        write(field.stringValue());
        newLine();
      }
    }
  }

