  void write(BytesRef text) throws IOException {
    int start = 0;
    int upto = text.offset;
    final int length = text.length;
    final byte[] bytes = text.bytes;

    final int limit = length < lastLength ? length : lastLength;
    while(start < limit) {
      if (bytes[upto] != lastBytes[start]) {
        break;
      }
      start++;
      upto++;
    }

    final int suffix = length - start;
    out.writeVInt(start);                       // prefix
    out.writeVInt(suffix);                      // suffix
    out.writeBytes(bytes, upto, suffix);
    if (lastBytes.length < length) {
      lastBytes = ArrayUtil.grow(lastBytes, length);
    }
    // TODO: is this copy really necessary?  I don't think
    // caller actually modifies these bytes, so we can save
    // by reference?
    System.arraycopy(bytes, upto, lastBytes, start, suffix);
    lastLength = length;
  }

