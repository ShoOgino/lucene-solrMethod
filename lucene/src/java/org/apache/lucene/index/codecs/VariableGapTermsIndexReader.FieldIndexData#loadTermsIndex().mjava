    public void loadTermsIndex() throws IOException {
      if (fst == null) {
        IndexInput clone = (IndexInput) in.clone();
        clone.seek(indexStart);
        fst = new FST<Long>(clone, fstOutputs);
        clone.close();

        /*
        final String dotFileName = segment + "_" + fieldInfo.name + ".dot";
        Writer w = new OutputStreamWriter(new FileOutputStream(dotFileName));
        Util.toDot(fst, w, false, false);
        System.out.println("FST INDEX: SAVED to " + dotFileName);
        w.close();
        */

        if (indexDivisor > 1) {
          // subsample
          final PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton(true);
          final Builder<Long> builder = new Builder<Long>(FST.INPUT_TYPE.BYTE1, 0, 0, true, outputs);
          final BytesRefFSTEnum<Long> fstEnum = new BytesRefFSTEnum<Long>(fst);
          BytesRefFSTEnum.InputOutput<Long> result;
          int count = indexDivisor;
          while((result = fstEnum.next()) != null) {
            if (count == indexDivisor) {
              builder.add(result.input, result.output);
              count = 0;
            }
            count++;
          }
          fst = builder.finish();
        }
      }
    }

