  /** Called when we are done adding docs to this term */
  @Override
  public void finishTerm(TermStats stats) throws IOException {
    // TODO: -- wasteful we are counting this in two places?
    assert stats.docFreq > 0;
    assert stats.docFreq == df;

    final IntIndexOutput.Index docIndexCopy = docOut.index();
    docIndexCopy.copyFrom(docIndex, false);

    final IntIndexOutput.Index freqIndexCopy;
    final IntIndexOutput.Index posIndexCopy;
    if (indexOptions != IndexOptions.DOCS_ONLY) {
      freqIndexCopy = freqOut.index();
      freqIndexCopy.copyFrom(freqIndex, false);
      if (indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {
        posIndexCopy = posOut.index();
        posIndexCopy.copyFrom(posIndex, false);
      } else {
        posIndexCopy = null;
      }
    } else {
      freqIndexCopy = null;
      posIndexCopy = null;
    }

    final long skipFP;
    if (df >= skipMinimum) {
      skipFP = skipOut.getFilePointer();
      //System.out.println("  skipFP=" + skipFP);
      skipListWriter.writeSkip(skipOut);
      //System.out.println("    numBytes=" + (skipOut.getFilePointer()-skipFP));
    } else {
      skipFP = -1;
    }

    lastDocID = 0;
    df = 0;

    pendingTerms.add(new PendingTerm(docIndexCopy,
                                     freqIndexCopy,
                                     posIndexCopy,
                                     payloadStart,
                                     skipFP));
  }

