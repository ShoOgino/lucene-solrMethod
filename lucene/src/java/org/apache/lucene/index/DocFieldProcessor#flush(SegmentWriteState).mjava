  @Override
  public void flush(SegmentWriteState state) throws IOException {

    Map<FieldInfo, DocFieldConsumerPerField> childFields = new HashMap<FieldInfo, DocFieldConsumerPerField>();
    Collection<DocFieldConsumerPerField> fields = fields();
    for (DocFieldConsumerPerField f : fields) {
      childFields.put(f.getFieldInfo(), f);
    }

    fieldsWriter.flush(state);
    consumer.flush(childFields, state);

    // Important to save after asking consumer to flush so
    // consumer can alter the FieldInfo* if necessary.  EG,
    // FreqProxTermsWriter does this with
    // FieldInfo.storePayload.
    FieldInfosWriter infosWriter = codec.fieldInfosFormat().getFieldInfosWriter();
    infosWriter.write(state.directory, state.segmentName, state.fieldInfos, IOContext.DEFAULT);
    for (DocValuesConsumerAndDocID consumers : docValues.values()) {
      consumers.docValuesConsumer.finish(state.numDocs);
    }
    // close perDocConsumer during flush to ensure all files are flushed due to PerCodec CFS
    IOUtils.close(perDocConsumers.values());
  }

