  public IndexDocValues docValues(String field) throws IOException {
    IndexDocValues result = docValues.get(field);
    if (result == null) {
      // Lazy init: first time this field is requested, we
      // create & add to docValues:
      final List<MultiIndexDocValues.DocValuesIndex> docValuesIndex = new ArrayList<MultiIndexDocValues.DocValuesIndex>();
      int docsUpto = 0;
      ValueType type = null;
      // Gather all sub-readers that share this field
      for (int i = 0; i < subs.length; i++) {
        IndexDocValues values = subs[i].docValues(field);
        final int start = subSlices[i].start;
        final int length = subSlices[i].length;
        if (values != null) {
          if (docsUpto != start) {
            type = values.type();
            docValuesIndex.add(new MultiIndexDocValues.DocValuesIndex(
                new MultiIndexDocValues.EmptyDocValues(start, type), docsUpto, start
                    - docsUpto));
          }
          docValuesIndex.add(new MultiIndexDocValues.DocValuesIndex(values, start,
              length));
          docsUpto = start + length;

        } else if (i + 1 == subs.length && !docValuesIndex.isEmpty()) {
          docValuesIndex.add(new MultiIndexDocValues.DocValuesIndex(
              new MultiIndexDocValues.EmptyDocValues(start, type), docsUpto, start
                  - docsUpto));
        }
      }
      if (docValuesIndex.isEmpty()) {
        return null;
      }
      result = new MultiIndexDocValues(
          docValuesIndex.toArray(DocValuesIndex.EMPTY_ARRAY));
      docValues.put(field, result);
    }
    return result;
  }

