  /**
   * Factory method to create a {@link Writer} instance for a given type. This
   * method returns default implementations for each of the different types
   * defined in the {@link Type} enumeration.
   * 
   * @param type
   *          the {@link Type} to create the {@link Writer} for
   * @param id
   *          the file name id used to create files within the writer.
   * @param directory
   *          the {@link Directory} to create the files from.
   * @param comp
   *          a {@link BytesRef} comparator used for {@link Bytes} variants. If
   *          <code>null</code>
   *          {@link BytesRef#getUTF8SortedAsUnicodeComparator()} is used as the
   *          default.
   * @param bytesUsed
   *          a byte-usage tracking reference
   * @return a new {@link Writer} instance for the given {@link Type}
   * @throws IOException
   */
  public static Writer create(Type type, String id, Directory directory,
      Comparator<BytesRef> comp, AtomicLong bytesUsed) throws IOException {
    if (comp == null) {
      comp = BytesRef.getUTF8SortedAsUnicodeComparator();
    }
    switch (type) {
    case PACKED_INTS:
      return Ints.getWriter(directory, id, true, bytesUsed);
    case SIMPLE_FLOAT_4BYTE:
      return Floats.getWriter(directory, id, 4, bytesUsed);
    case SIMPLE_FLOAT_8BYTE:
      return Floats.getWriter(directory, id, 8, bytesUsed);
    case BYTES_FIXED_STRAIGHT:
      return Bytes.getWriter(directory, id, Bytes.Mode.STRAIGHT, comp, true,
          bytesUsed);
    case BYTES_FIXED_DEREF:
      return Bytes.getWriter(directory, id, Bytes.Mode.DEREF, comp, true,
          bytesUsed);
    case BYTES_FIXED_SORTED:
      return Bytes.getWriter(directory, id, Bytes.Mode.SORTED, comp, true,
          bytesUsed);
    case BYTES_VAR_STRAIGHT:
      return Bytes.getWriter(directory, id, Bytes.Mode.STRAIGHT, comp, false,
          bytesUsed);
    case BYTES_VAR_DEREF:
      return Bytes.getWriter(directory, id, Bytes.Mode.DEREF, comp, false,
          bytesUsed);
    case BYTES_VAR_SORTED:
      return Bytes.getWriter(directory, id, Bytes.Mode.SORTED, comp, false,
          bytesUsed);
    default:
      throw new IllegalArgumentException("Unknown Values: " + type);
    }
  }

