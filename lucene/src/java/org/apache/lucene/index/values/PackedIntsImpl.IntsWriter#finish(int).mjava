    @Override
    public void finish(int docCount) throws IOException {
      try {
        if (!started) {
          minValue = maxValue = 0;
        }
        // TODO -- long can't work right since it's signed
        datOut.writeLong(minValue);
        // write a default value to recognize docs without a value for that
        // field
        final long defaultValue = ++maxValue - minValue;
        datOut.writeLong(defaultValue);
        PackedInts.Writer w = PackedInts.getWriter(datOut, docCount,
            PackedInts.bitsRequired(maxValue - minValue));
        final int firstDoc = defaultValues.nextSetBit(0);
        lastDocId++;
        if (firstDoc != -1) { 
          for (int i = 0; i < firstDoc; i++) {
            w.add(defaultValue); // fill with defaults until first bit set
          }

          for (int i = firstDoc; i < lastDocId;) {
            w.add(docToValue[i] - minValue);
            final int nextValue = defaultValues.nextSetBit(++i);
            for (; i < nextValue; i++) {
              w.add(defaultValue); // fill all gaps
            }
          }
        }
        for (int i = lastDocId; i < docCount; i++) {
          w.add(defaultValue);
        }
        w.finish();
      } finally {
        datOut.close();
        bytesUsed
            .addAndGet(-(RamUsageEstimator.NUM_BYTES_LONG * docToValue.length));
        docToValue = null;
      }

    }

