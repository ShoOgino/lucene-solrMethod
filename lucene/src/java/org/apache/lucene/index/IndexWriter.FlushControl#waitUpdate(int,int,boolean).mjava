    public synchronized boolean waitUpdate(int docInc, int delInc, boolean skipWait) {
      while(flushPending) {
        try {
          wait();
        } catch (InterruptedException ie) {
          throw new ThreadInterruptedException(ie);
        }
      }

      // skipWait is only used when a thread is BOTH adding
      // a doc and buffering a del term, and, the adding of
      // the doc already triggered a flush
      if (skipWait) {
        docCount += docInc;
        delCount += delInc;
        return false;
      }

      final int maxBufferedDocs = config.getMaxBufferedDocs();
      if (maxBufferedDocs != IndexWriterConfig.DISABLE_AUTO_FLUSH &&
          (docCount+docInc) >= maxBufferedDocs) {
        return setFlushPending("maxBufferedDocs", true);
      }
      docCount += docInc;

      final int maxBufferedDeleteTerms = config.getMaxBufferedDeleteTerms();
      if (maxBufferedDeleteTerms != IndexWriterConfig.DISABLE_AUTO_FLUSH &&
          (delCount+delInc) >= maxBufferedDeleteTerms) {
        flushDeletes = true;
        return setFlushPending("maxBufferedDeleteTerms", true);
      }
      delCount += delInc;

      return flushByRAMUsage("add delete/doc");
    }

