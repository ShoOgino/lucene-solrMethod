  public static Bits getDeletedDocs(IndexReader r) {
    Bits result;
    if (r.hasDeletions()) {

      final List<IndexReader> readers = new ArrayList<IndexReader>();
      final List<Integer> starts = new ArrayList<Integer>();

      try {
        final int maxDoc = new ReaderUtil.Gather(r) {
            @Override
            protected void add(int base, IndexReader r) throws IOException {
              // record all delDocs, even if they are null
              readers.add(r);
              starts.add(base);
            }
          }.run();
        starts.add(maxDoc);
      } catch (IOException ioe) {
        // should not happen
        throw new RuntimeException(ioe);
      }

      assert readers.size() > 0;
      if (readers.size() == 1) {
        // Only one actual sub reader -- optimize this case
        result = readers.get(0).getDeletedDocs();
      } else {
        int[] startsArray = new int[starts.size()];
        for(int i=0;i<startsArray.length;i++) {
          startsArray[i] = starts.get(i);
        }
        result = new MultiReaderBits(startsArray, readers.toArray(new IndexReader[readers.size()]));
      }

    } else {
      result = null;
    }

    return result;
  }

