  public static Bits getDeletedDocs(IndexReader r) {
    Bits result;
    if (r.hasDeletions()) {

      final List<Bits> delDocs = new ArrayList<Bits>();
      final List<Integer> starts = new ArrayList<Integer>();

      try {
        final int maxDoc = new ReaderUtil.Gather(r) {
            @Override
            protected void add(int base, IndexReader r) throws IOException {
              // record all delDocs, even if they are null
              delDocs.add(r.getDeletedDocs());
              starts.add(base);
            }
          }.run();
        starts.add(maxDoc);
      } catch (IOException ioe) {
        // should not happen
        throw new RuntimeException(ioe);
      }

      assert delDocs.size() > 0;
      if (delDocs.size() == 1) {
        // Only one actual sub reader -- optimize this case
        result = delDocs.get(0);
      } else {
        result = new MultiBits(delDocs, starts);
      }

    } else {
      result = null;
    }

    return result;
  }

