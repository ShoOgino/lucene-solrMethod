  DocValuesConsumer docValuesConsumer(DocValues.Type valueType, DocState docState, FieldInfo fieldInfo) 
      throws IOException {
    DocValuesConsumerAndDocID docValuesConsumerAndDocID = docValues.get(fieldInfo.name);
    if (docValuesConsumerAndDocID != null) {
      if (docState.docID == docValuesConsumerAndDocID.docID) {
        throw new IllegalArgumentException("DocValuesField \"" + fieldInfo.name + "\" appears more than once in this document (only one value is allowed, per field)");
      }
      assert docValuesConsumerAndDocID.docID < docState.docID;
      docValuesConsumerAndDocID.docID = docState.docID;
      return docValuesConsumerAndDocID.docValuesConsumer;
    }

    PerDocConsumer perDocConsumer = perDocConsumers.get(0);
    if (perDocConsumer == null) {
      PerDocWriteState perDocWriteState = docState.docWriter.newPerDocWriteState("");
      DocValuesFormat dvFormat = docState.docWriter.codec.docValuesFormat();
      perDocConsumer = dvFormat.docsConsumer(perDocWriteState);
      perDocConsumers.put(0, perDocConsumer);
    }
    DocValuesConsumer docValuesConsumer = perDocConsumer.addValuesField(valueType, fieldInfo);
    fieldInfo.setDocValuesType(valueType);

    docValuesConsumerAndDocID = new DocValuesConsumerAndDocID(docValuesConsumer);
    docValuesConsumerAndDocID.docID = docState.docID;
    docValues.put(fieldInfo.name, docValuesConsumerAndDocID);
    return docValuesConsumer;
  }

