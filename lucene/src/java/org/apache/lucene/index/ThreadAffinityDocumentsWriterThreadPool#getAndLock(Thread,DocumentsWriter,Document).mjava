  @Override
  public ThreadState getAndLock(Thread requestingThread, DocumentsWriter documentsWriter, Document doc) {
    ThreadState threadState = threadBindings.get(requestingThread);
    if (threadState != null) {
      if (threadState.tryLock()) {
        return threadState;
      }
    }
    ThreadState minThreadState = null;

    // Find the state that has minimum number of threads waiting
    // noocommit -- can't another thread lock the
    // minThreadState we just got?
    minThreadState = minContendedThreadState();

    if (minThreadState == null || minThreadState.hasQueuedThreads()) {
      ThreadState newState = newThreadState();
      if (newState != null) {
        minThreadState = newState;
        threadBindings.put(requestingThread, newState);
      } else if (minThreadState == null) {
        /*
         * no new threadState available we just take the minContented one
         * This must return a valid thread state since we accessed the 
         * synced context in newThreadState() above.
         */
        minThreadState = minContendedThreadState();
      }
    }
    assert minThreadState != null: "ThreadState is null";
    
    minThreadState.lock();
    return minThreadState;
  }

