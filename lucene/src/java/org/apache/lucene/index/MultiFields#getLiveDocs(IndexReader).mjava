  public static Bits getLiveDocs(IndexReader r) {
    Bits result;
    if (r.hasDeletions()) {

      final List<Bits> liveDocs = new ArrayList<Bits>();
      final List<Integer> starts = new ArrayList<Integer>();

      try {
        final int maxDoc = new ReaderUtil.Gather(r) {
            @Override
            protected void add(int base, IndexReader r) throws IOException {
              // record all liveDocs, even if they are null
              liveDocs.add(r.getLiveDocs());
              starts.add(base);
            }
          }.run();
        starts.add(maxDoc);
      } catch (IOException ioe) {
        // should not happen
        throw new RuntimeException(ioe);
      }

      assert liveDocs.size() > 0;
      if (liveDocs.size() == 1) {
        // Only one actual sub reader -- optimize this case
        result = liveDocs.get(0);
      } else {
        result = new MultiBits(liveDocs, starts, true);
      }

    } else {
      result = null;
    }

    return result;
  }

