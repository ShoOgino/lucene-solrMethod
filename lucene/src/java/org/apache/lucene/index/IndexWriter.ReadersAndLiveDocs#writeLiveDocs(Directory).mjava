    // Commit live docs to the directory (writes new
    // _X_N.del files); returns true if it wrote the file
    // and false if there were no new deletes to write:
    public synchronized boolean writeLiveDocs(Directory dir) throws IOException {
      //System.out.println("rld.writeLiveDocs seg=" + info + " pendingDelCount=" + pendingDeleteCount);
      if (pendingDeleteCount != 0) {
        // We have new deletes
        assert liveDocs.length() == info.docCount;

        // Save in case we need to rollback on failure:
        final SegmentInfo sav = (SegmentInfo) info.clone();
        info.advanceDelGen();

        // We can write directly to the actual name (vs to a
        // .tmp & renaming it) because the file is not live
        // until segments file is written:
        boolean success = false;
        try {
          info.getCodec().liveDocsFormat().writeLiveDocs(liveDocs, dir, info, IOContext.DEFAULT);
          success = true;
        } finally {
          if (!success) {
            info.reset(sav);
          }
        }
        assert (info.docCount - liveDocs.count()) == info.getDelCount() + pendingDeleteCount:
           "delete count mismatch during commit: seg=" + info + " info.delCount=" + info.getDelCount() + " vs MutableBits=" + (info.docCount-liveDocs.count() + " pendingDelCount=" + pendingDeleteCount);
        info.setDelCount(info.getDelCount() + pendingDeleteCount);
        pendingDeleteCount = 0;
        return true;
      } else {
        return false;
      }
    }

