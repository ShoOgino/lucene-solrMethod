  synchronized DocValuesConsumer docValuesConsumer(Directory dir,
      String segment, String name, ValuesAttribute attr, FieldInfo fieldInfo)
      throws IOException {
    DocValuesConsumer valuesConsumer;
    if ((valuesConsumer = docValues.get(name)) == null) {
      fieldInfo.setIndexValues(attr.type());

      if(fieldsConsumer == null) {
        /* nocommit -- this is a hack and only works since DocValuesCodec supports initializing the FieldsConsumer twice.
         * we need to find a way that allows us to obtain a FieldsConsumer per DocumentsWriter. Currently some codecs rely on 
         * the SegmentsWriteState passed in right at the moment when the segment is flushed (doccount etc) but we need the consumer earlier 
         * to support docvalues and later on stored fields too.  
         */
      SegmentWriteState state = docWriter.segWriteState();
      fieldsConsumer = state.codec.fieldsConsumer(state);
      }
      valuesConsumer = fieldsConsumer.addValuesField(fieldInfo);
      docValues.put(name, valuesConsumer);
    }
    return valuesConsumer;

  }

