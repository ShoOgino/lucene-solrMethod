  /**
   * Read a particular segmentFileName.  Note that this may
   * throw an IOException if a commit is in process.
   *
   * @param directory -- directory containing the segments file
   * @param segmentFileName -- segment file to load
   * @throws CorruptIndexException if the index is corrupt
   * @throws IOException if there is a low-level IO error
   */
  public final void read(Directory directory, String segmentFileName) throws CorruptIndexException, IOException {
    boolean success = false;

    // Clear any previous segments:
    this.clear();

    generation = generationFromSegmentsFileName(segmentFileName);

    lastGeneration = generation;

    // TODO: scary to have default impl reopen the file... but to make it a bit more flexible,
    // maybe we could use a plain indexinput here... could default impl rewind/wrap with checksumII,
    // and any checksumming is then up to implementation?
    ChecksumIndexInput input = null;
    try {
      input = new ChecksumIndexInput(directory.openInput(segmentFileName, IOContext.READ));
      final int format = input.readInt();
      setFormat(format);
    
      // check that it is a format we can understand
      if (format > DefaultSegmentInfosWriter.FORMAT_MINIMUM)
        throw new IndexFormatTooOldException(segmentFileName, format,
          DefaultSegmentInfosWriter.FORMAT_MINIMUM, DefaultSegmentInfosWriter.FORMAT_CURRENT);
      if (format < DefaultSegmentInfosWriter.FORMAT_CURRENT)
        throw new IndexFormatTooNewException(segmentFileName, format,
          DefaultSegmentInfosWriter.FORMAT_MINIMUM, DefaultSegmentInfosWriter.FORMAT_CURRENT);

      if (format <= DefaultSegmentInfosWriter.FORMAT_4_0) {
        codecFormat = Codec.forName(input.readString());
      } else {
        codecFormat = Codec.forName("Lucene3x");
      }
      SegmentInfosReader infosReader = codecFormat.segmentInfosFormat().getSegmentInfosReader();
      infosReader.read(directory, segmentFileName, input, this, IOContext.READ);
      final long checksumNow = input.getChecksum();
      final long checksumThen = input.readLong();
      if (checksumNow != checksumThen)
        throw new CorruptIndexException("checksum mismatch in segments file");
      success = true;
    }
    finally {
      if (input != null) {
        input.close();
      }
      if (!success) {
        // Clear any segment infos we had loaded so we
        // have a clean slate on retry:
        this.clear();
      }
    }
  }

