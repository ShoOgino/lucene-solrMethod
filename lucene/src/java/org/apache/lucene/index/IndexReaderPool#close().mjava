  /** Remove all our references to readers, and commits
   *  any pending changes. */
  synchronized void close() throws IOException {
    Iterator<Map.Entry<SegmentInfo,SegmentReader>> iter = readerMap.entrySet().iterator();
    while (iter.hasNext()) {
      
      Map.Entry<SegmentInfo,SegmentReader> ent = iter.next();

      SegmentReader sr = ent.getValue();
      if (sr.hasChanges) {
        assert writer.infoIsLive(sr.getSegmentInfo());
        sr.startCommit();
        boolean success = false;
        try {
          sr.doCommit(null);
          success = true;
        } finally {
          if (!success) {
            sr.rollbackCommit();
          }
        }
      }

      iter.remove();

      // NOTE: it is allowed that this decRef does not
      // actually close the SR; this can happen when a
      // near real-time reader is kept open after the
      // IndexWriter instance is closed
      sr.decRef();
    }
  }

