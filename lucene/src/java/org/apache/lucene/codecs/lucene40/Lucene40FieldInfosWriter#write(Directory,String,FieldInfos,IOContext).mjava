  @Override
  public void write(Directory directory, String segmentName, FieldInfos infos, IOContext context) throws IOException {
    final String fileName = IndexFileNames.segmentFileName(segmentName, "", FIELD_INFOS_EXTENSION);
    IndexOutput output = directory.createOutput(fileName, context);
    try {
      output.writeVInt(FORMAT_CURRENT);
      output.writeVInt(infos.size());
      for (FieldInfo fi : infos) {
        assert fi.indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS || !fi.storePayloads;
        byte bits = 0x0;
        if (fi.isIndexed) bits |= IS_INDEXED;
        if (fi.storeTermVector) bits |= STORE_TERMVECTOR;
        if (fi.omitNorms) bits |= OMIT_NORMS;
        if (fi.storePayloads) bits |= STORE_PAYLOADS;
        if (fi.indexOptions == IndexOptions.DOCS_ONLY) {
          bits |= OMIT_TERM_FREQ_AND_POSITIONS;
        } else if (fi.indexOptions == IndexOptions.DOCS_AND_FREQS) {
          bits |= OMIT_POSITIONS;
        }
        output.writeString(fi.name);
        output.writeInt(fi.number);
        output.writeByte(bits);

        final byte b;

        if (!fi.hasDocValues()) {
          b = 0;
        } else {
          switch(fi.getDocValuesType()) {
          case VAR_INTS:
            b = 1;
            break;
          case FLOAT_32:
            b = 2;
            break;
          case FLOAT_64:
            b = 3;
            break;
          case BYTES_FIXED_STRAIGHT:
            b = 4;
            break;
          case BYTES_FIXED_DEREF:
            b = 5;
            break;
          case BYTES_VAR_STRAIGHT:
            b = 6;
            break;
          case BYTES_VAR_DEREF:
            b = 7;
            break;
          case FIXED_INTS_16:
            b = 8;
            break;
          case FIXED_INTS_32:
            b = 9;
            break;
          case FIXED_INTS_64:
            b = 10;
            break;
          case FIXED_INTS_8:
            b = 11;
            break;
          case BYTES_FIXED_SORTED:
            b = 12;
            break;
          case BYTES_VAR_SORTED:
            b = 13;
            break;
          default:
            throw new IllegalStateException("unhandled indexValues type " + fi.getDocValuesType());
          }
        }
        output.writeByte(b);
      }
    } finally {
      output.close();
    }
  }

