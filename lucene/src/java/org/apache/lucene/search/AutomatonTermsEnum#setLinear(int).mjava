  /**
   * Sets the enum to operate in linear fashion, as we have found
   * a looping transition at position
   */
  private void setLinear(int position) {
    int state = runAutomaton.getInitialState();
    char maxInterval = 0xffff;
    for (int i = 0; i < position; i++)
      state = runAutomaton.step(state, utf16.result[i]);
    for (int i = 0; i < allTransitions[state].length; i++) {
      Transition t = allTransitions[state][i];
      if (t.getMin() <= utf16.result[position] && utf16.result[position] <= t.getMax()) {
        maxInterval = t.getMax();
        break;
      }
    }
    // 0xffff terms don't get the optimization... not worth the trouble.
    if (maxInterval < 0xffff)
      maxInterval++;
    int length = position + 1; /* position + maxTransition */
    if (linearUpperBoundUTF16.result.length < length)
      linearUpperBoundUTF16.result = new char[length];
    System.arraycopy(utf16.result, 0, linearUpperBoundUTF16.result, 0, position);
    linearUpperBoundUTF16.result[position] = maxInterval;
    linearUpperBoundUTF16.setLength(length);
    UnicodeUtil.nextValidUTF16String(linearUpperBoundUTF16);
    UnicodeUtil.UTF16toUTF8(linearUpperBoundUTF16.result, 0, length, linearUpperBound);
  }

