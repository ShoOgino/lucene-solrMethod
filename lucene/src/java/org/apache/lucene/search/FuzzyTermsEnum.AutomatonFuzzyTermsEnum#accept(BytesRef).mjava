    /** finds the smallest Lev(n) DFA that accepts the term. */
    @Override
    protected AcceptStatus accept(BytesRef term) {    
      int ed = matchers.length - 1;
      
      if (matches(term, ed)) { // we match the outer dfa
        // now compute exact edit distance
        while (ed > 0) {
          if (matches(term, ed - 1)) {
            ed--;
          } else {
            break;
          }
        }
        
        // scale to a boost and return (if similarity > minSimilarity)
        if (ed == 0) { // exact match
          boostAtt.setBoost(1.0F);
          return AcceptStatus.YES_AND_SEEK;
        } else {
          final int codePointCount = UnicodeUtil.codePointCount(term);
          final float similarity = 1.0f - ((float) ed / (float) 
              (Math.min(codePointCount, termLength)));
          if (similarity > minSimilarity) {
            boostAtt.setBoost((similarity - minSimilarity) * scale_factor);
            return AcceptStatus.YES_AND_SEEK;
          } else {
            return AcceptStatus.NO_AND_SEEK;
          }
        }
      } else {
        return AcceptStatus.NO_AND_SEEK;
      }
    }

