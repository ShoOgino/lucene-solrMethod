    @Override
    protected Object createValue(IndexReader reader, Entry entryKey)
        throws IOException {
      String field = StringHelper.intern(entryKey.field);
      final int[] retArray = new int[reader.maxDoc()];
      String[] mterms = new String[reader.maxDoc()+1];

      //System.out.println("FC: getStringIndex field=" + field);
      Terms terms = MultiFields.getTerms(reader, field);

      int t = 0;  // current term number

      // an entry for documents that have no terms in this field
      // should a document with no terms be at top or bottom?
      // this puts them at the top - if it is changed, FieldDocSortedHitQueue
      // needs to change as well.
      mterms[t++] = null;

      if (terms != null) {
        final TermsEnum termsEnum = terms.iterator();
        final Bits delDocs = MultiFields.getDeletedDocs(reader);
        DocsEnum docs = null;
        while(true) {
          final BytesRef term = termsEnum.next();
          if (term == null) {
            break;
          }

          // store term text
          mterms[t] = term.utf8ToString();
          //System.out.println("FC:  ord=" + t + " term=" + term.toBytesString());

          docs = termsEnum.docs(delDocs, docs);
          while (true) {
            final int docID = docs.nextDoc();
            if (docID == DocsEnum.NO_MORE_DOCS) {
              break;
            }
            //System.out.println("FC:    docID=" + docID);
            retArray[docID] = t;
          }
          t++;
        }
      }

      if (t == 0) {
        // if there are no terms, make the term array
        // have a single null entry
        mterms = new String[1];
      } else if (t < mterms.length) {
        // if there are less terms than documents,
        // trim off the dead array space
        String[] newTerms = new String[t];
        System.arraycopy (mterms, 0, newTerms, 0, t);
        mterms = newTerms;
      }

      StringIndex value = new StringIndex (retArray, mterms);
      //System.out.println("FC: done\n");
      return value;
    }

