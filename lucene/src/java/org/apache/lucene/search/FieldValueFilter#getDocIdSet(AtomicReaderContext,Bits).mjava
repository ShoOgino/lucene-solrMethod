  @Override
  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs)
      throws IOException {
    final Bits docsWithField = FieldCache.DEFAULT.getDocsWithField(
        context.reader, field);
    if (negate) {
      if (docsWithField instanceof MatchAllBits) {
        return null;
      }
      final int maxDoc = context.reader.maxDoc();
      return new FieldCacheDocIdSet(maxDoc, acceptDocs) {
        @Override
        final boolean matchDoc(int doc) {
          if (doc >= maxDoc) {
            // TODO: this makes no sense we should check this on the caller level
            throw new ArrayIndexOutOfBoundsException("doc: "+doc + " maxDoc: " + maxDoc);
          }
          return !docsWithField.get(doc);
        }
      };
    } else {
      if (docsWithField instanceof MatchNoBits) {
        return null;
      }
      if (docsWithField instanceof DocIdSet) {
        // UweSays: this is always the case for our current impl - but who knows
        // :-)
        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);
      }
      final int maxDoc = context.reader.maxDoc();
      return new FieldCacheDocIdSet(maxDoc, acceptDocs) {
        @Override
        final boolean matchDoc(int doc) {
          if (doc >= maxDoc) {
            // TODO: this makes no sense we should check this on the caller level
            throw new ArrayIndexOutOfBoundsException("doc: "+doc + " maxDoc: " + maxDoc);
          }
          return docsWithField.get(doc);
        }
      };
    }
  }

