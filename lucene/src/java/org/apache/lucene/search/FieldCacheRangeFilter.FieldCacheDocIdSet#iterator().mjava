    @Override
    public DocIdSetIterator iterator() throws IOException {
      if (acceptDocs == null) {
        // Specialization optimization disregard deletions
        return new DocIdSetIterator() {
          private int doc = -1;
          @Override
            public int docID() {
            return doc;
          }
        
          @Override
          public int nextDoc() {
            try {
              do {
                doc++;
              } while (!matchDoc(doc));
              return doc;
            } catch (ArrayIndexOutOfBoundsException e) {
              return doc = NO_MORE_DOCS;
            }
          }
        
          @Override
          public int advance(int target) {
            try {
              doc = target;
              while (!matchDoc(doc)) {
                doc++;
              }
              return doc;
            } catch (ArrayIndexOutOfBoundsException e) {
              return doc = NO_MORE_DOCS;
            }
          }
        };
      } else {
        // Must consult acceptDocs

        // a DocIdSetIterator generating docIds by
        // incrementing a variable & checking acceptDocs -
        return new DocIdSetIterator() {
          private int doc = -1;
          @Override
            public int docID() {
            return doc;
          }
        
          @Override
          public int nextDoc() {
            do {
              doc++;
              if (doc >= maxDoc) {
                return doc = NO_MORE_DOCS;
              }
            } while (!acceptDocs.get(doc) || !matchDoc(doc));
            return doc;
          }
        
          @Override
          public int advance(int target) {
            for(doc=target;doc<maxDoc;doc++) {
              if (acceptDocs.get(doc) && matchDoc(doc)) {
                return doc;
              }
            }
            return doc = NO_MORE_DOCS;
          }
        };
      }
    }

