  /**
   * Implementing classes are required to return whether the position at the target is someplace that
   * can be skipped to.  For instance, the {@link org.apache.lucene.search.spans.SpanFirstQuery} returns
   * false if the target position is beyond the maximum position allowed or if {@link Spans#next()} is true.
   * <p/>
   * Note, this method is only called if the underlying match {@link org.apache.lucene.search.spans.SpanQuery} can
   * skip to the target.
   * <p/>
   * It is safe to assume that the passed in {@link org.apache.lucene.search.spans.Spans} object for the underlying {@link org.apache.lucene.search.spans.SpanQuery} is
   * positioned at the target.
   * <p/>
   * The default implementation is to return true if either {@link #acceptPosition(Spans)} or {@link org.apache.lucene.search.spans.Spans#next()} is true for the
   * passed in instance of Spans.
   *<p/>
   * @param spans The {@link org.apache.lucene.search.spans.Spans} to check
   * @return true if the instance can skip to this position
   *
   * @see Spans#skipTo(int)
   * @throws java.io.IOException if there is a low-level IO error
   */
  protected boolean acceptSkipTo(Spans spans) throws IOException{
    return acceptPosition(spans) || spans.next();
  }

