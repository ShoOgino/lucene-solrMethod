  @Override
  public DocIdSet getDocIdSet(AtomicReaderContext context, final Bits acceptDocs) throws IOException {
    final AtomicReader reader = context.reader();

    // Only cache if incoming acceptDocs is == live docs;
    // if Lucene passes in more interesting acceptDocs in
    // the future (@UweSays: it already does when you chain FilteredQuery) we don't want to over-cache:
    final Bits liveDocs = reader.getLiveDocs();
    final boolean doCacheAcceptDocs = (recacheDeletes && acceptDocs == liveDocs);

    final Object key;
    final Bits cacheAcceptDocs;
    if (doCacheAcceptDocs) {
      assert acceptDocs == liveDocs;
      key = reader.getCombinedCoreAndDeletesKey();
      cacheAcceptDocs = acceptDocs;
    } else {
      key = reader.getCoreCacheKey();
      cacheAcceptDocs = null;
    }

    DocIdSet docIdSet = cache.get(key);
    if (docIdSet != null) {
      hitCount++;
    } else {
      missCount++;
      docIdSet = docIdSetToCache(filter.getDocIdSet(context, cacheAcceptDocs), reader);
      cache.put(key, docIdSet);
    }

    if (doCacheAcceptDocs) {
      return docIdSet;
    } else {
      return BitsFilteredDocIdSet.wrap(docIdSet, acceptDocs);
    }
  }

