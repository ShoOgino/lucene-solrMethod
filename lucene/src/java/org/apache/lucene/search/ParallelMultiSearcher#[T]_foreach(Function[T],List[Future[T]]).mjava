  /*
   * apply the function to each element of the list. This method encapsulates the logic how 
   * to wait for concurrently executed searchables.  
   */
  private <T> void foreach(Function<T> func, List<Future<T>> list) throws IOException{
    for (Future<T> future : list) {
      try{
        func.apply(future.get());
      } catch (ExecutionException e) {
        final Throwable throwable = e.getCause();
        if (throwable instanceof IOException)
          throw (IOException) e.getCause();
        throw new RuntimeException(throwable);
      } catch (InterruptedException ie) {
        throw new ThreadInterruptedException(ie);
      }
    }
  }

