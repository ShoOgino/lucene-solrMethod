  /**
   * Attempts to backtrack thru the string after encountering a dead end
   * at some given position. Returns false if no more possible strings 
   * can match.
   * 
   * @param position current position in the input String
   * @return true if more possible solutions exist for the DFA
   */
  private boolean backtrack(int position) {
    while (position > 0) {
      char nextChar = utf16.result[position - 1];
      // if a character is U+FFFF its a dead-end too,
      // because there is no higher character in UTF-16 sort order.
      if (nextChar != '\uFFFF') {
        nextChar++;
        utf16.result[position - 1] = nextChar;
        utf16.setLength(position);
        return true;
      }
      position--;
    }
    return false; /* all solutions exhausted */
  }

