  @Override
  public DocIdSet getDocIdSet(final AtomicReaderContext context) throws IOException {
    // get a private context that is used to rewrite, createWeight and score eventually
    assert context.reader.getTopReaderContext().isAtomic;
    final AtomicReaderContext privateContext = (AtomicReaderContext) context.reader.getTopReaderContext();
    final Weight weight = new IndexSearcher(privateContext).createNormalizedWeight(query);
    return new DocIdSet() {
      @Override
      public DocIdSetIterator iterator() throws IOException {
        return weight.scorer(privateContext, true, false, privateContext.reader.getLiveDocs());
      }
      @Override
      public boolean isCacheable() { return false; }
    };
  }

