  public static void nextValidUTF16String(UTF16Result s) {
    final int size = s.length;
    for (int i = 0; i < size; i++) {
      char ch = s.result[i];
      if (ch >= UnicodeUtil.UNI_SUR_HIGH_START
          && ch <= UnicodeUtil.UNI_SUR_HIGH_END) {
        if (i < size - 1) {
          i++;
          char nextCH = s.result[i];
          if (nextCH >= UnicodeUtil.UNI_SUR_LOW_START
              && nextCH <= UnicodeUtil.UNI_SUR_LOW_END) {
            // Valid surrogate pair
          } else
          // Unmatched high surrogate
            if (nextCH < UnicodeUtil.UNI_SUR_LOW_START) { // SMP not enumerated
              s.setLength(i + 1);
              s.result[i] = (char) UnicodeUtil.UNI_SUR_LOW_START;             
              return;
            } else { // SMP already enumerated
              if (s.result[i - 1] == UnicodeUtil.UNI_SUR_HIGH_END) {
                s.result[i - 1] = (char) (UnicodeUtil.UNI_SUR_LOW_END + 1);
                s.setLength(i);               
              } else {
                s.result[i - 1]++;
                s.result[i] = (char) UnicodeUtil.UNI_SUR_LOW_START;
                s.setLength(i + 1);
              }            
              return;
            }
        } else {
        // Unmatched high surrogate in final position, SMP not yet enumerated
          s.setLength(i + 2);
          s.result[i + 1] = (char) UnicodeUtil.UNI_SUR_LOW_START;
          return;
        }
      } else if (ch >= UnicodeUtil.UNI_SUR_LOW_START
          && ch <= UnicodeUtil.UNI_SUR_LOW_END) {
      // Unmatched low surrogate, SMP already enumerated
        s.setLength(i + 1);
        s.result[i] = (char) (UnicodeUtil.UNI_SUR_LOW_END + 1);
        return;
      }
    }
  }

