  public int add(Builder.UnCompiledNode<T> node) throws IOException {
    // System.out.println("hash: add count=" + count + " vs " + table.length);
    final int h = hash(node);
    int h2 = h;
    int c = 1;
    while(true) {
      final int pos = h2 & mask;
      final int v = table[pos];
      if (v == 0) {
        // freeze & add
        final int address = fst.addNode(node);
        //System.out.println("  now freeze addr=" + address);
        assert hash(address) == h : "frozenHash=" + hash(address) + " vs h=" + h;
        count++;
        table[pos] = address;
        if (table.length < 2*count) {
          rehash();
        }
        return address;
      } else if (nodesEqual(node, v)) {
        // same node is already here
        return v;
      }

      // quadratic probe
      h2 = h+(c + c*c)/2;
      c++;
      conf++;
    }
  }

