  /** Looks up the output for this input, or null if the
   *  input is not accepted. FST must be
   *  INPUT_TYPE.BYTE4. */
  public T get(IntsRef input) throws IOException {
    assert inputType == INPUT_TYPE.BYTE4;

    if (input.length == 0) {
      return getEmptyOutput();
    }

    // TODO: would be nice not to alloc this on every lookup
    final FST.Arc<T> arc = new FST.Arc<T>();
    int node = getStartNode();
    T output = NO_OUTPUT;
    for(int i=0;i<input.length;i++) {
      if (!hasArcs(node)) {
        // hit end of FST before input end
        return null;
      }

      if (findArc(node, input.ints[input.offset + i], arc) != null) {
        node = arc.target;
        if (arc.output != NO_OUTPUT) {
          output = outputs.add(output, arc.output);
        }
      } else {
        return null;
      }
    }

    if (!arc.isFinal()) {
      // hit input's end before end node
      return null;
    }

    if (arc.nextFinalOutput != NO_OUTPUT) {
      output = outputs.add(output, arc.nextFinalOutput);
    }

    return output;
  }

