  /** Returns a {@link NumericTokenStream} for indexing the numeric value. */
  public TokenStream tokenStream(Analyzer analyzer) {
    if (!type.indexed()) return null;
    if (numericTS == null) {
      // lazy init the TokenStream as it is heavy to instantiate
      // (attributes,...),
      // if not needed (stored field loading)
      numericTS = new NumericTokenStream(precisionStep);
      // initialize value in TokenStream
      if (fieldsData != null) {
        assert dataType != null;
        final Number val = (Number) fieldsData;
        switch (dataType) {
          case INT:
            numericTS.setIntValue(val.intValue());
            break;
          case LONG:
            numericTS.setLongValue(val.longValue());
            break;
          case FLOAT:
            numericTS.setFloatValue(val.floatValue());
            break;
          case DOUBLE:
            numericTS.setDoubleValue(val.doubleValue());
            break;
          default:
            assert false : "Should never get here";
        }
      }
    }
    return numericTS;
  }

