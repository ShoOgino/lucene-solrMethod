  /**
   * Returns an array of {@link Field}s with the given name.
   * This method returns an empty array when there are no
   * matching fields.  It never returns null.
   * Do not use this method with lazy loaded fields or {@link NumericField}.
   *
   * @param name the name of the field
   * @return a <code>Field[]</code> array
   * @deprecated use {@link #getFieldable} instead and cast depending on
   * data type.
   * @throws ClassCastException if you try to retrieve a numerical or
   * lazy loaded field.
   */
   @Deprecated
   public final Field[] getFields(String name) {
     List<Field> result = new ArrayList<Field>();
     for (Fieldable field : fields) {
       if (field.name().equals(name)) {
         result.add((Field) field);
       }
     }

     if (result.size() == 0)
       return NO_FIELDS;

     return result.toArray(new Field[result.size()]);
   }

