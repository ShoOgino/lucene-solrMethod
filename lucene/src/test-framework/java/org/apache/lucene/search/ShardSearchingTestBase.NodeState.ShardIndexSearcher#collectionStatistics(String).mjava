      @Override
      public CollectionStatistics collectionStatistics(String field) throws IOException {
        // TODO: we could compute this on init and cache,
        // since we are re-inited whenever any nodes have a
        // new reader
        int docCount = 0;
        long sumTotalTermFreq = 0;
        long sumDocFreq = 0;
        int maxDoc = 0;

        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {
          final FieldAndShardVersion key = new FieldAndShardVersion(nodeID, nodeVersions[nodeID], field);
          final CollectionStatistics nodeStats;
          if (nodeID == myNodeID) {
            nodeStats = super.collectionStatistics(field);
          } else {
            nodeStats = collectionStatsCache.get(key);
          }
          if (nodeStats == null) {
            System.out.println("coll stats myNodeID=" + myNodeID + ": " + collectionStatsCache.keySet());
          }
          // Collection stats are pre-shared on reopen, so,
          // we better not have a cache miss:
          assert nodeStats != null: "myNodeID=" + myNodeID + " nodeID=" + nodeID + " version=" + nodeVersions[nodeID] + " field=" + field;
          docCount += nodeStats.docCount();
          sumTotalTermFreq += nodeStats.sumTotalTermFreq();
          sumDocFreq += nodeStats.sumDocFreq();
          maxDoc += nodeStats.maxDoc();
        }

        return new CollectionStatistics(field, maxDoc, docCount, sumTotalTermFreq, sumDocFreq);
      }

