      @Override
      public TermStatistics termStatistics(Term term, TermContext context) throws IOException {
        assert term != null;
        long docFreq = 0;
        long totalTermFreq = 0;
        for(int nodeID=0;nodeID<nodeVersions.length;nodeID++) {

          final TermStatistics subStats;
          if (nodeID == myNodeID) {
            subStats = super.termStatistics(term, context);
          } else {
            final TermAndShardVersion key = new TermAndShardVersion(nodeID, nodeVersions[nodeID], term);
            subStats = termStatsCache.get(key);
            // We pre-cached during rewrite so all terms
            // better be here...
            assert subStats != null;
          }
        
          long nodeDocFreq = subStats.docFreq();
          if (docFreq >= 0 && nodeDocFreq >= 0) {
            docFreq += nodeDocFreq;
          } else {
            docFreq = -1;
          }
          
          long nodeTotalTermFreq = subStats.totalTermFreq();
          if (totalTermFreq >= 0 && nodeTotalTermFreq >= 0) {
            totalTermFreq += nodeTotalTermFreq;
          } else {
            totalTermFreq = -1;
          }
        }

        return new TermStatistics(term.bytes(), docFreq, totalTermFreq);
      }

