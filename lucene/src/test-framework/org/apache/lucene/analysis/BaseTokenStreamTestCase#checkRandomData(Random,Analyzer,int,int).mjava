  public static void checkRandomData(Random random, Analyzer a, int iterations, int maxWordLength) throws IOException {
    for (int i = 0; i < iterations; i++) {
      String text;
      switch(_TestUtil.nextInt(random, 0, 3)) {
        case 0: 
          text = _TestUtil.randomSimpleString(random);
          break;
        case 1:
          text = _TestUtil.randomRealisticUnicodeString(random, maxWordLength);
          break;
        default:
          text = _TestUtil.randomUnicodeString(random, maxWordLength);
      }
      
      TokenStream ts = a.reusableTokenStream("dummy", new StringReader(text));
      assertTrue("has no CharTermAttribute", ts.hasAttribute(CharTermAttribute.class));
      CharTermAttribute termAtt = ts.getAttribute(CharTermAttribute.class);
      List<String> tokens = new ArrayList<String>();
      ts.reset();
      while (ts.incrementToken()) {
        tokens.add(termAtt.toString());
        // TODO: we could collect offsets etc here for better checking that reset() really works.
      }
      ts.end();
      ts.close();
      // verify reusing is "reproducable" and also get the normal tokenstream sanity checks
      if (!tokens.isEmpty())
        assertAnalyzesToReuse(a, text, tokens.toArray(new String[tokens.size()]));
    }
  }

