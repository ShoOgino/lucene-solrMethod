  public void testNoTermsIndex() throws Exception {
    // Some Codecs don't honor the ReaderTermsIndexDivisor, so skip the test if
    // they're picked.
    HashSet<String> illegalCodecs = new HashSet<String>();
    illegalCodecs.add("PreFlex");
    illegalCodecs.add("SimpleText");

    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT,
        new MockAnalyzer()).setReaderTermsIndexDivisor(-1);
    // Don't proceed if picked Codec is in the list of illegal ones.
    if (illegalCodecs.contains(conf.getCodecProvider().getFieldCodec("f"))) return;

    Directory dir = newDirectory();
    IndexWriter w = new IndexWriter(dir, conf);
    Document doc = new Document();
    doc.add(new Field("f", "val", Store.NO, Index.ANALYZED));
    w.addDocument(doc);
    IndexReader r = IndexReader.open(w, true).getSequentialSubReaders()[0];
    try {
      r.termDocsEnum(null, "f", new BytesRef("val"));
      fail("should have failed to seek since terms index was not loaded. Codec used " + conf.getCodecProvider().getFieldCodec("f"));
    } catch (IllegalStateException e) {
      // expected - we didn't load the term index
    } finally {
      r.close();
      w.close();
      dir.close();
    }
  }

