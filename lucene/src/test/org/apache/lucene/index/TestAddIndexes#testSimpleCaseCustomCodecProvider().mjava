  public void testSimpleCaseCustomCodecProvider() throws IOException {
    // main directory
    Directory dir = newDirectory();
    // two auxiliary directories
    Directory aux = newDirectory();
    Directory aux2 = newDirectory();
    CodecProvider provider = new MockCodecProvider();
    IndexWriter writer = null;

    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,
        new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setCodecProvider(
        provider));
    // add 100 documents
    addDocs3(writer, 100);
    assertEquals(100, writer.maxDoc());
    writer.commit();
    writer.close();
    _TestUtil.checkIndex(dir, provider);

    writer = newWriter(aux, newIndexWriterConfig(TEST_VERSION_CURRENT,
        new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setCodecProvider(
        provider));
    ((LogMergePolicy) writer.getConfig().getMergePolicy())
        .setUseCompoundFile(false); // use one without a compound file
    ((LogMergePolicy) writer.getConfig().getMergePolicy())
        .setUseCompoundDocStore(false); // use one without a compound file
    // add 40 documents in separate files
    addDocs(writer, 40);
    assertEquals(40, writer.maxDoc());
    writer.commit();
    writer.close();

    writer = newWriter(aux2, newIndexWriterConfig(TEST_VERSION_CURRENT,
        new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setCodecProvider(
        provider));
    // add 40 documents in compound files
    addDocs2(writer, 50);
    assertEquals(50, writer.maxDoc());
    writer.commit();
    writer.close();

    // test doc count before segments are merged
    writer = newWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT,
        new MockAnalyzer()).setOpenMode(OpenMode.APPEND).setCodecProvider(
        provider));
    assertEquals(100, writer.maxDoc());
    writer.addIndexes(new Directory[] { aux, aux2 });
    assertEquals(190, writer.maxDoc());
    writer.close();
    _TestUtil.checkIndex(dir, provider);

    dir.close();
    aux.close();
    aux2.close();
  }

