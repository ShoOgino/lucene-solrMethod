  // LUCENE-3143
  public void testInvalidFilesToCreateCompound() throws Exception {
    Directory dir = newDirectory();
    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));
    IndexWriter w = new IndexWriter(dir, iwc);
    
    // Create an index w/ .del file
    w.addDocument(new Document());
    Document doc = new Document();
    doc.add(new Field("c", "test", Store.NO, Index.ANALYZED));
    w.addDocument(doc);
    w.commit();
    w.deleteDocuments(new Term("c", "test"));
    w.close();
    
    // Assert that SM fails if .del exists
    SegmentMerger sm = new SegmentMerger(dir, 1, "a", null, null, null);
    try {
      sm.createCompoundFile("b1", w.segmentInfos.info(0));
      fail("should not have been able to create a .cfs with .del and .s* files");
    } catch (AssertionError e) {
      // expected
    }
    
    // Create an index w/ .s*
    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));
    doc = new Document();
    doc.add(new Field("c", "test", Store.NO, Index.ANALYZED));
    w.addDocument(doc);
    w.close();
    IndexReader r = IndexReader.open(dir, false);
    r.setNorm(0, "c", (byte) 1);
    r.close();
    
    // Assert that SM fails if .s* exists
    try {
      sm.createCompoundFile("b2", w.segmentInfos.info(0));
      fail("should not have been able to create a .cfs with .del and .s* files");
    } catch (AssertionError e) {
      // expected
    }

    dir.close();
  }

