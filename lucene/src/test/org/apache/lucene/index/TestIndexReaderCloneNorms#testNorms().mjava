  /**
   * Test that norms values are preserved as the index is maintained. Including
   * separate norms. Including merging indexes with seprate norms. Including
   * optimize.
   */
  public void testNorms() throws IOException {
    // test with a single index: index1
    File indexDir1 = new File(TEMP_DIR, "lucenetestindex1");
    Directory dir1 = FSDirectory.open(indexDir1);
    IndexWriter.unlock(dir1);

    norms = new ArrayList<Float>();
    modifiedNorms = new ArrayList<Float>();

    createIndex(random, dir1);
    doTestNorms(random, dir1);

    // test with a single index: index2
    ArrayList<Float> norms1 = norms;
    ArrayList<Float> modifiedNorms1 = modifiedNorms;
    int numDocNorms1 = numDocNorms;

    norms = new ArrayList<Float>();
    modifiedNorms = new ArrayList<Float>();
    numDocNorms = 0;

    File indexDir2 = new File(TEMP_DIR, "lucenetestindex2");
    Directory dir2 = FSDirectory.open(indexDir2);

    createIndex(random, dir2);
    doTestNorms(random, dir2);

    // add index1 and index2 to a third index: index3
    File indexDir3 = new File(TEMP_DIR, "lucenetestindex3");
    Directory dir3 = FSDirectory.open(indexDir3);

    createIndex(random, dir3);
    IndexWriter iw = new IndexWriter(
        dir3,
        newIndexWriterConfig(TEST_VERSION_CURRENT, anlzr).
            setOpenMode(OpenMode.APPEND).
            setMaxBufferedDocs(5).
            setMergePolicy(newLogMergePolicy(3))
    );
    iw.addIndexes(dir1, dir2);
    iw.optimize();
    iw.close();

    norms1.addAll(norms);
    norms = norms1;
    modifiedNorms1.addAll(modifiedNorms);
    modifiedNorms = modifiedNorms1;
    numDocNorms += numDocNorms1;

    // test with index3
    verifyIndex(dir3);
    doTestNorms(random, dir3);

    // now with optimize
    iw = new IndexWriter(
        dir3,
        newIndexWriterConfig(TEST_VERSION_CURRENT, anlzr).
            setOpenMode(OpenMode.APPEND).
            setMaxBufferedDocs(5).
            setMergePolicy(newLogMergePolicy(3))
    );
    iw.optimize();
    iw.close();
    verifyIndex(dir3);

    dir1.close();
    dir2.close();
    dir3.close();
  }

