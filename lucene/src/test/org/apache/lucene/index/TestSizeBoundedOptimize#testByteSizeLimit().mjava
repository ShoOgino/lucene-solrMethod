  public void testByteSizeLimit() throws Exception {
    // tests that the max merge size constraint is applied during optimize.
    Directory dir = new RAMDirectory();

    // Prepare an index w/ several small segments and a large one.
    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, null);
    // prevent any merges from happening.
    conf.setMergePolicy(NoMergePolicy.COMPOUND_FILES);
    IndexWriter writer = new IndexWriter(dir, conf);
    final int numSegments = 15;
    for (int i = 0; i < numSegments; i++) {
      int numDocs = i == 7 ? 30 : 1;
      addDocs(writer, numDocs);
    }
    writer.close();

    SegmentInfos sis = new SegmentInfos();
    sis.read(dir);
    double min = sis.info(0).sizeInBytes();

    conf = new IndexWriterConfig(TEST_VERSION_CURRENT, null);
    LogByteSizeMergePolicy lmp = new LogByteSizeMergePolicy();
    lmp.setMaxMergeMB((min + 1) / (1 << 20));
    conf.setMergePolicy(lmp);
    
    writer = new IndexWriter(dir, conf);
    writer.optimize();
    writer.close();

    // Should only be 3 segments in the index, because one of them exceeds the size limit
    sis = new SegmentInfos();
    sis.read(dir);
    assertEquals(3, sis.size());
  }

