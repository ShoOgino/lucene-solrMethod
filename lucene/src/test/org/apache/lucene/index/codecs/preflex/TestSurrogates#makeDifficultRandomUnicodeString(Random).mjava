  // chooses from a very limited alphabet to exacerbate the
  // surrogate seeking required
  private static String makeDifficultRandomUnicodeString(Random r) {
    final int end = r.nextInt(20);
    if (end == 0) {
      // allow 0 length
      return "";
    }
    final char[] buffer = new char[end];
    for (int i = 0; i < end; i++) {
      int t = r.nextInt(5);

      if (0 == t && i < end - 1) {
        // hi
        buffer[i++] = (char) 0xd800;
        // lo
        buffer[i] = (char) 0xdc00;
      } else if (t <= 3) {
        buffer[i] = 'a';
      }  else if (4 == t) {
        buffer[i] = 0xe000;
      }
    }

    return new String(buffer, 0, end);
  }

