  /**
   * The generic test core called by all unit test methods. It calls the
   * {@link SimilarityBase#score(BasicStats, float, int)} method of all
   * Similarities in {@link #sims} and checks if the score is valid; i.e. it
   * is a finite positive real number.
   */
  private void unitTestCore(BasicStats stats, float freq, int docLen)
      throws IOException {
    // We have to fake everything, because computeStats() can be overridden and
    // there is no way to inject false data after fillBasicStats().
    SpoofIndexSearcher searcher = new SpoofIndexSearcher(stats);
    TermContext tc = new TermContext(
        searcher.getIndexReader().getTopReaderContext(),
        new OrdTermState(), 0, stats.getDocFreq(), stats.getTotalTermFreq());
    
    for (SimilarityBase sim : sims) {
      BasicStats realStats = (BasicStats) sim.computeStats(new SpoofIndexSearcher(stats),
          "spoof", stats.getTotalBoost(), tc);
      float score = sim.score(realStats, freq, docLen);
      float explScore = sim.explain(
          realStats, 1, new Explanation(freq, "freq"), docLen).getValue();
      assertFalse("Score infinite: " + sim.toString(), Float.isInfinite(score));
      assertFalse("Score NaN: " + sim.toString(), Float.isNaN(score));
      assertTrue("Score negative: " + sim.toString(), score >= 0);
      assertEquals("score() and explain() return different values: "
          + sim.toString(), score, explScore, FLOAT_EPSILON);
    }
  }

