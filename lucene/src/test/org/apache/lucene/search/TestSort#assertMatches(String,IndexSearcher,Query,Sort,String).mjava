  // make sure the documents returned by the search match the expected list
  private void assertMatches(String msg, IndexSearcher searcher, Query query, Sort sort,
      String expectedResult) throws IOException {

    for(SortField sortField : sort.getSort()) {
      if (sortField.getUseIndexValues() && sortField.getType() == SortField.Type.STRING) {
        if (searcher.getIndexReader() instanceof SlowMultiReaderWrapper) {
          // Cannot use STRING DocValues sort with SlowMultiReaderWrapper
          return;
        }
      }
    }

    //ScoreDoc[] result = searcher.search (query, null, 1000, sort).scoreDocs;
    TopDocs hits = searcher.search(query, null, Math.max(1, expectedResult.length()), sort);
    ScoreDoc[] result = hits.scoreDocs;
    assertEquals(expectedResult.length(),hits.totalHits);
    StringBuilder buff = new StringBuilder(10);
    int n = result.length;
    for (int i=0; i<n; ++i) {
      Document doc = searcher.doc(result[i].doc);
      IndexableField[] v = doc.getFields("tracer");
      for (int j=0; j<v.length; ++j) {
        buff.append (v[j].stringValue());
      }
    }
    assertEquals(msg, expectedResult, buff.toString());
  }

