  /**
   * Gets or lazy loads the immutable {@link IndexDictionary} thread safely
   * and creates a new {@link IndexDictionary.Browser}.
   */
  @Override
  public IndexDictionary.Browser get() {
    // This double-check idiom does not require the dictionary to be volatile
    // because it is immutable. See section "Double-Checked Locking Immutable Objects"
    // of https://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html.
    if (dictionary == null) {
      synchronized (this) {
        try {
          if (dictionary == null) {
            dictionary = FSTDictionary.read(dictionaryInput, blockDecoder);
          }
        } catch (IOException e) {
          throw new IllegalStateException(e);
        }
      }
    }
    return dictionary.browser();
  }

