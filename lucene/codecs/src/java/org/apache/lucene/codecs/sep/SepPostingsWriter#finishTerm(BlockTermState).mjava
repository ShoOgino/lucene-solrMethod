  /** Called when we are done adding docs to this term */
  @Override
  public void finishTerm(BlockTermState _state) throws IOException {
    SepTermState state = (SepTermState)_state;
    // TODO: -- wasteful we are counting this in two places?
    assert state.docFreq > 0;
    assert state.docFreq == df;

    state.docIndex = docOut.index();
    state.docIndex.copyFrom(docIndex, false);
    if (indexOptions != IndexOptions.DOCS_ONLY) {
      state.freqIndex = freqOut.index();
      state.freqIndex.copyFrom(freqIndex, false);
      if (indexOptions == IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) {
        state.posIndex = posOut.index();
        state.posIndex.copyFrom(posIndex, false);
      } else {
        state.posIndex = null;
      }
    } else {
      state.freqIndex = null;
      state.posIndex = null;
    }

    if (df >= skipMinimum) {
      state.skipFP = skipOut.getFilePointer();
      //System.out.println("  skipFP=" + skipFP);
      skipListWriter.writeSkip(skipOut);
      //System.out.println("    numBytes=" + (skipOut.getFilePointer()-skipFP));
    } else {
      state.skipFP = -1;
    }
    state.payloadFP = payloadStart;

    lastDocID = 0;
    df = 0;
  }

