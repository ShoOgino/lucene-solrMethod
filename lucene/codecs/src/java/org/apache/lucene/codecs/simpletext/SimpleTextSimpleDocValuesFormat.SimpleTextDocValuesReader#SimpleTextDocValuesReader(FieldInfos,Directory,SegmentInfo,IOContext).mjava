    SimpleTextDocValuesReader(FieldInfos fieldInfos, Directory dir, SegmentInfo si, IOContext context) throws IOException {
      super(si.getDocCount());
      System.out.println("dir=" + dir + " seg=" + si.name);
      data = dir.openInput(IndexFileNames.segmentFileName(si.name, "", "dat"), context);
      maxDoc = si.getDocCount();
      while(true) {
        readLine();
        if (scratch.equals(END)) {
          break;
        }
        assert startsWith(FIELD) : scratch.utf8ToString();
        String fieldName = stripPrefix(FIELD);
        //System.out.println("  field=" + fieldName);
        FieldInfo fieldInfo = fieldInfos.fieldInfo(fieldName);
        assert fieldInfo != null;

        OneField field = new OneField();
        fields.put(fieldName, field);

        field.fieldInfo = fieldInfo;
        
        DocValues.Type dvType = fieldInfo.getDocValuesType();
        assert dvType != null;
        if (DocValues.isNumber(dvType) || DocValues.isFloat(dvType)) {
          readLine();
          assert startsWith(MINVALUE);
          field.minValue = Long.parseLong(stripPrefix(MINVALUE));
          readLine();
          assert startsWith(PATTERN);
          field.pattern = stripPrefix(PATTERN);
          field.dataStartFilePointer = data.getFilePointer();
          data.seek(data.getFilePointer() + (1+field.pattern.length()) * maxDoc);
        } else if (DocValues.isBytes(dvType)) {
          readLine();
          assert startsWith(MAXLENGTH);
          field.maxLength = Integer.parseInt(stripPrefix(MAXLENGTH));
          readLine();
          assert startsWith(PATTERN);
          field.pattern = stripPrefix(PATTERN);
          field.dataStartFilePointer = data.getFilePointer();
          data.seek(data.getFilePointer() + (9+field.pattern.length()+field.maxLength) * maxDoc);
        } else if (DocValues.isSortedBytes(dvType)) {
          readLine();
          assert startsWith(NUMVALUES);
          field.numValues = Integer.parseInt(stripPrefix(NUMVALUES));
          readLine();
          assert startsWith(MAXLENGTH);
          field.maxLength = Integer.parseInt(stripPrefix(MAXLENGTH));
          readLine();
          assert startsWith(PATTERN);
          field.pattern = stripPrefix(PATTERN);
          readLine();
          assert startsWith(ORDPATTERN);
          field.ordPattern = stripPrefix(ORDPATTERN);
          field.dataStartFilePointer = data.getFilePointer();
          data.seek(data.getFilePointer() + (9+field.pattern.length()+field.maxLength) * field.numValues + (1+field.ordPattern.length())*maxDoc);
          // nocommit: we need to seek past the data section!!!!
        } else {
          throw new AssertionError();
        }
      }
    }

