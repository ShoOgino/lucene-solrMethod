    @Override
    public BytesRef nextKey() {
      try {
        if (state == STATE_END) {
          // if fstEnum is at end, then that's it.
          return null;
        }

        if (state == STATE_SEEK && blockFilePointer == -1) { // see seekBlock
          if (fstEnum.next() == null) { // advance.
            state = STATE_END; // probably never happens (empty FST)?  We code defensively.
            return null;
          }
        }
        keyBuilder.copyBytes(fstEnum.current().input);
        blockFilePointer = fstEnum.current().output;
        assert blockFilePointer >= 0;

        state = STATE_NEXT;

        BytesRef key = keyBuilder.get();

        // advance fstEnum
        BytesRefFSTEnum.InputOutput<Long> inputOutput = fstEnum.next();

        // calc common prefix
        if (inputOutput == null) {
          state = STATE_END; // for *next* call; current state is good
          blockPrefixLen = 0;
        } else {
          int sortKeyLength = StringHelper.sortKeyLength(key, inputOutput.input);
          assert sortKeyLength >= 1;
          blockPrefixLen = sortKeyLength - 1;
        }
        return key;
      } catch (IOException e) {
        // Should never happen.
        throw new RuntimeException(e);
      }
    }

