  public void testCorruptIndex() throws Exception {
    Path path = createTempDir("maxposindex");
    InputStream resource = getClass().getResourceAsStream("maxposindex.zip");
    assertNotNull("maxposindex not found", resource);
    TestUtil.unzip(resource, path);
    BaseDirectoryWrapper dir = newFSDirectory(path);
    dir.setCheckIndexOnClose(false);
    RuntimeException expected = expectThrows(RuntimeException.class, () -> {
      TestUtil.checkIndex(dir, false, true);
    });
    assertTrue(expected.getMessage().contains("pos 2147483647 > IndexWriter.MAX_POSITION=2147483519"));

    // Also confirm merging detects this:
    IndexWriterConfig iwc = newIndexWriterConfig();
    iwc.setMergeScheduler(new SerialMergeScheduler());
    iwc.setMergePolicy(newLogMergePolicy());
    IndexWriter w = new IndexWriter(dir, iwc);
    w.addDocument(new Document());
    CorruptIndexException expectedCorruption = expectThrows(CorruptIndexException.class, () -> {
      w.forceMerge(1);
    });
    assertEquals(expectedCorruption.getMessage(), new CorruptIndexException(expectedCorruption.getOriginalMessage(), expectedCorruption.getResourceDescription()).getMessage());
    // SerialMergeScheduler
    assertTrue("got message " + expectedCorruption.getMessage(),
        expectedCorruption.getMessage().contains("position=2147483647 is too large (> IndexWriter.MAX_POSITION=2147483519), field=\"foo\" doc=0 (resource=PerFieldPostings(segment=_0 formats=1)"));

    w.close();
    dir.close();
  }

