  public void testCorruptIndex() throws Exception {
    Path path = createTempDir("maxposindex");
    InputStream resource = getClass().getResourceAsStream("maxposindex.zip");
    assertNotNull("maxposindex not found", resource);
    TestUtil.unzip(resource, path);
    BaseDirectoryWrapper dir = newFSDirectory(path);
    dir.setCheckIndexOnClose(false);
    try {
      TestUtil.checkIndex(dir, false, true);
      fail("corruption was not detected");
    } catch (RuntimeException re) {
      // expected
      assertTrue(re.getMessage().contains("pos 2147483647 > IndexWriter.MAX_POSITION=2147483519"));
    }

    // Also confirm merging detects this:
    IndexWriterConfig iwc = newIndexWriterConfig();
    iwc.setMergeScheduler(new SerialMergeScheduler());
    iwc.setMergePolicy(newLogMergePolicy());
    IndexWriter w = new IndexWriter(dir, iwc);
    w.addDocument(new Document());
    try {
      w.forceMerge(1);
    } catch (CorruptIndexException cie) {
      assertEquals(cie.getMessage(), new CorruptIndexException(cie.getOriginalMessage(), cie.getResourceDescription()).getMessage());
      // SerialMergeScheduler
      assertTrue("got message " + cie.getMessage(),
                 cie.getMessage().contains("position=2147483647 is too large (> IndexWriter.MAX_POSITION=2147483519), field=\"foo\" doc=0 (resource=PerFieldPostings(segment=_0 formats=1)"));
    }

    w.close();
    dir.close();
  }

