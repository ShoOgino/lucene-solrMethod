  /**
   * Compute the great-circle distance using original haversine implementation published by Sinnot in:
   * R.W. Sinnott, "Virtues of the Haversine", Sky and Telescope, vol. 68, no. 2, 1984, p. 159
   *
   * NOTE: this differs from {@link org.apache.lucene.util.SloppyMath#haversin} in that it uses the semi-major axis
   * of the earth instead of an approximation based on the average latitude of the two points (which can introduce an
   * additional error up to .337%, or ~67.6 km at the equator)
   */
  public static double haversin(double lat1, double lon1, double lat2, double lon2) {
    double dLat = TO_RADIANS * (lat2 - lat1);
    double dLon = TO_RADIANS * (lon2 - lon1);
    lat1 = TO_RADIANS * (lat1);
    lat2 = TO_RADIANS * (lat2);

    final double sinDLatO2 = SloppyMath.sin(dLat / 2);
    final double sinDLonO2 = SloppyMath.sin(dLon / 2);

    double a = sinDLatO2*sinDLatO2 + sinDLonO2 * sinDLonO2 * SloppyMath.cos(lat1) * SloppyMath.cos(lat2);
    double c = 2 * SloppyMath.asin(Math.sqrt(a));
    return (GeoProjectionUtils.SEMIMAJOR_AXIS * c);
  }

