  @Override
  public DocIdSet getDocIdSet(AtomicReaderContext context, Bits acceptDocs) throws IOException {
    return new VisitorTemplate(context, acceptDocs, hasIndexedLeaves) {
      private FixedBitSet results;

      @Override
      protected void start() {
        results = new FixedBitSet(maxDoc);
      }

      @Override
      protected DocIdSet finish() {
        return results;
      }

      @Override
      protected boolean visit(Cell cell) throws IOException {
        if (cell.getShapeRel() == SpatialRelation.WITHIN || cell.getLevel() == detailLevel) {
          collectDocs(results);
          return false;
        }
        return true;
      }

      @Override
      protected void visitLeaf(Cell cell) throws IOException {
        collectDocs(results);
      }

      @Override
      protected void visitScanned(Cell cell) throws IOException {
        Shape cShape;
        //if this cell represents a point, use the cell center vs the box
        // TODO this behavior is debatable; might want to be configurable
        // (points never have isLeaf())
        if (cell.getLevel() == grid.getMaxLevels() && !cell.isLeaf())
          cShape = cell.getCenter();
        else
          cShape = cell.getShape();
        if (queryShape.relate(cShape).intersects())
          collectDocs(results);
      }

    }.getDocIdSet();
  }

