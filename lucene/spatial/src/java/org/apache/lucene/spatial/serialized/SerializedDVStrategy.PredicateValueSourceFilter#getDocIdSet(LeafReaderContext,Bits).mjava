    @Override
    public DocIdSet getDocIdSet(final LeafReaderContext context, final Bits acceptDocs) throws IOException {
      return new DocIdSet() {
        @Override
        public DocIdSetIterator iterator() throws IOException {
          throw new UnsupportedOperationException(
              "Iteration is too slow; consume using DocIdSet.bits() instead");
          //Note that if you're truly bent on doing this, then see FunctionValues.getRangeScorer
        }

        @Override
        public Bits bits() throws IOException {
          //null Map context -- we simply don't have one. That's ok.
          final FunctionValues predFuncValues = predicateValueSource.getValues(null, context);

          return new Bits() {

            @Override
            public boolean get(int index) {
              if (acceptDocs != null && !acceptDocs.get(index))
                return false;
              return predFuncValues.boolVal(index);
            }

            @Override
            public int length() {
              return context.reader().maxDoc();
            }
          };
        }

        @Override
        public long ramBytesUsed() {
          return 0L;
        }
      };
    }

