  private void recursiveGetNodes(Node node, Shape shape, int detailLevel, boolean inclParents,
                                 Collection<Node> result) {
    if (node.isLeaf()) {//cell is within shape
      result.add(node);
      return;
    }
    final Collection<Node> subCells = node.getSubCells(shape);
    if (node.getLevel() == detailLevel - 1) {
      if (subCells.size() < node.getSubCellsSize() || node.getLevel() == 0) {
        if (inclParents)
          result.add(node);
        for (Node subCell : subCells) {
          subCell.setLeaf();
        }
        result.addAll(subCells);
      } else {//a bottom level (i.e. detail level) optimization where all boxes intersect, so use parent cell.
        node.setLeaf();//the cell may not be strictly within but its close
        result.add(node);
      }
    } else {
      if (inclParents) {
        result.add(node);
      }
      for (Node subCell : subCells) {
        recursiveGetNodes(subCell, shape, detailLevel, inclParents, result);//tail call
      }
    }
  }

