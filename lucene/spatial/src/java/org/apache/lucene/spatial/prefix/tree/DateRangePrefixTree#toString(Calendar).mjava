  /** Calendar utility method:
   * Converts to calendar to ISO-8601, to include proper BC handling (1BC is "0000", 2BC is "-0001", etc.);
   * and WITHOUT a trailing 'Z'.
   * A fully cleared calendar will yield the string "*".
   * The isSet() state of the Calendar is re-instated when done. */
   @SuppressWarnings("fallthrough")
   public String toString(Calendar cal) {
    final int calPrecField = getCalPrecisionField(cal);//must call first; getters set all fields
    if (calPrecField == -1)
      return "*";
    try {
      //TODO not fully optimized because I only expect this to be used in tests / debugging.
      //  Borrow code from Solr DateUtil, and have it reference this back?
      String pattern = "yyyy-MM-dd'T'HH:mm:ss.SSS";
      int ptnLen = 0;
      switch (calPrecField) {//switch fall-through is deliberate
        case Calendar.MILLISECOND: ptnLen += 4;
        case Calendar.SECOND: ptnLen += 3;
        case Calendar.MINUTE: ptnLen += 3;
        case Calendar.HOUR_OF_DAY: ptnLen += 5;
        case Calendar.DAY_OF_MONTH: ptnLen += 3;
        case Calendar.MONTH: ptnLen += 3;
        case Calendar.YEAR: ptnLen += 4;
        break;
        default: throw new IllegalStateException(""+calPrecField);
      }
      pattern = pattern.substring(0, ptnLen);
      SimpleDateFormat format = new SimpleDateFormat(pattern, Locale.ROOT);
      format.setTimeZone(cal.getTimeZone());
      if (cal.get(Calendar.ERA) == 0) {//BC
        //SDF doesn't do this properly according to ISO-8601
        // Example: 1BC == "0000" (actually 0 AD), 2BC == "-0001", 3BC == "-0002", ...
        final int yearOrig = cal.get(Calendar.YEAR);
        cal.set(Calendar.YEAR, yearOrig-1);
        String str;
        try {
          str = format.format(cal.getTime());
        } finally {
          //reset to what it was
          cal.set(Calendar.ERA, 0);//necessary!
          cal.set(Calendar.YEAR, yearOrig);
        }
        if (yearOrig > 1)
          return "-" + str;
        else
          return "0000" + str.substring(4);
      }
      return format.format(cal.getTime());
    } finally {
      clearFieldsAfter(cal, calPrecField);//restore precision state modified by get()
    }
  }

