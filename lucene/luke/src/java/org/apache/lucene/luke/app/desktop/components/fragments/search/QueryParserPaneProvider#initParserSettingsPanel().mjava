  private JPanel initParserSettingsPanel() {
    JPanel panel = new JPanel(new GridLayout(3, 2));
    panel.setOpaque(false);

    JPanel defField = new JPanel(new FlowLayout(FlowLayout.LEADING));
    defField.setOpaque(false);
    JLabel dfLabel = new JLabel(MessageUtils.getLocalizedMessage("search_parser.label.df"));
    defField.add(dfLabel);
    defField.add(dfCB);
    panel.add(defField);

    JPanel defOp = new JPanel(new FlowLayout(FlowLayout.LEADING));
    defOp.setOpaque(false);
    JLabel defOpLabel = new JLabel(MessageUtils.getLocalizedMessage("search_parser.label.dop"));
    defOp.add(defOpLabel);
    defOpCombo.setSelectedItem(config.getDefaultOperator().name());
    defOp.add(defOpCombo);
    panel.add(defOp);

    posIncCB.setText(MessageUtils.getLocalizedMessage("search_parser.checkbox.pos_incr"));
    posIncCB.setSelected(config.isEnablePositionIncrements());
    posIncCB.setOpaque(false);
    panel.add(posIncCB);

    wildCardCB.setText(MessageUtils.getLocalizedMessage("search_parser.checkbox.lead_wildcard"));
    wildCardCB.setSelected(config.isAllowLeadingWildcard());
    wildCardCB.setOpaque(false);
    panel.add(wildCardCB);

    splitWSCB.setText(MessageUtils.getLocalizedMessage("search_parser.checkbox.split_ws"));
    splitWSCB.setEnabled(config.isSplitOnWhitespace());
    splitWSCB.addActionListener(listeners::toggleSplitOnWhiteSpace);
    splitWSCB.setOpaque(false);
    panel.add(splitWSCB);

    return panel;
  }

