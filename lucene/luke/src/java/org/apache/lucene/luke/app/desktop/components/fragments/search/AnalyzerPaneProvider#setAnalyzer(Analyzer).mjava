  @Override
  public void setAnalyzer(Analyzer analyzer) {
    analyzerNameLbl.setText(analyzer.getClass().getName());

    if (analyzer instanceof CustomAnalyzer) {
      CustomAnalyzer customAnalyzer = (CustomAnalyzer) analyzer;

      DefaultListModel<String> charFilterListModel = new DefaultListModel<>();
      customAnalyzer.getCharFilterFactories().stream()
          .map(f -> f.getClass().getSimpleName())
          .forEach(charFilterListModel::addElement);
      charFilterList.setModel(charFilterListModel);

      tokenizerTF.setText(customAnalyzer.getTokenizerFactory().getClass().getSimpleName());

      DefaultListModel<String> tokenFilterListModel = new DefaultListModel<>();
      customAnalyzer.getTokenFilterFactories().stream()
          .map(f -> f.getClass().getSimpleName())
          .forEach(tokenFilterListModel::addElement);
      tokenFilterList.setModel(tokenFilterListModel);

      charFilterList.setBackground(Color.white);
      tokenizerTF.setBackground(Color.white);
      tokenFilterList.setBackground(Color.white);
    } else {
      charFilterList.setModel(new DefaultListModel<>());
      tokenizerTF.setText("");
      tokenFilterList.setModel(new DefaultListModel<>());

      charFilterList.setBackground(Color.lightGray);
      tokenizerTF.setBackground(Color.lightGray);
      tokenFilterList.setBackground(Color.lightGray);
    }
  }

