  @Override
  public List<Token> analyze(String text) {
    Objects.requireNonNull(text);

    if (analyzer == null) {
      throw new LukeException("Analyzer is not set.");
    }

    try {
      List<Token> result = new ArrayList<>();

      TokenStream stream = analyzer.tokenStream("", text);
      stream.reset();

      CharTermAttribute charAtt = stream.getAttribute(CharTermAttribute.class);

      // iterate tokens
      while (stream.incrementToken()) {
        List<TokenAttribute> attributes = new ArrayList<>();
        Iterator<AttributeImpl> itr = stream.getAttributeImplsIterator();

        while (itr.hasNext()) {
          AttributeImpl att = itr.next();
          Map<String, String> attValues = new LinkedHashMap<>();
          att.reflectWith((attClass, key, value) -> {
            if (value != null)
              attValues.put(key, value.toString());
          });
          attributes.add(new TokenAttribute(att.getClass().getSimpleName(), attValues));
        }

        result.add(new Token(charAtt.toString(), attributes));
      }
      stream.close();

      return result;
    } catch (IOException e) {
      throw new LukeException(e.getMessage(), e);
    }
  }

