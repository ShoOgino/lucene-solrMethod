  public void resetFieldType(Class<?> type) {
    if (type.equals(TextField.class)) {
      fieldType = new TextField("", "", Field.Store.NO).fieldType();
    } else if (type.equals(StringField.class)) {
      fieldType = new StringField("", "", Field.Store.NO).fieldType();
    } else if (type.equals(IntPoint.class)) {
      fieldType = new IntPoint("", NumericUtils.convertToIntArray(value, true)).fieldType();
    } else if (type.equals(LongPoint.class)) {
      fieldType = new LongPoint("", NumericUtils.convertToLongArray(value, true)).fieldType();
    } else if (type.equals(FloatPoint.class)) {
      fieldType = new FloatPoint("", NumericUtils.convertToFloatArray(value, true)).fieldType();
    } else if (type.equals(DoublePoint.class)) {
      fieldType = new DoublePoint("", NumericUtils.convertToDoubleArray(value, true)).fieldType();
    } else if (type.equals(SortedDocValuesField.class)) {
      fieldType = new SortedDocValuesField("", null).fieldType();
    } else if (type.equals(SortedSetDocValuesField.class)) {
      fieldType = new SortedSetDocValuesField("", null).fieldType();
    } else if (type.equals(NumericDocValuesField.class)) {
      fieldType = new NumericDocValuesField("", 0).fieldType();
    } else if (type.equals(SortedNumericDocValuesField.class)) {
      fieldType = new SortedNumericDocValuesField("", 0).fieldType();
    } else if (type.equals(StoredField.class)) {
      fieldType = new StoredField("", "").fieldType();
    } else if (type.equals(Field.class)) {
      fieldType = new FieldType(this.fieldType);
    }
  }

