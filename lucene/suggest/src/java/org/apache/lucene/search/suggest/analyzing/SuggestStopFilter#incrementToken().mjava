  @Override
  public boolean incrementToken() throws IOException {
    if (ended) {
      return false;
    }

    if (!input.incrementToken()) {
      return false;
    }

    int skippedPositions = 0;
    while (true) {
      if (stopWords.contains(termAtt.buffer(), 0, termAtt.length())) {
        int posInc = posIncAtt.getPositionIncrement();
        int endOffset = offsetAtt.endOffset();
        // This token may be a stopword, if it's not end:
        State sav = captureState();
        if (input.incrementToken()) {
          // It was a stopword; skip it
          skippedPositions += posInc;
        } else {
          input.end();
          ended = true;
          int finalEndOffset = offsetAtt.endOffset();
          assert finalEndOffset >= endOffset;
          if (finalEndOffset > endOffset) {
            // OK there was a token separator after the
            // stopword, so it was a stopword
            return false;
          } else {
            // No token separator after final token that
            // looked like a stop-word; don't filter it:
            endState = captureState();
            restoreState(sav);
            posIncAtt.setPositionIncrement(skippedPositions + posIncAtt.getPositionIncrement());
            keywordAtt.setKeyword(true);
            return true;
          }
        }
      } else {
        // Not a stopword; return the current token:
        posIncAtt.setPositionIncrement(skippedPositions + posIncAtt.getPositionIncrement());
        return true;
      }
    }
  }

