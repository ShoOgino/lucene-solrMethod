  private static LongValuesSource sum(String... fields) {
    LongValuesSource[] sources = new LongValuesSource[fields.length];
    for (int i = 0; i < fields.length; i++) {
      sources[i] = LongValuesSource.fromLongField(fields[i]);
    }
    return new LongValuesSource() {
      @Override
      public LongValues getValues(LeafReaderContext ctx, DoubleValues scores) throws IOException {
        LongValues[] values = new LongValues[fields.length];
        for (int i = 0; i < sources.length; i++) {
          values[i] = sources[i].getValues(ctx, scores);
        }
        return new LongValues() {
          @Override
          public long longValue() throws IOException {
            long v = 0;
            for (LongValues value : values) {
              v += value.longValue();
            }
            return v;
          }

          @Override
          public boolean advanceExact(int doc) throws IOException {
            boolean v = true;
            for (LongValues value : values) {
              v &= value.advanceExact(doc);
            }
            return v;
          }
        };
      }

      @Override
      public boolean needsScores() {
        return false;
      }
    };
  }

