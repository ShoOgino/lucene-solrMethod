  /** Creates a new MorfologikFilterFactory */
  public MorfologikFilterFactory(Map<String,String> args) {
    super(args);

    // first check FSA and features (at least FSA must be given, features name is guessed):
    dictionaryFsaFile = get(args, DICTIONARY_FSA_FILE_ATTRIBUTE);
    dictionaryFeaturesFile = get(args, DICTIONARY_FEATURES_FILE_ATTRIBUTE,
        (dictionaryFsaFile == null) ? null : Dictionary.getExpectedFeaturesName(dictionaryFsaFile));
    
    if (dictionaryFsaFile == null && dictionaryFeaturesFile == null) {
      // if we have no FSA/features combination, we resolve the classpath resource:
      dictionaryResource = get(args, DICTIONARY_RESOURCE_ATTRIBUTE, DEFAULT_DICTIONARY_RESOURCE);
    } else if (dictionaryFsaFile == null || dictionaryFeaturesFile == null) {
      // if we have incomplete FSA/features tuple in args
      throw new IllegalArgumentException(String.format(Locale.ENGLISH, "Missing '%s' or '%s' attribute.",
          DICTIONARY_FSA_FILE_ATTRIBUTE, DICTIONARY_FEATURES_FILE_ATTRIBUTE));      
    } else {
      dictionaryResource = null;
      if (get(args, DICTIONARY_RESOURCE_ATTRIBUTE) != null) {
        // fail if both is given: FSA/features files + classpath resource
        throw new IllegalArgumentException(String.format(Locale.ENGLISH, "Cannot give '%s' and '%s'/'%s' at the same time.",
            DICTIONARY_RESOURCE_ATTRIBUTE, DICTIONARY_FSA_FILE_ATTRIBUTE, DICTIONARY_FEATURES_FILE_ATTRIBUTE));
      }
    }
    
    if (!args.isEmpty()) {
      throw new IllegalArgumentException("Unknown parameters: " + args);
    }
  }

