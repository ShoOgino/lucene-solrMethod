  /**
   * @param scheme - scheme for loading resources (FILE or CLASSPATH).
   * @param path - where to load resources from, without the ".dat" suffix
   */
  public ConnectionCosts(BinaryDictionary.ResourceScheme scheme, String path) throws IOException {
    InputStream is = null;
    short[][] costs = null;
    boolean success = false;
    try {
      is = BinaryDictionary.getResource(scheme, path.replace('.', '/') + FILENAME_SUFFIX);
      is = new BufferedInputStream(is);
      final DataInput in = new InputStreamDataInput(is);
      CodecUtil.checkHeader(in, HEADER, VERSION, VERSION);
      int forwardSize = in.readVInt();
      int backwardSize = in.readVInt();
      costs = new short[backwardSize][forwardSize];
      int accum = 0;
      for (int j = 0; j < costs.length; j++) {
        final short[] a = costs[j];
        for (int i = 0; i < a.length; i++) {
          accum += in.readZInt();
          a[i] = (short)accum;
        }
      }
      success = true;
    } finally {
      if (success) {
        IOUtils.close(is);
      } else {
        IOUtils.closeWhileHandlingException(is);
      }
    }
    
    this.costs = costs;
  }

