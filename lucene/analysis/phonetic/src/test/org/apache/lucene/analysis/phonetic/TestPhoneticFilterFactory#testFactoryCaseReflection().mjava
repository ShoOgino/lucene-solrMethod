  /**
   * Case: Reflection
   */
  public void testFactoryCaseReflection() throws IOException {
    Map<String,String> args = new HashMap<String, String>();
    
    PhoneticFilterFactory ff = new PhoneticFilterFactory();
    ClasspathResourceLoader loader = new ClasspathResourceLoader(ff.getClass());

    args.put( PhoneticFilterFactory.ENCODER, "org.apache.commons.codec.language.Metaphone" );
    ff.init( args );
    ff.inform( loader );
    assertTrue( ff.getEncoder() instanceof Metaphone );
    assertTrue( ff.inject ); // default

    // we use "Caverphone2" as it is registered in the REGISTRY as Caverphone,
    // so this effectively tests reflection without package name
    args.put( PhoneticFilterFactory.ENCODER, "Caverphone2" );
    ff.init( args );
    ff.inform( loader );
    assertTrue( ff.getEncoder() instanceof Caverphone2 );
    assertTrue( ff.inject ); // default
    
    // cross check with registry
    args.put( PhoneticFilterFactory.ENCODER, "Caverphone" );
    ff.init( args );
    ff.inform( loader );
    assertTrue( ff.getEncoder() instanceof Caverphone2 );
    assertTrue( ff.inject ); // default
  }

