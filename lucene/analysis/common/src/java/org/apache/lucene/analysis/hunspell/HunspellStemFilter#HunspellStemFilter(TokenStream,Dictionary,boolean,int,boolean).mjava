  /**
   * Creates a new HunspellStemFilter that will stem tokens from the given TokenStream using affix rules in the provided
   * Dictionary
   *
   * @param input TokenStream whose tokens will be stemmed
   * @param dictionary HunspellDictionary containing the affix rules and words that will be used to stem the tokens
   * @param dedup true if only unique terms should be output.
   * @param recursionCap maximum level of recursion stemmer can go into, defaults to <code>2</code>
   * @param longestOnly true if only the longest term should be output.
   */
  public HunspellStemFilter(TokenStream input, Dictionary dictionary, boolean dedup, int recursionCap, boolean longestOnly) {
    super(input);
    this.dedup = dedup && longestOnly == false; // don't waste time deduping if longestOnly is set
    this.stemmer = new Stemmer(dictionary, recursionCap);
    this.longestOnly = longestOnly;
  }

