  /**
   * Looks up SPI name (static "NAME" field) with appropriate modifiers.
   * Also it must be a String class and declared in the concrete class.
   * @return the SPI name
   * @throws NoSuchFieldException - if the "NAME" field is not defined.
   * @throws IllegalAccessException - if the "NAME" field is inaccessible.
   * @throws IllegalStateException - if the "NAME" field does not have appropriate modifiers or isn't a String field.
   */
  static String lookupSPIName(Class<? extends AbstractAnalysisFactory> service) throws NoSuchFieldException, IllegalAccessException, IllegalStateException {
    final Field field = service.getField("NAME");
    int modifier = field.getModifiers();
    if (Modifier.isStatic(modifier) && Modifier.isFinal(modifier) &&
        field.getType().equals(String.class) &&
        Objects.equals(field.getDeclaringClass(), service)) {
      return ((String) field.get(null));
      }
    throw new IllegalStateException("No SPI name defined.");
  }

