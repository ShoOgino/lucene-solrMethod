    @Override
    public boolean fill(final CharacterBuffer buffer, final Reader reader) throws IOException {
      final char[] charBuffer = buffer.buffer;
      buffer.offset = 0;
      final int offset;

      // Install the previously saved ending high surrogate:
      if (buffer.lastTrailingHighSurrogate != 0) {
        charBuffer[0] = buffer.lastTrailingHighSurrogate;
        offset = 1;
      } else {
        offset = 0;
      }

      final int read = reader.read(charBuffer,
                                   offset,
                                   charBuffer.length - offset);
      if (read == -1) {
        buffer.length = offset;
        buffer.lastTrailingHighSurrogate = 0;
        return offset != 0;
      }
      assert read > 0;
      buffer.length = read + offset;

      // If we read only a single char, and that char was a
      // high surrogate, read again:
      if (buffer.length == 1
          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {
        final int read2 = reader.read(charBuffer,
                                      1,
                                      charBuffer.length - 1);
        if (read2 == -1) {
          // NOTE: mal-formed input (ended on a high
          // surrogate)!  Consumer must deal with it...
          return true;
        }
        assert read2 > 0;

        buffer.length += read2;
      }

      if (buffer.length > 1
          && Character.isHighSurrogate(charBuffer[buffer.length - 1])) {
        buffer.lastTrailingHighSurrogate = charBuffer[--buffer.length];
      } else {
        buffer.lastTrailingHighSurrogate = 0;
      }

      return true;
    }

