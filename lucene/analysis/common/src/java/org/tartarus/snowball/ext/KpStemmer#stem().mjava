        public boolean stem() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            int v_10;
            int v_11;
            int v_12;
            int v_13;
            int v_14;
            int v_15;
            int v_16;
            int v_18;
            int v_19;
            int v_20;
            // (, line 214
            // unset Y_found, line 216
            B_Y_found = false;
            // unset stemmed, line 217
            B_stemmed = false;
            // do, line 218
            v_1 = cursor;
            lab0: do {
                // (, line 218
                // [, line 218
                bra = cursor;
                // literal, line 218
                if (!(eq_s(1, "y")))
                {
                    break lab0;
                }
                // ], line 218
                ket = cursor;
                // <-, line 218
                slice_from("Y");
                // set Y_found, line 218
                B_Y_found = true;
            } while (false);
            cursor = v_1;
            // do, line 219
            v_2 = cursor;
            lab1: do {
                // repeat, line 219
                replab2: while(true)
                {
                    v_3 = cursor;
                    lab3: do {
                        // (, line 219
                        // goto, line 219
                        golab4: while(true)
                        {
                            v_4 = cursor;
                            lab5: do {
                                // (, line 219
                                if (!(in_grouping(g_v, 97, 121)))
                                {
                                    break lab5;
                                }
                                // [, line 219
                                bra = cursor;
                                // literal, line 219
                                if (!(eq_s(1, "y")))
                                {
                                    break lab5;
                                }
                                // ], line 219
                                ket = cursor;
                                cursor = v_4;
                                break golab4;
                            } while (false);
                            cursor = v_4;
                            if (cursor >= limit)
                            {
                                break lab3;
                            }
                            cursor++;
                        }
                        // <-, line 219
                        slice_from("Y");
                        // set Y_found, line 219
                        B_Y_found = true;
                        continue replab2;
                    } while (false);
                    cursor = v_3;
                    break replab2;
                }
            } while (false);
            cursor = v_2;
            // call measure, line 221
            if (!r_measure())
            {
                return false;
            }
            // backwards, line 223
            limit_backward = cursor; cursor = limit;
            // (, line 223
            // do, line 224
            v_5 = limit - cursor;
            lab6: do {
                // (, line 224
                // call Step_1, line 224
                if (!r_Step_1())
                {
                    break lab6;
                }
                // set stemmed, line 224
                B_stemmed = true;
            } while (false);
            cursor = limit - v_5;
            // do, line 225
            v_6 = limit - cursor;
            lab7: do {
                // (, line 225
                // call Step_2, line 225
                if (!r_Step_2())
                {
                    break lab7;
                }
                // set stemmed, line 225
                B_stemmed = true;
            } while (false);
            cursor = limit - v_6;
            // do, line 226
            v_7 = limit - cursor;
            lab8: do {
                // (, line 226
                // call Step_3, line 226
                if (!r_Step_3())
                {
                    break lab8;
                }
                // set stemmed, line 226
                B_stemmed = true;
            } while (false);
            cursor = limit - v_7;
            // do, line 227
            v_8 = limit - cursor;
            lab9: do {
                // (, line 227
                // call Step_4, line 227
                if (!r_Step_4())
                {
                    break lab9;
                }
                // set stemmed, line 227
                B_stemmed = true;
            } while (false);
            cursor = limit - v_8;
            cursor = limit_backward;            // unset GE_removed, line 229
            B_GE_removed = false;
            // do, line 230
            v_9 = cursor;
            lab10: do {
                // (, line 230
                // and, line 230
                v_10 = cursor;
                // call Lose_prefix, line 230
                if (!r_Lose_prefix())
                {
                    break lab10;
                }
                cursor = v_10;
                // call measure, line 230
                if (!r_measure())
                {
                    break lab10;
                }
            } while (false);
            cursor = v_9;
            // backwards, line 231
            limit_backward = cursor; cursor = limit;
            // (, line 231
            // do, line 232
            v_11 = limit - cursor;
            lab11: do {
                // (, line 232
                // Boolean test GE_removed, line 232
                if (!(B_GE_removed))
                {
                    break lab11;
                }
                // call Step_1c, line 232
                if (!r_Step_1c())
                {
                    break lab11;
                }
            } while (false);
            cursor = limit - v_11;
            cursor = limit_backward;            // unset GE_removed, line 234
            B_GE_removed = false;
            // do, line 235
            v_12 = cursor;
            lab12: do {
                // (, line 235
                // and, line 235
                v_13 = cursor;
                // call Lose_infix, line 235
                if (!r_Lose_infix())
                {
                    break lab12;
                }
                cursor = v_13;
                // call measure, line 235
                if (!r_measure())
                {
                    break lab12;
                }
            } while (false);
            cursor = v_12;
            // backwards, line 236
            limit_backward = cursor; cursor = limit;
            // (, line 236
            // do, line 237
            v_14 = limit - cursor;
            lab13: do {
                // (, line 237
                // Boolean test GE_removed, line 237
                if (!(B_GE_removed))
                {
                    break lab13;
                }
                // call Step_1c, line 237
                if (!r_Step_1c())
                {
                    break lab13;
                }
            } while (false);
            cursor = limit - v_14;
            cursor = limit_backward;            // backwards, line 239
            limit_backward = cursor; cursor = limit;
            // (, line 239
            // do, line 240
            v_15 = limit - cursor;
            lab14: do {
                // (, line 240
                // call Step_7, line 240
                if (!r_Step_7())
                {
                    break lab14;
                }
                // set stemmed, line 240
                B_stemmed = true;
            } while (false);
            cursor = limit - v_15;
            // do, line 241
            v_16 = limit - cursor;
            lab15: do {
                // (, line 241
                // or, line 241
                lab16: do {
                    lab17: do {
                        // Boolean test stemmed, line 241
                        if (!(B_stemmed))
                        {
                            break lab17;
                        }
                        break lab16;
                    } while (false);
                    // Boolean test GE_removed, line 241
                    if (!(B_GE_removed))
                    {
                        break lab15;
                    }
                } while (false);
                // call Step_6, line 241
                if (!r_Step_6())
                {
                    break lab15;
                }
            } while (false);
            cursor = limit - v_16;
            cursor = limit_backward;            // do, line 243
            v_18 = cursor;
            lab18: do {
                // (, line 243
                // Boolean test Y_found, line 243
                if (!(B_Y_found))
                {
                    break lab18;
                }
                // repeat, line 243
                replab19: while(true)
                {
                    v_19 = cursor;
                    lab20: do {
                        // (, line 243
                        // goto, line 243
                        golab21: while(true)
                        {
                            v_20 = cursor;
                            lab22: do {
                                // (, line 243
                                // [, line 243
                                bra = cursor;
                                // literal, line 243
                                if (!(eq_s(1, "Y")))
                                {
                                    break lab22;
                                }
                                // ], line 243
                                ket = cursor;
                                cursor = v_20;
                                break golab21;
                            } while (false);
                            cursor = v_20;
                            if (cursor >= limit)
                            {
                                break lab20;
                            }
                            cursor++;
                        }
                        // <-, line 243
                        slice_from("y");
                        continue replab19;
                    } while (false);
                    cursor = v_19;
                    break replab19;
                }
            } while (false);
            cursor = v_18;
            return true;
        }

