                @Override
                public boolean stem() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
                    // (, line 139
                    // do, line 140
                    v_1 = cursor;
                    lab0: do {
                        // call mark_regions, line 140
                        if (!r_mark_regions())
                        {
                            break lab0;
                        }
                    } while (false);
                    cursor = v_1;
                    // backwards, line 141
                    limit_backward = cursor; cursor = limit;
                    // (, line 141
                    // repeat, line 142
                    replab1: while(true)
                    {
                        v_2 = limit - cursor;
                        lab2: do {
                            // call aditzak, line 142
                            if (!r_aditzak())
                            {
                                break lab2;
                            }
                            continue replab1;
                        } while (false);
                        cursor = limit - v_2;
                        break replab1;
                    }
                    // repeat, line 143
                    replab3: while(true)
                    {
                        v_3 = limit - cursor;
                        lab4: do {
                            // call izenak, line 143
                            if (!r_izenak())
                            {
                                break lab4;
                            }
                            continue replab3;
                        } while (false);
                        cursor = limit - v_3;
                        break replab3;
                    }
                    // do, line 144
                    v_4 = limit - cursor;
                    lab5: do {
                        // call adjetiboak, line 144
                        if (!r_adjetiboak())
                        {
                            break lab5;
                        }
                    } while (false);
                    cursor = limit - v_4;
                    cursor = limit_backward;                    return true;
                }

