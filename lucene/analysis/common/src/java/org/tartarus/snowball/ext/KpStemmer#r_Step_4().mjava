private boolean r_Step_4() {
  int among_var;
  lab0: {
    int v_1 = limit - cursor;
    lab1: {
      ket = cursor;
      among_var = find_among_b(a_3);
      if (among_var == 0)
      {
        break lab1;
      }
      bra = cursor;
      switch (among_var) {
        case 1:
          if (!r_R1())
          {
            break lab1;
          }
          slice_from("ie");
          break;
        case 2:
          if (!r_R1())
          {
            break lab1;
          }
          slice_from("eer");
          break;
        case 3:
          if (!r_R1())
          {
            break lab1;
          }
          slice_del();
          break;
        case 4:
          if (!r_R1())
          {
            break lab1;
          }
          if (!r_V())
          {
            break lab1;
          }
          slice_from("n");
          break;
        case 5:
          if (!r_R1())
          {
            break lab1;
          }
          if (!r_V())
          {
            break lab1;
          }
          slice_from("l");
          break;
        case 6:
          if (!r_R1())
          {
            break lab1;
          }
          if (!r_V())
          {
            break lab1;
          }
          slice_from("r");
          break;
        case 7:
          if (!r_R1())
          {
            break lab1;
          }
          slice_from("teer");
          break;
        case 8:
          if (!r_R1())
          {
            break lab1;
          }
          slice_from("lijk");
          break;
        case 9:
          if (!r_R1())
          {
            break lab1;
          }
          if (!r_C())
          {
            break lab1;
          }
          slice_del();
          if (!r_lengthen_V())
          {
            break lab1;
          }
          break;
      }
      break lab0;
    }
    cursor = limit - v_1;
    ket = cursor;
    if (find_among_b(a_4) == 0)
    {
      return false;
    }
    bra = cursor;
    if (!r_R1())
    {
      return false;
    }
    if (!r_C())
    {
      return false;
    }
    slice_del();
    if (!r_lengthen_V())
    {
      return false;
    }
  }
  return true;
}

