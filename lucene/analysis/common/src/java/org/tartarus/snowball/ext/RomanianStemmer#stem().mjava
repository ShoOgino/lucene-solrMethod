                @Override
                public boolean stem() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
                    // (, line 225
                    // do, line 226
                    v_1 = cursor;
                    lab0: do {
                        // call prelude, line 226
                        if (!r_prelude())
                        {
                            break lab0;
                        }
                    } while (false);
                    cursor = v_1;
                    // do, line 227
                    v_2 = cursor;
                    lab1: do {
                        // call mark_regions, line 227
                        if (!r_mark_regions())
                        {
                            break lab1;
                        }
                    } while (false);
                    cursor = v_2;
                    // backwards, line 228
                    limit_backward = cursor; cursor = limit;
                    // (, line 228
                    // do, line 229
                    v_3 = limit - cursor;
                    lab2: do {
                        // call step_0, line 229
                        if (!r_step_0())
                        {
                            break lab2;
                        }
                    } while (false);
                    cursor = limit - v_3;
                    // do, line 230
                    v_4 = limit - cursor;
                    lab3: do {
                        // call standard_suffix, line 230
                        if (!r_standard_suffix())
                        {
                            break lab3;
                        }
                    } while (false);
                    cursor = limit - v_4;
                    // do, line 231
                    v_5 = limit - cursor;
                    lab4: do {
                        // (, line 231
                        // or, line 231
                        lab5: do {
                            v_6 = limit - cursor;
                            lab6: do {
                                // Boolean test standard_suffix_removed, line 231
                                if (!(B_standard_suffix_removed))
                                {
                                    break lab6;
                                }
                                break lab5;
                            } while (false);
                            cursor = limit - v_6;
                            // call verb_suffix, line 231
                            if (!r_verb_suffix())
                            {
                                break lab4;
                            }
                        } while (false);
                    } while (false);
                    cursor = limit - v_5;
                    // do, line 232
                    v_7 = limit - cursor;
                    lab7: do {
                        // call vowel_suffix, line 232
                        if (!r_vowel_suffix())
                        {
                            break lab7;
                        }
                    } while (false);
                    cursor = limit - v_7;
                    cursor = limit_backward;                    // do, line 234
                    v_8 = cursor;
                    lab8: do {
                        // call postlude, line 234
                        if (!r_postlude())
                        {
                            break lab8;
                        }
                    } while (false);
                    cursor = v_8;
                    return true;
                }

