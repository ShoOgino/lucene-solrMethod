public boolean stem() {
  int v_1 = cursor;
  r_mark_regions();
  cursor = v_1;
  B_ending_removed = false;
  limit_backward = cursor;
  cursor = limit;
  int v_2 = limit - cursor;
  r_particle_etc();
  cursor = limit - v_2;
  int v_3 = limit - cursor;
  r_possessive();
  cursor = limit - v_3;
  int v_4 = limit - cursor;
  r_case_ending();
  cursor = limit - v_4;
  int v_5 = limit - cursor;
  r_other_endings();
  cursor = limit - v_5;
  lab0: {
    lab1: {
      if (!(B_ending_removed))
      {
        break lab1;
      }
      int v_7 = limit - cursor;
      r_i_plural();
      cursor = limit - v_7;
      break lab0;
    }
    int v_8 = limit - cursor;
    r_t_plural();
    cursor = limit - v_8;
  }
  int v_9 = limit - cursor;
  r_tidy();
  cursor = limit - v_9;
  cursor = limit_backward;
  return true;
}

