    private boolean r_plural_three_first_cases() {
        int among_var;
        int v_1;
        int v_2;
        int v_3;
        int v_4;
        int v_5;
        int v_6;
        int v_7;
        int v_8;
        int v_9;
        int v_10;
        // (, line 127
        // setlimit, line 128
        v_1 = limit - cursor;
        // tomark, line 128
        if (cursor < I_p1)
        {
            return false;
        }
        cursor = I_p1;
        v_2 = limit_backward;
        limit_backward = cursor;
        cursor = limit - v_1;
        // (, line 128
        // [, line 128
        ket = cursor;
        // substring, line 128
        among_var = find_among_b(a_6, 7);
        if (among_var == 0)
        {
            limit_backward = v_2;
            return false;
        }
        // ], line 128
        bra = cursor;
        limit_backward = v_2;
        switch(among_var) {
            case 0:
                return false;
            case 1:
                // (, line 130
                // <-, line 130
                slice_from("iku");
                break;
            case 2:
                // (, line 131
                // <-, line 131
                slice_from("iku");
                break;
            case 3:
                // (, line 132
                // <-, line 132
                slice_from("iku");
                break;
            case 4:
                // (, line 133
                // not, line 133
            {
                v_3 = limit - cursor;
                lab0: do {
                    // call LONGV, line 133
                    if (!r_LONGV())
                    {
                        break lab0;
                    }
                    return false;
                } while (false);
                cursor = limit - v_3;
            }
            // delete, line 133
            slice_del();
            break;
            case 5:
                // (, line 134
                // or, line 134
                lab1: do {
                    v_4 = limit - cursor;
                    lab2: do {
                        // (, line 134
                        // test, line 134
                        v_5 = limit - cursor;
                        // hop, line 134
                        {
                            int c = cursor - 4;
                            if (limit_backward > c || c > limit)
                            {
                                break lab2;
                            }
                            cursor = c;
                        }
                        cursor = limit - v_5;
                        // (, line 134
                        // or, line 134
                        lab3: do {
                            v_6 = limit - cursor;
                            lab4: do {
                                // (, line 134
                                // literal, line 134
                                if (!(eq_s_b(3, "mis")))
                                {
                                    break lab4;
                                }
                                // <-, line 134
                                slice_from("e");
                                break lab3;
                            } while (false);
                            cursor = limit - v_6;
                            lab5: do {
                                // (, line 134
                                // literal, line 134
                                if (!(eq_s_b(3, "las")))
                                {
                                    break lab5;
                                }
                                // <-, line 134
                                slice_from("e");
                                break lab3;
                            } while (false);
                            cursor = limit - v_6;
                            lab6: do {
                                // (, line 134
                                // literal, line 134
                                if (!(eq_s_b(3, "lis")))
                                {
                                    break lab6;
                                }
                                // <-, line 134
                                slice_from("e");
                                break lab3;
                            } while (false);
                            cursor = limit - v_6;
                            // (, line 134
                            // not, line 134
                            {
                                v_7 = limit - cursor;
                                lab7: do {
                                    // literal, line 134
                                    if (!(eq_s_b(1, "t")))
                                    {
                                        break lab7;
                                    }
                                    break lab2;
                                } while (false);
                                cursor = limit - v_7;
                            }
                            // delete, line 134
                            slice_del();
                        } while (false);
                        break lab1;
                    } while (false);
                    cursor = limit - v_4;
                    // (, line 134
                    // not, line 134
                    {
                        v_8 = limit - cursor;
                        lab8: do {
                            // literal, line 134
                            if (!(eq_s_b(1, "t")))
                            {
                                break lab8;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_8;
                    }
                    // <-, line 134
                    slice_from("t");
                } while (false);
                break;
            case 6:
                // (, line 135
                // (, line 135
                // or, line 135
                lab9: do {
                    v_9 = limit - cursor;
                    lab10: do {
                        if (!(in_grouping_b(g_RV, 97, 117)))
                        {
                            break lab10;
                        }
                        break lab9;
                    } while (false);
                    cursor = limit - v_9;
                    // call LONGV, line 135
                    if (!r_LONGV())
                    {
                        return false;
                    }
                } while (false);
                // delete, line 135
                slice_del();
                break;
            case 7:
                // (, line 136
                // (, line 136
                // or, line 136
                lab11: do {
                    v_10 = limit - cursor;
                    lab12: do {
                        if (!(in_grouping_b(g_RV, 97, 117)))
                        {
                            break lab12;
                        }
                        break lab11;
                    } while (false);
                    cursor = limit - v_10;
                    // call LONGV, line 136
                    if (!r_LONGV())
                    {
                        return false;
                    }
                } while (false);
                // delete, line 136
                slice_del();
                break;
        }
        return true;
    }

