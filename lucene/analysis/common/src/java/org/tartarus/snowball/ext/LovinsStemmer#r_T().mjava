                private boolean r_T() {
            int v_1;
            int v_2;
            int v_3;
                    // (, line 40
                    // test, line 40
                    v_1 = limit - cursor;
                    // hop, line 40
                    {
                        int c = cursor - 2;
                        if (limit_backward > c || c > limit)
                        {
                            return false;
                        }
                        cursor = c;
                    }
                    cursor = limit - v_1;
                    // or, line 40
                    lab0: do {
                        v_2 = limit - cursor;
                        lab1: do {
                            // literal, line 40
                            if (!(eq_s_b(1, "s")))
                            {
                                break lab1;
                            }
                            break lab0;
                        } while (false);
                        cursor = limit - v_2;
                        // (, line 40
                        // literal, line 40
                        if (!(eq_s_b(1, "t")))
                        {
                            return false;
                        }
                        // not, line 40
                        {
                            v_3 = limit - cursor;
                            lab2: do {
                                // literal, line 40
                                if (!(eq_s_b(1, "o")))
                                {
                                    break lab2;
                                }
                                return false;
                            } while (false);
                            cursor = limit - v_3;
                        }
                    } while (false);
                    return true;
                }

