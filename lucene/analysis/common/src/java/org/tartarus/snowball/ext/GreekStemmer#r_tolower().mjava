private boolean r_tolower() {
  int among_var;
  while(true)
  {
    int v_1 = limit - cursor;
    lab0: {
      ket = cursor;
      among_var = find_among_b(a_0);
      if (among_var == 0)
      {
        break lab0;
      }
      bra = cursor;
      switch (among_var) {
        case 1:
          slice_from("\u03B1");
          break;
        case 2:
          slice_from("\u03B2");
          break;
        case 3:
          slice_from("\u03B3");
          break;
        case 4:
          slice_from("\u03B4");
          break;
        case 5:
          slice_from("\u03B5");
          break;
        case 6:
          slice_from("\u03B6");
          break;
        case 7:
          slice_from("\u03B7");
          break;
        case 8:
          slice_from("\u03B8");
          break;
        case 9:
          slice_from("\u03B9");
          break;
        case 10:
          slice_from("\u03BA");
          break;
        case 11:
          slice_from("\u03BB");
          break;
        case 12:
          slice_from("\u03BC");
          break;
        case 13:
          slice_from("\u03BD");
          break;
        case 14:
          slice_from("\u03BE");
          break;
        case 15:
          slice_from("\u03BF");
          break;
        case 16:
          slice_from("\u03C0");
          break;
        case 17:
          slice_from("\u03C1");
          break;
        case 18:
          slice_from("\u03C3");
          break;
        case 19:
          slice_from("\u03C4");
          break;
        case 20:
          slice_from("\u03C5");
          break;
        case 21:
          slice_from("\u03C6");
          break;
        case 22:
          slice_from("\u03C7");
          break;
        case 23:
          slice_from("\u03C8");
          break;
        case 24:
          slice_from("\u03C9");
          break;
        case 25:
          if (cursor <= limit_backward)
          {
            break lab0;
          }
          cursor--;
          break;
      }
      continue;
    }
    cursor = limit - v_1;
    break;
  }
  return true;
}

