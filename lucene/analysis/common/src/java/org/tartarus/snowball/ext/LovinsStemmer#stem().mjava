                @Override
                public boolean stem() {
            int v_1;
            int v_2;
            int v_3;
                    // (, line 200
                    // backwards, line 202
                    limit_backward = cursor; cursor = limit;
                    // (, line 202
                    // do, line 203
                    v_1 = limit - cursor;
                    lab0: do {
                        // call endings, line 203
                        if (!r_endings())
                        {
                            break lab0;
                        }
                    } while (false);
                    cursor = limit - v_1;
                    // do, line 204
                    v_2 = limit - cursor;
                    lab1: do {
                        // call undouble, line 204
                        if (!r_undouble())
                        {
                            break lab1;
                        }
                    } while (false);
                    cursor = limit - v_2;
                    // do, line 205
                    v_3 = limit - cursor;
                    lab2: do {
                        // call respell, line 205
                        if (!r_respell())
                        {
                            break lab2;
                        }
                    } while (false);
                    cursor = limit - v_3;
                    cursor = limit_backward;                    return true;
                }

