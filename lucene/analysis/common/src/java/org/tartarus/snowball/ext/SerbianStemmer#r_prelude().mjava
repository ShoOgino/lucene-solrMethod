private boolean r_prelude() {
  int v_1 = cursor;
  lab0: {
    while(true)
    {
      int v_2 = cursor;
      lab1: {
        golab2: while(true)
        {
          int v_3 = cursor;
          lab3: {
            if (!(in_grouping(g_ca, 98, 382)))
            {
              break lab3;
            }
            bra = cursor;
            if (!(eq_s("ije")))
            {
              break lab3;
            }
            ket = cursor;
            if (!(in_grouping(g_ca, 98, 382)))
            {
              break lab3;
            }
            slice_from("e");
            cursor = v_3;
            break golab2;
          }
          cursor = v_3;
          if (cursor >= limit)
          {
            break lab1;
          }
          cursor++;
        }
        continue;
      }
      cursor = v_2;
      break;
    }
  }
  cursor = v_1;
  int v_4 = cursor;
  lab4: {
    while(true)
    {
      int v_5 = cursor;
      lab5: {
        golab6: while(true)
        {
          int v_6 = cursor;
          lab7: {
            if (!(in_grouping(g_ca, 98, 382)))
            {
              break lab7;
            }
            bra = cursor;
            if (!(eq_s("je")))
            {
              break lab7;
            }
            ket = cursor;
            if (!(in_grouping(g_ca, 98, 382)))
            {
              break lab7;
            }
            slice_from("e");
            cursor = v_6;
            break golab6;
          }
          cursor = v_6;
          if (cursor >= limit)
          {
            break lab5;
          }
          cursor++;
        }
        continue;
      }
      cursor = v_5;
      break;
    }
  }
  cursor = v_4;
  int v_7 = cursor;
  lab8: {
    while(true)
    {
      int v_8 = cursor;
      lab9: {
        golab10: while(true)
        {
          int v_9 = cursor;
          lab11: {
            bra = cursor;
            if (!(eq_s("dj")))
            {
              break lab11;
            }
            ket = cursor;
            slice_from("\u0111");
            cursor = v_9;
            break golab10;
          }
          cursor = v_9;
          if (cursor >= limit)
          {
            break lab9;
          }
          cursor++;
        }
        continue;
      }
      cursor = v_8;
      break;
    }
  }
  cursor = v_7;
  return true;
}

