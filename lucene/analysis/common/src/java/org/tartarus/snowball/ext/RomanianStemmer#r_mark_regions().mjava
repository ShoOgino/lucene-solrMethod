private boolean r_mark_regions() {
  I_pV = limit;
  I_p1 = limit;
  I_p2 = limit;
  int v_1 = cursor;
  lab0: {
    lab1: {
      int v_2 = cursor;
      lab2: {
        if (!(in_grouping(g_v, 97, 259)))
        {
          break lab2;
        }
        lab3: {
          int v_3 = cursor;
          lab4: {
            if (!(out_grouping(g_v, 97, 259)))
            {
              break lab4;
            }
            golab5: while(true)
            {
              lab6: {
                if (!(in_grouping(g_v, 97, 259)))
                {
                  break lab6;
                }
                break golab5;
              }
              if (cursor >= limit)
              {
                break lab4;
              }
              cursor++;
            }
            break lab3;
          }
          cursor = v_3;
          if (!(in_grouping(g_v, 97, 259)))
          {
            break lab2;
          }
          golab7: while(true)
          {
            lab8: {
              if (!(out_grouping(g_v, 97, 259)))
              {
                break lab8;
              }
              break golab7;
            }
            if (cursor >= limit)
            {
              break lab2;
            }
            cursor++;
          }
        }
        break lab1;
      }
      cursor = v_2;
      if (!(out_grouping(g_v, 97, 259)))
      {
        break lab0;
      }
      lab9: {
        int v_6 = cursor;
        lab10: {
          if (!(out_grouping(g_v, 97, 259)))
          {
            break lab10;
          }
          golab11: while(true)
          {
            lab12: {
              if (!(in_grouping(g_v, 97, 259)))
              {
                break lab12;
              }
              break golab11;
            }
            if (cursor >= limit)
            {
              break lab10;
            }
            cursor++;
          }
          break lab9;
        }
        cursor = v_6;
        if (!(in_grouping(g_v, 97, 259)))
        {
          break lab0;
        }
        if (cursor >= limit)
        {
          break lab0;
        }
        cursor++;
      }
    }
    I_pV = cursor;
  }
  cursor = v_1;
  int v_8 = cursor;
  lab13: {
    golab14: while(true)
    {
      lab15: {
        if (!(in_grouping(g_v, 97, 259)))
        {
          break lab15;
        }
        break golab14;
      }
      if (cursor >= limit)
      {
        break lab13;
      }
      cursor++;
    }
    golab16: while(true)
    {
      lab17: {
        if (!(out_grouping(g_v, 97, 259)))
        {
          break lab17;
        }
        break golab16;
      }
      if (cursor >= limit)
      {
        break lab13;
      }
      cursor++;
    }
    I_p1 = cursor;
    golab18: while(true)
    {
      lab19: {
        if (!(in_grouping(g_v, 97, 259)))
        {
          break lab19;
        }
        break golab18;
      }
      if (cursor >= limit)
      {
        break lab13;
      }
      cursor++;
    }
    golab20: while(true)
    {
      lab21: {
        if (!(out_grouping(g_v, 97, 259)))
        {
          break lab21;
        }
        break golab20;
      }
      if (cursor >= limit)
      {
        break lab13;
      }
      cursor++;
    }
    I_p2 = cursor;
  }
  cursor = v_8;
  return true;
}

