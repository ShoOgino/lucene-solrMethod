                private boolean r_standard_suffix() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            int v_10;
                    // (, line 106
                    // do, line 107
                    v_1 = limit - cursor;
                    lab0: do {
                        // (, line 107
                        // [, line 108
                        ket = cursor;
                        // substring, line 108
                        among_var = find_among_b(a_3, 5);
                        if (among_var == 0)
                        {
                            break lab0;
                        }
                        // ], line 108
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                break lab0;
                            case 1:
                                // (, line 110
                                // call R1, line 110
                                if (!r_R1())
                                {
                                    break lab0;
                                }
                                // <-, line 110
                                slice_from("heid");
                                break;
                            case 2:
                                // (, line 113
                                // call en_ending, line 113
                                if (!r_en_ending())
                                {
                                    break lab0;
                                }
                                break;
                            case 3:
                                // (, line 116
                                // call R1, line 116
                                if (!r_R1())
                                {
                                    break lab0;
                                }
                                if (!(out_grouping_b(g_v_j, 97, 232)))
                                {
                                    break lab0;
                                }
                                // delete, line 116
                                slice_del();
                                break;
                        }
                    } while (false);
                    cursor = limit - v_1;
                    // do, line 120
                    v_2 = limit - cursor;
                    lab1: do {
                        // call e_ending, line 120
                        if (!r_e_ending())
                        {
                            break lab1;
                        }
                    } while (false);
                    cursor = limit - v_2;
                    // do, line 122
                    v_3 = limit - cursor;
                    lab2: do {
                        // (, line 122
                        // [, line 122
                        ket = cursor;
                        // literal, line 122
                        if (!(eq_s_b(4, "heid")))
                        {
                            break lab2;
                        }
                        // ], line 122
                        bra = cursor;
                        // call R2, line 122
                        if (!r_R2())
                        {
                            break lab2;
                        }
                        // not, line 122
                        {
                            v_4 = limit - cursor;
                            lab3: do {
                                // literal, line 122
                                if (!(eq_s_b(1, "c")))
                                {
                                    break lab3;
                                }
                                break lab2;
                            } while (false);
                            cursor = limit - v_4;
                        }
                        // delete, line 122
                        slice_del();
                        // [, line 123
                        ket = cursor;
                        // literal, line 123
                        if (!(eq_s_b(2, "en")))
                        {
                            break lab2;
                        }
                        // ], line 123
                        bra = cursor;
                        // call en_ending, line 123
                        if (!r_en_ending())
                        {
                            break lab2;
                        }
                    } while (false);
                    cursor = limit - v_3;
                    // do, line 126
                    v_5 = limit - cursor;
                    lab4: do {
                        // (, line 126
                        // [, line 127
                        ket = cursor;
                        // substring, line 127
                        among_var = find_among_b(a_4, 6);
                        if (among_var == 0)
                        {
                            break lab4;
                        }
                        // ], line 127
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                break lab4;
                            case 1:
                                // (, line 129
                                // call R2, line 129
                                if (!r_R2())
                                {
                                    break lab4;
                                }
                                // delete, line 129
                                slice_del();
                                // or, line 130
                                lab5: do {
                                    v_6 = limit - cursor;
                                    lab6: do {
                                        // (, line 130
                                        // [, line 130
                                        ket = cursor;
                                        // literal, line 130
                                        if (!(eq_s_b(2, "ig")))
                                        {
                                            break lab6;
                                        }
                                        // ], line 130
                                        bra = cursor;
                                        // call R2, line 130
                                        if (!r_R2())
                                        {
                                            break lab6;
                                        }
                                        // not, line 130
                                        {
                                            v_7 = limit - cursor;
                                            lab7: do {
                                                // literal, line 130
                                                if (!(eq_s_b(1, "e")))
                                                {
                                                    break lab7;
                                                }
                                                break lab6;
                                            } while (false);
                                            cursor = limit - v_7;
                                        }
                                        // delete, line 130
                                        slice_del();
                                        break lab5;
                                    } while (false);
                                    cursor = limit - v_6;
                                    // call undouble, line 130
                                    if (!r_undouble())
                                    {
                                        break lab4;
                                    }
                                } while (false);
                                break;
                            case 2:
                                // (, line 133
                                // call R2, line 133
                                if (!r_R2())
                                {
                                    break lab4;
                                }
                                // not, line 133
                                {
                                    v_8 = limit - cursor;
                                    lab8: do {
                                        // literal, line 133
                                        if (!(eq_s_b(1, "e")))
                                        {
                                            break lab8;
                                        }
                                        break lab4;
                                    } while (false);
                                    cursor = limit - v_8;
                                }
                                // delete, line 133
                                slice_del();
                                break;
                            case 3:
                                // (, line 136
                                // call R2, line 136
                                if (!r_R2())
                                {
                                    break lab4;
                                }
                                // delete, line 136
                                slice_del();
                                // call e_ending, line 136
                                if (!r_e_ending())
                                {
                                    break lab4;
                                }
                                break;
                            case 4:
                                // (, line 139
                                // call R2, line 139
                                if (!r_R2())
                                {
                                    break lab4;
                                }
                                // delete, line 139
                                slice_del();
                                break;
                            case 5:
                                // (, line 142
                                // call R2, line 142
                                if (!r_R2())
                                {
                                    break lab4;
                                }
                                // Boolean test e_found, line 142
                                if (!(B_e_found))
                                {
                                    break lab4;
                                }
                                // delete, line 142
                                slice_del();
                                break;
                        }
                    } while (false);
                    cursor = limit - v_5;
                    // do, line 146
                    v_9 = limit - cursor;
                    lab9: do {
                        // (, line 146
                        if (!(out_grouping_b(g_v_I, 73, 232)))
                        {
                            break lab9;
                        }
                        // test, line 148
                        v_10 = limit - cursor;
                        // (, line 148
                        // among, line 149
                        if (find_among_b(a_5, 4) == 0)
                        {
                            break lab9;
                        }
                        if (!(out_grouping_b(g_v, 97, 232)))
                        {
                            break lab9;
                        }
                        cursor = limit - v_10;
                        // [, line 152
                        ket = cursor;
                        // next, line 152
                        if (cursor <= limit_backward)
                        {
                            break lab9;
                        }
                        cursor--;
                        // ], line 152
                        bra = cursor;
                        // delete, line 152
                        slice_del();
                    } while (false);
                    cursor = limit - v_9;
                    return true;
                }

