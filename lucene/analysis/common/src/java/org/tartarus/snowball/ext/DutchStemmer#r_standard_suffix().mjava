private boolean r_standard_suffix() {
  int among_var;
  int v_1 = limit - cursor;
  lab0: {
    ket = cursor;
    among_var = find_among_b(a_3);
    if (among_var == 0)
    {
      break lab0;
    }
    bra = cursor;
    switch (among_var) {
      case 1:
        if (!r_R1())
        {
          break lab0;
        }
        slice_from("heid");
        break;
      case 2:
        if (!r_en_ending())
        {
          break lab0;
        }
        break;
      case 3:
        if (!r_R1())
        {
          break lab0;
        }
        if (!(out_grouping_b(g_v_j, 97, 232)))
        {
          break lab0;
        }
        slice_del();
        break;
    }
  }
  cursor = limit - v_1;
  int v_2 = limit - cursor;
  r_e_ending();
  cursor = limit - v_2;
  int v_3 = limit - cursor;
  lab1: {
    ket = cursor;
    if (!(eq_s_b("heid")))
    {
      break lab1;
    }
    bra = cursor;
    if (!r_R2())
    {
      break lab1;
    }
    {
      int v_4 = limit - cursor;
      lab2: {
        if (!(eq_s_b("c")))
        {
          break lab2;
        }
        break lab1;
      }
      cursor = limit - v_4;
    }
    slice_del();
    ket = cursor;
    if (!(eq_s_b("en")))
    {
      break lab1;
    }
    bra = cursor;
    if (!r_en_ending())
    {
      break lab1;
    }
  }
  cursor = limit - v_3;
  int v_5 = limit - cursor;
  lab3: {
    ket = cursor;
    among_var = find_among_b(a_4);
    if (among_var == 0)
    {
      break lab3;
    }
    bra = cursor;
    switch (among_var) {
      case 1:
        if (!r_R2())
        {
          break lab3;
        }
        slice_del();
        lab4: {
          int v_6 = limit - cursor;
          lab5: {
            ket = cursor;
            if (!(eq_s_b("ig")))
            {
              break lab5;
            }
            bra = cursor;
            if (!r_R2())
            {
              break lab5;
            }
            {
              int v_7 = limit - cursor;
              lab6: {
                if (!(eq_s_b("e")))
                {
                  break lab6;
                }
                break lab5;
              }
              cursor = limit - v_7;
            }
            slice_del();
            break lab4;
          }
          cursor = limit - v_6;
          if (!r_undouble())
          {
            break lab3;
          }
        }
        break;
      case 2:
        if (!r_R2())
        {
          break lab3;
        }
        {
          int v_8 = limit - cursor;
          lab7: {
            if (!(eq_s_b("e")))
            {
              break lab7;
            }
            break lab3;
          }
          cursor = limit - v_8;
        }
        slice_del();
        break;
      case 3:
        if (!r_R2())
        {
          break lab3;
        }
        slice_del();
        if (!r_e_ending())
        {
          break lab3;
        }
        break;
      case 4:
        if (!r_R2())
        {
          break lab3;
        }
        slice_del();
        break;
      case 5:
        if (!r_R2())
        {
          break lab3;
        }
        if (!(B_e_found))
        {
          break lab3;
        }
        slice_del();
        break;
    }
  }
  cursor = limit - v_5;
  int v_9 = limit - cursor;
  lab8: {
    if (!(out_grouping_b(g_v_I, 73, 232)))
    {
      break lab8;
    }
    int v_10 = limit - cursor;
    if (find_among_b(a_5) == 0)
    {
      break lab8;
    }
    if (!(out_grouping_b(g_v, 97, 232)))
    {
      break lab8;
    }
    cursor = limit - v_10;
    ket = cursor;
    if (cursor <= limit_backward)
    {
      break lab8;
    }
    cursor--;
    bra = cursor;
    slice_del();
  }
  cursor = limit - v_9;
  return true;
}

