                private boolean r_Step_1b() {
            int among_var;
            int v_1;
            int v_3;
            int v_4;
                    // (, line 33
                    // [, line 34
                    ket = cursor;
                    // substring, line 34
                    among_var = find_among_b(a_2, 3);
                    if (among_var == 0)
                    {
                        return false;
                    }
                    // ], line 34
                    bra = cursor;
                    switch(among_var) {
                        case 0:
                            return false;
                        case 1:
                            // (, line 35
                            // call R1, line 35
                            if (!r_R1())
                            {
                                return false;
                            }
                            // <-, line 35
                            slice_from("ee");
                            break;
                        case 2:
                            // (, line 37
                            // test, line 38
                            v_1 = limit - cursor;
                            // gopast, line 38
                            golab0: while(true)
                            {
                                lab1: do {
                                    if (!(in_grouping_b(g_v, 97, 121)))
                                    {
                                        break lab1;
                                    }
                                    break golab0;
                                } while (false);
                                if (cursor <= limit_backward)
                                {
                                    return false;
                                }
                                cursor--;
                            }
                            cursor = limit - v_1;
                            // delete, line 38
                            slice_del();
                            // test, line 39
                            v_3 = limit - cursor;
                            // substring, line 39
                            among_var = find_among_b(a_1, 13);
                            if (among_var == 0)
                            {
                                return false;
                            }
                            cursor = limit - v_3;
                            switch(among_var) {
                                case 0:
                                    return false;
                                case 1:
                                    // (, line 41
                                    // <+, line 41
                                    {
                                        int c = cursor;
                                        insert(cursor, cursor, "e");
                                        cursor = c;
                                    }
                                    break;
                                case 2:
                                    // (, line 44
                                    // [, line 44
                                    ket = cursor;
                                    // next, line 44
                                    if (cursor <= limit_backward)
                                    {
                                        return false;
                                    }
                                    cursor--;
                                    // ], line 44
                                    bra = cursor;
                                    // delete, line 44
                                    slice_del();
                                    break;
                                case 3:
                                    // (, line 45
                                    // atmark, line 45
                                    if (cursor != I_p1)
                                    {
                                        return false;
                                    }
                                    // test, line 45
                                    v_4 = limit - cursor;
                                    // call shortv, line 45
                                    if (!r_shortv())
                                    {
                                        return false;
                                    }
                                    cursor = limit - v_4;
                                    // <+, line 45
                                    {
                                        int c = cursor;
                                        insert(cursor, cursor, "e");
                                        cursor = c;
                                    }
                                    break;
                            }
                            break;
                    }
                    return true;
                }

