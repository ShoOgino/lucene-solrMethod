private boolean r_remove_vetrumai_urupukal() {
  B_found_a_match = false;
  B_found_vetrumai_urupu = false;
  if (!r_has_min_length())
  {
    return false;
  }
  limit_backward = cursor;
  cursor = limit;
  lab0: {
    int v_1 = limit - cursor;
    lab1: {
      int v_2 = limit - cursor;
      ket = cursor;
      if (!(eq_s_b("\u0BA9\u0BC8")))
      {
        break lab1;
      }
      bra = cursor;
      slice_del();
      cursor = limit - v_2;
      break lab0;
    }
    cursor = limit - v_1;
    lab2: {
      int v_3 = limit - cursor;
      ket = cursor;
      lab3: {
        int v_4 = limit - cursor;
        lab4: {
          lab5: {
            int v_5 = limit - cursor;
            lab6: {
              if (!(eq_s_b("\u0BBF\u0BA9\u0BC8")))
              {
                break lab6;
              }
              break lab5;
            }
            cursor = limit - v_5;
            if (!(eq_s_b("\u0BC8")))
            {
              break lab4;
            }
          }
          int v_6 = limit - cursor;
          {
            int v_7 = limit - cursor;
            lab7: {
              if (find_among_b(a_18) == 0)
              {
                break lab7;
              }
              break lab4;
            }
            cursor = limit - v_7;
          }
          cursor = limit - v_6;
          break lab3;
        }
        cursor = limit - v_4;
        if (!(eq_s_b("\u0BC8")))
        {
          break lab2;
        }
        int v_8 = limit - cursor;
        if (find_among_b(a_19) == 0)
        {
          break lab2;
        }
        if (!(eq_s_b("\u0BCD")))
        {
          break lab2;
        }
        cursor = limit - v_8;
      }
      bra = cursor;
      slice_from("\u0BCD");
      cursor = limit - v_3;
      break lab0;
    }
    cursor = limit - v_1;
    lab8: {
      int v_9 = limit - cursor;
      ket = cursor;
      lab9: {
        int v_10 = limit - cursor;
        lab10: {
          if (!(eq_s_b("\u0BCA\u0B9F\u0BC1")))
          {
            break lab10;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab11: {
          if (!(eq_s_b("\u0BCB\u0B9F\u0BC1")))
          {
            break lab11;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab12: {
          if (!(eq_s_b("\u0BBF\u0BB2\u0BCD")))
          {
            break lab12;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab13: {
          if (!(eq_s_b("\u0BBF\u0BB1\u0BCD")))
          {
            break lab13;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab14: {
          if (!(eq_s_b("\u0BBF\u0BA9\u0BCD")))
          {
            break lab14;
          }
          int v_11 = limit - cursor;
          {
            int v_12 = limit - cursor;
            lab15: {
              if (!(eq_s_b("\u0BAE")))
              {
                break lab15;
              }
              break lab14;
            }
            cursor = limit - v_12;
          }
          cursor = limit - v_11;
          break lab9;
        }
        cursor = limit - v_10;
        lab16: {
          if (!(eq_s_b("\u0BBF\u0BA9\u0BCD\u0BB1\u0BC1")))
          {
            break lab16;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab17: {
          if (!(eq_s_b("\u0BBF\u0BB0\u0BC1\u0BA8\u0BCD\u0BA4\u0BC1")))
          {
            break lab17;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab18: {
          if (!(eq_s_b("\u0BB5\u0BBF\u0B9F")))
          {
            break lab18;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab19: {
          if (!(limit >= 7))
          {
            break lab19;
          }
          if (!(eq_s_b("\u0BBF\u0B9F\u0BAE\u0BCD")))
          {
            break lab19;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab20: {
          if (!(eq_s_b("\u0BBE\u0BB2\u0BCD")))
          {
            break lab20;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab21: {
          if (!(eq_s_b("\u0BC1\u0B9F\u0BC8")))
          {
            break lab21;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab22: {
          if (!(eq_s_b("\u0BBE\u0BAE\u0BB2\u0BCD")))
          {
            break lab22;
          }
          break lab9;
        }
        cursor = limit - v_10;
        lab23: {
          if (!(eq_s_b("\u0BB2\u0BCD")))
          {
            break lab23;
          }
          int v_13 = limit - cursor;
          {
            int v_14 = limit - cursor;
            lab24: {
              if (find_among_b(a_20) == 0)
              {
                break lab24;
              }
              break lab23;
            }
            cursor = limit - v_14;
          }
          cursor = limit - v_13;
          break lab9;
        }
        cursor = limit - v_10;
        if (!(eq_s_b("\u0BC1\u0BB3\u0BCD")))
        {
          break lab8;
        }
      }
      bra = cursor;
      slice_from("\u0BCD");
      cursor = limit - v_9;
      break lab0;
    }
    cursor = limit - v_1;
    lab25: {
      int v_15 = limit - cursor;
      ket = cursor;
      lab26: {
        int v_16 = limit - cursor;
        lab27: {
          if (!(eq_s_b("\u0B95\u0BA3\u0BCD")))
          {
            break lab27;
          }
          break lab26;
        }
        cursor = limit - v_16;
        lab28: {
          if (!(eq_s_b("\u0BAE\u0BC1\u0BA9\u0BCD")))
          {
            break lab28;
          }
          break lab26;
        }
        cursor = limit - v_16;
        lab29: {
          if (!(eq_s_b("\u0BAE\u0BC7\u0BB2\u0BCD")))
          {
            break lab29;
          }
          break lab26;
        }
        cursor = limit - v_16;
        lab30: {
          if (!(eq_s_b("\u0BAE\u0BC7\u0BB1\u0BCD")))
          {
            break lab30;
          }
          break lab26;
        }
        cursor = limit - v_16;
        lab31: {
          if (!(eq_s_b("\u0B95\u0BC0\u0BB4\u0BCD")))
          {
            break lab31;
          }
          break lab26;
        }
        cursor = limit - v_16;
        lab32: {
          if (!(eq_s_b("\u0BAA\u0BBF\u0BA9\u0BCD")))
          {
            break lab32;
          }
          break lab26;
        }
        cursor = limit - v_16;
        if (!(eq_s_b("\u0BA4\u0BC1")))
        {
          break lab25;
        }
        int v_17 = limit - cursor;
        {
          int v_18 = limit - cursor;
          lab33: {
            if (find_among_b(a_21) == 0)
            {
              break lab33;
            }
            break lab25;
          }
          cursor = limit - v_18;
        }
        cursor = limit - v_17;
      }
      bra = cursor;
      slice_del();
      cursor = limit - v_15;
      break lab0;
    }
    cursor = limit - v_1;
    int v_19 = limit - cursor;
    ket = cursor;
    if (!(eq_s_b("\u0BC0")))
    {
      return false;
    }
    bra = cursor;
    slice_from("\u0BBF");
    cursor = limit - v_19;
  }
  B_found_a_match = true;
  B_found_vetrumai_urupu = true;
  int v_20 = limit - cursor;
  lab34: {
    ket = cursor;
    if (!(eq_s_b("\u0BBF\u0BA9\u0BCD")))
    {
      break lab34;
    }
    bra = cursor;
    slice_from("\u0BCD");
  }
  cursor = limit - v_20;
  cursor = limit_backward;
  r_fix_endings();
  return true;
}

