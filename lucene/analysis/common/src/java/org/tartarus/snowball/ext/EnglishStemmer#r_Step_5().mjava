                private boolean r_Step_5() {
            int among_var;
            int v_1;
            int v_2;
                    // (, line 149
                    // [, line 150
                    ket = cursor;
                    // substring, line 150
                    among_var = find_among_b(a_8, 2);
                    if (among_var == 0)
                    {
                        return false;
                    }
                    // ], line 150
                    bra = cursor;
                    switch(among_var) {
                        case 0:
                            return false;
                        case 1:
                            // (, line 151
                            // or, line 151
                            lab0: do {
                                v_1 = limit - cursor;
                                lab1: do {
                                    // call R2, line 151
                                    if (!r_R2())
                                    {
                                        break lab1;
                                    }
                                    break lab0;
                                } while (false);
                                cursor = limit - v_1;
                                // (, line 151
                                // call R1, line 151
                                if (!r_R1())
                                {
                                    return false;
                                }
                                // not, line 151
                                {
                                    v_2 = limit - cursor;
                                    lab2: do {
                                        // call shortv, line 151
                                        if (!r_shortv())
                                        {
                                            break lab2;
                                        }
                                        return false;
                                    } while (false);
                                    cursor = limit - v_2;
                                }
                            } while (false);
                            // delete, line 151
                            slice_del();
                            break;
                        case 2:
                            // (, line 152
                            // call R2, line 152
                            if (!r_R2())
                            {
                                return false;
                            }
                            // literal, line 152
                            if (!(eq_s_b(1, "l")))
                            {
                                return false;
                            }
                            // delete, line 152
                            slice_del();
                            break;
                    }
                    return true;
                }

