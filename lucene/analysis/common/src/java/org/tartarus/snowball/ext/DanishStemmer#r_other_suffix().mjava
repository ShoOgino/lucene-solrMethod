private boolean r_other_suffix() {
  int among_var;
  int v_1 = limit - cursor;
  lab0: {
    ket = cursor;
    if (!(eq_s_b("st")))
    {
      break lab0;
    }
    bra = cursor;
    if (!(eq_s_b("ig")))
    {
      break lab0;
    }
    slice_del();
  }
  cursor = limit - v_1;
  if (cursor < I_p1)
  {
    return false;
  }
  int v_3 = limit_backward;
  limit_backward = I_p1;
  ket = cursor;
  among_var = find_among_b(a_2);
  if (among_var == 0)
  {
    limit_backward = v_3;
    return false;
  }
  bra = cursor;
  limit_backward = v_3;
  switch (among_var) {
    case 1:
      slice_del();
      int v_4 = limit - cursor;
      r_consonant_pair();
      cursor = limit - v_4;
      break;
    case 2:
      slice_from("l\u00F8s");
      break;
  }
  return true;
}

