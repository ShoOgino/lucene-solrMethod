private boolean r_prelude() {
  int among_var;
  int v_1 = cursor;
  while(true)
  {
    int v_2 = cursor;
    lab0: {
      bra = cursor;
      among_var = find_among(a_0);
      if (among_var == 0)
      {
        break lab0;
      }
      ket = cursor;
      switch (among_var) {
        case 1:
          slice_from("a");
          break;
        case 2:
          slice_from("e");
          break;
        case 3:
          slice_from("i");
          break;
        case 4:
          slice_from("o");
          break;
        case 5:
          slice_from("u");
          break;
        case 6:
          if (cursor >= limit)
          {
            break lab0;
          }
          cursor++;
          break;
      }
      continue;
    }
    cursor = v_2;
    break;
  }
  cursor = v_1;
  int v_3 = cursor;
  lab1: {
    bra = cursor;
    if (!(eq_s("y")))
    {
      cursor = v_3;
      break lab1;
    }
    ket = cursor;
    slice_from("Y");
  }
  while(true)
  {
    int v_4 = cursor;
    lab2: {
      golab3: while(true)
      {
        int v_5 = cursor;
        lab4: {
          if (!(in_grouping(g_v, 97, 232)))
          {
            break lab4;
          }
          bra = cursor;
          lab5: {
            int v_6 = cursor;
            lab6: {
              if (!(eq_s("i")))
              {
                break lab6;
              }
              ket = cursor;
              if (!(in_grouping(g_v, 97, 232)))
              {
                break lab6;
              }
              slice_from("I");
              break lab5;
            }
            cursor = v_6;
            if (!(eq_s("y")))
            {
              break lab4;
            }
            ket = cursor;
            slice_from("Y");
          }
          cursor = v_5;
          break golab3;
        }
        cursor = v_5;
        if (cursor >= limit)
        {
          break lab2;
        }
        cursor++;
      }
      continue;
    }
    cursor = v_4;
    break;
  }
  return true;
}

