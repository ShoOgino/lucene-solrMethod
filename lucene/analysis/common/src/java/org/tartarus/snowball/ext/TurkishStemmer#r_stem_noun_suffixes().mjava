private boolean r_stem_noun_suffixes() {
  lab0: {
    int v_1 = limit - cursor;
    lab1: {
      ket = cursor;
      if (!r_mark_lAr())
      {
        break lab1;
      }
      bra = cursor;
      slice_del();
      int v_2 = limit - cursor;
      lab2: {
        if (!r_stem_suffix_chain_before_ki())
        {
          cursor = limit - v_2;
          break lab2;
        }
      }
      break lab0;
    }
    cursor = limit - v_1;
    lab3: {
      ket = cursor;
      if (!r_mark_ncA())
      {
        break lab3;
      }
      bra = cursor;
      slice_del();
      int v_3 = limit - cursor;
      lab4: {
        lab5: {
          int v_4 = limit - cursor;
          lab6: {
            ket = cursor;
            if (!r_mark_lArI())
            {
              break lab6;
            }
            bra = cursor;
            slice_del();
            break lab5;
          }
          cursor = limit - v_4;
          lab7: {
            ket = cursor;
            lab8: {
              int v_5 = limit - cursor;
              lab9: {
                if (!r_mark_possessives())
                {
                  break lab9;
                }
                break lab8;
              }
              cursor = limit - v_5;
              if (!r_mark_sU())
              {
                break lab7;
              }
            }
            bra = cursor;
            slice_del();
            int v_6 = limit - cursor;
            lab10: {
              ket = cursor;
              if (!r_mark_lAr())
              {
                cursor = limit - v_6;
                break lab10;
              }
              bra = cursor;
              slice_del();
              if (!r_stem_suffix_chain_before_ki())
              {
                cursor = limit - v_6;
                break lab10;
              }
            }
            break lab5;
          }
          cursor = limit - v_4;
          ket = cursor;
          if (!r_mark_lAr())
          {
            cursor = limit - v_3;
            break lab4;
          }
          bra = cursor;
          slice_del();
          if (!r_stem_suffix_chain_before_ki())
          {
            cursor = limit - v_3;
            break lab4;
          }
        }
      }
      break lab0;
    }
    cursor = limit - v_1;
    lab11: {
      ket = cursor;
      lab12: {
        int v_7 = limit - cursor;
        lab13: {
          if (!r_mark_ndA())
          {
            break lab13;
          }
          break lab12;
        }
        cursor = limit - v_7;
        if (!r_mark_nA())
        {
          break lab11;
        }
      }
      lab14: {
        int v_8 = limit - cursor;
        lab15: {
          if (!r_mark_lArI())
          {
            break lab15;
          }
          bra = cursor;
          slice_del();
          break lab14;
        }
        cursor = limit - v_8;
        lab16: {
          if (!r_mark_sU())
          {
            break lab16;
          }
          bra = cursor;
          slice_del();
          int v_9 = limit - cursor;
          lab17: {
            ket = cursor;
            if (!r_mark_lAr())
            {
              cursor = limit - v_9;
              break lab17;
            }
            bra = cursor;
            slice_del();
            if (!r_stem_suffix_chain_before_ki())
            {
              cursor = limit - v_9;
              break lab17;
            }
          }
          break lab14;
        }
        cursor = limit - v_8;
        if (!r_stem_suffix_chain_before_ki())
        {
          break lab11;
        }
      }
      break lab0;
    }
    cursor = limit - v_1;
    lab18: {
      ket = cursor;
      lab19: {
        int v_10 = limit - cursor;
        lab20: {
          if (!r_mark_ndAn())
          {
            break lab20;
          }
          break lab19;
        }
        cursor = limit - v_10;
        if (!r_mark_nU())
        {
          break lab18;
        }
      }
      lab21: {
        int v_11 = limit - cursor;
        lab22: {
          if (!r_mark_sU())
          {
            break lab22;
          }
          bra = cursor;
          slice_del();
          int v_12 = limit - cursor;
          lab23: {
            ket = cursor;
            if (!r_mark_lAr())
            {
              cursor = limit - v_12;
              break lab23;
            }
            bra = cursor;
            slice_del();
            if (!r_stem_suffix_chain_before_ki())
            {
              cursor = limit - v_12;
              break lab23;
            }
          }
          break lab21;
        }
        cursor = limit - v_11;
        if (!r_mark_lArI())
        {
          break lab18;
        }
      }
      break lab0;
    }
    cursor = limit - v_1;
    lab24: {
      ket = cursor;
      if (!r_mark_DAn())
      {
        break lab24;
      }
      bra = cursor;
      slice_del();
      int v_13 = limit - cursor;
      lab25: {
        ket = cursor;
        lab26: {
          int v_14 = limit - cursor;
          lab27: {
            if (!r_mark_possessives())
            {
              break lab27;
            }
            bra = cursor;
            slice_del();
            int v_15 = limit - cursor;
            lab28: {
              ket = cursor;
              if (!r_mark_lAr())
              {
                cursor = limit - v_15;
                break lab28;
              }
              bra = cursor;
              slice_del();
              if (!r_stem_suffix_chain_before_ki())
              {
                cursor = limit - v_15;
                break lab28;
              }
            }
            break lab26;
          }
          cursor = limit - v_14;
          lab29: {
            if (!r_mark_lAr())
            {
              break lab29;
            }
            bra = cursor;
            slice_del();
            int v_16 = limit - cursor;
            lab30: {
              if (!r_stem_suffix_chain_before_ki())
              {
                cursor = limit - v_16;
                break lab30;
              }
            }
            break lab26;
          }
          cursor = limit - v_14;
          if (!r_stem_suffix_chain_before_ki())
          {
            cursor = limit - v_13;
            break lab25;
          }
        }
      }
      break lab0;
    }
    cursor = limit - v_1;
    lab31: {
      ket = cursor;
      lab32: {
        int v_17 = limit - cursor;
        lab33: {
          if (!r_mark_nUn())
          {
            break lab33;
          }
          break lab32;
        }
        cursor = limit - v_17;
        if (!r_mark_ylA())
        {
          break lab31;
        }
      }
      bra = cursor;
      slice_del();
      int v_18 = limit - cursor;
      lab34: {
        lab35: {
          int v_19 = limit - cursor;
          lab36: {
            ket = cursor;
            if (!r_mark_lAr())
            {
              break lab36;
            }
            bra = cursor;
            slice_del();
            if (!r_stem_suffix_chain_before_ki())
            {
              break lab36;
            }
            break lab35;
          }
          cursor = limit - v_19;
          lab37: {
            ket = cursor;
            lab38: {
              int v_20 = limit - cursor;
              lab39: {
                if (!r_mark_possessives())
                {
                  break lab39;
                }
                break lab38;
              }
              cursor = limit - v_20;
              if (!r_mark_sU())
              {
                break lab37;
              }
            }
            bra = cursor;
            slice_del();
            int v_21 = limit - cursor;
            lab40: {
              ket = cursor;
              if (!r_mark_lAr())
              {
                cursor = limit - v_21;
                break lab40;
              }
              bra = cursor;
              slice_del();
              if (!r_stem_suffix_chain_before_ki())
              {
                cursor = limit - v_21;
                break lab40;
              }
            }
            break lab35;
          }
          cursor = limit - v_19;
          if (!r_stem_suffix_chain_before_ki())
          {
            cursor = limit - v_18;
            break lab34;
          }
        }
      }
      break lab0;
    }
    cursor = limit - v_1;
    lab41: {
      ket = cursor;
      if (!r_mark_lArI())
      {
        break lab41;
      }
      bra = cursor;
      slice_del();
      break lab0;
    }
    cursor = limit - v_1;
    lab42: {
      if (!r_stem_suffix_chain_before_ki())
      {
        break lab42;
      }
      break lab0;
    }
    cursor = limit - v_1;
    lab43: {
      ket = cursor;
      lab44: {
        int v_22 = limit - cursor;
        lab45: {
          if (!r_mark_DA())
          {
            break lab45;
          }
          break lab44;
        }
        cursor = limit - v_22;
        lab46: {
          if (!r_mark_yU())
          {
            break lab46;
          }
          break lab44;
        }
        cursor = limit - v_22;
        if (!r_mark_yA())
        {
          break lab43;
        }
      }
      bra = cursor;
      slice_del();
      int v_23 = limit - cursor;
      lab47: {
        ket = cursor;
        lab48: {
          int v_24 = limit - cursor;
          lab49: {
            if (!r_mark_possessives())
            {
              break lab49;
            }
            bra = cursor;
            slice_del();
            int v_25 = limit - cursor;
            lab50: {
              ket = cursor;
              if (!r_mark_lAr())
              {
                cursor = limit - v_25;
                break lab50;
              }
            }
            break lab48;
          }
          cursor = limit - v_24;
          if (!r_mark_lAr())
          {
            cursor = limit - v_23;
            break lab47;
          }
        }
        bra = cursor;
        slice_del();
        ket = cursor;
        if (!r_stem_suffix_chain_before_ki())
        {
          cursor = limit - v_23;
          break lab47;
        }
      }
      break lab0;
    }
    cursor = limit - v_1;
    ket = cursor;
    lab51: {
      int v_26 = limit - cursor;
      lab52: {
        if (!r_mark_possessives())
        {
          break lab52;
        }
        break lab51;
      }
      cursor = limit - v_26;
      if (!r_mark_sU())
      {
        return false;
      }
    }
    bra = cursor;
    slice_del();
    int v_27 = limit - cursor;
    lab53: {
      ket = cursor;
      if (!r_mark_lAr())
      {
        cursor = limit - v_27;
        break lab53;
      }
      bra = cursor;
      slice_del();
      if (!r_stem_suffix_chain_before_ki())
      {
        cursor = limit - v_27;
        break lab53;
      }
    }
  }
  return true;
}

