    public boolean stem() {
        int v_1;
        int v_2;
        int v_3;
        int v_8;
        int v_9;
        int v_10;
        int v_11;
        int v_12;
        int v_13;
        // (, line 362
        I_p1 = limit;
        I_p2 = limit;
        I_s = (getCurrent().length());
        // do, line 368
        v_1 = cursor;
        lab0: do {
            // (, line 368
            // try, line 370
            v_2 = cursor;
            lab1: do {
                // (, line 370
                // test, line 370
                v_3 = cursor;
                // literal, line 370
                if (!(eq_s(1, "a")))
                {
                    cursor = v_2;
                    break lab1;
                }
                cursor = v_3;
                if (!(I_s > 6))
                {
                    cursor = v_2;
                    break lab1;
                }
                // hop, line 370
                {
                    int c = cursor + 1;
                    if (0 > c || c > limit)
                    {
                        cursor = v_2;
                        break lab1;
                    }
                    cursor = c;
                }
            } while (false);
            // gopast, line 372
            golab2: while(true)
            {
                lab3: do {
                    if (!(in_grouping(g_v, 97, 371)))
                    {
                        break lab3;
                    }
                    break golab2;
                } while (false);
                if (cursor >= limit)
                {
                    break lab0;
                }
                cursor++;
            }
            // gopast, line 372
            golab4: while(true)
            {
                lab5: do {
                    if (!(out_grouping(g_v, 97, 371)))
                    {
                        break lab5;
                    }
                    break golab4;
                } while (false);
                if (cursor >= limit)
                {
                    break lab0;
                }
                cursor++;
            }
            // setmark p1, line 372
            I_p1 = cursor;
            // gopast, line 373
            golab6: while(true)
            {
                lab7: do {
                    if (!(in_grouping(g_v, 97, 371)))
                    {
                        break lab7;
                    }
                    break golab6;
                } while (false);
                if (cursor >= limit)
                {
                    break lab0;
                }
                cursor++;
            }
            // gopast, line 373
            golab8: while(true)
            {
                lab9: do {
                    if (!(out_grouping(g_v, 97, 371)))
                    {
                        break lab9;
                    }
                    break golab8;
                } while (false);
                if (cursor >= limit)
                {
                    break lab0;
                }
                cursor++;
            }
            // setmark p2, line 373
            I_p2 = cursor;
        } while (false);
        cursor = v_1;
        // backwards, line 377
        limit_backward = cursor; cursor = limit;
        // (, line 377
        // do, line 378
        v_8 = limit - cursor;
        lab10: do {
            // call fix_conflicts, line 378
            if (!r_fix_conflicts())
            {
                break lab10;
            }
        } while (false);
        cursor = limit - v_8;
        // do, line 379
        v_9 = limit - cursor;
        lab11: do {
            // call step1, line 379
            if (!r_step1())
            {
                break lab11;
            }
        } while (false);
        cursor = limit - v_9;
        // do, line 380
        v_10 = limit - cursor;
        lab12: do {
            // call fix_chdz, line 380
            if (!r_fix_chdz())
            {
                break lab12;
            }
        } while (false);
        cursor = limit - v_10;
        // do, line 381
        v_11 = limit - cursor;
        lab13: do {
            // call step2, line 381
            if (!r_step2())
            {
                break lab13;
            }
        } while (false);
        cursor = limit - v_11;
        // do, line 382
        v_12 = limit - cursor;
        lab14: do {
            // call fix_chdz, line 382
            if (!r_fix_chdz())
            {
                break lab14;
            }
        } while (false);
        cursor = limit - v_12;
        // do, line 383
        v_13 = limit - cursor;
        lab15: do {
            // call fix_gd, line 383
            if (!r_fix_gd())
            {
                break lab15;
            }
        } while (false);
        cursor = limit - v_13;
        cursor = limit_backward;                    return true;
    }

