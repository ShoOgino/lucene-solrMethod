public boolean stem() {
  I_p1 = limit;
  int v_1 = cursor;
  lab0: {
    int v_2 = cursor;
    lab1: {
      int v_3 = cursor;
      if (!(eq_s("a")))
      {
        cursor = v_2;
        break lab1;
      }
      cursor = v_3;
      if (!(limit > 6))
      {
        cursor = v_2;
        break lab1;
      }
      {
        int c = cursor + 1;
        if (0 > c || c > limit)
        {
          cursor = v_2;
          break lab1;
        }
        cursor = c;
      }
    }
    golab2: while(true)
    {
      lab3: {
        if (!(in_grouping(g_v, 97, 371)))
        {
          break lab3;
        }
        break golab2;
      }
      if (cursor >= limit)
      {
        break lab0;
      }
      cursor++;
    }
    golab4: while(true)
    {
      lab5: {
        if (!(out_grouping(g_v, 97, 371)))
        {
          break lab5;
        }
        break golab4;
      }
      if (cursor >= limit)
      {
        break lab0;
      }
      cursor++;
    }
    I_p1 = cursor;
  }
  cursor = v_1;
  limit_backward = cursor;
  cursor = limit;
  int v_6 = limit - cursor;
  r_fix_conflicts();
  cursor = limit - v_6;
  int v_7 = limit - cursor;
  r_step1();
  cursor = limit - v_7;
  int v_8 = limit - cursor;
  r_fix_chdz();
  cursor = limit - v_8;
  int v_9 = limit - cursor;
  r_step2();
  cursor = limit - v_9;
  int v_10 = limit - cursor;
  r_fix_chdz();
  cursor = limit - v_10;
  int v_11 = limit - cursor;
  r_fix_gd();
  cursor = limit - v_11;
  cursor = limit_backward;
  return true;
}

