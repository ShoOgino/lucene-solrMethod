                private boolean r_N() {
            int v_1;
            int v_2;
            int v_3;
                    // (, line 34
                    // test, line 34
                    v_1 = limit - cursor;
                    // hop, line 34
                    {
                        int c = cursor - 3;
                        if (limit_backward > c || c > limit)
                        {
                            return false;
                        }
                        cursor = c;
                    }
                    cursor = limit - v_1;
                    // (, line 34
                    // hop, line 34
                    {
                        int c = cursor - 2;
                        if (limit_backward > c || c > limit)
                        {
                            return false;
                        }
                        cursor = c;
                    }
                    // or, line 34
                    lab0: do {
                        v_2 = limit - cursor;
                        lab1: do {
                            // not, line 34
                            {
                                v_3 = limit - cursor;
                                lab2: do {
                                    // literal, line 34
                                    if (!(eq_s_b(1, "s")))
                                    {
                                        break lab2;
                                    }
                                    break lab1;
                                } while (false);
                                cursor = limit - v_3;
                            }
                            break lab0;
                        } while (false);
                        cursor = limit - v_2;
                        // hop, line 34
                        {
                            int c = cursor - 2;
                            if (limit_backward > c || c > limit)
                            {
                                return false;
                            }
                            cursor = c;
                        }
                    } while (false);
                    return true;
                }

