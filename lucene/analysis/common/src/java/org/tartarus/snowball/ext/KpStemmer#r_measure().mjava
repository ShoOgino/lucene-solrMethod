private boolean r_measure() {
  I_p1 = limit;
  I_p2 = limit;
  int v_1 = cursor;
  lab0: {
    while(true)
    {
      lab1: {
        if (!(out_grouping(g_v, 97, 121)))
        {
          break lab1;
        }
        continue;
      }
      break;
    }
    {
      int v_3 = 1;
      while(true)
      {
        int v_4 = cursor;
        lab2: {
          lab3: {
            int v_5 = cursor;
            lab4: {
              if (!(eq_s("ij")))
              {
                break lab4;
              }
              break lab3;
            }
            cursor = v_5;
            if (!(in_grouping(g_v, 97, 121)))
            {
              break lab2;
            }
          }
          v_3--;
          continue;
        }
        cursor = v_4;
        break;
      }
      if (v_3 > 0)
      {
        break lab0;
      }
    }
    if (!(out_grouping(g_v, 97, 121)))
    {
      break lab0;
    }
    I_p1 = cursor;
    while(true)
    {
      lab5: {
        if (!(out_grouping(g_v, 97, 121)))
        {
          break lab5;
        }
        continue;
      }
      break;
    }
    {
      int v_7 = 1;
      while(true)
      {
        int v_8 = cursor;
        lab6: {
          lab7: {
            int v_9 = cursor;
            lab8: {
              if (!(eq_s("ij")))
              {
                break lab8;
              }
              break lab7;
            }
            cursor = v_9;
            if (!(in_grouping(g_v, 97, 121)))
            {
              break lab6;
            }
          }
          v_7--;
          continue;
        }
        cursor = v_8;
        break;
      }
      if (v_7 > 0)
      {
        break lab0;
      }
    }
    if (!(out_grouping(g_v, 97, 121)))
    {
      break lab0;
    }
    I_p2 = cursor;
  }
  cursor = v_1;
  return true;
}

