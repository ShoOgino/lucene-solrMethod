                @Override
                public boolean stem() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            int v_10;
            int v_11;
            int v_12;
            int v_13;
                    // (, line 205
                    // or, line 207
                    lab0: do {
                        v_1 = cursor;
                        lab1: do {
                            // call exception1, line 207
                            if (!r_exception1())
                            {
                                break lab1;
                            }
                            break lab0;
                        } while (false);
                        cursor = v_1;
                        lab2: do {
                            // not, line 208
                            {
                                v_2 = cursor;
                                lab3: do {
                                    // hop, line 208
                                    {
                                        int c = cursor + 3;
                                        if (0 > c || c > limit)
                                        {
                                            break lab3;
                                        }
                                        cursor = c;
                                    }
                                    break lab2;
                                } while (false);
                                cursor = v_2;
                            }
                            break lab0;
                        } while (false);
                        cursor = v_1;
                        // (, line 208
                        // do, line 209
                        v_3 = cursor;
                        lab4: do {
                            // call prelude, line 209
                            if (!r_prelude())
                            {
                                break lab4;
                            }
                        } while (false);
                        cursor = v_3;
                        // do, line 210
                        v_4 = cursor;
                        lab5: do {
                            // call mark_regions, line 210
                            if (!r_mark_regions())
                            {
                                break lab5;
                            }
                        } while (false);
                        cursor = v_4;
                        // backwards, line 211
                        limit_backward = cursor; cursor = limit;
                        // (, line 211
                        // do, line 213
                        v_5 = limit - cursor;
                        lab6: do {
                            // call Step_1a, line 213
                            if (!r_Step_1a())
                            {
                                break lab6;
                            }
                        } while (false);
                        cursor = limit - v_5;
                        // or, line 215
                        lab7: do {
                            v_6 = limit - cursor;
                            lab8: do {
                                // call exception2, line 215
                                if (!r_exception2())
                                {
                                    break lab8;
                                }
                                break lab7;
                            } while (false);
                            cursor = limit - v_6;
                            // (, line 215
                            // do, line 217
                            v_7 = limit - cursor;
                            lab9: do {
                                // call Step_1b, line 217
                                if (!r_Step_1b())
                                {
                                    break lab9;
                                }
                            } while (false);
                            cursor = limit - v_7;
                            // do, line 218
                            v_8 = limit - cursor;
                            lab10: do {
                                // call Step_1c, line 218
                                if (!r_Step_1c())
                                {
                                    break lab10;
                                }
                            } while (false);
                            cursor = limit - v_8;
                            // do, line 220
                            v_9 = limit - cursor;
                            lab11: do {
                                // call Step_2, line 220
                                if (!r_Step_2())
                                {
                                    break lab11;
                                }
                            } while (false);
                            cursor = limit - v_9;
                            // do, line 221
                            v_10 = limit - cursor;
                            lab12: do {
                                // call Step_3, line 221
                                if (!r_Step_3())
                                {
                                    break lab12;
                                }
                            } while (false);
                            cursor = limit - v_10;
                            // do, line 222
                            v_11 = limit - cursor;
                            lab13: do {
                                // call Step_4, line 222
                                if (!r_Step_4())
                                {
                                    break lab13;
                                }
                            } while (false);
                            cursor = limit - v_11;
                            // do, line 224
                            v_12 = limit - cursor;
                            lab14: do {
                                // call Step_5, line 224
                                if (!r_Step_5())
                                {
                                    break lab14;
                                }
                            } while (false);
                            cursor = limit - v_12;
                        } while (false);
                        cursor = limit_backward;                        // do, line 227
                        v_13 = cursor;
                        lab15: do {
                            // call postlude, line 227
                            if (!r_postlude())
                            {
                                break lab15;
                            }
                        } while (false);
                        cursor = v_13;
                    } while (false);
                    return true;
                }

