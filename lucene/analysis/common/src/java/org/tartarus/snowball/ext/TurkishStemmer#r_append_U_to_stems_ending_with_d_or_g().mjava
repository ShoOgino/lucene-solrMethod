private boolean r_append_U_to_stems_ending_with_d_or_g() {
  int v_1 = limit - cursor;
  lab0: {
    int v_2 = limit - cursor;
    lab1: {
      if (!(eq_s_b("d")))
      {
        break lab1;
      }
      break lab0;
    }
    cursor = limit - v_2;
    if (!(eq_s_b("g")))
    {
      return false;
    }
  }
  cursor = limit - v_1;
  lab2: {
    int v_3 = limit - cursor;
    lab3: {
      int v_4 = limit - cursor;
      golab4: while(true)
      {
        int v_5 = limit - cursor;
        lab5: {
          if (!(in_grouping_b(g_vowel, 97, 305)))
          {
            break lab5;
          }
          cursor = limit - v_5;
          break golab4;
        }
        cursor = limit - v_5;
        if (cursor <= limit_backward)
        {
          break lab3;
        }
        cursor--;
      }
      lab6: {
        int v_6 = limit - cursor;
        lab7: {
          if (!(eq_s_b("a")))
          {
            break lab7;
          }
          break lab6;
        }
        cursor = limit - v_6;
        if (!(eq_s_b("\u0131")))
        {
          break lab3;
        }
      }
      cursor = limit - v_4;
      {
        int c = cursor;
        insert(cursor, cursor, "\u0131");
        cursor = c;
      }
      break lab2;
    }
    cursor = limit - v_3;
    lab8: {
      int v_7 = limit - cursor;
      golab9: while(true)
      {
        int v_8 = limit - cursor;
        lab10: {
          if (!(in_grouping_b(g_vowel, 97, 305)))
          {
            break lab10;
          }
          cursor = limit - v_8;
          break golab9;
        }
        cursor = limit - v_8;
        if (cursor <= limit_backward)
        {
          break lab8;
        }
        cursor--;
      }
      lab11: {
        int v_9 = limit - cursor;
        lab12: {
          if (!(eq_s_b("e")))
          {
            break lab12;
          }
          break lab11;
        }
        cursor = limit - v_9;
        if (!(eq_s_b("i")))
        {
          break lab8;
        }
      }
      cursor = limit - v_7;
      {
        int c = cursor;
        insert(cursor, cursor, "i");
        cursor = c;
      }
      break lab2;
    }
    cursor = limit - v_3;
    lab13: {
      int v_10 = limit - cursor;
      golab14: while(true)
      {
        int v_11 = limit - cursor;
        lab15: {
          if (!(in_grouping_b(g_vowel, 97, 305)))
          {
            break lab15;
          }
          cursor = limit - v_11;
          break golab14;
        }
        cursor = limit - v_11;
        if (cursor <= limit_backward)
        {
          break lab13;
        }
        cursor--;
      }
      lab16: {
        int v_12 = limit - cursor;
        lab17: {
          if (!(eq_s_b("o")))
          {
            break lab17;
          }
          break lab16;
        }
        cursor = limit - v_12;
        if (!(eq_s_b("u")))
        {
          break lab13;
        }
      }
      cursor = limit - v_10;
      {
        int c = cursor;
        insert(cursor, cursor, "u");
        cursor = c;
      }
      break lab2;
    }
    cursor = limit - v_3;
    int v_13 = limit - cursor;
    golab18: while(true)
    {
      int v_14 = limit - cursor;
      lab19: {
        if (!(in_grouping_b(g_vowel, 97, 305)))
        {
          break lab19;
        }
        cursor = limit - v_14;
        break golab18;
      }
      cursor = limit - v_14;
      if (cursor <= limit_backward)
      {
        return false;
      }
      cursor--;
    }
    lab20: {
      int v_15 = limit - cursor;
      lab21: {
        if (!(eq_s_b("\u00F6")))
        {
          break lab21;
        }
        break lab20;
      }
      cursor = limit - v_15;
      if (!(eq_s_b("\u00FC")))
      {
        return false;
      }
    }
    cursor = limit - v_13;
    {
      int c = cursor;
      insert(cursor, cursor, "\u00FC");
      cursor = c;
    }
  }
  return true;
}

