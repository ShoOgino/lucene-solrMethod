private boolean r_cyr_to_lat() {
  int among_var;
  int v_1 = cursor;
  lab0: {
    while(true)
    {
      int v_2 = cursor;
      lab1: {
        golab2: while(true)
        {
          int v_3 = cursor;
          lab3: {
            bra = cursor;
            among_var = find_among(a_0);
            if (among_var == 0)
            {
              break lab3;
            }
            ket = cursor;
            switch (among_var) {
              case 1:
                slice_from("a");
                break;
              case 2:
                slice_from("b");
                break;
              case 3:
                slice_from("v");
                break;
              case 4:
                slice_from("g");
                break;
              case 5:
                slice_from("d");
                break;
              case 6:
                slice_from("\u0111");
                break;
              case 7:
                slice_from("e");
                break;
              case 8:
                slice_from("\u017E");
                break;
              case 9:
                slice_from("z");
                break;
              case 10:
                slice_from("i");
                break;
              case 11:
                slice_from("j");
                break;
              case 12:
                slice_from("k");
                break;
              case 13:
                slice_from("l");
                break;
              case 14:
                slice_from("lj");
                break;
              case 15:
                slice_from("m");
                break;
              case 16:
                slice_from("n");
                break;
              case 17:
                slice_from("nj");
                break;
              case 18:
                slice_from("o");
                break;
              case 19:
                slice_from("p");
                break;
              case 20:
                slice_from("r");
                break;
              case 21:
                slice_from("s");
                break;
              case 22:
                slice_from("t");
                break;
              case 23:
                slice_from("\u0107");
                break;
              case 24:
                slice_from("u");
                break;
              case 25:
                slice_from("f");
                break;
              case 26:
                slice_from("h");
                break;
              case 27:
                slice_from("c");
                break;
              case 28:
                slice_from("\u010D");
                break;
              case 29:
                slice_from("d\u017E");
                break;
              case 30:
                slice_from("\u0161");
                break;
            }
            cursor = v_3;
            break golab2;
          }
          cursor = v_3;
          if (cursor >= limit)
          {
            break lab1;
          }
          cursor++;
        }
        continue;
      }
      cursor = v_2;
      break;
    }
  }
  cursor = v_1;
  return true;
}

