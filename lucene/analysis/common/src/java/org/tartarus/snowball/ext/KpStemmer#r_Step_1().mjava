private boolean r_Step_1() {
  int among_var;
  ket = cursor;
  among_var = find_among_b(a_0);
  if (among_var == 0)
  {
    return false;
  }
  bra = cursor;
  switch (among_var) {
    case 1:
      slice_del();
      break;
    case 2:
      if (!r_R1())
      {
        return false;
      }
      {
        int v_1 = limit - cursor;
        lab0: {
          if (!(eq_s_b("t")))
          {
            break lab0;
          }
          if (!r_R1())
          {
            break lab0;
          }
          return false;
        }
        cursor = limit - v_1;
      }
      if (!r_C())
      {
        return false;
      }
      slice_del();
      break;
    case 3:
      if (!r_R1())
      {
        return false;
      }
      slice_from("ie");
      break;
    case 4:
      lab1: {
        int v_2 = limit - cursor;
        lab2: {
          if (!(eq_s_b("ar")))
          {
            break lab2;
          }
          if (!r_R1())
          {
            break lab2;
          }
          if (!r_C())
          {
            break lab2;
          }
          bra = cursor;
          slice_del();
          if (!r_lengthen_V())
          {
            break lab2;
          }
          break lab1;
        }
        cursor = limit - v_2;
        lab3: {
          if (!(eq_s_b("er")))
          {
            break lab3;
          }
          if (!r_R1())
          {
            break lab3;
          }
          if (!r_C())
          {
            break lab3;
          }
          bra = cursor;
          slice_del();
          break lab1;
        }
        cursor = limit - v_2;
        if (!r_R1())
        {
          return false;
        }
        if (!r_C())
        {
          return false;
        }
        slice_from("e");
      }
      break;
    case 5:
      if (!r_R1())
      {
        return false;
      }
      if (!r_V())
      {
        return false;
      }
      slice_from("au");
      break;
    case 6:
      lab4: {
        int v_3 = limit - cursor;
        lab5: {
          if (!(eq_s_b("hed")))
          {
            break lab5;
          }
          if (!r_R1())
          {
            break lab5;
          }
          bra = cursor;
          slice_from("heid");
          break lab4;
        }
        cursor = limit - v_3;
        lab6: {
          if (!(eq_s_b("nd")))
          {
            break lab6;
          }
          slice_del();
          break lab4;
        }
        cursor = limit - v_3;
        lab7: {
          if (!(eq_s_b("d")))
          {
            break lab7;
          }
          if (!r_R1())
          {
            break lab7;
          }
          if (!r_C())
          {
            break lab7;
          }
          bra = cursor;
          slice_del();
          break lab4;
        }
        cursor = limit - v_3;
        lab8: {
          lab9: {
            int v_4 = limit - cursor;
            lab10: {
              if (!(eq_s_b("i")))
              {
                break lab10;
              }
              break lab9;
            }
            cursor = limit - v_4;
            if (!(eq_s_b("j")))
            {
              break lab8;
            }
          }
          if (!r_V())
          {
            break lab8;
          }
          slice_del();
          break lab4;
        }
        cursor = limit - v_3;
        if (!r_R1())
        {
          return false;
        }
        if (!r_C())
        {
          return false;
        }
        slice_del();
        if (!r_lengthen_V())
        {
          return false;
        }
      }
      break;
    case 7:
      slice_from("nd");
      break;
  }
  return true;
}

