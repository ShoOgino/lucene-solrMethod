                private boolean r_adjectival() {
            int among_var;
            int v_1;
            int v_2;
                    // (, line 101
                    // call adjective, line 102
                    if (!r_adjective())
                    {
                        return false;
                    }
                    // try, line 109
                    v_1 = limit - cursor;
                    lab0: do {
                        // (, line 109
                        // [, line 110
                        ket = cursor;
                        // substring, line 110
                        among_var = find_among_b(a_2, 8);
                        if (among_var == 0)
                        {
                            cursor = limit - v_1;
                            break lab0;
                        }
                        // ], line 110
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                cursor = limit - v_1;
                                break lab0;
                            case 1:
                                // (, line 115
                                // or, line 115
                                lab1: do {
                                    v_2 = limit - cursor;
                                    lab2: do {
                                        // literal, line 115
                                        if (!(eq_s_b(1, "\u0430")))
                                        {
                                            break lab2;
                                        }
                                        break lab1;
                                    } while (false);
                                    cursor = limit - v_2;
                                    // literal, line 115
                                    if (!(eq_s_b(1, "\u044F")))
                                    {
                                        cursor = limit - v_1;
                                        break lab0;
                                    }
                                } while (false);
                                // delete, line 115
                                slice_del();
                                break;
                            case 2:
                                // (, line 122
                                // delete, line 122
                                slice_del();
                                break;
                        }
                    } while (false);
                    return true;
                }

