private boolean r_steps6() {
  int among_var;
  ket = cursor;
  if (find_among_b(a_18) == 0)
  {
    return false;
  }
  bra = cursor;
  slice_del();
  B_test1 = false;
  lab0: {
    int v_1 = limit - cursor;
    lab1: {
      ket = cursor;
      bra = cursor;
      if (find_among_b(a_15) == 0)
      {
        break lab1;
      }
      if (cursor > limit_backward)
      {
        break lab1;
      }
      slice_from("\u03B9\u03C3\u03BC");
      break lab0;
    }
    cursor = limit - v_1;
    lab2: {
      ket = cursor;
      bra = cursor;
      if (find_among_b(a_16) == 0)
      {
        break lab2;
      }
      if (cursor > limit_backward)
      {
        break lab2;
      }
      slice_from("\u03B9");
      break lab0;
    }
    cursor = limit - v_1;
    ket = cursor;
    among_var = find_among_b(a_17);
    if (among_var == 0)
    {
      return false;
    }
    bra = cursor;
    switch (among_var) {
      case 1:
        slice_from("\u03B1\u03B3\u03BD\u03C9\u03C3\u03C4");
        break;
      case 2:
        slice_from("\u03B1\u03C4\u03BF\u03BC");
        break;
      case 3:
        slice_from("\u03B3\u03BD\u03C9\u03C3\u03C4");
        break;
      case 4:
        slice_from("\u03B5\u03B8\u03BD");
        break;
      case 5:
        slice_from("\u03B5\u03BA\u03BB\u03B5\u03BA\u03C4");
        break;
      case 6:
        slice_from("\u03C3\u03BA\u03B5\u03C0\u03C4");
        break;
      case 7:
        slice_from("\u03C4\u03BF\u03C0");
        break;
      case 8:
        slice_from("\u03B1\u03BB\u03B5\u03BE\u03B1\u03BD\u03B4\u03C1");
        break;
      case 9:
        slice_from("\u03B2\u03C5\u03B6\u03B1\u03BD\u03C4");
        break;
      case 10:
        slice_from("\u03B8\u03B5\u03B1\u03C4\u03C1");
        break;
    }
  }
  return true;
}

