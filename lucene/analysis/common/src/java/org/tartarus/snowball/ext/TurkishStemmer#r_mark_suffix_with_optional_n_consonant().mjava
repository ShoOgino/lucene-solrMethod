private boolean r_mark_suffix_with_optional_n_consonant() {
  lab0: {
    int v_1 = limit - cursor;
    lab1: {
      if (!(eq_s_b("n")))
      {
        break lab1;
      }
      int v_2 = limit - cursor;
      if (!(in_grouping_b(g_vowel, 97, 305)))
      {
        break lab1;
      }
      cursor = limit - v_2;
      break lab0;
    }
    cursor = limit - v_1;
    {
      int v_3 = limit - cursor;
      lab2: {
        int v_4 = limit - cursor;
        if (!(eq_s_b("n")))
        {
          break lab2;
        }
        cursor = limit - v_4;
        return false;
      }
      cursor = limit - v_3;
    }
    int v_5 = limit - cursor;
    if (cursor <= limit_backward)
    {
      return false;
    }
    cursor--;
    if (!(in_grouping_b(g_vowel, 97, 305)))
    {
      return false;
    }
    cursor = limit - v_5;
  }
  return true;
}

