    public boolean stem() {
        // (, line 515
        // set is_noun, line 517
        B_is_noun = true;
        // set is_verb, line 518
        B_is_verb = true;
        // unset is_defined, line 519
        B_is_defined = false;
        // do, line 522
        int v_1 = cursor;
        lab0: do {
            // call Checks1, line 522
            if (!r_Checks1())
            {
                break lab0;
            }
        } while (false);
        cursor = v_1;
        // do, line 525
        int v_2 = cursor;
        lab1: do {
            // call Normalize_pre, line 525
            if (!r_Normalize_pre())
            {
                break lab1;
            }
        } while (false);
        cursor = v_2;
        // backwards, line 528
        limit_backward = cursor;
        cursor = limit;
        // (, line 528
        // do, line 530
        int v_3 = limit - cursor;
        lab2: do {
            // (, line 530
            // or, line 544
            lab3: do {
                int v_4 = limit - cursor;
                lab4: do {
                    // (, line 532
                    // Boolean test is_verb, line 533
                    if (!(B_is_verb))
                    {
                        break lab4;
                    }
                    // (, line 534
                    // or, line 539
                    lab5: do {
                        int v_5 = limit - cursor;
                        lab6: do {
                            // (, line 535
                            // (, line 536
                            // atleast, line 536
                            {
                                int v_6 = 1;
                                // atleast, line 536
                                replab7: while(true)
                                {
                                    int v_7 = limit - cursor;
                                    lab8: do {
                                        // call Suffix_Verb_Step1, line 536
                                        if (!r_Suffix_Verb_Step1())
                                        {
                                            break lab8;
                                        }
                                        v_6--;
                                        continue replab7;
                                    } while (false);
                                    cursor = limit - v_7;
                                    break replab7;
                                }
                                if (v_6 > 0)
                                {
                                    break lab6;
                                }
                            }
                            // (, line 537
                            // or, line 537
                            lab9: do {
                                int v_8 = limit - cursor;
                                lab10: do {
                                    // call Suffix_Verb_Step2a, line 537
                                    if (!r_Suffix_Verb_Step2a())
                                    {
                                        break lab10;
                                    }
                                    break lab9;
                                } while (false);
                                cursor = limit - v_8;
                                lab11: do {
                                    // call Suffix_Verb_Step2c, line 537
                                    if (!r_Suffix_Verb_Step2c())
                                    {
                                        break lab11;
                                    }
                                    break lab9;
                                } while (false);
                                cursor = limit - v_8;
                                // next, line 537
                                if (cursor <= limit_backward)
                                {
                                    break lab6;
                                }
                                cursor--;
                            } while (false);
                            break lab5;
                        } while (false);
                        cursor = limit - v_5;
                        lab12: do {
                            // call Suffix_Verb_Step2b, line 539
                            if (!r_Suffix_Verb_Step2b())
                            {
                                break lab12;
                            }
                            break lab5;
                        } while (false);
                        cursor = limit - v_5;
                        // call Suffix_Verb_Step2a, line 540
                        if (!r_Suffix_Verb_Step2a())
                        {
                            break lab4;
                        }
                    } while (false);
                    break lab3;
                } while (false);
                cursor = limit - v_4;
                lab13: do {
                    // (, line 544
                    // Boolean test is_noun, line 545
                    if (!(B_is_noun))
                    {
                        break lab13;
                    }
                    // (, line 546
                    // try, line 548
                    int v_9 = limit - cursor;
                    lab14: do {
                        // (, line 548
                        // or, line 550
                        lab15: do {
                            int v_10 = limit - cursor;
                            lab16: do {
                                // call Suffix_Noun_Step2c2, line 549
                                if (!r_Suffix_Noun_Step2c2())
                                {
                                    break lab16;
                                }
                                break lab15;
                            } while (false);
                            cursor = limit - v_10;
                            lab17: do {
                                // (, line 550
                                // not, line 550
                                lab18: do {
                                    // Boolean test is_defined, line 550
                                    if (!(B_is_defined))
                                    {
                                        break lab18;
                                    }
                                    break lab17;
                                } while (false);
                                // call Suffix_Noun_Step1a, line 550
                                if (!r_Suffix_Noun_Step1a())
                                {
                                    break lab17;
                                }
                                // (, line 550
                                // or, line 552
                                lab19: do {
                                    int v_12 = limit - cursor;
                                    lab20: do {
                                        // call Suffix_Noun_Step2a, line 551
                                        if (!r_Suffix_Noun_Step2a())
                                        {
                                            break lab20;
                                        }
                                        break lab19;
                                    } while (false);
                                    cursor = limit - v_12;
                                    lab21: do {
                                        // call Suffix_Noun_Step2b, line 552
                                        if (!r_Suffix_Noun_Step2b())
                                        {
                                            break lab21;
                                        }
                                        break lab19;
                                    } while (false);
                                    cursor = limit - v_12;
                                    lab22: do {
                                        // call Suffix_Noun_Step2c1, line 553
                                        if (!r_Suffix_Noun_Step2c1())
                                        {
                                            break lab22;
                                        }
                                        break lab19;
                                    } while (false);
                                    cursor = limit - v_12;
                                    // next, line 554
                                    if (cursor <= limit_backward)
                                    {
                                        break lab17;
                                    }
                                    cursor--;
                                } while (false);
                                break lab15;
                            } while (false);
                            cursor = limit - v_10;
                            lab23: do {
                                // (, line 555
                                // call Suffix_Noun_Step1b, line 555
                                if (!r_Suffix_Noun_Step1b())
                                {
                                    break lab23;
                                }
                                // (, line 555
                                // or, line 557
                                lab24: do {
                                    int v_13 = limit - cursor;
                                    lab25: do {
                                        // call Suffix_Noun_Step2a, line 556
                                        if (!r_Suffix_Noun_Step2a())
                                        {
                                            break lab25;
                                        }
                                        break lab24;
                                    } while (false);
                                    cursor = limit - v_13;
                                    lab26: do {
                                        // call Suffix_Noun_Step2b, line 557
                                        if (!r_Suffix_Noun_Step2b())
                                        {
                                            break lab26;
                                        }
                                        break lab24;
                                    } while (false);
                                    cursor = limit - v_13;
                                    // call Suffix_Noun_Step2c1, line 558
                                    if (!r_Suffix_Noun_Step2c1())
                                    {
                                        break lab23;
                                    }
                                } while (false);
                                break lab15;
                            } while (false);
                            cursor = limit - v_10;
                            lab27: do {
                                // (, line 559
                                // not, line 559
                                lab28: do {
                                    // Boolean test is_defined, line 559
                                    if (!(B_is_defined))
                                    {
                                        break lab28;
                                    }
                                    break lab27;
                                } while (false);
                                // call Suffix_Noun_Step2a, line 559
                                if (!r_Suffix_Noun_Step2a())
                                {
                                    break lab27;
                                }
                                break lab15;
                            } while (false);
                            cursor = limit - v_10;
                            // (, line 560
                            // call Suffix_Noun_Step2b, line 560
                            if (!r_Suffix_Noun_Step2b())
                            {
                                cursor = limit - v_9;
                                break lab14;
                            }
                        } while (false);
                    } while (false);
                    // call Suffix_Noun_Step3, line 562
                    if (!r_Suffix_Noun_Step3())
                    {
                        break lab13;
                    }
                    break lab3;
                } while (false);
                cursor = limit - v_4;
                // call Suffix_All_alef_maqsura, line 568
                if (!r_Suffix_All_alef_maqsura())
                {
                    break lab2;
                }
            } while (false);
        } while (false);
        cursor = limit - v_3;
        cursor = limit_backward;
        // do, line 573
        int v_15 = cursor;
        lab29: do {
            // (, line 573
            // try, line 574
            int v_16 = cursor;
            lab30: do {
                // call Prefix_Step1, line 574
                if (!r_Prefix_Step1())
                {
                    cursor = v_16;
                    break lab30;
                }
            } while (false);
            // try, line 575
            int v_17 = cursor;
            lab31: do {
                // call Prefix_Step2, line 575
                if (!r_Prefix_Step2())
                {
                    cursor = v_17;
                    break lab31;
                }
            } while (false);
            // (, line 576
            // or, line 577
            lab32: do {
                int v_18 = cursor;
                lab33: do {
                    // call Prefix_Step3a_Noun, line 576
                    if (!r_Prefix_Step3a_Noun())
                    {
                        break lab33;
                    }
                    break lab32;
                } while (false);
                cursor = v_18;
                lab34: do {
                    // (, line 577
                    // Boolean test is_noun, line 577
                    if (!(B_is_noun))
                    {
                        break lab34;
                    }
                    // call Prefix_Step3b_Noun, line 577
                    if (!r_Prefix_Step3b_Noun())
                    {
                        break lab34;
                    }
                    break lab32;
                } while (false);
                cursor = v_18;
                // (, line 578
                // Boolean test is_verb, line 578
                if (!(B_is_verb))
                {
                    break lab29;
                }
                // try, line 578
                int v_19 = cursor;
                lab35: do {
                    // call Prefix_Step3_Verb, line 578
                    if (!r_Prefix_Step3_Verb())
                    {
                        cursor = v_19;
                        break lab35;
                    }
                } while (false);
                // call Prefix_Step4_Verb, line 578
                if (!r_Prefix_Step4_Verb())
                {
                    break lab29;
                }
            } while (false);
        } while (false);
        cursor = v_15;
        // do, line 583
        int v_20 = cursor;
        lab36: do {
            // call Normalize_post, line 583
            if (!r_Normalize_post())
            {
                break lab36;
            }
        } while (false);
        cursor = v_20;
        return true;
    }

