public boolean stem() {
  int v_1 = cursor;
  r_mark_regions();
  cursor = v_1;
  limit_backward = cursor;
  cursor = limit;
  int v_2 = limit - cursor;
  r_instrum();
  cursor = limit - v_2;
  int v_3 = limit - cursor;
  r_case();
  cursor = limit - v_3;
  int v_4 = limit - cursor;
  r_case_special();
  cursor = limit - v_4;
  int v_5 = limit - cursor;
  r_case_other();
  cursor = limit - v_5;
  int v_6 = limit - cursor;
  r_factive();
  cursor = limit - v_6;
  int v_7 = limit - cursor;
  r_owned();
  cursor = limit - v_7;
  int v_8 = limit - cursor;
  r_sing_owner();
  cursor = limit - v_8;
  int v_9 = limit - cursor;
  r_plur_owner();
  cursor = limit - v_9;
  int v_10 = limit - cursor;
  r_plural();
  cursor = limit - v_10;
  cursor = limit_backward;
  return true;
}

