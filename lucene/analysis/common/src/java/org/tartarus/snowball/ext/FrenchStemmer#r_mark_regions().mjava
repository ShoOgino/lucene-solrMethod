private boolean r_mark_regions() {
  I_pV = limit;
  I_p1 = limit;
  I_p2 = limit;
  int v_1 = cursor;
  lab0: {
    lab1: {
      int v_2 = cursor;
      lab2: {
        if (!(in_grouping(g_v, 97, 251)))
        {
          break lab2;
        }
        if (!(in_grouping(g_v, 97, 251)))
        {
          break lab2;
        }
        if (cursor >= limit)
        {
          break lab2;
        }
        cursor++;
        break lab1;
      }
      cursor = v_2;
      lab3: {
        if (find_among(a_0) == 0)
        {
          break lab3;
        }
        break lab1;
      }
      cursor = v_2;
      if (cursor >= limit)
      {
        break lab0;
      }
      cursor++;
      golab4: while(true)
      {
        lab5: {
          if (!(in_grouping(g_v, 97, 251)))
          {
            break lab5;
          }
          break golab4;
        }
        if (cursor >= limit)
        {
          break lab0;
        }
        cursor++;
      }
    }
    I_pV = cursor;
  }
  cursor = v_1;
  int v_4 = cursor;
  lab6: {
    golab7: while(true)
    {
      lab8: {
        if (!(in_grouping(g_v, 97, 251)))
        {
          break lab8;
        }
        break golab7;
      }
      if (cursor >= limit)
      {
        break lab6;
      }
      cursor++;
    }
    golab9: while(true)
    {
      lab10: {
        if (!(out_grouping(g_v, 97, 251)))
        {
          break lab10;
        }
        break golab9;
      }
      if (cursor >= limit)
      {
        break lab6;
      }
      cursor++;
    }
    I_p1 = cursor;
    golab11: while(true)
    {
      lab12: {
        if (!(in_grouping(g_v, 97, 251)))
        {
          break lab12;
        }
        break golab11;
      }
      if (cursor >= limit)
      {
        break lab6;
      }
      cursor++;
    }
    golab13: while(true)
    {
      lab14: {
        if (!(out_grouping(g_v, 97, 251)))
        {
          break lab14;
        }
        break golab13;
      }
      if (cursor >= limit)
      {
        break lab6;
      }
      cursor++;
    }
    I_p2 = cursor;
  }
  cursor = v_4;
  return true;
}

