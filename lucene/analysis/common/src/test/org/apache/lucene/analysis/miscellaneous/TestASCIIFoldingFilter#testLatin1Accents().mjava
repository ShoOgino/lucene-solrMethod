  // testLain1Accents() is a copy of TestLatin1AccentFilter.testU().
  public void testLatin1Accents() throws Exception {
    TokenStream stream = new MockTokenizer(new StringReader
      ("Des mot clés À LA CHAÎNE À Á Â Ã Ä Å Æ Ç È É Ê Ë Ì Í Î Ï Ĳ Ð Ñ"
      +" Ò Ó Ô Õ Ö Ø Œ Þ Ù Ú Û Ü Ý Ÿ à á â ã ä å æ ç è é ê ë ì í î ï ĳ"
      +" ð ñ ò ó ô õ ö ø œ ß þ ù ú û ü ý ÿ ﬁ ﬂ"), MockTokenizer.WHITESPACE, false);
    ASCIIFoldingFilter filter = new ASCIIFoldingFilter(stream);

    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);
    filter.reset();
    assertTermEquals("Des", filter, termAtt);
    assertTermEquals("mot", filter, termAtt);
    assertTermEquals("cles", filter, termAtt);
    assertTermEquals("A", filter, termAtt);
    assertTermEquals("LA", filter, termAtt);
    assertTermEquals("CHAINE", filter, termAtt);
    assertTermEquals("A", filter, termAtt);
    assertTermEquals("A", filter, termAtt);
    assertTermEquals("A", filter, termAtt);
    assertTermEquals("A", filter, termAtt);
    assertTermEquals("A", filter, termAtt);
    assertTermEquals("A", filter, termAtt);
    assertTermEquals("AE", filter, termAtt);
    assertTermEquals("C", filter, termAtt);
    assertTermEquals("E", filter, termAtt);
    assertTermEquals("E", filter, termAtt);
    assertTermEquals("E", filter, termAtt);
    assertTermEquals("E", filter, termAtt);
    assertTermEquals("I", filter, termAtt);
    assertTermEquals("I", filter, termAtt);
    assertTermEquals("I", filter, termAtt);
    assertTermEquals("I", filter, termAtt);
    assertTermEquals("IJ", filter, termAtt);
    assertTermEquals("D", filter, termAtt);
    assertTermEquals("N", filter, termAtt);
    assertTermEquals("O", filter, termAtt);
    assertTermEquals("O", filter, termAtt);
    assertTermEquals("O", filter, termAtt);
    assertTermEquals("O", filter, termAtt);
    assertTermEquals("O", filter, termAtt);
    assertTermEquals("O", filter, termAtt);
    assertTermEquals("OE", filter, termAtt);
    assertTermEquals("TH", filter, termAtt);
    assertTermEquals("U", filter, termAtt);
    assertTermEquals("U", filter, termAtt);
    assertTermEquals("U", filter, termAtt);
    assertTermEquals("U", filter, termAtt);
    assertTermEquals("Y", filter, termAtt);
    assertTermEquals("Y", filter, termAtt);
    assertTermEquals("a", filter, termAtt);
    assertTermEquals("a", filter, termAtt);
    assertTermEquals("a", filter, termAtt);
    assertTermEquals("a", filter, termAtt);
    assertTermEquals("a", filter, termAtt);
    assertTermEquals("a", filter, termAtt);
    assertTermEquals("ae", filter, termAtt);
    assertTermEquals("c", filter, termAtt);
    assertTermEquals("e", filter, termAtt);
    assertTermEquals("e", filter, termAtt);
    assertTermEquals("e", filter, termAtt);
    assertTermEquals("e", filter, termAtt);
    assertTermEquals("i", filter, termAtt);
    assertTermEquals("i", filter, termAtt);
    assertTermEquals("i", filter, termAtt);
    assertTermEquals("i", filter, termAtt);
    assertTermEquals("ij", filter, termAtt);
    assertTermEquals("d", filter, termAtt);
    assertTermEquals("n", filter, termAtt);
    assertTermEquals("o", filter, termAtt);
    assertTermEquals("o", filter, termAtt);
    assertTermEquals("o", filter, termAtt);
    assertTermEquals("o", filter, termAtt);
    assertTermEquals("o", filter, termAtt);
    assertTermEquals("o", filter, termAtt);
    assertTermEquals("oe", filter, termAtt);
    assertTermEquals("ss", filter, termAtt);
    assertTermEquals("th", filter, termAtt);
    assertTermEquals("u", filter, termAtt);
    assertTermEquals("u", filter, termAtt);
    assertTermEquals("u", filter, termAtt);
    assertTermEquals("u", filter, termAtt);
    assertTermEquals("y", filter, termAtt);
    assertTermEquals("y", filter, termAtt);
    assertTermEquals("fi", filter, termAtt);
    assertTermEquals("fl", filter, termAtt);
    assertFalse(filter.incrementToken());
  }

