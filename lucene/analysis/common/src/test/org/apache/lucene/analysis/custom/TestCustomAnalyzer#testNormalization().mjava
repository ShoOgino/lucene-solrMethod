  public void testNormalization() throws IOException {
    CustomAnalyzer analyzer1 = CustomAnalyzer.builder()
        // none of these components are multi-term aware so they should not be applied
        .withTokenizer(DummyTokenizerFactory.class, Collections.emptyMap())
        .addCharFilter(DummyCharFilterFactory.class, Collections.emptyMap())
        .addTokenFilter(DummyTokenFilterFactory.class, Collections.emptyMap())
        .build();
    assertEquals(new BytesRef("0À"), analyzer1.normalize("dummy", "0À"));

    CustomAnalyzer analyzer2 = CustomAnalyzer.builder()
        // these components are multi-term aware so they should be applied
        .withTokenizer(DummyMultiTermAwareTokenizerFactory.class, Collections.emptyMap())
        .addCharFilter(DummyMultiTermAwareCharFilterFactory.class, Collections.emptyMap())
        .addTokenFilter(DummyMultiTermAwareTokenFilterFactory.class, Collections.emptyMap())
        .build();
    assertEquals(new BytesRef("2A"), analyzer2.normalize("dummy", "0À"));
  }

