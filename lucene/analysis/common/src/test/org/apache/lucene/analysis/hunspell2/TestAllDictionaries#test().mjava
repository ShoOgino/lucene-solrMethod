  public void test() throws Exception {
    for (int i = 0; i < tests.length; i += 3) {
      File f = new File(DICTIONARY_HOME, tests[i]);
      assert f.exists();
      
      try (ZipFile zip = new ZipFile(f, IOUtils.CHARSET_UTF_8)) {
        ZipEntry dicEntry = zip.getEntry(tests[i+1]);
        assert dicEntry != null;
        ZipEntry affEntry = zip.getEntry(tests[i+2]);
        assert affEntry != null;
        
        // get ram from previous impl
        String oldRAM = "FAIL";
        try (InputStream dictionary = zip.getInputStream(dicEntry);
            InputStream affix = zip.getInputStream(affEntry)) {
          try {
            HunspellDictionary dic = new HunspellDictionary(affix, dictionary, TEST_VERSION_CURRENT);
            oldRAM = RamUsageEstimator.humanSizeOf(dic);
          } catch (Throwable t) {}
       }
      
        try (InputStream dictionary = zip.getInputStream(dicEntry);
             InputStream affix = zip.getInputStream(affEntry)) {
          Dictionary dic = new Dictionary(affix, dictionary);
          System.out.println(tests[i] + "\t" + oldRAM + "\t" + RamUsageEstimator.humanSizeOf(dic) + "\t(" +
                             "words=" + RamUsageEstimator.humanSizeOf(dic.words) + ", " +
                             "flags=" + RamUsageEstimator.humanSizeOf(dic.flagLookup) + ", " +
                             "prefixes=" + RamUsageEstimator.humanSizeOf(dic.prefixes) + ", " +
                             "suffixes=" + RamUsageEstimator.humanSizeOf(dic.suffixes) + ")");
        }
      }
    }
  }

