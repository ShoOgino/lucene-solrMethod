  /**
   * Creates a first pass collector.
   *
   * @param groupByVS  The {@link ValueSource} instance to group by
   * @param vsContext  The ValueSource context
   * @param groupSort  The {@link Sort} used to sort the
   *                   groups.  The top sorted document within each group
   *                   according to groupSort, determines how that group
   *                   sorts against other groups.  This must be non-null,
   *                   ie, if you want to groupSort by relevance use
   *                   Sort.RELEVANCE.
   * @param topNGroups How many top groups to keep.
   * @throws IOException When I/O related errors occur
   */
  public FunctionFirstPassGroupingCollector(ValueSource groupByVS, Map<?, ?> vsContext, Sort groupSort, int topNGroups) throws IOException {
    super(groupSort, topNGroups);
    this.groupByVS = groupByVS;
    this.vsContext = vsContext;
  }

