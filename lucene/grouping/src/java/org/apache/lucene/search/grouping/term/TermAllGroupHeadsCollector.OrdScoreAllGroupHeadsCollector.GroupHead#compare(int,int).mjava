      @Override
      public int compare(int compIDX, int doc) throws IOException {
        if (fields[compIDX].getType() == SortField.Type.SCORE) {
          float score = scorer.score();
          if (scores[compIDX] < score) {
            return 1;
          } else if (scores[compIDX] > score) {
            return -1;
          }
          return 0;
        } else {
          if (sortsIndex[compIDX].docID() < doc) {
            sortsIndex[compIDX].advance(doc);
          }
          if (sortOrds[compIDX] < 0) {
            // The current segment doesn't contain the sort value we encountered before. Therefore the ord is negative.
            final BytesRef term;
            if (sortsIndex[compIDX].docID() == doc) {
              term = sortsIndex[compIDX].binaryValue();
            } else {
              term = new BytesRef(BytesRef.EMPTY_BYTES);
            }
            return sortValues[compIDX].get().compareTo(term);
          } else {
            int ord;
            if (sortsIndex[compIDX].docID() == doc) {
              ord = sortsIndex[compIDX].ordValue();
            } else {
              ord = -1;
            }
            return sortOrds[compIDX] - ord;
          }
        }
      }

