  protected Query makeQueryFromShape(Shape shape) {
    SpatialArgs args = new SpatialArgs(operation, shape);
    if (!Double.isNaN(distErrPct))
      args.setDistErrPct(distErrPct);

    Query filterQuery = strategy.makeQuery(args);
    if (score) {
      //wrap with distance computing query
      ValueSource valueSource = strategy.makeDistanceValueSource(shape.getCenter());
      return new BooleanQuery.Builder()
          .add(new FunctionQuery(valueSource), BooleanClause.Occur.MUST)//matches everything and provides score
          .add(filterQuery, BooleanClause.Occur.FILTER)//filters (score isn't used)
          .build();
    } else {
      return filterQuery; // assume constant scoring
    }
  }

