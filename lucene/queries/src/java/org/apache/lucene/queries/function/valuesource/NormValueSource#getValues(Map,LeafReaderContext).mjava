  @Override
  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {
    IndexSearcher searcher = (IndexSearcher)context.get("searcher");
    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(true), field);
    if (similarity == null) {
      throw new UnsupportedOperationException("requires a TFIDFSimilarity (such as ClassicSimilarity)");
    }
    // Only works if the contribution of the tf is 1 when the freq is 1 and contribution of the idf
    // is 1 when docCount == docFreq == 1
    final SimWeight simWeight = similarity.computeWeight(1f,
        new CollectionStatistics(field, 1, 1, 1, 1),
        new TermStatistics(new BytesRef("bogus"), 1, 1));
    final SimScorer simScorer = similarity.simScorer(simWeight, readerContext);
    
    return new FloatDocValues(this) {
      int lastDocID = -1;
      @Override
      public float floatVal(int docID) throws IOException {
        if (docID < lastDocID) {
          throw new AssertionError("docs out of order: lastDocID=" + lastDocID + " docID=" + docID);
        }
        lastDocID = docID;
        return simScorer.score(docID, 1f);
      }
    };
  }

