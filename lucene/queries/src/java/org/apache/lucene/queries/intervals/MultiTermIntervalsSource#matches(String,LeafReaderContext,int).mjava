  @Override
  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {
    Terms terms = ctx.reader().terms(field);
    if (terms == null) {
      return null;
    }
    List<MatchesIterator> subMatches = new ArrayList<>();
    TermsEnum te = automaton.getTermsEnum(terms);
    BytesRef term;
    int count = 0;
    while ((term = te.next()) != null) {
      MatchesIterator mi = TermIntervalsSource.matches(te, doc, field);
      if (mi != null) {
        subMatches.add(mi);
        if (count++ > maxExpansions) {
          throw new IllegalStateException("Automaton " + term + " expanded to too many terms (limit " + maxExpansions + ")");
        }
      }
    }
    return MatchesUtils.disjunction(subMatches);
  }

