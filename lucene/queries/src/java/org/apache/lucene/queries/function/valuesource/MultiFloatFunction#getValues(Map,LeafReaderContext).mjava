  @Override
  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {
    final FunctionValues[] valsArr = new FunctionValues[sources.length];
    for (int i=0; i<sources.length; i++) {
      valsArr[i] = sources[i].getValues(context, readerContext);
    }

    return new FloatDocValues(this) {
      @Override
      public float floatVal(int doc) {
        return func(doc, valsArr);
      }
      public boolean exists(int doc) {
        return MultiFloatFunction.this.exists(doc, valsArr);
      }
      @Override
      public String toString(int doc) {
        return MultiFunction.toString(name(), valsArr, doc);
      }
    };
  }

