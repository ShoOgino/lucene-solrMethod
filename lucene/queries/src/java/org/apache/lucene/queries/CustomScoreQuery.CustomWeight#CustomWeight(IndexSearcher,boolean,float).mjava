    public CustomWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {
      super(CustomScoreQuery.this);
      // note we DONT incorporate our boost, nor pass down any boost 
      // (e.g. from outer BQ), as there is no guarantee that the CustomScoreProvider's 
      // function obeys the distributive law... it might call sqrt() on the subQuery score
      // or some other arbitrary function other than multiplication.
      // so, instead boosts are applied directly in score()
      this.subQueryWeight = subQuery.createWeight(searcher, needsScores, 1f);
      this.valSrcWeights = new Weight[scoringQueries.length];
      for(int i = 0; i < scoringQueries.length; i++) {
        this.valSrcWeights[i] = scoringQueries[i].createWeight(searcher, needsScores, 1f);
      }
      this.queryWeight = boost;
    }

