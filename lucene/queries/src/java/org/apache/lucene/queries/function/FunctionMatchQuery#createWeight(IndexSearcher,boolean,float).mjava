  @Override
  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {
    return new ConstantScoreWeight(this, boost) {
      @Override
      public Scorer scorer(LeafReaderContext context) throws IOException {
        DoubleValues values = source.getValues(context, null);
        DocIdSetIterator approximation = DocIdSetIterator.all(context.reader().maxDoc());
        TwoPhaseIterator twoPhase = new TwoPhaseIterator(approximation) {
          @Override
          public boolean matches() throws IOException {
            return values.advanceExact(approximation.docID()) && filter.test(values.doubleValue());
          }

          @Override
          public float matchCost() {
            return 100; // TODO maybe DoubleValuesSource should have a matchCost?
          }
        };
        return new ConstantScoreScorer(this, score(), twoPhase);
      }

      @Override
      public IndexReader.CacheHelper getCacheHelper(LeafReaderContext context) {
        return null; // TODO delegate to DoubleValuesSource?
      }
    };
  }

