    void prepareDocValuesAndPointValues() {
      if (preparedDocValuesAndPointValues == false) {
        DocValuesType dvType = fieldInfo.getDocValuesType();
        if (dvType == DocValuesType.NUMERIC || dvType == DocValuesType.SORTED_NUMERIC) {
          numericProducer.prepareForUsage();
        }
        if (dvType == DocValuesType.BINARY || dvType == DocValuesType.SORTED || dvType == DocValuesType.SORTED_SET) {
          binaryProducer.prepareForUsage();
        }
        if (pointValues != null) {
          assert pointValues[0].bytes.length == pointValues[0].length : "BytesRef should wrap a precise byte[], BytesRef.deepCopyOf() should take care of this";

          final int numDimensions = fieldInfo.getPointDimensionCount();
          final int numBytesPerDimension = fieldInfo.getPointNumBytes();
          minPackedValue = pointValues[0].bytes.clone();
          maxPackedValue = pointValues[0].bytes.clone();

          for (int i = 0; i < pointValuesCount; i++) {
            BytesRef pointValue = pointValues[i];
            assert pointValue.bytes.length == pointValue.length : "BytesRef should wrap a precise byte[], BytesRef.deepCopyOf() should take care of this";

            for (int dim = 0; dim < numDimensions; ++dim) {
              int offset = dim * numBytesPerDimension;
              if (StringHelper.compare(numBytesPerDimension, pointValue.bytes, offset, minPackedValue, offset) < 0) {
                System.arraycopy(pointValue.bytes, offset, minPackedValue, offset, numBytesPerDimension);
              }
              if (StringHelper.compare(numBytesPerDimension, pointValue.bytes, offset, maxPackedValue, offset) > 0) {
                System.arraycopy(pointValue.bytes, offset, maxPackedValue, offset, numBytesPerDimension);
              }
            }
          }
        }
        preparedDocValuesAndPointValues = true;
      }
    }

