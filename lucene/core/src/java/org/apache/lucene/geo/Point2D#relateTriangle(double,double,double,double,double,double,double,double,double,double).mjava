  @Override
  public PointValues.Relation relateTriangle(double minX, double maxX, double minY, double maxY,
                                             double ax, double ay, double bx, double by, double cx, double cy) {
    if (Component2D.containsPoint(x, y, minX, maxX, minY, maxY) == false) {
      return PointValues.Relation.CELL_OUTSIDE_QUERY;
    }
    if (ax == bx && bx == cx && ay == by && by == cy) {
      return  PointValues.Relation.CELL_INSIDE_QUERY;
    } else if (ax == cx && ay == cy) {
      // indexed "triangle" is a line:
      if (orient(ax, ay, bx, by, x, y) == 0) {
        return PointValues.Relation.CELL_INSIDE_QUERY;
      }
      return PointValues.Relation.CELL_OUTSIDE_QUERY;
    } else if (ax == bx && ay == by) {
      // indexed "triangle" is a line:
      if (orient(bx, by, cx, cy, x, y) == 0) {
        return PointValues.Relation.CELL_INSIDE_QUERY;
      }
      return PointValues.Relation.CELL_OUTSIDE_QUERY;
    } else if (bx == cx && by == cy) {
      // indexed "triangle" is a line:
      if (orient(cx, cy, ax, ay, x, y) == 0) {
        return PointValues.Relation.CELL_INSIDE_QUERY;
      }
      return PointValues.Relation.CELL_OUTSIDE_QUERY;
    } else if (Component2D.pointInTriangle(minX, maxX, minY, maxY, x, y, ax, ay, bx, by, cx, cy) == true) {
      // indexed "triangle" is a triangle:
      return PointValues.Relation.CELL_INSIDE_QUERY;
    }
    return PointValues.Relation.CELL_OUTSIDE_QUERY;
  }

