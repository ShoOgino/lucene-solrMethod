  /** Returns true if the box crosses our polygon */
  private boolean crossesSlowly(double minLat, double maxLat, double minLon, double maxLon) {
    // we compute line intersections of every polygon edge with every box line.
    // if we find one, return true.
    // for each box line (AB):
    //   for each poly line (CD):
    //     intersects = orient(C,D,A) * orient(C,D,B) <= 0 && orient(A,B,C) * orient(A,B,D) <= 0
    for (int i = 1; i < polyLons.length; i++) {
      double cy = polyLats[i - 1];
      double dy = polyLats[i];
      double cx = polyLons[i - 1];
      double dx = polyLons[i];

      // optimization: see if the rectangle is outside of the "bounding box" of the polyline at all
      // if not, don't waste our time trying more complicated stuff
      if ((cy < minLat && dy < minLat) ||
          (cy > maxLat && dy > maxLat) ||
          (cx < minLon && dx < minLon) ||
          (cx > maxLon && dx > maxLon)) {
        continue;
      }

      // does box's top edge intersect polyline?
      // ax = minLon, bx = maxLon, ay = maxLat, by = maxLat
      if (orient(cx, cy, dx, dy, minLon, maxLat) * orient(cx, cy, dx, dy, maxLon, maxLat) <= 0 &&
          orient(minLon, maxLat, maxLon, maxLat, cx, cy) * orient(minLon, maxLat, maxLon, maxLat, dx, dy) <= 0) {
        return true;
      }

      // does box's right edge intersect polyline?
      // ax = maxLon, bx = maxLon, ay = maxLat, by = minLat
      if (orient(cx, cy, dx, dy, maxLon, maxLat) * orient(cx, cy, dx, dy, maxLon, minLat) <= 0 &&
          orient(maxLon, maxLat, maxLon, minLat, cx, cy) * orient(maxLon, maxLat, maxLon, minLat, dx, dy) <= 0) {
        return true;
      }

      // does box's bottom edge intersect polyline?
      // ax = maxLon, bx = minLon, ay = minLat, by = minLat
      if (orient(cx, cy, dx, dy, maxLon, minLat) * orient(cx, cy, dx, dy, minLon, minLat) <= 0 &&
          orient(maxLon, minLat, minLon, minLat, cx, cy) * orient(maxLon, minLat, minLon, minLat, dx, dy) <= 0) {
        return true;
      }

      // does box's left edge intersect polyline?
      // ax = minLon, bx = minLon, ay = minLat, by = maxLat
      if (orient(cx, cy, dx, dy, minLon, minLat) * orient(cx, cy, dx, dy, minLon, maxLat) <= 0 &&
          orient(minLon, minLat, minLon, maxLat, cx, cy) * orient(minLon, minLat, minLon, maxLat, dx, dy) <= 0) {
        return true;
      }
    }
    return false;
  }

