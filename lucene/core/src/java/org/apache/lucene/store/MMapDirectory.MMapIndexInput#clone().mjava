    @Override
    public MMapIndexInput clone() {
      if (buffers == null) {
        throw new AlreadyClosedException("MMapIndexInput already closed: " + this);
      }
      final MMapIndexInput clone = (MMapIndexInput)super.clone();
      clone.isClone = true;
      // we keep clone.clones, so it shares the same map with original and we have no additional cost on clones
      assert clone.clones == this.clones;
      clone.buffers = new ByteBuffer[buffers.length];
      for (int bufNr = 0; bufNr < buffers.length; bufNr++) {
        clone.buffers[bufNr] = buffers[bufNr].duplicate();
      }
      try {
        clone.seek(getFilePointer());
      } catch(IOException ioe) {
        throw new RuntimeException("Should never happen: " + this, ioe);
      }
      
      // register the new clone in our clone list to clean it up on closing:
      synchronized(this.clones) {
        this.clones.add(clone);
      }
      
      return clone;
    }

