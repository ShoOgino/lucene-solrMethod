  @Override
  public boolean obtain() throws IOException {

    // Ensure that lockDir exists and is a directory:
    if (!lockDir.exists()) {
      if (!lockDir.mkdirs())
        throw new IOException("Cannot create directory: " +
                              lockDir.getAbsolutePath());
    } else if (!lockDir.isDirectory()) {
      // TODO: NoSuchDirectoryException instead?
      throw new IOException("Found regular file where directory expected: " + 
                            lockDir.getAbsolutePath());
    }
    
    try {
      return lockFile.createNewFile();
    } catch (IOException ioe) {
      // On Windows, on concurrent createNewFile, the 2nd process gets "access denied".
      // In that case, the lock was not aquired successfully, so return false.
      // We record the failure reason here; the obtain with timeout (usually the
      // one calling us) will use this as "root cause" if it fails to get the lock.
      failureReason = ioe;
      return false;
    }
  }

