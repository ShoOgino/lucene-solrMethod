  @Override
  public int readVInt() {
    assert checkBounds();
    byte b = bytes[pos++];
    int i = b & 0x7F;
    if ((b & 0x80) == 0) return i;
    assert checkBounds();
    b = bytes[pos++];
    i |= (b & 0x7F) << 7;
    if ((b & 0x80) == 0) return i;
    assert checkBounds();
    b = bytes[pos++];
    i |= (b & 0x7F) << 14;
    if ((b & 0x80) == 0) return i;
    assert checkBounds();
    b = bytes[pos++];
    i |= (b & 0x7F) << 21;
    if ((b & 0x80) == 0) return i;
    assert checkBounds();
    b = bytes[pos++];
    // Warning: the next ands use 0x0F / 0xF0 - beware copy/paste errors:
    i |= (b & 0x0F) << 28;
    if ((b & 0xF0) == 0) return i;
    throw new RuntimeException("Invalid vInt detected (too many bits)");
  }

