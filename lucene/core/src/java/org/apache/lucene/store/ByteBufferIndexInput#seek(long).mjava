  @Override
  public final void seek(long pos) throws IOException {
    // necessary in case offset != 0 and pos < 0, but pos >= -offset
    if (pos < 0L) {
      throw new IllegalArgumentException("Seeking to negative position: " + this);
    }
    pos += offset;
    // we use >> here to preserve negative, so we will catch AIOOBE,
    // in case pos + offset overflows.
    final int bi = (int) (pos >> chunkSizePower);
    try {
      final ByteBuffer b = buffers[bi];
      b.position((int) (pos & chunkSizeMask));
      // write values, on exception all is unchanged
      this.curBufIndex = bi;
      this.curBuf = b;
    } catch (ArrayIndexOutOfBoundsException aioobe) {
      throw new EOFException("seek past EOF: " + this);
    } catch (IllegalArgumentException iae) {
      throw new EOFException("seek past EOF: " + this);
    } catch (NullPointerException npe) {
      throw new AlreadyClosedException("Already closed: " + this);
    }
  }

