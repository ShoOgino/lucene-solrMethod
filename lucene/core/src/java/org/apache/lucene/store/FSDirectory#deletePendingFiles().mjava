  /** Try to delete any pending files that we had previously tried to delete but failed
   *  because we are on Windows and the files were still
   *  held open. */
  public void deletePendingFiles() throws IOException {
    // TODO: we could fix IndexInputs from FSDirectory subclasses to call this when they are closed?

    // Clone the set because it will change as we iterate:
    List<String> toDelete = new ArrayList<>(pendingDeletes);

    // First pass: delete any segments_N files.  We do these first to be certain stale commit points are removed
    // before we remove any files they reference.  If any delete of segments_N fails, we leave all other files
    // undeleted so index is never in a corrupt state:
    for (String fileName : toDelete) {
      if (fileName.startsWith(IndexFileNames.SEGMENTS)) {
        if (deleteFile(fileName) == false) {
          return;
        }
      }
    }

    // Only delete other files if we were able to remove the segments_N files; this way we never
    // leave a corrupt commit in the index even in the presense of virus checkers:
    for(String fileName : toDelete) {
      if (fileName.startsWith(IndexFileNames.SEGMENTS) == false) {
        deleteFile(fileName);
      }
    }
  }

