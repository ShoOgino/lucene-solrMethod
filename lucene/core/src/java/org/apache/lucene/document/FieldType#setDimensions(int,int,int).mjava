  /**
   * Enables points indexing with selectable dimension indexing.
   */
  public void setDimensions(int dataDimensionCount, int indexDimensionCount, int dimensionNumBytes) {
    if (dataDimensionCount < 0) {
      throw new IllegalArgumentException("dataDimensionCount must be >= 0; got " + dataDimensionCount);
    }
    if (dataDimensionCount > PointValues.MAX_DIMENSIONS) {
      throw new IllegalArgumentException("dataDimensionCount must be <= " + PointValues.MAX_DIMENSIONS + "; got " + dataDimensionCount);
    }
    if (indexDimensionCount < 0) {
      throw new IllegalArgumentException("indexDimensionCount must be >= 0; got " + indexDimensionCount);
    }
    if (indexDimensionCount > dataDimensionCount) {
      throw new IllegalArgumentException("indexDimensionCount must be <= dataDimensionCount: " + dataDimensionCount + "; got " + indexDimensionCount);
    }
    if (dimensionNumBytes < 0) {
      throw new IllegalArgumentException("dimensionNumBytes must be >= 0; got " + dimensionNumBytes);
    }
    if (dimensionNumBytes > PointValues.MAX_NUM_BYTES) {
      throw new IllegalArgumentException("dimensionNumBytes must be <= " + PointValues.MAX_NUM_BYTES + "; got " + dimensionNumBytes);
    }
    if (dataDimensionCount == 0) {
      if (indexDimensionCount != 0) {
        throw new IllegalArgumentException("when dataDimensionCount is 0, indexDimensionCount must be 0; got " + indexDimensionCount);
      }
      if (dimensionNumBytes != 0) {
        throw new IllegalArgumentException("when dataDimensionCount is 0, dimensionNumBytes must be 0; got " + dimensionNumBytes);
      }
    } else if (indexDimensionCount == 0) {
      throw new IllegalArgumentException("when dataDimensionCount is > 0, indexDimensionCount must be > 0; got " + indexDimensionCount);
    } else if (dimensionNumBytes == 0) {
      if (dataDimensionCount != 0) {
        throw new IllegalArgumentException("when dimensionNumBytes is 0, dataDimensionCount must be 0; got " + dataDimensionCount);
      }
    }

    this.dataDimensionCount = dataDimensionCount;
    this.indexDimensionCount = indexDimensionCount;
    this.dimensionNumBytes = dimensionNumBytes;
  }

