  public NumericField(String name, Number value, FieldType type) {
    super(name, type);
    final NumericField.DataType numericType = type.numericType();
    if (numericType == null) {
      throw new IllegalArgumentException("FieldType.numericType() cannot be null");
    }

    switch(numericType) {
    case INT:
      if (!(value instanceof Integer)) {
        throw new IllegalArgumentException("value must be an Integer but got " + value);
      }
      break;
    case LONG:
      if (!(value instanceof Long)) {
        throw new IllegalArgumentException("value must be a Long but got " + value);
      }
      break;
    case FLOAT:
      if (!(value instanceof Float)) {
        throw new IllegalArgumentException("value must be a Float but got " + value);
      }
      break;
    case DOUBLE:
      if (!(value instanceof Double)) {
        throw new IllegalArgumentException("value must be a Double but got " + value);
      }
      break;
    default:
      assert false : "Should never get here";
    }

    fieldsData = value;
  }

