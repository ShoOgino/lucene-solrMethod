  synchronized void putIfAbsent(Filter filter, LeafReaderContext context, DocIdSet set) {
    // under a lock to make sure that mostRecentlyUsedFilters and cache remain sync'ed
    assert set.isCacheable();
    final boolean added = mostRecentlyUsedFilters.add(filter);
    if (added) {
      ramBytesUsed += ramBytesUsed(filter);
    }
    LeafCache leafCache = cache.get(context.reader().getCoreCacheKey());
    if (leafCache == null) {
      leafCache = new LeafCache();
      final LeafCache previous = cache.put(context.reader().getCoreCacheKey(), leafCache);
      assert previous == null;
      // we just created a new leaf cache, need to register a close listener
      context.reader().addCoreClosedListener(new CoreClosedListener() {
        @Override
        public void onClose(Object ownerCoreCacheKey) {
          clearCoreCacheKey(ownerCoreCacheKey);
        }
      });
    }
    leafCache.putIfAbsent(filter, set);
    evictIfNecessary();
  }

