  private Explanation explainScore(int doc, Explanation freq, IDFStats stats, NumericDocValues norms, float[] normTable) throws IOException {
    List<Explanation> subs = new ArrayList<Explanation>();
    if (stats.boost != 1F) {
      subs.add(Explanation.match(stats.boost, "boost"));
    }
    subs.add(stats.idf);
    Explanation tf = Explanation.match(tf(freq.getValue()), "tf(freq="+freq.getValue()+"), with freq of:", freq);
    subs.add(tf);

    float norm;
    if (norms == null) {
      norm = 1f;
    } else {
      boolean found = norms.advanceExact(doc);
      assert found;
      norm = normTable[(int) (norms.longValue() & 0xFF)];
    }
    
    Explanation fieldNorm = Explanation.match(
        norm,
        "fieldNorm(doc=" + doc + ")");
    subs.add(fieldNorm);
    
    return Explanation.match(
        stats.queryWeight * tf.getValue() * norm,
        "score(doc="+doc+",freq="+freq.getValue()+"), product of:",
        subs);
  }

