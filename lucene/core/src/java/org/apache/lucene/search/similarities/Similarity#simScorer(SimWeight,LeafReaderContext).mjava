  /**
   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.
   * @param weight collection information from {@link #computeWeight(CollectionStatistics, TermStatistics...)}
   * @param context segment of the inverted index to be scored.
   * @return SloppySimScorer for scoring documents across <code>context</code>
   * @throws IOException if there is a low-level I/O error
   */
  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;

