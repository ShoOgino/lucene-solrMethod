  @Override
  public TwoPhaseIterator twoPhaseIterator() {
    if (reqTwoPhaseIterator == null) {
      return null;
    }
    return new TwoPhaseIterator(reqApproximation) {

      @Override
      public boolean matches() throws IOException {
        final int doc = reqApproximation.docID();
        // check if the doc is not excluded
        int exclDoc = exclApproximation.docID();
        if (exclDoc < doc) {
          exclDoc = exclApproximation.advance(doc);
        }
        return ReqExclScorer.matches(doc, exclDoc, reqTwoPhaseIterator, exclTwoPhaseIterator);
      }

      @Override
      public float matchCost() {
        return reqTwoPhaseIterator.matchCost(); // TODO: also use cost of exclApproximation.advance()
      }
    };
  }

