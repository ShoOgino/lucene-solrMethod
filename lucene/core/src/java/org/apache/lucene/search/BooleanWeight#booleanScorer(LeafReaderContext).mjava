  /** Try to build a boolean scorer for this weight. Returns null if {@link BooleanScorer}
   *  cannot be used. */
  // pkg-private for forcing use of BooleanScorer in tests
  BooleanScorer booleanScorer(LeafReaderContext context) throws IOException {
    List<BulkScorer> optional = new ArrayList<BulkScorer>();
    Iterator<BooleanClause> cIter = query.iterator();
    for (Weight w  : weights) {
      BooleanClause c =  cIter.next();
      BulkScorer subScorer = w.bulkScorer(context);
      
      if (subScorer == null) {
        if (c.isRequired()) {
          return null;
        }
      } else if (c.isRequired()) {
        // TODO: there are some cases where BooleanScorer
        // would handle conjunctions faster than
        // BooleanScorer2...
        return null;
      } else if (c.isProhibited()) {
        // TODO: there are some cases where BooleanScorer could do this faster
        return null;
      } else {
        optional.add(subScorer);
      }
    }

    if (optional.size() == 0) {
      return null;
    }

    if (query.getMinimumNumberShouldMatch() > optional.size()) {
      return null;
    }

    return new BooleanScorer(this, disableCoord, maxCoord, optional, Math.max(1, query.getMinimumNumberShouldMatch()), needsScores);
  }

