    @Override
    public BulkScorer bulkScorer(LeafReaderContext context, Bits acceptDocs, boolean needsScores) throws IOException {
      final BooleanScorer bulkScorer = booleanScorer(context, acceptDocs, needsScores);
      if (bulkScorer != null) { // BooleanScorer is applicable
        // TODO: what is the right heuristic here?
        final long costThreshold;
        if (minNrShouldMatch <= 1) {
          // when all clauses are optional, use BooleanScorer aggressively
          // TODO: is there actually a threshold under which we should rather
          // use the regular scorer?
          costThreshold = -1;
        } else {
          // when a minimum number of clauses should match, BooleanScorer is
          // going to score all windows that have at least minNrShouldMatch
          // matches in the window. But there is no way to know if there is
          // an intersection (all clauses might match a different doc ID and
          // there will be no matches in the end) so we should only use
          // BooleanScorer if matches are very dense
          costThreshold = context.reader().maxDoc() / 3;
        }

        if (bulkScorer.cost() > costThreshold) {
          return bulkScorer;
        }
      }
      return super.bulkScorer(context, acceptDocs, needsScores);
    }

