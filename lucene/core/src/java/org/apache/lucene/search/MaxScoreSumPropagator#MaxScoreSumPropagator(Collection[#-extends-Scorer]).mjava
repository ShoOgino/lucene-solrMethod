  MaxScoreSumPropagator(Collection<? extends Scorer> scorerList) throws IOException {
    numClauses = scorerList.size();
    scorers = scorerList.toArray(new Scorer[numClauses]);

    // We'll need max scores multiple times so we cache them
    float[] maxScores = new float[numClauses];
    for (int i = 0; i < numClauses; ++i) {
      scorers[i].advanceShallow(0);
      maxScores[i] = scorers[i].getMaxScore(NO_MORE_DOCS);
    }
    // Sort by decreasing max score
    new InPlaceMergeSorter() {
      @Override
      protected void swap(int i, int j) {
        Scorer tmp = scorers[i];
        scorers[i] = scorers[j];
        scorers[j] = tmp;
        float tmpF = maxScores[i];
        maxScores[i] = maxScores[j];
        maxScores[j] = tmpF;
      }

      @Override
      protected int compare(int i, int j) {
        return Float.compare(maxScores[j], maxScores[i]);
      }
    }.sort(0, scorers.length);

    sumOfOtherMaxScores = computeSumOfComplement(maxScores);
  }

