    private Explanation explainTF(int doc, Explanation freq) throws IOException {
      List<Explanation> subs = new ArrayList<>();
      subs.add(freq);
      subs.add(Explanation.match(k1, "k1, term saturation parameter"));
      if (norms == null) {
        subs.add(Explanation.match(0, "b, field omits length norms"));
        return Explanation.match(
            (float) (freq.getValue().floatValue() / (freq.getValue().floatValue() + (double) k1)),
            "tf, computed as freq / (freq + k1) from:", subs);
      } else {
        boolean found = norms.advanceExact(doc);
        assert found;
        byte norm = (byte) norms.longValue();
        float doclen = lengthCache[norm & 0xff];
        subs.add(Explanation.match(b, "b, length normalization parameter"));
        if ((norm & 0xFF) > 39) {
          subs.add(Explanation.match(doclen, "dl, length of field (approximate)"));
        } else {
          subs.add(Explanation.match(doclen, "dl, length of field"));
        }
        subs.add(Explanation.match(stats.avgdl, "avgdl, average length of field"));
        float normValue = k1 * ((1 - b) + b * doclen / stats.avgdl);
        return Explanation.match(
            (float) (freq.getValue().floatValue() / (freq.getValue().floatValue() + (double) normValue)),
            "tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:", subs);
      }
    }

