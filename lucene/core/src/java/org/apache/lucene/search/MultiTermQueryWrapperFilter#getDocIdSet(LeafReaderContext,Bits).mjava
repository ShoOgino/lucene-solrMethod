  /**
   * Returns a DocIdSet with documents that should be permitted in search
   * results.
   */
  @Override
  public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs) throws IOException {
    final Terms terms = context.reader().terms(query.field);
    if (terms == null) {
      // field does not exist
      return null;
    }

    final TermsEnum termsEnum = query.getTermsEnum(terms);
    assert termsEnum != null;

    BitDocIdSet.Builder builder = new BitDocIdSet.Builder(context.reader().maxDoc());
    DocsEnum docs = null;
    while (termsEnum.next() != null) {
      docs = termsEnum.docs(acceptDocs, docs, DocsEnum.FLAG_NONE);
      builder.or(docs);
    }
    return builder.build();
  }

