  @Override
  public int advance(int target) throws IOException {
    // Same logic as in nextDoc
    for (ScorerWrapper s = lead; s != null; s = s.next) {
      final ScorerWrapper evicted = insertTailWithOverFlow(s);
      if (evicted != null) {
        evicted.doc = evicted.scorer.advance(target);
        head.add(evicted);
      }
    }

    // But this time there might also be scorers in 'head' behind the desired
    // target so we need to do the same thing that we did on 'lead' on 'head'
    ScorerWrapper headTop = head.top();
    while (headTop.doc < target) {
      final ScorerWrapper evicted = insertTailWithOverFlow(headTop);
      // We know that the tail is full since it contains at most
      // minShouldMatch - 1 entries and we just moved at least minShouldMatch
      // entries to it, so evicted is not null
      evicted.doc = evicted.scorer.advance(target);
      headTop = head.updateTop(evicted);
    }

    setDocAndFreq();
    return doNext();
  }

