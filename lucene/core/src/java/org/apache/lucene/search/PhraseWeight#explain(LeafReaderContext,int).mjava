  @Override
  public Explanation explain(LeafReaderContext context, int doc) throws IOException {
    PhraseMatcher matcher = getPhraseMatcher(context, false);
    if (matcher == null || matcher.approximation.advance(doc) != doc) {
      return Explanation.noMatch("no matching terms");
    }
    matcher.reset();
    if (matcher.nextMatch() == false) {
      return Explanation.noMatch("no matching phrase");
    }
    float freq = matcher.sloppyWeight();
    while (matcher.nextMatch()) {
      freq += matcher.sloppyWeight();
    }
    LeafSimScorer docScorer = new LeafSimScorer(stats, context.reader(), scoreMode.needsScores(), Float.MAX_VALUE);
    Explanation freqExplanation = Explanation.match(freq, "phraseFreq=" + freq);
    Explanation scoreExplanation = docScorer.explain(doc, freqExplanation);
    return Explanation.match(
        scoreExplanation.getValue(),
        "weight("+getQuery()+" in "+doc+") [" + similarity.getClass().getSimpleName() + "], result of:",
        scoreExplanation);
  }

