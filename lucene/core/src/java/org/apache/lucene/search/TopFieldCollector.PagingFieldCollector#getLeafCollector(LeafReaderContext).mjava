    @Override
    public LeafCollector getLeafCollector(LeafReaderContext context) throws IOException {
      docBase = context.docBase;
      final int afterDoc = after.doc - docBase;

      return new TopFieldLeafCollector(queue, sort, context) {

        @Override
        public void collect(int doc) throws IOException {
          countHit(doc);
          if (queueFull) {
            if (thresholdCheck(doc)) {
              return;
            }
          }

          final int topCmp = reverseMul * comparator.compareTop(doc);
          if (topCmp > 0 || (topCmp == 0 && doc <= afterDoc)) {
            // Already collected on a previous page
            if (totalHitsRelation == TotalHits.Relation.EQUAL_TO) {
              // we just reached totalHitsThreshold, we can start setting the min
              // competitive score now
              updateMinCompetitiveScore(scorer);
            }
            return;
          }

          if (queueFull) {
            collectCompetitiveHit(doc);
          } else {
            collectedHits++;
            collectAnyHit(doc, collectedHits);
          }
        }
      };
    }

