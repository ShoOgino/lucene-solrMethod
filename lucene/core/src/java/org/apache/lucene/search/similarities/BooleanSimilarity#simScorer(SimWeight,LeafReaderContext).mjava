  @Override
  public SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException {
    final float boost = ((BooleanWeight) weight).boost;

    return new SimScorer() {

      @Override
      public float score(int doc, float freq) throws IOException {
        return boost;
      }

      @Override
      public float maxScore(float maxFreq) {
        return boost;
      }

      @Override
      public Explanation explain(int doc, Explanation freq) throws IOException {
        Explanation queryBoostExpl = Explanation.match(boost, "boost, query boost");
        return Explanation.match(
            queryBoostExpl.getValue(),
            "score(" + getClass().getSimpleName() + ", doc=" + doc + "), computed from:",
            queryBoostExpl);
      }

    };
  }

