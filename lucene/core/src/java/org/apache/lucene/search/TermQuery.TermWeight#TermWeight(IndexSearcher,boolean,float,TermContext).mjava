    public TermWeight(IndexSearcher searcher, boolean needsScores,
        float boost, TermContext termStates) throws IOException {
      super(TermQuery.this);
      if (needsScores && termStates == null) {
        throw new IllegalStateException("termStates are required when scores are needed");
      }
      this.needsScores = needsScores;
      this.termStates = termStates;
      this.similarity = searcher.getSimilarity(needsScores);

      final CollectionStatistics collectionStats;
      final TermStatistics termStats;
      if (needsScores) {
        collectionStats = searcher.collectionStatistics(term.field());
        termStats = searcher.termStatistics(term, termStates);
      } else {
        // we do not need the actual stats, use fake stats with docFreq=maxDoc=1 and ttf=-1
        collectionStats = new CollectionStatistics(term.field(), 1, -1, -1, -1);
        termStats = new TermStatistics(term.bytes(), 1, -1);
      }
     
      if (termStats == null) {
        this.stats = null; // term doesn't exist in any segment, we won't use similarity at all
      } else {
        this.stats = similarity.computeWeight(boost, collectionStats, termStats);
      }
    }

