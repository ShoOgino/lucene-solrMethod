  @Override
  public Spans getSpans(final LeafReaderContext context, final Bits acceptDocs, final Map<Term,TermContext> termContexts) throws IOException {
    Spans includeSpans = include.getSpans(context, acceptDocs, termContexts);
    if (includeSpans == null) {
      return null;
    }

    Spans excludeSpans = exclude.getSpans(context, acceptDocs, termContexts);
    if (excludeSpans == null) {
      return includeSpans;
    }
    
    TwoPhaseIterator excludeTwoPhase = excludeSpans.asTwoPhaseIterator();
    DocIdSetIterator excludeApproximation = excludeTwoPhase == null ? null : excludeTwoPhase.approximation();
    
    return new FilterSpans(includeSpans) {
      // last document we have checked matches() against for the exclusion, and failed
      // when using approximations, so we don't call it again, and pass thru all inclusions.
      int lastNonMatchingDoc = -1;
      
      @Override
      protected AcceptStatus accept(Spans candidate) throws IOException {
        int doc = candidate.docID();
        if (doc > excludeSpans.docID()) {
          // catch up 'exclude' to the current doc
          if (excludeTwoPhase != null) {
            if (excludeApproximation.advance(doc) == doc) {
              if (!excludeTwoPhase.matches()) {
                lastNonMatchingDoc = doc; // mark as non-match
              }
            }
          } else {
            excludeSpans.advance(doc);
          }
        }
        
        if (doc == lastNonMatchingDoc || doc != excludeSpans.docID()) {
          return AcceptStatus.YES;
        }
        
        if (excludeSpans.startPosition() == -1) { // init exclude start position if needed
          excludeSpans.nextStartPosition();
        }
        
        while (excludeSpans.endPosition() <= candidate.startPosition() - pre) {
          // exclude end position is before a possible exclusion
          if (excludeSpans.nextStartPosition() == NO_MORE_POSITIONS) {
            return AcceptStatus.YES; // no more exclude at current doc.
          }
        }
        
        // exclude end position far enough in current doc, check start position:
        if (candidate.endPosition() + post <= excludeSpans.startPosition()) {
          return AcceptStatus.YES;
        } else {
          return AcceptStatus.NO;
        }
      }
    };
  }

