  private DisjunctionMatchesIterator(List<MatchesIterator> matches) throws IOException {
    queue = new PriorityQueue<MatchesIterator>(matches.size()){
      @Override
      protected boolean lessThan(MatchesIterator a, MatchesIterator b) {
        return a.startPosition() < b.startPosition() ||
            (a.startPosition() == b.startPosition() && a.endPosition() < b.endPosition()) ||
            (a.startPosition() == b.startPosition() && a.endPosition() == b.endPosition() && a.term().compareTo(b.term()) < 0);
      }
    };
    for (MatchesIterator mi : matches) {
      if (mi.next()) {
        queue.add(mi);
      }
    }
  }

