    @Override
    public Spans getSpans(final LeafReaderContext context, Bits acceptDocs, SpanCollector collector) throws IOException {

      Terms terms = context.reader().terms(field);
      if (terms == null) {
        return null; // field does not exist
      }

      ArrayList<Spans> subSpans = new ArrayList<>(clauses.size());
      SpanCollector subSpanCollector = inOrder ? collector.bufferedCollector() : collector;
      for (SpanWeight w : subWeights) {
        Spans subSpan = w.getSpans(context, acceptDocs, subSpanCollector);
        if (subSpan != null) {
          subSpans.add(subSpan);
        } else {
          return null; // all required
        }
      }

      // all NearSpans require at least two subSpans
      return (!inOrder) ? new NearSpansUnordered(SpanNearQuery.this, subSpans)
          : new NearSpansOrdered(SpanNearQuery.this, subSpans, collector);
    }

