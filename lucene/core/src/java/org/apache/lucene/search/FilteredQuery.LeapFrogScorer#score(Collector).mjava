    // optimization: we are topScorer and collect directly using short-circuited algo
    @Override
    public final void score(Collector collector) throws IOException {
      int primDoc = primaryNext();
      int secDoc = secondary.advance(primDoc);
      // the normalization trick already applies the boost of this query,
      // so we can use the wrapped scorer directly:
      collector.setScorer(scorer);
      for (;;) {
        if (primDoc == secDoc) {
          // Check if scorer has exhausted, only before collecting.
          if (primDoc == DocIdSetIterator.NO_MORE_DOCS) {
            break;
          }
          collector.collect(primDoc);
          primDoc = primary.nextDoc();
          secDoc = secondary.advance(primDoc);
        } else if (secDoc > primDoc) {
          primDoc = primary.advance(secDoc);
        } else {
          secDoc = secondary.advance(primDoc);
        }
      }
    }

