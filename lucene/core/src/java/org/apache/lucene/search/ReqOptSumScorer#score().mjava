  /** Returns the score of the current document matching the query.
   * Initially invalid, until the {@link #iterator()} is advanced the first time.
   * @return The score of the required scorer, eventually increased by the score
   * of the optional scorer when it also matches the current document.
   */
  @Override
  public float score() throws IOException {
    // TODO: sum into a double and cast to float if we ever send required clauses to BS1
    int curDoc = reqScorer.docID();
    float score = reqScorer.score();

    int optScorerDoc = optIterator.docID();
    if (optScorerDoc < curDoc) {
      optScorerDoc = optIterator.advance(curDoc);
    }
    
    if (optScorerDoc == curDoc) {
      score += optScorer.score();
    }
    
    return score;
  }

