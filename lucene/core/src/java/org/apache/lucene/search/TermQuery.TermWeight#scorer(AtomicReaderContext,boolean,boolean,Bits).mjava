    @Override
    public Scorer scorer(AtomicReaderContext context, boolean scoreDocsInOrder,
        boolean topScorer, Bits acceptDocs) throws IOException {
      assert termStates.topReaderContext == ReaderUtil.getTopLevelContext(context) : "The top-reader used to create Weight (" + termStates.topReaderContext + ") is not the same as the current reader's top-reader (" + ReaderUtil.getTopLevelContext(context);
      final TermsEnum termsEnum = getTermsEnum(context);
      if (termsEnum == null) {
        return null;
      }
      DocsEnum docs = termsEnum.docs(acceptDocs, null, true);
      if (docs != null) {
        return new TermScorer(this, docs, createDocScorer(context));
      } else {
        // Index does not store freq info
        docs = termsEnum.docs(acceptDocs, null, false);
        assert docs != null;
        return new MatchOnlyTermScorer(this, docs, createDocScorer(context));
      }
    }

