  /** Reorganize {@code arr[from:to[} so that the element at offset k is at the
   *  same position as if {@code arr[from:to[} was sorted, and all elements on
   *  its left are less than or equal to it, and all elements on its right are
   *  greater than or equal to it.
   *  This runs in linear time on average and in {@code n log(n)} time in the
   *  worst case.*/
  public static <T> void select(T[] arr, int from, int to, int k, Comparator<T> comparator) {
    if (k < from) {
      throw new IllegalArgumentException("k must be >= from");
    }
    if (k >= to) {
      throw new IllegalArgumentException("k must be < to");
    }
    final int maxDepth = 2 * MathUtil.log(to - from, 2);
    quickSelect(arr, from, to, k, comparator, maxDepth);
  }

