    public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {
      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;
      assert valuesOffset + iterations * valueCount() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final int byte0 = blocks[blocksOffset++] & 0xFF;
        final int byte1 = blocks[blocksOffset++] & 0xFF;
        final int byte2 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte0 << 11) | (byte1 << 3) | (byte2 >>> 5);
        final int byte3 = blocks[blocksOffset++] & 0xFF;
        final int byte4 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte2 & 31) << 14) | (byte3 << 6) | (byte4 >>> 2);
        final int byte5 = blocks[blocksOffset++] & 0xFF;
        final int byte6 = blocks[blocksOffset++] & 0xFF;
        final int byte7 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte4 & 3) << 17) | (byte5 << 9) | (byte6 << 1) | (byte7 >>> 7);
        final int byte8 = blocks[blocksOffset++] & 0xFF;
        final int byte9 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte7 & 127) << 12) | (byte8 << 4) | (byte9 >>> 4);
        final int byte10 = blocks[blocksOffset++] & 0xFF;
        final int byte11 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte9 & 15) << 15) | (byte10 << 7) | (byte11 >>> 1);
        final int byte12 = blocks[blocksOffset++] & 0xFF;
        final int byte13 = blocks[blocksOffset++] & 0xFF;
        final int byte14 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte11 & 1) << 18) | (byte12 << 10) | (byte13 << 2) | (byte14 >>> 6);
        final int byte15 = blocks[blocksOffset++] & 0xFF;
        final int byte16 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte14 & 63) << 13) | (byte15 << 5) | (byte16 >>> 3);
        final int byte17 = blocks[blocksOffset++] & 0xFF;
        final int byte18 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte16 & 7) << 16) | (byte17 << 8) | byte18;
        final int byte19 = blocks[blocksOffset++] & 0xFF;
        final int byte20 = blocks[blocksOffset++] & 0xFF;
        final int byte21 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte19 << 11) | (byte20 << 3) | (byte21 >>> 5);
        final int byte22 = blocks[blocksOffset++] & 0xFF;
        final int byte23 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte21 & 31) << 14) | (byte22 << 6) | (byte23 >>> 2);
        final int byte24 = blocks[blocksOffset++] & 0xFF;
        final int byte25 = blocks[blocksOffset++] & 0xFF;
        final int byte26 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte23 & 3) << 17) | (byte24 << 9) | (byte25 << 1) | (byte26 >>> 7);
        final int byte27 = blocks[blocksOffset++] & 0xFF;
        final int byte28 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte26 & 127) << 12) | (byte27 << 4) | (byte28 >>> 4);
        final int byte29 = blocks[blocksOffset++] & 0xFF;
        final int byte30 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte28 & 15) << 15) | (byte29 << 7) | (byte30 >>> 1);
        final int byte31 = blocks[blocksOffset++] & 0xFF;
        final int byte32 = blocks[blocksOffset++] & 0xFF;
        final int byte33 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte30 & 1) << 18) | (byte31 << 10) | (byte32 << 2) | (byte33 >>> 6);
        final int byte34 = blocks[blocksOffset++] & 0xFF;
        final int byte35 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte33 & 63) << 13) | (byte34 << 5) | (byte35 >>> 3);
        final int byte36 = blocks[blocksOffset++] & 0xFF;
        final int byte37 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte35 & 7) << 16) | (byte36 << 8) | byte37;
        final int byte38 = blocks[blocksOffset++] & 0xFF;
        final int byte39 = blocks[blocksOffset++] & 0xFF;
        final int byte40 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte38 << 11) | (byte39 << 3) | (byte40 >>> 5);
        final int byte41 = blocks[blocksOffset++] & 0xFF;
        final int byte42 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte40 & 31) << 14) | (byte41 << 6) | (byte42 >>> 2);
        final int byte43 = blocks[blocksOffset++] & 0xFF;
        final int byte44 = blocks[blocksOffset++] & 0xFF;
        final int byte45 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte42 & 3) << 17) | (byte43 << 9) | (byte44 << 1) | (byte45 >>> 7);
        final int byte46 = blocks[blocksOffset++] & 0xFF;
        final int byte47 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte45 & 127) << 12) | (byte46 << 4) | (byte47 >>> 4);
        final int byte48 = blocks[blocksOffset++] & 0xFF;
        final int byte49 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte47 & 15) << 15) | (byte48 << 7) | (byte49 >>> 1);
        final int byte50 = blocks[blocksOffset++] & 0xFF;
        final int byte51 = blocks[blocksOffset++] & 0xFF;
        final int byte52 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte49 & 1) << 18) | (byte50 << 10) | (byte51 << 2) | (byte52 >>> 6);
        final int byte53 = blocks[blocksOffset++] & 0xFF;
        final int byte54 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte52 & 63) << 13) | (byte53 << 5) | (byte54 >>> 3);
        final int byte55 = blocks[blocksOffset++] & 0xFF;
        final int byte56 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte54 & 7) << 16) | (byte55 << 8) | byte56;
        final int byte57 = blocks[blocksOffset++] & 0xFF;
        final int byte58 = blocks[blocksOffset++] & 0xFF;
        final int byte59 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte57 << 11) | (byte58 << 3) | (byte59 >>> 5);
        final int byte60 = blocks[blocksOffset++] & 0xFF;
        final int byte61 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte59 & 31) << 14) | (byte60 << 6) | (byte61 >>> 2);
        final int byte62 = blocks[blocksOffset++] & 0xFF;
        final int byte63 = blocks[blocksOffset++] & 0xFF;
        final int byte64 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte61 & 3) << 17) | (byte62 << 9) | (byte63 << 1) | (byte64 >>> 7);
        final int byte65 = blocks[blocksOffset++] & 0xFF;
        final int byte66 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte64 & 127) << 12) | (byte65 << 4) | (byte66 >>> 4);
        final int byte67 = blocks[blocksOffset++] & 0xFF;
        final int byte68 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte66 & 15) << 15) | (byte67 << 7) | (byte68 >>> 1);
        final int byte69 = blocks[blocksOffset++] & 0xFF;
        final int byte70 = blocks[blocksOffset++] & 0xFF;
        final int byte71 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte68 & 1) << 18) | (byte69 << 10) | (byte70 << 2) | (byte71 >>> 6);
        final int byte72 = blocks[blocksOffset++] & 0xFF;
        final int byte73 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte71 & 63) << 13) | (byte72 << 5) | (byte73 >>> 3);
        final int byte74 = blocks[blocksOffset++] & 0xFF;
        final int byte75 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte73 & 7) << 16) | (byte74 << 8) | byte75;
        final int byte76 = blocks[blocksOffset++] & 0xFF;
        final int byte77 = blocks[blocksOffset++] & 0xFF;
        final int byte78 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte76 << 11) | (byte77 << 3) | (byte78 >>> 5);
        final int byte79 = blocks[blocksOffset++] & 0xFF;
        final int byte80 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte78 & 31) << 14) | (byte79 << 6) | (byte80 >>> 2);
        final int byte81 = blocks[blocksOffset++] & 0xFF;
        final int byte82 = blocks[blocksOffset++] & 0xFF;
        final int byte83 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte80 & 3) << 17) | (byte81 << 9) | (byte82 << 1) | (byte83 >>> 7);
        final int byte84 = blocks[blocksOffset++] & 0xFF;
        final int byte85 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte83 & 127) << 12) | (byte84 << 4) | (byte85 >>> 4);
        final int byte86 = blocks[blocksOffset++] & 0xFF;
        final int byte87 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte85 & 15) << 15) | (byte86 << 7) | (byte87 >>> 1);
        final int byte88 = blocks[blocksOffset++] & 0xFF;
        final int byte89 = blocks[blocksOffset++] & 0xFF;
        final int byte90 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte87 & 1) << 18) | (byte88 << 10) | (byte89 << 2) | (byte90 >>> 6);
        final int byte91 = blocks[blocksOffset++] & 0xFF;
        final int byte92 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte90 & 63) << 13) | (byte91 << 5) | (byte92 >>> 3);
        final int byte93 = blocks[blocksOffset++] & 0xFF;
        final int byte94 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte92 & 7) << 16) | (byte93 << 8) | byte94;
        final int byte95 = blocks[blocksOffset++] & 0xFF;
        final int byte96 = blocks[blocksOffset++] & 0xFF;
        final int byte97 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte95 << 11) | (byte96 << 3) | (byte97 >>> 5);
        final int byte98 = blocks[blocksOffset++] & 0xFF;
        final int byte99 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte97 & 31) << 14) | (byte98 << 6) | (byte99 >>> 2);
        final int byte100 = blocks[blocksOffset++] & 0xFF;
        final int byte101 = blocks[blocksOffset++] & 0xFF;
        final int byte102 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte99 & 3) << 17) | (byte100 << 9) | (byte101 << 1) | (byte102 >>> 7);
        final int byte103 = blocks[blocksOffset++] & 0xFF;
        final int byte104 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte102 & 127) << 12) | (byte103 << 4) | (byte104 >>> 4);
        final int byte105 = blocks[blocksOffset++] & 0xFF;
        final int byte106 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte104 & 15) << 15) | (byte105 << 7) | (byte106 >>> 1);
        final int byte107 = blocks[blocksOffset++] & 0xFF;
        final int byte108 = blocks[blocksOffset++] & 0xFF;
        final int byte109 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte106 & 1) << 18) | (byte107 << 10) | (byte108 << 2) | (byte109 >>> 6);
        final int byte110 = blocks[blocksOffset++] & 0xFF;
        final int byte111 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte109 & 63) << 13) | (byte110 << 5) | (byte111 >>> 3);
        final int byte112 = blocks[blocksOffset++] & 0xFF;
        final int byte113 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte111 & 7) << 16) | (byte112 << 8) | byte113;
        final int byte114 = blocks[blocksOffset++] & 0xFF;
        final int byte115 = blocks[blocksOffset++] & 0xFF;
        final int byte116 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte114 << 11) | (byte115 << 3) | (byte116 >>> 5);
        final int byte117 = blocks[blocksOffset++] & 0xFF;
        final int byte118 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte116 & 31) << 14) | (byte117 << 6) | (byte118 >>> 2);
        final int byte119 = blocks[blocksOffset++] & 0xFF;
        final int byte120 = blocks[blocksOffset++] & 0xFF;
        final int byte121 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte118 & 3) << 17) | (byte119 << 9) | (byte120 << 1) | (byte121 >>> 7);
        final int byte122 = blocks[blocksOffset++] & 0xFF;
        final int byte123 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte121 & 127) << 12) | (byte122 << 4) | (byte123 >>> 4);
        final int byte124 = blocks[blocksOffset++] & 0xFF;
        final int byte125 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte123 & 15) << 15) | (byte124 << 7) | (byte125 >>> 1);
        final int byte126 = blocks[blocksOffset++] & 0xFF;
        final int byte127 = blocks[blocksOffset++] & 0xFF;
        final int byte128 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte125 & 1) << 18) | (byte126 << 10) | (byte127 << 2) | (byte128 >>> 6);
        final int byte129 = blocks[blocksOffset++] & 0xFF;
        final int byte130 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte128 & 63) << 13) | (byte129 << 5) | (byte130 >>> 3);
        final int byte131 = blocks[blocksOffset++] & 0xFF;
        final int byte132 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte130 & 7) << 16) | (byte131 << 8) | byte132;
        final int byte133 = blocks[blocksOffset++] & 0xFF;
        final int byte134 = blocks[blocksOffset++] & 0xFF;
        final int byte135 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte133 << 11) | (byte134 << 3) | (byte135 >>> 5);
        final int byte136 = blocks[blocksOffset++] & 0xFF;
        final int byte137 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte135 & 31) << 14) | (byte136 << 6) | (byte137 >>> 2);
        final int byte138 = blocks[blocksOffset++] & 0xFF;
        final int byte139 = blocks[blocksOffset++] & 0xFF;
        final int byte140 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte137 & 3) << 17) | (byte138 << 9) | (byte139 << 1) | (byte140 >>> 7);
        final int byte141 = blocks[blocksOffset++] & 0xFF;
        final int byte142 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte140 & 127) << 12) | (byte141 << 4) | (byte142 >>> 4);
        final int byte143 = blocks[blocksOffset++] & 0xFF;
        final int byte144 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte142 & 15) << 15) | (byte143 << 7) | (byte144 >>> 1);
        final int byte145 = blocks[blocksOffset++] & 0xFF;
        final int byte146 = blocks[blocksOffset++] & 0xFF;
        final int byte147 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte144 & 1) << 18) | (byte145 << 10) | (byte146 << 2) | (byte147 >>> 6);
        final int byte148 = blocks[blocksOffset++] & 0xFF;
        final int byte149 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte147 & 63) << 13) | (byte148 << 5) | (byte149 >>> 3);
        final int byte150 = blocks[blocksOffset++] & 0xFF;
        final int byte151 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte149 & 7) << 16) | (byte150 << 8) | byte151;
      }
    }

