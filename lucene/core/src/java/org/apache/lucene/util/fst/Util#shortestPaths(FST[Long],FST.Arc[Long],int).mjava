  /** Starting from node, find the top N min cost (Long
   *  output) completions to a final node.
   *
   *  <p>NOTE: you must share the outputs when you build the
   *  FST (pass doShare=true to {@link
   *  PositiveIntOutputs#getSingleton}). */

  public static MinResult[] shortestPaths(FST<Long> fst, FST.Arc<Long> fromNode, int topN) throws IOException {
    return new TopNSearcher(fst, fromNode, topN).search();
  } 

