    @Override
    public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {
      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;
      assert valuesOffset + iterations * valueCount() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final int byte7 = blocks[blocksOffset++] & 0xFF;
        final int byte6 = blocks[blocksOffset++] & 0xFF;
        final int byte5 = blocks[blocksOffset++] & 0xFF;
        final int byte4 = blocks[blocksOffset++] & 0xFF;
        final int byte3 = blocks[blocksOffset++] & 0xFF;
        final int byte2 = blocks[blocksOffset++] & 0xFF;
        final int byte1 = blocks[blocksOffset++] & 0xFF;
        final int byte0 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte0 & 3;
        values[valuesOffset++] = (byte0 >>> 2) & 3;
        values[valuesOffset++] = (byte0 >>> 4) & 3;
        values[valuesOffset++] = byte0 >>> 6;
        values[valuesOffset++] = byte1 & 3;
        values[valuesOffset++] = (byte1 >>> 2) & 3;
        values[valuesOffset++] = (byte1 >>> 4) & 3;
        values[valuesOffset++] = byte1 >>> 6;
        values[valuesOffset++] = byte2 & 3;
        values[valuesOffset++] = (byte2 >>> 2) & 3;
        values[valuesOffset++] = (byte2 >>> 4) & 3;
        values[valuesOffset++] = byte2 >>> 6;
        values[valuesOffset++] = byte3 & 3;
        values[valuesOffset++] = (byte3 >>> 2) & 3;
        values[valuesOffset++] = (byte3 >>> 4) & 3;
        values[valuesOffset++] = byte3 >>> 6;
        values[valuesOffset++] = byte4 & 3;
        values[valuesOffset++] = (byte4 >>> 2) & 3;
        values[valuesOffset++] = (byte4 >>> 4) & 3;
        values[valuesOffset++] = byte4 >>> 6;
        values[valuesOffset++] = byte5 & 3;
        values[valuesOffset++] = (byte5 >>> 2) & 3;
        values[valuesOffset++] = (byte5 >>> 4) & 3;
        values[valuesOffset++] = byte5 >>> 6;
        values[valuesOffset++] = byte6 & 3;
        values[valuesOffset++] = (byte6 >>> 2) & 3;
        values[valuesOffset++] = (byte6 >>> 4) & 3;
        values[valuesOffset++] = byte6 >>> 6;
        values[valuesOffset++] = byte7 & 3;
        values[valuesOffset++] = (byte7 >>> 2) & 3;
        values[valuesOffset++] = (byte7 >>> 4) & 3;
        values[valuesOffset++] = byte7 >>> 6;
      }
    }

