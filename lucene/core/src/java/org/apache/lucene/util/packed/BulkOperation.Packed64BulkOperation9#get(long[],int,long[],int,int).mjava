    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {
      assert bi + iterations * blocks() <= blocks.length;
      assert vi + iterations * values() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final long block0 = blocks[bi++];
        values[vi++] = block0 >>> 55;
        values[vi++] = (block0 >>> 46) & 511L;
        values[vi++] = (block0 >>> 37) & 511L;
        values[vi++] = (block0 >>> 28) & 511L;
        values[vi++] = (block0 >>> 19) & 511L;
        values[vi++] = (block0 >>> 10) & 511L;
        values[vi++] = (block0 >>> 1) & 511L;
        final long block1 = blocks[bi++];
        values[vi++] = ((block0 & 1L) << 8) | (block1 >>> 56);
        values[vi++] = (block1 >>> 47) & 511L;
        values[vi++] = (block1 >>> 38) & 511L;
        values[vi++] = (block1 >>> 29) & 511L;
        values[vi++] = (block1 >>> 20) & 511L;
        values[vi++] = (block1 >>> 11) & 511L;
        values[vi++] = (block1 >>> 2) & 511L;
        final long block2 = blocks[bi++];
        values[vi++] = ((block1 & 3L) << 7) | (block2 >>> 57);
        values[vi++] = (block2 >>> 48) & 511L;
        values[vi++] = (block2 >>> 39) & 511L;
        values[vi++] = (block2 >>> 30) & 511L;
        values[vi++] = (block2 >>> 21) & 511L;
        values[vi++] = (block2 >>> 12) & 511L;
        values[vi++] = (block2 >>> 3) & 511L;
        final long block3 = blocks[bi++];
        values[vi++] = ((block2 & 7L) << 6) | (block3 >>> 58);
        values[vi++] = (block3 >>> 49) & 511L;
        values[vi++] = (block3 >>> 40) & 511L;
        values[vi++] = (block3 >>> 31) & 511L;
        values[vi++] = (block3 >>> 22) & 511L;
        values[vi++] = (block3 >>> 13) & 511L;
        values[vi++] = (block3 >>> 4) & 511L;
        final long block4 = blocks[bi++];
        values[vi++] = ((block3 & 15L) << 5) | (block4 >>> 59);
        values[vi++] = (block4 >>> 50) & 511L;
        values[vi++] = (block4 >>> 41) & 511L;
        values[vi++] = (block4 >>> 32) & 511L;
        values[vi++] = (block4 >>> 23) & 511L;
        values[vi++] = (block4 >>> 14) & 511L;
        values[vi++] = (block4 >>> 5) & 511L;
        final long block5 = blocks[bi++];
        values[vi++] = ((block4 & 31L) << 4) | (block5 >>> 60);
        values[vi++] = (block5 >>> 51) & 511L;
        values[vi++] = (block5 >>> 42) & 511L;
        values[vi++] = (block5 >>> 33) & 511L;
        values[vi++] = (block5 >>> 24) & 511L;
        values[vi++] = (block5 >>> 15) & 511L;
        values[vi++] = (block5 >>> 6) & 511L;
        final long block6 = blocks[bi++];
        values[vi++] = ((block5 & 63L) << 3) | (block6 >>> 61);
        values[vi++] = (block6 >>> 52) & 511L;
        values[vi++] = (block6 >>> 43) & 511L;
        values[vi++] = (block6 >>> 34) & 511L;
        values[vi++] = (block6 >>> 25) & 511L;
        values[vi++] = (block6 >>> 16) & 511L;
        values[vi++] = (block6 >>> 7) & 511L;
        final long block7 = blocks[bi++];
        values[vi++] = ((block6 & 127L) << 2) | (block7 >>> 62);
        values[vi++] = (block7 >>> 53) & 511L;
        values[vi++] = (block7 >>> 44) & 511L;
        values[vi++] = (block7 >>> 35) & 511L;
        values[vi++] = (block7 >>> 26) & 511L;
        values[vi++] = (block7 >>> 17) & 511L;
        values[vi++] = (block7 >>> 8) & 511L;
        final long block8 = blocks[bi++];
        values[vi++] = ((block7 & 255L) << 1) | (block8 >>> 63);
        values[vi++] = (block8 >>> 54) & 511L;
        values[vi++] = (block8 >>> 45) & 511L;
        values[vi++] = (block8 >>> 36) & 511L;
        values[vi++] = (block8 >>> 27) & 511L;
        values[vi++] = (block8 >>> 18) & 511L;
        values[vi++] = (block8 >>> 9) & 511L;
        values[vi++] = block8 & 511L;
      }
    }

