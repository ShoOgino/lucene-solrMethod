  /**
   * Creates a query from a graph token stream by extracting all the finite strings from the graph and using them to create the query.
   */
  protected Query analyzeGraph(TokenStream source, BooleanClause.Occur operator, String field, boolean quoted, int phraseSlop)
      throws IOException {
    source.reset();
    List<TokenStream> tokenStreams = GraphTokenStreamFiniteStrings.getTokenStreams(source);

    if (tokenStreams.isEmpty()) {
      return null;
    }

    List<Query> queries = new ArrayList<>(tokenStreams.size());
    for (TokenStream ts : tokenStreams) {
      Query query = createFieldQuery(ts, operator, field, quoted, phraseSlop);
      if (query != null) {
        queries.add(query);
      }
    }

    return new GraphQuery(queries.toArray(new Query[0]));
  }

