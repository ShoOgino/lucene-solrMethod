    public void decode(LongBuffer blocks, LongBuffer values, int iterations) {
      assert blocks.position() + iterations * blocks() <= blocks.limit();
      assert values.position() + iterations * values() <= values.limit();
      for (int i = 0; i < iterations; ++i) {
        final long block0 = blocks.get();
        values.put(block0 >>> 12);
        final long block1 = blocks.get();
        values.put(((block0 & 4095L) << 40) | (block1 >>> 24));
        final long block2 = blocks.get();
        values.put(((block1 & 16777215L) << 28) | (block2 >>> 36));
        final long block3 = blocks.get();
        values.put(((block2 & 68719476735L) << 16) | (block3 >>> 48));
        final long block4 = blocks.get();
        values.put(((block3 & 281474976710655L) << 4) | (block4 >>> 60));
        values.put((block4 >>> 8) & 4503599627370495L);
        final long block5 = blocks.get();
        values.put(((block4 & 255L) << 44) | (block5 >>> 20));
        final long block6 = blocks.get();
        values.put(((block5 & 1048575L) << 32) | (block6 >>> 32));
        final long block7 = blocks.get();
        values.put(((block6 & 4294967295L) << 20) | (block7 >>> 44));
        final long block8 = blocks.get();
        values.put(((block7 & 17592186044415L) << 8) | (block8 >>> 56));
        values.put((block8 >>> 4) & 4503599627370495L);
        final long block9 = blocks.get();
        values.put(((block8 & 15L) << 48) | (block9 >>> 16));
        final long block10 = blocks.get();
        values.put(((block9 & 65535L) << 36) | (block10 >>> 28));
        final long block11 = blocks.get();
        values.put(((block10 & 268435455L) << 24) | (block11 >>> 40));
        final long block12 = blocks.get();
        values.put(((block11 & 1099511627775L) << 12) | (block12 >>> 52));
        values.put(block12 & 4503599627370495L);
      }
    }

