  /** Starting from node, find the top N min cost 
   * completions to a final node.
   *
   *  <p>NOTE: you must share the outputs when you build the
   *  FST (pass doShare=true to {@link
   *  PositiveIntOutputs#getSingleton}). */

  public static <T> MinResult<T>[] shortestPaths(FST<T> fst, FST.Arc<T> fromNode, Comparator<T> comparator, int topN) throws IOException {
    return new TopNSearcher<T>(fst, fromNode, topN, comparator).search();
  } 

