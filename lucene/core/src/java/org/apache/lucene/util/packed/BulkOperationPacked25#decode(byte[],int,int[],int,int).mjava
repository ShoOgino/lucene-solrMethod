    public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {
      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;
      assert valuesOffset + iterations * valueCount() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final int byte0 = blocks[blocksOffset++] & 0xFF;
        final int byte1 = blocks[blocksOffset++] & 0xFF;
        final int byte2 = blocks[blocksOffset++] & 0xFF;
        final int byte3 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte0 << 17) | (byte1 << 9) | (byte2 << 1) | (byte3 >>> 7);
        final int byte4 = blocks[blocksOffset++] & 0xFF;
        final int byte5 = blocks[blocksOffset++] & 0xFF;
        final int byte6 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte3 & 127) << 18) | (byte4 << 10) | (byte5 << 2) | (byte6 >>> 6);
        final int byte7 = blocks[blocksOffset++] & 0xFF;
        final int byte8 = blocks[blocksOffset++] & 0xFF;
        final int byte9 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte6 & 63) << 19) | (byte7 << 11) | (byte8 << 3) | (byte9 >>> 5);
        final int byte10 = blocks[blocksOffset++] & 0xFF;
        final int byte11 = blocks[blocksOffset++] & 0xFF;
        final int byte12 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte9 & 31) << 20) | (byte10 << 12) | (byte11 << 4) | (byte12 >>> 4);
        final int byte13 = blocks[blocksOffset++] & 0xFF;
        final int byte14 = blocks[blocksOffset++] & 0xFF;
        final int byte15 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte12 & 15) << 21) | (byte13 << 13) | (byte14 << 5) | (byte15 >>> 3);
        final int byte16 = blocks[blocksOffset++] & 0xFF;
        final int byte17 = blocks[blocksOffset++] & 0xFF;
        final int byte18 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte15 & 7) << 22) | (byte16 << 14) | (byte17 << 6) | (byte18 >>> 2);
        final int byte19 = blocks[blocksOffset++] & 0xFF;
        final int byte20 = blocks[blocksOffset++] & 0xFF;
        final int byte21 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte18 & 3) << 23) | (byte19 << 15) | (byte20 << 7) | (byte21 >>> 1);
        final int byte22 = blocks[blocksOffset++] & 0xFF;
        final int byte23 = blocks[blocksOffset++] & 0xFF;
        final int byte24 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte21 & 1) << 24) | (byte22 << 16) | (byte23 << 8) | byte24;
        final int byte25 = blocks[blocksOffset++] & 0xFF;
        final int byte26 = blocks[blocksOffset++] & 0xFF;
        final int byte27 = blocks[blocksOffset++] & 0xFF;
        final int byte28 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte25 << 17) | (byte26 << 9) | (byte27 << 1) | (byte28 >>> 7);
        final int byte29 = blocks[blocksOffset++] & 0xFF;
        final int byte30 = blocks[blocksOffset++] & 0xFF;
        final int byte31 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte28 & 127) << 18) | (byte29 << 10) | (byte30 << 2) | (byte31 >>> 6);
        final int byte32 = blocks[blocksOffset++] & 0xFF;
        final int byte33 = blocks[blocksOffset++] & 0xFF;
        final int byte34 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte31 & 63) << 19) | (byte32 << 11) | (byte33 << 3) | (byte34 >>> 5);
        final int byte35 = blocks[blocksOffset++] & 0xFF;
        final int byte36 = blocks[blocksOffset++] & 0xFF;
        final int byte37 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte34 & 31) << 20) | (byte35 << 12) | (byte36 << 4) | (byte37 >>> 4);
        final int byte38 = blocks[blocksOffset++] & 0xFF;
        final int byte39 = blocks[blocksOffset++] & 0xFF;
        final int byte40 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte37 & 15) << 21) | (byte38 << 13) | (byte39 << 5) | (byte40 >>> 3);
        final int byte41 = blocks[blocksOffset++] & 0xFF;
        final int byte42 = blocks[blocksOffset++] & 0xFF;
        final int byte43 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte40 & 7) << 22) | (byte41 << 14) | (byte42 << 6) | (byte43 >>> 2);
        final int byte44 = blocks[blocksOffset++] & 0xFF;
        final int byte45 = blocks[blocksOffset++] & 0xFF;
        final int byte46 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte43 & 3) << 23) | (byte44 << 15) | (byte45 << 7) | (byte46 >>> 1);
        final int byte47 = blocks[blocksOffset++] & 0xFF;
        final int byte48 = blocks[blocksOffset++] & 0xFF;
        final int byte49 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte46 & 1) << 24) | (byte47 << 16) | (byte48 << 8) | byte49;
        final int byte50 = blocks[blocksOffset++] & 0xFF;
        final int byte51 = blocks[blocksOffset++] & 0xFF;
        final int byte52 = blocks[blocksOffset++] & 0xFF;
        final int byte53 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte50 << 17) | (byte51 << 9) | (byte52 << 1) | (byte53 >>> 7);
        final int byte54 = blocks[blocksOffset++] & 0xFF;
        final int byte55 = blocks[blocksOffset++] & 0xFF;
        final int byte56 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte53 & 127) << 18) | (byte54 << 10) | (byte55 << 2) | (byte56 >>> 6);
        final int byte57 = blocks[blocksOffset++] & 0xFF;
        final int byte58 = blocks[blocksOffset++] & 0xFF;
        final int byte59 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte56 & 63) << 19) | (byte57 << 11) | (byte58 << 3) | (byte59 >>> 5);
        final int byte60 = blocks[blocksOffset++] & 0xFF;
        final int byte61 = blocks[blocksOffset++] & 0xFF;
        final int byte62 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte59 & 31) << 20) | (byte60 << 12) | (byte61 << 4) | (byte62 >>> 4);
        final int byte63 = blocks[blocksOffset++] & 0xFF;
        final int byte64 = blocks[blocksOffset++] & 0xFF;
        final int byte65 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte62 & 15) << 21) | (byte63 << 13) | (byte64 << 5) | (byte65 >>> 3);
        final int byte66 = blocks[blocksOffset++] & 0xFF;
        final int byte67 = blocks[blocksOffset++] & 0xFF;
        final int byte68 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte65 & 7) << 22) | (byte66 << 14) | (byte67 << 6) | (byte68 >>> 2);
        final int byte69 = blocks[blocksOffset++] & 0xFF;
        final int byte70 = blocks[blocksOffset++] & 0xFF;
        final int byte71 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte68 & 3) << 23) | (byte69 << 15) | (byte70 << 7) | (byte71 >>> 1);
        final int byte72 = blocks[blocksOffset++] & 0xFF;
        final int byte73 = blocks[blocksOffset++] & 0xFF;
        final int byte74 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte71 & 1) << 24) | (byte72 << 16) | (byte73 << 8) | byte74;
        final int byte75 = blocks[blocksOffset++] & 0xFF;
        final int byte76 = blocks[blocksOffset++] & 0xFF;
        final int byte77 = blocks[blocksOffset++] & 0xFF;
        final int byte78 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte75 << 17) | (byte76 << 9) | (byte77 << 1) | (byte78 >>> 7);
        final int byte79 = blocks[blocksOffset++] & 0xFF;
        final int byte80 = blocks[blocksOffset++] & 0xFF;
        final int byte81 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte78 & 127) << 18) | (byte79 << 10) | (byte80 << 2) | (byte81 >>> 6);
        final int byte82 = blocks[blocksOffset++] & 0xFF;
        final int byte83 = blocks[blocksOffset++] & 0xFF;
        final int byte84 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte81 & 63) << 19) | (byte82 << 11) | (byte83 << 3) | (byte84 >>> 5);
        final int byte85 = blocks[blocksOffset++] & 0xFF;
        final int byte86 = blocks[blocksOffset++] & 0xFF;
        final int byte87 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte84 & 31) << 20) | (byte85 << 12) | (byte86 << 4) | (byte87 >>> 4);
        final int byte88 = blocks[blocksOffset++] & 0xFF;
        final int byte89 = blocks[blocksOffset++] & 0xFF;
        final int byte90 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte87 & 15) << 21) | (byte88 << 13) | (byte89 << 5) | (byte90 >>> 3);
        final int byte91 = blocks[blocksOffset++] & 0xFF;
        final int byte92 = blocks[blocksOffset++] & 0xFF;
        final int byte93 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte90 & 7) << 22) | (byte91 << 14) | (byte92 << 6) | (byte93 >>> 2);
        final int byte94 = blocks[blocksOffset++] & 0xFF;
        final int byte95 = blocks[blocksOffset++] & 0xFF;
        final int byte96 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte93 & 3) << 23) | (byte94 << 15) | (byte95 << 7) | (byte96 >>> 1);
        final int byte97 = blocks[blocksOffset++] & 0xFF;
        final int byte98 = blocks[blocksOffset++] & 0xFF;
        final int byte99 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte96 & 1) << 24) | (byte97 << 16) | (byte98 << 8) | byte99;
        final int byte100 = blocks[blocksOffset++] & 0xFF;
        final int byte101 = blocks[blocksOffset++] & 0xFF;
        final int byte102 = blocks[blocksOffset++] & 0xFF;
        final int byte103 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte100 << 17) | (byte101 << 9) | (byte102 << 1) | (byte103 >>> 7);
        final int byte104 = blocks[blocksOffset++] & 0xFF;
        final int byte105 = blocks[blocksOffset++] & 0xFF;
        final int byte106 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte103 & 127) << 18) | (byte104 << 10) | (byte105 << 2) | (byte106 >>> 6);
        final int byte107 = blocks[blocksOffset++] & 0xFF;
        final int byte108 = blocks[blocksOffset++] & 0xFF;
        final int byte109 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte106 & 63) << 19) | (byte107 << 11) | (byte108 << 3) | (byte109 >>> 5);
        final int byte110 = blocks[blocksOffset++] & 0xFF;
        final int byte111 = blocks[blocksOffset++] & 0xFF;
        final int byte112 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte109 & 31) << 20) | (byte110 << 12) | (byte111 << 4) | (byte112 >>> 4);
        final int byte113 = blocks[blocksOffset++] & 0xFF;
        final int byte114 = blocks[blocksOffset++] & 0xFF;
        final int byte115 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte112 & 15) << 21) | (byte113 << 13) | (byte114 << 5) | (byte115 >>> 3);
        final int byte116 = blocks[blocksOffset++] & 0xFF;
        final int byte117 = blocks[blocksOffset++] & 0xFF;
        final int byte118 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte115 & 7) << 22) | (byte116 << 14) | (byte117 << 6) | (byte118 >>> 2);
        final int byte119 = blocks[blocksOffset++] & 0xFF;
        final int byte120 = blocks[blocksOffset++] & 0xFF;
        final int byte121 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte118 & 3) << 23) | (byte119 << 15) | (byte120 << 7) | (byte121 >>> 1);
        final int byte122 = blocks[blocksOffset++] & 0xFF;
        final int byte123 = blocks[blocksOffset++] & 0xFF;
        final int byte124 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte121 & 1) << 24) | (byte122 << 16) | (byte123 << 8) | byte124;
        final int byte125 = blocks[blocksOffset++] & 0xFF;
        final int byte126 = blocks[blocksOffset++] & 0xFF;
        final int byte127 = blocks[blocksOffset++] & 0xFF;
        final int byte128 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte125 << 17) | (byte126 << 9) | (byte127 << 1) | (byte128 >>> 7);
        final int byte129 = blocks[blocksOffset++] & 0xFF;
        final int byte130 = blocks[blocksOffset++] & 0xFF;
        final int byte131 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte128 & 127) << 18) | (byte129 << 10) | (byte130 << 2) | (byte131 >>> 6);
        final int byte132 = blocks[blocksOffset++] & 0xFF;
        final int byte133 = blocks[blocksOffset++] & 0xFF;
        final int byte134 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte131 & 63) << 19) | (byte132 << 11) | (byte133 << 3) | (byte134 >>> 5);
        final int byte135 = blocks[blocksOffset++] & 0xFF;
        final int byte136 = blocks[blocksOffset++] & 0xFF;
        final int byte137 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte134 & 31) << 20) | (byte135 << 12) | (byte136 << 4) | (byte137 >>> 4);
        final int byte138 = blocks[blocksOffset++] & 0xFF;
        final int byte139 = blocks[blocksOffset++] & 0xFF;
        final int byte140 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte137 & 15) << 21) | (byte138 << 13) | (byte139 << 5) | (byte140 >>> 3);
        final int byte141 = blocks[blocksOffset++] & 0xFF;
        final int byte142 = blocks[blocksOffset++] & 0xFF;
        final int byte143 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte140 & 7) << 22) | (byte141 << 14) | (byte142 << 6) | (byte143 >>> 2);
        final int byte144 = blocks[blocksOffset++] & 0xFF;
        final int byte145 = blocks[blocksOffset++] & 0xFF;
        final int byte146 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte143 & 3) << 23) | (byte144 << 15) | (byte145 << 7) | (byte146 >>> 1);
        final int byte147 = blocks[blocksOffset++] & 0xFF;
        final int byte148 = blocks[blocksOffset++] & 0xFF;
        final int byte149 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte146 & 1) << 24) | (byte147 << 16) | (byte148 << 8) | byte149;
        final int byte150 = blocks[blocksOffset++] & 0xFF;
        final int byte151 = blocks[blocksOffset++] & 0xFF;
        final int byte152 = blocks[blocksOffset++] & 0xFF;
        final int byte153 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte150 << 17) | (byte151 << 9) | (byte152 << 1) | (byte153 >>> 7);
        final int byte154 = blocks[blocksOffset++] & 0xFF;
        final int byte155 = blocks[blocksOffset++] & 0xFF;
        final int byte156 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte153 & 127) << 18) | (byte154 << 10) | (byte155 << 2) | (byte156 >>> 6);
        final int byte157 = blocks[blocksOffset++] & 0xFF;
        final int byte158 = blocks[blocksOffset++] & 0xFF;
        final int byte159 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte156 & 63) << 19) | (byte157 << 11) | (byte158 << 3) | (byte159 >>> 5);
        final int byte160 = blocks[blocksOffset++] & 0xFF;
        final int byte161 = blocks[blocksOffset++] & 0xFF;
        final int byte162 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte159 & 31) << 20) | (byte160 << 12) | (byte161 << 4) | (byte162 >>> 4);
        final int byte163 = blocks[blocksOffset++] & 0xFF;
        final int byte164 = blocks[blocksOffset++] & 0xFF;
        final int byte165 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte162 & 15) << 21) | (byte163 << 13) | (byte164 << 5) | (byte165 >>> 3);
        final int byte166 = blocks[blocksOffset++] & 0xFF;
        final int byte167 = blocks[blocksOffset++] & 0xFF;
        final int byte168 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte165 & 7) << 22) | (byte166 << 14) | (byte167 << 6) | (byte168 >>> 2);
        final int byte169 = blocks[blocksOffset++] & 0xFF;
        final int byte170 = blocks[blocksOffset++] & 0xFF;
        final int byte171 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte168 & 3) << 23) | (byte169 << 15) | (byte170 << 7) | (byte171 >>> 1);
        final int byte172 = blocks[blocksOffset++] & 0xFF;
        final int byte173 = blocks[blocksOffset++] & 0xFF;
        final int byte174 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte171 & 1) << 24) | (byte172 << 16) | (byte173 << 8) | byte174;
        final int byte175 = blocks[blocksOffset++] & 0xFF;
        final int byte176 = blocks[blocksOffset++] & 0xFF;
        final int byte177 = blocks[blocksOffset++] & 0xFF;
        final int byte178 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = (byte175 << 17) | (byte176 << 9) | (byte177 << 1) | (byte178 >>> 7);
        final int byte179 = blocks[blocksOffset++] & 0xFF;
        final int byte180 = blocks[blocksOffset++] & 0xFF;
        final int byte181 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte178 & 127) << 18) | (byte179 << 10) | (byte180 << 2) | (byte181 >>> 6);
        final int byte182 = blocks[blocksOffset++] & 0xFF;
        final int byte183 = blocks[blocksOffset++] & 0xFF;
        final int byte184 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte181 & 63) << 19) | (byte182 << 11) | (byte183 << 3) | (byte184 >>> 5);
        final int byte185 = blocks[blocksOffset++] & 0xFF;
        final int byte186 = blocks[blocksOffset++] & 0xFF;
        final int byte187 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte184 & 31) << 20) | (byte185 << 12) | (byte186 << 4) | (byte187 >>> 4);
        final int byte188 = blocks[blocksOffset++] & 0xFF;
        final int byte189 = blocks[blocksOffset++] & 0xFF;
        final int byte190 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte187 & 15) << 21) | (byte188 << 13) | (byte189 << 5) | (byte190 >>> 3);
        final int byte191 = blocks[blocksOffset++] & 0xFF;
        final int byte192 = blocks[blocksOffset++] & 0xFF;
        final int byte193 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte190 & 7) << 22) | (byte191 << 14) | (byte192 << 6) | (byte193 >>> 2);
        final int byte194 = blocks[blocksOffset++] & 0xFF;
        final int byte195 = blocks[blocksOffset++] & 0xFF;
        final int byte196 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte193 & 3) << 23) | (byte194 << 15) | (byte195 << 7) | (byte196 >>> 1);
        final int byte197 = blocks[blocksOffset++] & 0xFF;
        final int byte198 = blocks[blocksOffset++] & 0xFF;
        final int byte199 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte196 & 1) << 24) | (byte197 << 16) | (byte198 << 8) | byte199;
      }
    }

