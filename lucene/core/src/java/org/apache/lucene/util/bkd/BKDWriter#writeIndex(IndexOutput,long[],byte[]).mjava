  /** Subclass can change how it writes the index. */
  protected void writeIndex(IndexOutput out, long[] leafBlockFPs, byte[] splitPackedValues) throws IOException {
    CodecUtil.writeHeader(out, CODEC_NAME, VERSION_CURRENT);
    out.writeVInt(numDims);
    out.writeVInt(maxPointsInLeafNode);
    out.writeVInt(bytesPerDim);

    assert leafBlockFPs.length > 0;
    out.writeVInt(leafBlockFPs.length);
    out.writeBytes(minPackedValue, 0, packedBytesLength);
    out.writeBytes(maxPackedValue, 0, packedBytesLength);

    out.writeVLong(pointCount);
    out.writeVInt(docsSeen.cardinality());

    // NOTE: splitPackedValues[0] is unused, because nodeID is 1-based:
    if (numDims == 1) {
      // write the index, skipping the byte used to store the split dim since it is always 0
      for (int i = 1; i < splitPackedValues.length; i += 1 + bytesPerDim) {
        out.writeBytes(splitPackedValues, i, bytesPerDim);
      }
    } else {
      out.writeBytes(splitPackedValues, 0, splitPackedValues.length);
    }

    long lastFP = 0;
    for (int i=0;i<leafBlockFPs.length;i++) {
      long delta = leafBlockFPs[i]-lastFP;
      out.writeVLong(delta);
      lastFP = leafBlockFPs[i];
    }
  }

