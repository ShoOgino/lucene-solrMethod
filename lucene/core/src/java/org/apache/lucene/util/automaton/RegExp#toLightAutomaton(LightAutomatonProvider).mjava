  /**
   * Constructs new <code>LightAutomaton</code> from this <code>RegExp</code>. The
   * constructed automaton is minimal and deterministic and has no transitions
   * to dead states.
   * 
   * @param automaton_provider provider of automata for named identifiers
   * @exception IllegalArgumentException if this regular expression uses a named
   *              identifier that is not available from the automaton provider
   */
  public LightAutomaton toLightAutomaton(LightAutomatonProvider automaton_provider)
      throws IllegalArgumentException {
    return toLightAutomaton(null, automaton_provider);
  }

