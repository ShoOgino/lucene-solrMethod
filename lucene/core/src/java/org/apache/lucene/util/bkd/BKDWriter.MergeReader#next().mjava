    public boolean next() throws IOException {
      //System.out.println("MR.next this=" + this);
      while (true) {
        if (docBlockUpto == docsInBlock) {
          if (blockID == bkd.leafBlockFPs.length) {
            //System.out.println("  done!");
            return false;
          }
          //System.out.println("  new block @ fp=" + state.in.getFilePointer());
          docsInBlock = bkd.readDocIDs(state.in, state.in.getFilePointer(), state.scratchDocIDs);
          docBlockUpto = 0;
          for(int dim=0;dim<bkd.numDims;dim++) {
            int prefix = state.in.readVInt();
            state.commonPrefixLengths[dim] = prefix;
            if (prefix > 0) {
              state.in.readBytes(state.scratchPackedValue, dim*bkd.bytesPerDim, prefix);
            }
          }

          blockID++;
        }

        int oldDocID = state.scratchDocIDs[docBlockUpto++];
        int mappedDocID;
        if (docMap == null) {
          mappedDocID = oldDocID;
        } else {
          mappedDocID = docMap.get(oldDocID);
        }
        for(int dim=0;dim<bkd.numDims;dim++) {
          int prefix = state.commonPrefixLengths[dim];
          state.in.readBytes(state.scratchPackedValue, dim*bkd.bytesPerDim + prefix, bkd.bytesPerDim - prefix);
        }
        if (mappedDocID != -1) {
          // Not deleted!
          docID = mappedDocID;
          return true;
        }
      }
    }

