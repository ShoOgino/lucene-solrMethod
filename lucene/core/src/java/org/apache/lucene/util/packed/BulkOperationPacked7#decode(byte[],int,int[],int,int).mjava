    @Override
    public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {
      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;
      assert valuesOffset + iterations * valueCount() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final int byte0 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte0 >>> 1;
        final int byte1 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte0 & 1) << 6) | (byte1 >>> 2);
        final int byte2 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte1 & 3) << 5) | (byte2 >>> 3);
        final int byte3 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte2 & 7) << 4) | (byte3 >>> 4);
        final int byte4 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte3 & 15) << 3) | (byte4 >>> 5);
        final int byte5 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte4 & 31) << 2) | (byte5 >>> 6);
        final int byte6 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte5 & 63) << 1) | (byte6 >>> 7);
        values[valuesOffset++] = byte6 & 127;
        final int byte7 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte7 >>> 1;
        final int byte8 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte7 & 1) << 6) | (byte8 >>> 2);
        final int byte9 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte8 & 3) << 5) | (byte9 >>> 3);
        final int byte10 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte9 & 7) << 4) | (byte10 >>> 4);
        final int byte11 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte10 & 15) << 3) | (byte11 >>> 5);
        final int byte12 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte11 & 31) << 2) | (byte12 >>> 6);
        final int byte13 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte12 & 63) << 1) | (byte13 >>> 7);
        values[valuesOffset++] = byte13 & 127;
        final int byte14 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte14 >>> 1;
        final int byte15 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte14 & 1) << 6) | (byte15 >>> 2);
        final int byte16 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte15 & 3) << 5) | (byte16 >>> 3);
        final int byte17 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte16 & 7) << 4) | (byte17 >>> 4);
        final int byte18 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte17 & 15) << 3) | (byte18 >>> 5);
        final int byte19 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte18 & 31) << 2) | (byte19 >>> 6);
        final int byte20 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte19 & 63) << 1) | (byte20 >>> 7);
        values[valuesOffset++] = byte20 & 127;
        final int byte21 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte21 >>> 1;
        final int byte22 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte21 & 1) << 6) | (byte22 >>> 2);
        final int byte23 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte22 & 3) << 5) | (byte23 >>> 3);
        final int byte24 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte23 & 7) << 4) | (byte24 >>> 4);
        final int byte25 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte24 & 15) << 3) | (byte25 >>> 5);
        final int byte26 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte25 & 31) << 2) | (byte26 >>> 6);
        final int byte27 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte26 & 63) << 1) | (byte27 >>> 7);
        values[valuesOffset++] = byte27 & 127;
        final int byte28 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte28 >>> 1;
        final int byte29 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte28 & 1) << 6) | (byte29 >>> 2);
        final int byte30 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte29 & 3) << 5) | (byte30 >>> 3);
        final int byte31 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte30 & 7) << 4) | (byte31 >>> 4);
        final int byte32 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte31 & 15) << 3) | (byte32 >>> 5);
        final int byte33 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte32 & 31) << 2) | (byte33 >>> 6);
        final int byte34 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte33 & 63) << 1) | (byte34 >>> 7);
        values[valuesOffset++] = byte34 & 127;
        final int byte35 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte35 >>> 1;
        final int byte36 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte35 & 1) << 6) | (byte36 >>> 2);
        final int byte37 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte36 & 3) << 5) | (byte37 >>> 3);
        final int byte38 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte37 & 7) << 4) | (byte38 >>> 4);
        final int byte39 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte38 & 15) << 3) | (byte39 >>> 5);
        final int byte40 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte39 & 31) << 2) | (byte40 >>> 6);
        final int byte41 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte40 & 63) << 1) | (byte41 >>> 7);
        values[valuesOffset++] = byte41 & 127;
        final int byte42 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte42 >>> 1;
        final int byte43 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte42 & 1) << 6) | (byte43 >>> 2);
        final int byte44 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte43 & 3) << 5) | (byte44 >>> 3);
        final int byte45 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte44 & 7) << 4) | (byte45 >>> 4);
        final int byte46 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte45 & 15) << 3) | (byte46 >>> 5);
        final int byte47 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte46 & 31) << 2) | (byte47 >>> 6);
        final int byte48 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte47 & 63) << 1) | (byte48 >>> 7);
        values[valuesOffset++] = byte48 & 127;
        final int byte49 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte49 >>> 1;
        final int byte50 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte49 & 1) << 6) | (byte50 >>> 2);
        final int byte51 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte50 & 3) << 5) | (byte51 >>> 3);
        final int byte52 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte51 & 7) << 4) | (byte52 >>> 4);
        final int byte53 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte52 & 15) << 3) | (byte53 >>> 5);
        final int byte54 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte53 & 31) << 2) | (byte54 >>> 6);
        final int byte55 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte54 & 63) << 1) | (byte55 >>> 7);
        values[valuesOffset++] = byte55 & 127;
      }
    }

