    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {
      assert bi + iterations * blocks() <= blocks.length;
      assert vi + iterations * values() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final long block0 = blocks[bi++];
        values[vi++] = block0 >>> 4;
        final long block1 = blocks[bi++];
        values[vi++] = ((block0 & 15L) << 56) | (block1 >>> 8);
        final long block2 = blocks[bi++];
        values[vi++] = ((block1 & 255L) << 52) | (block2 >>> 12);
        final long block3 = blocks[bi++];
        values[vi++] = ((block2 & 4095L) << 48) | (block3 >>> 16);
        final long block4 = blocks[bi++];
        values[vi++] = ((block3 & 65535L) << 44) | (block4 >>> 20);
        final long block5 = blocks[bi++];
        values[vi++] = ((block4 & 1048575L) << 40) | (block5 >>> 24);
        final long block6 = blocks[bi++];
        values[vi++] = ((block5 & 16777215L) << 36) | (block6 >>> 28);
        final long block7 = blocks[bi++];
        values[vi++] = ((block6 & 268435455L) << 32) | (block7 >>> 32);
        final long block8 = blocks[bi++];
        values[vi++] = ((block7 & 4294967295L) << 28) | (block8 >>> 36);
        final long block9 = blocks[bi++];
        values[vi++] = ((block8 & 68719476735L) << 24) | (block9 >>> 40);
        final long block10 = blocks[bi++];
        values[vi++] = ((block9 & 1099511627775L) << 20) | (block10 >>> 44);
        final long block11 = blocks[bi++];
        values[vi++] = ((block10 & 17592186044415L) << 16) | (block11 >>> 48);
        final long block12 = blocks[bi++];
        values[vi++] = ((block11 & 281474976710655L) << 12) | (block12 >>> 52);
        final long block13 = blocks[bi++];
        values[vi++] = ((block12 & 4503599627370495L) << 8) | (block13 >>> 56);
        final long block14 = blocks[bi++];
        values[vi++] = ((block13 & 72057594037927935L) << 4) | (block14 >>> 60);
        values[vi++] = block14 & 1152921504606846975L;
      }
    }

