  /** Reads a present direct addressing node arc, with the provided index in the label range.
   *
   * @param rangeIndex The index of the arc in the label range. It must be present.
   *                   The real arc offset is computed based on the presence bits of
   *                   the direct addressing node.
   */
  public Arc<T> readArcByDirectAddressing(Arc<T> arc, final BytesReader in, int rangeIndex) throws IOException {
    assert arc.nodeFlags() == ARCS_FOR_DIRECT_ADDRESSING;
    assert arc.bytesPerArc() > 0;
    assert assertPresenceBytesAreValid(arc);
    assert rangeIndex >= 0 && rangeIndex < arc.numArcs();
    assert arc.bitTable().isBitSet(rangeIndex);
    int presenceIndex = arc.bitTable().countBitsUpTo(rangeIndex);
    in.setPosition(arc.posArcsStart() - presenceIndex * arc.bytesPerArc());
    arc.arcIdx = rangeIndex;
    arc.flags = in.readByte();
    return readArc(arc, in);
  }

