    public void encode(IntBuffer values, LongBuffer blocks, int iterations) {
      assert blocks.position() + iterations * blocks() <= blocks.limit();
      assert values.position() + iterations * values() <= values.limit();
      for (int i = 0; i < iterations; ++i) {
        blocks.put((values.get() & 0xffffffffL) | ((values.get() & 0xffffffffL) << 3) | ((values.get() & 0xffffffffL) << 6) | ((values.get() & 0xffffffffL) << 9) | ((values.get() & 0xffffffffL) << 12) | ((values.get() & 0xffffffffL) << 15) | ((values.get() & 0xffffffffL) << 18) | ((values.get() & 0xffffffffL) << 21) | ((values.get() & 0xffffffffL) << 24) | ((values.get() & 0xffffffffL) << 27) | ((values.get() & 0xffffffffL) << 30) | ((values.get() & 0xffffffffL) << 33) | ((values.get() & 0xffffffffL) << 36) | ((values.get() & 0xffffffffL) << 39) | ((values.get() & 0xffffffffL) << 42) | ((values.get() & 0xffffffffL) << 45) | ((values.get() & 0xffffffffL) << 48) | ((values.get() & 0xffffffffL) << 51) | ((values.get() & 0xffffffffL) << 54) | ((values.get() & 0xffffffffL) << 57) | ((values.get() & 0xffffffffL) << 60));
      }
    }

