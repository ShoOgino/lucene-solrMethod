  private FST.Arc<T> doSeekFloorArrayPacked(FST.Arc<T> arc, int targetLabel, final FST.BytesReader in) throws IOException {
    // Arcs are fixed array -- use binary search to find the target.

    int low = arc.arcIdx;
    int high = arc.numArcs-1;
    int mid = 0;
    //System.out.println("do arc array low=" + low + " high=" + high + " targetLabel=" + targetLabel);
    boolean found = false;
    while (low <= high) {
      mid = (low + high) >>> 1;
      in.setPosition(arc.posArcsStart);
      in.skipBytes(arc.bytesPerArc*mid+1);
      final int midLabel = fst.readLabel(in);
      final int cmp = midLabel - targetLabel;
      //System.out.println("  cycle low=" + low + " high=" + high + " mid=" + mid + " midLabel=" + midLabel + " cmp=" + cmp);
      if (cmp < 0) {
        low = mid + 1;
      } else if (cmp > 0) {
        high = mid - 1;
      } else {
        found = true;
        break;
      }
    }

    // NOTE: this code is dup'd w/ the code below (in
    // the outer else clause):
    if (found) {
      // Match -- recurse
      //System.out.println("  match!  arcIdx=" + mid);
      arc.arcIdx = mid-1;
      fst.readNextRealArc(arc, in);
      assert arc.arcIdx == mid;
      assert arc.label == targetLabel: "arc.label=" + arc.label + " vs targetLabel=" + targetLabel + " mid=" + mid;
      output[upto] = fst.outputs.add(output[upto-1], arc.output);
      if (targetLabel == FST.END_LABEL) {
        return null;
      }
      setCurrentLabel(arc.label);
      incr();
      return fst.readFirstTargetArc(arc, getArc(upto), fstReader);
    } else if (high == -1) {
      //System.out.println("  before first");
      // Very first arc is after our target
      // TODO: if each arc could somehow read the arc just
      // before, we can save this re-scan.  The ceil case
      // doesn't need this because it reads the next arc
      // instead:
      while(true) {
        // First, walk backwards until we find a first arc
        // that's before our target label:
        fst.readFirstTargetArc(getArc(upto-1), arc, fstReader);
        if (arc.label < targetLabel) {
          // Then, scan forwards to the arc just before
          // the targetLabel:
          while(!arc.isLast() && fst.readNextArcLabel(arc, in) < targetLabel) {
            fst.readNextArc(arc, fstReader);
          }
          pushLast();
          return null;
        }
        upto--;
        if (upto == 0) {
          return null;
        }
        targetLabel = getTargetLabel();
        arc = getArc(upto);
      }
    } else {
      // There is a floor arc:
      arc.arcIdx = (low > high ? high : low)-1;
      //System.out.println(" hasFloor arcIdx=" + (arc.arcIdx+1));
      fst.readNextRealArc(arc, in);
      assert arc.isLast() || fst.readNextArcLabel(arc, in) > targetLabel;
      assert arc.label < targetLabel: "arc.label=" + arc.label + " vs targetLabel=" + targetLabel;
      pushLast();
      return null;
    }        
  }

