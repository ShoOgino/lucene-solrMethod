  //return a new point writer sort by the provided dimension from input data
  private PointWriter sort(int dim) throws IOException {
    assert dim >= 0 && dim < numDataDims;

    if (heapPointWriter != null) {
      assert tempInput == null;
      // We never spilled the incoming points to disk, so now we sort in heap:
      HeapPointWriter sorted = heapPointWriter;
      //long t0 = System.nanoTime();
      sortHeapPointWriter(sorted, Math.toIntExact(this.pointCount), dim);
      //long t1 = System.nanoTime();
      //System.out.println("BKD: sort took " + ((t1-t0)/1000000.0) + " msec");
      sorted.close();
      heapPointWriter = null;
      return sorted;
    } else {
      // Offline sort:
      assert tempInput != null;
      OfflinePointWriter sorted = sortOffLine(dim, tempInput.getName(), 0, pointCount);
      tempDir.deleteFile(tempInput.getName());
      tempInput = null;
      return sorted;
    }
  }

