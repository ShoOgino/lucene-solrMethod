    void advanceWord(int targetWordNum) {
      assert targetWordNum > wordNum;
      if (dirtyLength == 0 && !readSequence()) {
        return;
      }
      int delta = targetWordNum - wordNum;
      if (delta <= dirtyLength + 1) {
        if (delta > 1) {
          skipDirtyBytes(delta - 1);
        }
      } else {
        skipDirtyBytes();
        assert dirtyLength == 0;
        // use the index
        final int i = binarySearch(targetWordNum);
        final int position = (int) positions.get(i);
        if (position > in.getPosition()) { // if the binary search returned a backward offset, don't move
          wordNum = (int) wordNums.get(i) - 1;
          in.setPosition(position);
        }

        while (true) {
          if (!readSequence()) {
            return;
          }
          delta = targetWordNum - wordNum;
          if (delta <= dirtyLength + 1) {
            if (delta > 1) {
              skipDirtyBytes(delta - 1);
            }
            break;
          }
          skipDirtyBytes();
        }
      }

      nextWord();
    }

