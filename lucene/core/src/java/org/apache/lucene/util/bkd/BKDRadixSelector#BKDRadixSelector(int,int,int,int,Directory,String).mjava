  /**
   * Sole constructor.
   */
  public BKDRadixSelector(int numDataDims, int numIndexDims, int bytesPerDim, int maxPointsSortInHeap, Directory tempDir, String tempFileNamePrefix) {
    this.bytesPerDim = bytesPerDim;
    this.numDataDims = numDataDims;
    this.numIndexDims = numIndexDims;
    this.packedBytesLength = numDataDims * bytesPerDim;
    this.packedBytesDocIDLength = packedBytesLength + Integer.BYTES;
    // Selection and sorting is done in a given dimension. In case the value of the dimension are equal
    // between two points we tie break first using the data-only dimensions and if those are still equal
    // we tie-break on the docID. Here we account for all bytes used in the process.
    this.bytesSorted = bytesPerDim  + (numDataDims - numIndexDims) * bytesPerDim + Integer.BYTES;
    this.maxPointsSortInHeap = maxPointsSortInHeap;
    int numberOfPointsOffline  = MAX_SIZE_OFFLINE_BUFFER / packedBytesDocIDLength;
    this.offlineBuffer = new byte[numberOfPointsOffline * packedBytesDocIDLength];
    this.partitionBucket = new int[bytesSorted];
    this.histogram = new long[HISTOGRAM_SIZE];
    this.scratch = new byte[bytesSorted];
    this.tempDir = tempDir;
    this.tempFileNamePrefix = tempFileNamePrefix;
  }

