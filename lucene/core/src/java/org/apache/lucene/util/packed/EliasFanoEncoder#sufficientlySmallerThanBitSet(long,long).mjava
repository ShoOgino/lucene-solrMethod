  /** Provide an indication that it is better to use an {@link EliasFanoEncoder} than a {@link FixedBitSet}
   *  to encode document identifiers.
   *  This indication is not precise and may change in the future.
   *  <br>An EliasFanoEncoder is favoured when the size of the encoding by the EliasFanoEncoder
   *  (including some space for its index) is at most about 5/6 of the size of the FixedBitSet,
   *  this is the same as comparing estimates of the number of bits accessed by a pair of FixedBitSets and
   *  by a pair of non indexed EliasFanoDocIdSets when determining the intersections of the pairs.
   *  <br>A bit set is preferred when <code>upperbound <= 256</code>.
   *  <br>It is assumed that {@link #DEFAULT_INDEX_INTERVAL} is used.
   *  @param numValues The number of document identifiers that is to be encoded. Should be non negative.
   *  @param upperBound The maximum possible value for a document identifier. Should be at least <code>numValues</code>.
   */
  public static boolean sufficientlySmallerThanBitSet(long numValues, long upperBound) {
    /* When (upperBound / 6) == numValues,
     * the number of bits per entry for the EliasFanoEncoder is 2 + ceil(2log(upperBound/numValues)) == 5.
     *
     * For intersecting two bit sets upperBound bits are accessed, roughly half of one, half of the other.
     * For intersecting two EliasFano sequences without index on the upper bits,
     * all (2 * 3 * numValues) upper bits are accessed.
     */
    return (upperBound > (4 * Long.SIZE)) // prefer a bit set when it takes no more than 4 longs.
            && (upperBound / 7) > numValues; // 6 + 1 to allow some room for the index.
  }

