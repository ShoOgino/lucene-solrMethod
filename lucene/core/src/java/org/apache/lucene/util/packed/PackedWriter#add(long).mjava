  /**
   * Do not call this after finish
   */
  @Override
  public void add(long v) throws IOException {
    assert v <= PackedInts.maxValue(bitsPerValue) : "v=" + v
            + " maxValue=" + PackedInts.maxValue(bitsPerValue);
    assert v >= 0;
    //System.out.println("    packedw add v=" + v + " pendingBitPos=" + pendingBitPos);

    // TODO
    if (pendingBitPos >= bitsPerValue) {
      // not split

      // write-once, so we can |= w/o first masking to 0s
      pending |= v << (pendingBitPos - bitsPerValue);
      if (pendingBitPos == bitsPerValue) {
        // flush
        out.writeLong(pending);
        pending = 0;
        pendingBitPos = 64;
      } else {
        pendingBitPos -= bitsPerValue;
      }

    } else {
      // split

      // write top pendingBitPos bits of value into bottom bits of pending
      pending |= (v >> (bitsPerValue - pendingBitPos)) & masks[pendingBitPos - 1];
      //System.out.println("      part1 (v >> " + (bitsPerValue - pendingBitPos) + ") & " + masks[pendingBitPos-1]);

      // flush
      out.writeLong(pending);

      // write bottom (bitsPerValue - pendingBitPos) bits of value into top bits of pending
      pendingBitPos = 64 - bitsPerValue + pendingBitPos;
      //System.out.println("      part2 v << " + pendingBitPos);
      pending = (v << pendingBitPos);
    }
    written++;
  }

