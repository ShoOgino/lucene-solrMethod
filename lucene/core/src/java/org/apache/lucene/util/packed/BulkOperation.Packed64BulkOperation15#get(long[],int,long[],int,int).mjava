    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {
      assert bi + iterations * blocks() <= blocks.length;
      assert vi + iterations * values() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final long block0 = blocks[bi++];
        values[vi++] = block0 >>> 49;
        values[vi++] = (block0 >>> 34) & 32767L;
        values[vi++] = (block0 >>> 19) & 32767L;
        values[vi++] = (block0 >>> 4) & 32767L;
        final long block1 = blocks[bi++];
        values[vi++] = ((block0 & 15L) << 11) | (block1 >>> 53);
        values[vi++] = (block1 >>> 38) & 32767L;
        values[vi++] = (block1 >>> 23) & 32767L;
        values[vi++] = (block1 >>> 8) & 32767L;
        final long block2 = blocks[bi++];
        values[vi++] = ((block1 & 255L) << 7) | (block2 >>> 57);
        values[vi++] = (block2 >>> 42) & 32767L;
        values[vi++] = (block2 >>> 27) & 32767L;
        values[vi++] = (block2 >>> 12) & 32767L;
        final long block3 = blocks[bi++];
        values[vi++] = ((block2 & 4095L) << 3) | (block3 >>> 61);
        values[vi++] = (block3 >>> 46) & 32767L;
        values[vi++] = (block3 >>> 31) & 32767L;
        values[vi++] = (block3 >>> 16) & 32767L;
        values[vi++] = (block3 >>> 1) & 32767L;
        final long block4 = blocks[bi++];
        values[vi++] = ((block3 & 1L) << 14) | (block4 >>> 50);
        values[vi++] = (block4 >>> 35) & 32767L;
        values[vi++] = (block4 >>> 20) & 32767L;
        values[vi++] = (block4 >>> 5) & 32767L;
        final long block5 = blocks[bi++];
        values[vi++] = ((block4 & 31L) << 10) | (block5 >>> 54);
        values[vi++] = (block5 >>> 39) & 32767L;
        values[vi++] = (block5 >>> 24) & 32767L;
        values[vi++] = (block5 >>> 9) & 32767L;
        final long block6 = blocks[bi++];
        values[vi++] = ((block5 & 511L) << 6) | (block6 >>> 58);
        values[vi++] = (block6 >>> 43) & 32767L;
        values[vi++] = (block6 >>> 28) & 32767L;
        values[vi++] = (block6 >>> 13) & 32767L;
        final long block7 = blocks[bi++];
        values[vi++] = ((block6 & 8191L) << 2) | (block7 >>> 62);
        values[vi++] = (block7 >>> 47) & 32767L;
        values[vi++] = (block7 >>> 32) & 32767L;
        values[vi++] = (block7 >>> 17) & 32767L;
        values[vi++] = (block7 >>> 2) & 32767L;
        final long block8 = blocks[bi++];
        values[vi++] = ((block7 & 3L) << 13) | (block8 >>> 51);
        values[vi++] = (block8 >>> 36) & 32767L;
        values[vi++] = (block8 >>> 21) & 32767L;
        values[vi++] = (block8 >>> 6) & 32767L;
        final long block9 = blocks[bi++];
        values[vi++] = ((block8 & 63L) << 9) | (block9 >>> 55);
        values[vi++] = (block9 >>> 40) & 32767L;
        values[vi++] = (block9 >>> 25) & 32767L;
        values[vi++] = (block9 >>> 10) & 32767L;
        final long block10 = blocks[bi++];
        values[vi++] = ((block9 & 1023L) << 5) | (block10 >>> 59);
        values[vi++] = (block10 >>> 44) & 32767L;
        values[vi++] = (block10 >>> 29) & 32767L;
        values[vi++] = (block10 >>> 14) & 32767L;
        final long block11 = blocks[bi++];
        values[vi++] = ((block10 & 16383L) << 1) | (block11 >>> 63);
        values[vi++] = (block11 >>> 48) & 32767L;
        values[vi++] = (block11 >>> 33) & 32767L;
        values[vi++] = (block11 >>> 18) & 32767L;
        values[vi++] = (block11 >>> 3) & 32767L;
        final long block12 = blocks[bi++];
        values[vi++] = ((block11 & 7L) << 12) | (block12 >>> 52);
        values[vi++] = (block12 >>> 37) & 32767L;
        values[vi++] = (block12 >>> 22) & 32767L;
        values[vi++] = (block12 >>> 7) & 32767L;
        final long block13 = blocks[bi++];
        values[vi++] = ((block12 & 127L) << 8) | (block13 >>> 56);
        values[vi++] = (block13 >>> 41) & 32767L;
        values[vi++] = (block13 >>> 26) & 32767L;
        values[vi++] = (block13 >>> 11) & 32767L;
        final long block14 = blocks[bi++];
        values[vi++] = ((block13 & 2047L) << 4) | (block14 >>> 60);
        values[vi++] = (block14 >>> 45) & 32767L;
        values[vi++] = (block14 >>> 30) & 32767L;
        values[vi++] = (block14 >>> 15) & 32767L;
        values[vi++] = block14 & 32767L;
      }
    }

