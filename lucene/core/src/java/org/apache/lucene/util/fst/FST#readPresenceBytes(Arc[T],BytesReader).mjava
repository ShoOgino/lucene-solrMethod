  /**
   * Reads the presence bits of a direct-addressing node, store them in the provided arc {@link Arc#bitTable()}
   * and returns the number of presence bytes.
   */
  private int readPresenceBytes(Arc<T> arc, BytesReader in) throws IOException {
    int numPresenceBytes = getNumPresenceBytes(arc.numArcs());
    Arc.BitTable presenceBits = arc.getOrCreateBitTable().setNumLongs((numPresenceBytes + 7) / Long.BYTES);
    for (int i = 0; i < numPresenceBytes; i++) {
      // Read the next unsigned byte, shift it to the left, and appends it to the current long.
      presenceBits.bits[i / Long.BYTES] |= (in.readByte() & 0xFFL) << (i * Byte.SIZE);
    }
    assert assertPresenceBytesAreValid(arc);
    return numPresenceBytes;
  }

