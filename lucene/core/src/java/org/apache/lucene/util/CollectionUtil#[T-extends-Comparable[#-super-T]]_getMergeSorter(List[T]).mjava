  /** Natural SorterTemplate for merge-based sorts. */
  private static <T extends Comparable<? super T>> SorterTemplate getMergeSorter(final List<T> list) {
    if (!(list instanceof RandomAccess))
      throw new IllegalArgumentException("CollectionUtil can only sort random access lists in-place.");
    if (list.size() < MERGE_EXTRA_MEMORY_THRESHOLD) {
      return getSorter(list);
    } else {
      return new ListMergeSorterTemplate<T>(list, MERGE_OVERHEAD_RATIO) {

        @Override
        protected int compare(T a, T b) {
          return a.compareTo(b);
        }

      };
    }
  }

