  /** Select a 1-bit from a long. See also LUCENE-6040.
   * @return The index of the r-th 1 bit in x. This bit must exist.
   */
  public static int select(long x, int r) {
    long s = x - ((x & 0xAAAAAAAAAAAAAAAAL) >>> 1); // pairwise bitsums
    s = (s & 0x3333333333333333L) + ((s >>> 2) & 0x3333333333333333L); // nibblewise bitsums
    s = ((s + (s >>> 4)) & 0x0F0F0F0F0F0F0F0FL) * L8_L; // bytewise bitsums, cumulative

    int b = (Long.numberOfTrailingZeros((s + psOverflow[r-1]) & (L8_L << 7)) >> 3) << 3; // bit position of byte with r-th 1 bit.
    long l = r - (((s << 8) >>> b) & 0xFFL); // bit rank in byte at b

    // Select bit l from byte (x >>> b):
    int selectIndex = (int) (((x >>> b) & 0xFFL) | ((l-1) << 8));
    int res = b + select256[selectIndex];
    return res;
  }

