    @Override
    public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {
      assert blocksOffset + iterations * blockCount() <= blocks.length;
      assert valuesOffset + iterations * valueCount() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final long block0 = blocks[blocksOffset++];
        values[valuesOffset++] = block0 >>> 36;
        values[valuesOffset++] = (block0 >>> 8) & 268435455L;
        final long block1 = blocks[blocksOffset++];
        values[valuesOffset++] = ((block0 & 255L) << 20) | (block1 >>> 44);
        values[valuesOffset++] = (block1 >>> 16) & 268435455L;
        final long block2 = blocks[blocksOffset++];
        values[valuesOffset++] = ((block1 & 65535L) << 12) | (block2 >>> 52);
        values[valuesOffset++] = (block2 >>> 24) & 268435455L;
        final long block3 = blocks[blocksOffset++];
        values[valuesOffset++] = ((block2 & 16777215L) << 4) | (block3 >>> 60);
        values[valuesOffset++] = (block3 >>> 32) & 268435455L;
        values[valuesOffset++] = (block3 >>> 4) & 268435455L;
        final long block4 = blocks[blocksOffset++];
        values[valuesOffset++] = ((block3 & 15L) << 24) | (block4 >>> 40);
        values[valuesOffset++] = (block4 >>> 12) & 268435455L;
        final long block5 = blocks[blocksOffset++];
        values[valuesOffset++] = ((block4 & 4095L) << 16) | (block5 >>> 48);
        values[valuesOffset++] = (block5 >>> 20) & 268435455L;
        final long block6 = blocks[blocksOffset++];
        values[valuesOffset++] = ((block5 & 1048575L) << 8) | (block6 >>> 56);
        values[valuesOffset++] = (block6 >>> 28) & 268435455L;
        values[valuesOffset++] = block6 & 268435455L;
      }
    }

