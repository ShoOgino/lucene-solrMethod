  // TODO: this currently requites a determinized machine,
  // but it need not -- we can speed it up by walking the
  // NFA instead.  it'd still be fail fast.
  /**
   * Returns the longest BytesRef that is a prefix of all accepted strings and
   * visits each state at most once.  The automaton must be deterministic.
   * 
   * @return common prefix
   */
  public static BytesRef getCommonPrefixBytesRef(Automaton a) {
    BytesRef ref = new BytesRef(10);
    HashSet<Integer> visited = new HashSet<>();
    int s = 0;
    boolean done;
    Transition t = new Transition();
    do {
      done = true;
      visited.add(s);
      if (a.isAccept(s) == false && a.getNumTransitions(s) == 1) {
        a.getTransition(s, 0, t);
        if (t.min == t.max && !visited.contains(t.dest)) {
          ref.grow(++ref.length);
          ref.bytes[ref.length - 1] = (byte) t.min;
          s = t.dest;
          done = false;
        }
      }
    } while (!done);

    return ref;
  }

