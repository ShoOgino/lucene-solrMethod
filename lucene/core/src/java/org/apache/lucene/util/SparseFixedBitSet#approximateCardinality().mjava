  /**
   * Return an approximation of the cardinality of this set, assuming that bits
   * are uniformly distributed. This operation runs in constant time.
   */
  public int approximateCardinality() {
    // this is basically the linear counting algorithm
    final int totalLongs = (length + 63) >>> 6; // total number of longs in the space
    assert totalLongs >= nonZeroLongCount;
    final int zeroLongs = totalLongs - nonZeroLongCount; // number of longs that are zeros
    // No need to guard against division by zero, it will return +Infinity and things will work as expected
    final long estimate = Math.round(totalLongs * Math.log((double) totalLongs / zeroLongs));
    return (int) Math.min(length, estimate);
  }

