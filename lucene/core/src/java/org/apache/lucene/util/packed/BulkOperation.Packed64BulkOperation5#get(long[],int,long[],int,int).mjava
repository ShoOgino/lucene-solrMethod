    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {
      assert bi + iterations * blocks() <= blocks.length;
      assert vi + iterations * values() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final long block0 = blocks[bi++];
        values[vi++] = block0 >>> 59;
        values[vi++] = (block0 >>> 54) & 31L;
        values[vi++] = (block0 >>> 49) & 31L;
        values[vi++] = (block0 >>> 44) & 31L;
        values[vi++] = (block0 >>> 39) & 31L;
        values[vi++] = (block0 >>> 34) & 31L;
        values[vi++] = (block0 >>> 29) & 31L;
        values[vi++] = (block0 >>> 24) & 31L;
        values[vi++] = (block0 >>> 19) & 31L;
        values[vi++] = (block0 >>> 14) & 31L;
        values[vi++] = (block0 >>> 9) & 31L;
        values[vi++] = (block0 >>> 4) & 31L;
        final long block1 = blocks[bi++];
        values[vi++] = ((block0 & 15L) << 1) | (block1 >>> 63);
        values[vi++] = (block1 >>> 58) & 31L;
        values[vi++] = (block1 >>> 53) & 31L;
        values[vi++] = (block1 >>> 48) & 31L;
        values[vi++] = (block1 >>> 43) & 31L;
        values[vi++] = (block1 >>> 38) & 31L;
        values[vi++] = (block1 >>> 33) & 31L;
        values[vi++] = (block1 >>> 28) & 31L;
        values[vi++] = (block1 >>> 23) & 31L;
        values[vi++] = (block1 >>> 18) & 31L;
        values[vi++] = (block1 >>> 13) & 31L;
        values[vi++] = (block1 >>> 8) & 31L;
        values[vi++] = (block1 >>> 3) & 31L;
        final long block2 = blocks[bi++];
        values[vi++] = ((block1 & 7L) << 2) | (block2 >>> 62);
        values[vi++] = (block2 >>> 57) & 31L;
        values[vi++] = (block2 >>> 52) & 31L;
        values[vi++] = (block2 >>> 47) & 31L;
        values[vi++] = (block2 >>> 42) & 31L;
        values[vi++] = (block2 >>> 37) & 31L;
        values[vi++] = (block2 >>> 32) & 31L;
        values[vi++] = (block2 >>> 27) & 31L;
        values[vi++] = (block2 >>> 22) & 31L;
        values[vi++] = (block2 >>> 17) & 31L;
        values[vi++] = (block2 >>> 12) & 31L;
        values[vi++] = (block2 >>> 7) & 31L;
        values[vi++] = (block2 >>> 2) & 31L;
        final long block3 = blocks[bi++];
        values[vi++] = ((block2 & 3L) << 3) | (block3 >>> 61);
        values[vi++] = (block3 >>> 56) & 31L;
        values[vi++] = (block3 >>> 51) & 31L;
        values[vi++] = (block3 >>> 46) & 31L;
        values[vi++] = (block3 >>> 41) & 31L;
        values[vi++] = (block3 >>> 36) & 31L;
        values[vi++] = (block3 >>> 31) & 31L;
        values[vi++] = (block3 >>> 26) & 31L;
        values[vi++] = (block3 >>> 21) & 31L;
        values[vi++] = (block3 >>> 16) & 31L;
        values[vi++] = (block3 >>> 11) & 31L;
        values[vi++] = (block3 >>> 6) & 31L;
        values[vi++] = (block3 >>> 1) & 31L;
        final long block4 = blocks[bi++];
        values[vi++] = ((block3 & 1L) << 4) | (block4 >>> 60);
        values[vi++] = (block4 >>> 55) & 31L;
        values[vi++] = (block4 >>> 50) & 31L;
        values[vi++] = (block4 >>> 45) & 31L;
        values[vi++] = (block4 >>> 40) & 31L;
        values[vi++] = (block4 >>> 35) & 31L;
        values[vi++] = (block4 >>> 30) & 31L;
        values[vi++] = (block4 >>> 25) & 31L;
        values[vi++] = (block4 >>> 20) & 31L;
        values[vi++] = (block4 >>> 15) & 31L;
        values[vi++] = (block4 >>> 10) & 31L;
        values[vi++] = (block4 >>> 5) & 31L;
        values[vi++] = block4 & 31L;
      }
    }

