  /**
   * Constructs new <code>Automaton</code> from this <code>RegExp</code>. The
   * constructed automaton is minimal and deterministic and has no transitions
   * to dead states.
   * 
   * @param automata a map from automaton identifiers to automata (of type
   *          <code>LightAutomaton</code>).
   * @exception IllegalArgumentException if this regular expression uses a named
   *              identifier that does not occur in the automaton map
   */
  public LightAutomaton toLightAutomaton(Map<String,LightAutomaton> automata)
      throws IllegalArgumentException {
    return toLightAutomaton(automata, null);
  }

