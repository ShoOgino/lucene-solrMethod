  /**
   * Checks if the seed is an IndexReader, and if so will walk
   * the hierarchy of subReaders building up a list of the objects 
   * returned by {@code seed.getCoreCacheKey()}
   */
  private List<Object> getAllDescendantReaderKeys(Object seed) {
    List<Object> all = new ArrayList<>(17); // will grow as we iter
    all.add(seed);
    for (int i = 0; i < all.size(); i++) {
      final Object obj = all.get(i);
      // TODO: We don't check closed readers here (as getTopReaderContext
      // throws AlreadyClosedException), what should we do? Reflection?
      if (obj instanceof IndexReader) {
        try {
          final List<IndexReaderContext> childs =
            ((IndexReader) obj).getContext().children();
          if (childs != null) { // it is composite reader
            for (final IndexReaderContext ctx : childs) {
              all.add(ctx.reader().getCoreCacheKey());
            }
          }
        } catch (AlreadyClosedException ace) {
          // ignore this reader
        }
      }
    }
    // need to skip the first, because it was the seed
    return all.subList(1, all.size());
  }

