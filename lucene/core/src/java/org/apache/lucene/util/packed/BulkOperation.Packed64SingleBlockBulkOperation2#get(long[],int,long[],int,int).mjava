    public void get(long[] blocks, int bi, long[] values, int vi, int iterations) {
      assert bi + iterations * blocks() <= blocks.length;
      assert vi + iterations * values() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final long block = blocks[bi++];
        values[vi++] = block & 3L;
        values[vi++] = (block >>> 2) & 3L;
        values[vi++] = (block >>> 4) & 3L;
        values[vi++] = (block >>> 6) & 3L;
        values[vi++] = (block >>> 8) & 3L;
        values[vi++] = (block >>> 10) & 3L;
        values[vi++] = (block >>> 12) & 3L;
        values[vi++] = (block >>> 14) & 3L;
        values[vi++] = (block >>> 16) & 3L;
        values[vi++] = (block >>> 18) & 3L;
        values[vi++] = (block >>> 20) & 3L;
        values[vi++] = (block >>> 22) & 3L;
        values[vi++] = (block >>> 24) & 3L;
        values[vi++] = (block >>> 26) & 3L;
        values[vi++] = (block >>> 28) & 3L;
        values[vi++] = (block >>> 30) & 3L;
        values[vi++] = (block >>> 32) & 3L;
        values[vi++] = (block >>> 34) & 3L;
        values[vi++] = (block >>> 36) & 3L;
        values[vi++] = (block >>> 38) & 3L;
        values[vi++] = (block >>> 40) & 3L;
        values[vi++] = (block >>> 42) & 3L;
        values[vi++] = (block >>> 44) & 3L;
        values[vi++] = (block >>> 46) & 3L;
        values[vi++] = (block >>> 48) & 3L;
        values[vi++] = (block >>> 50) & 3L;
        values[vi++] = (block >>> 52) & 3L;
        values[vi++] = (block >>> 54) & 3L;
        values[vi++] = (block >>> 56) & 3L;
        values[vi++] = (block >>> 58) & 3L;
        values[vi++] = (block >>> 60) & 3L;
        values[vi++] = block >>> 62;
      }
    }

