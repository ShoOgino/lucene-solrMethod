  /**
   * Creates an array backed by the given blocks.
   * </p><p>
   * Note: The blocks are used directly, so changes to the given block will
   * affect the Packed32-structure.
   * @param blocks   used as the internal backing array.
   * @param valueCount   the number of values.
   * @param bitsPerValue the number of bits available for any given value.
   *        Note: bitsPerValue >32 is not supported by this implementation.
   */
  public Packed32(int[] blocks, int valueCount, int bitsPerValue) {
    // TODO: Check that blocks.length is sufficient for holding length values
    super(valueCount, bitsPerValue);
    if (bitsPerValue > 31) {
      throw new IllegalArgumentException(String.format(
              "This array only supports values of 31 bits or less. The "
                      + "required number of bits was %d. The Packed64 "
                      + "implementation allows values with more than 31 bits",
              bitsPerValue));
    }
    this.blocks = blocks;
    updateCached();
  }

