    @Override
    public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {
      assert blocksOffset + 8 * iterations * blockCount() <= blocks.length;
      assert valuesOffset + iterations * valueCount() <= values.length;
      for (int i = 0; i < iterations; ++i) {
        final int byte0 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte0 >>> 5;
        values[valuesOffset++] = (byte0 >>> 2) & 7;
        final int byte1 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte0 & 3) << 1) | (byte1 >>> 7);
        values[valuesOffset++] = (byte1 >>> 4) & 7;
        values[valuesOffset++] = (byte1 >>> 1) & 7;
        final int byte2 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte1 & 1) << 2) | (byte2 >>> 6);
        values[valuesOffset++] = (byte2 >>> 3) & 7;
        values[valuesOffset++] = byte2 & 7;
        final int byte3 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte3 >>> 5;
        values[valuesOffset++] = (byte3 >>> 2) & 7;
        final int byte4 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte3 & 3) << 1) | (byte4 >>> 7);
        values[valuesOffset++] = (byte4 >>> 4) & 7;
        values[valuesOffset++] = (byte4 >>> 1) & 7;
        final int byte5 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte4 & 1) << 2) | (byte5 >>> 6);
        values[valuesOffset++] = (byte5 >>> 3) & 7;
        values[valuesOffset++] = byte5 & 7;
        final int byte6 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte6 >>> 5;
        values[valuesOffset++] = (byte6 >>> 2) & 7;
        final int byte7 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte6 & 3) << 1) | (byte7 >>> 7);
        values[valuesOffset++] = (byte7 >>> 4) & 7;
        values[valuesOffset++] = (byte7 >>> 1) & 7;
        final int byte8 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte7 & 1) << 2) | (byte8 >>> 6);
        values[valuesOffset++] = (byte8 >>> 3) & 7;
        values[valuesOffset++] = byte8 & 7;
        final int byte9 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte9 >>> 5;
        values[valuesOffset++] = (byte9 >>> 2) & 7;
        final int byte10 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte9 & 3) << 1) | (byte10 >>> 7);
        values[valuesOffset++] = (byte10 >>> 4) & 7;
        values[valuesOffset++] = (byte10 >>> 1) & 7;
        final int byte11 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte10 & 1) << 2) | (byte11 >>> 6);
        values[valuesOffset++] = (byte11 >>> 3) & 7;
        values[valuesOffset++] = byte11 & 7;
        final int byte12 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte12 >>> 5;
        values[valuesOffset++] = (byte12 >>> 2) & 7;
        final int byte13 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte12 & 3) << 1) | (byte13 >>> 7);
        values[valuesOffset++] = (byte13 >>> 4) & 7;
        values[valuesOffset++] = (byte13 >>> 1) & 7;
        final int byte14 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte13 & 1) << 2) | (byte14 >>> 6);
        values[valuesOffset++] = (byte14 >>> 3) & 7;
        values[valuesOffset++] = byte14 & 7;
        final int byte15 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte15 >>> 5;
        values[valuesOffset++] = (byte15 >>> 2) & 7;
        final int byte16 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte15 & 3) << 1) | (byte16 >>> 7);
        values[valuesOffset++] = (byte16 >>> 4) & 7;
        values[valuesOffset++] = (byte16 >>> 1) & 7;
        final int byte17 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte16 & 1) << 2) | (byte17 >>> 6);
        values[valuesOffset++] = (byte17 >>> 3) & 7;
        values[valuesOffset++] = byte17 & 7;
        final int byte18 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte18 >>> 5;
        values[valuesOffset++] = (byte18 >>> 2) & 7;
        final int byte19 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte18 & 3) << 1) | (byte19 >>> 7);
        values[valuesOffset++] = (byte19 >>> 4) & 7;
        values[valuesOffset++] = (byte19 >>> 1) & 7;
        final int byte20 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte19 & 1) << 2) | (byte20 >>> 6);
        values[valuesOffset++] = (byte20 >>> 3) & 7;
        values[valuesOffset++] = byte20 & 7;
        final int byte21 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = byte21 >>> 5;
        values[valuesOffset++] = (byte21 >>> 2) & 7;
        final int byte22 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte21 & 3) << 1) | (byte22 >>> 7);
        values[valuesOffset++] = (byte22 >>> 4) & 7;
        values[valuesOffset++] = (byte22 >>> 1) & 7;
        final int byte23 = blocks[blocksOffset++] & 0xFF;
        values[valuesOffset++] = ((byte22 & 1) << 2) | (byte23 >>> 6);
        values[valuesOffset++] = (byte23 >>> 3) & 7;
        values[valuesOffset++] = byte23 & 7;
      }
    }

