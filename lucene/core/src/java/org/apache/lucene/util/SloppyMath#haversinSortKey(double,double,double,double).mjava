  /**
   * Returns a sort key for distance. This is less expensive to compute than 
   * {@link #haversinMeters(double, double, double, double)}, but it always compares the same.
   * This can be converted into an actual distance with {@link #haversinMeters(double)}, which
   * effectively does the second half of the computation.
   */
  public static double haversinSortKey(double lat1, double lon1, double lat2, double lon2) {
    double x1 = lat1 * TO_RADIANS;
    double x2 = lat2 * TO_RADIANS;
    double h1 = 1 - cos(x1 - x2);
    double h2 = 1 - cos((lon1 - lon2) * TO_RADIANS);
    return h1 + cos(x1) * cos(x2) * h2;
  }

