  /** Peeks at next arc's label; does not alter arc.  Do
   *  not call this if arc.isLast()! */
  int readNextArcLabel(Arc<T> arc, BytesReader in) throws IOException {
    assert !arc.isLast();

    if (arc.label() == END_LABEL) {
      //System.out.println("    nextArc fake " +
      //arc.nextArc);
      
      long pos = arc.nextArc();
      in.setPosition(pos);

      final byte flags = in.readByte();
      if (flags == ARCS_AS_ARRAY_PACKED) {
        //System.out.println("    nextArc fixed array");
        in.readVInt();

        // Skip bytesPerArc:
        in.readVInt();
      } else {
        in.setPosition(pos);
      }
      // skip flags
      in.readByte();
    } else {
      if (arc.bytesPerArc() != 0) {
        //System.out.println("    nextArc real array");
        // arcs are in an array
        if (arc.arcIdx() >= 0) {
          in.setPosition(arc.posArcsStart());
          // point at next arc, -1 to skip flags
          in.skipBytes((1 + arc.arcIdx()) * arc.bytesPerArc() + 1);
        } else {
          in.setPosition(arc.nextArc());
          byte flags = in.readByte();
          // skip missing arcs
          while (flag(flags, BIT_MISSING_ARC)) {
            in.skipBytes(arc.bytesPerArc() - 1);
            flags = in.readByte();
          }
        }
      } else {
        // arcs are packed
        //System.out.println("    nextArc real packed");
        // -1 to skip flags
        in.setPosition(arc.nextArc() - 1);
      }
    }
    return readLabel(in);
  }

