  /**
   * Creates a new specific FSDirectory instance
   * @param clazz The class of the object to be created
   * @param file The file to be used as parameter constructor
   * @return The new FSDirectory instance
   * @throws NoSuchMethodException If the Directory does not have a constructor that takes <code>File</code>.
   * @throws InstantiationException If the class is abstract or an interface.
   * @throws IllegalAccessException If the constructor does not have public visibility.
   * @throws InvocationTargetException If the constructor throws an exception
   */
  public static FSDirectory newFSDirectory(Class<? extends FSDirectory> clazz, File file) 
      throws NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {
    // Assuming every FSDirectory has a ctor(File):
    Constructor<? extends FSDirectory> ctor = clazz.getConstructor(File.class);
    return ctor.newInstance(file);
  }

