  /** Given a target value, go back to the first smaller or equal value
   * and return it if it is available. Otherwise return {@link #NO_MORE_VALUES}.
   */
  public long backToValue(long target) {
    if (! toBeforeCurrentHighBit()) {
      return NO_MORE_VALUES;
    }
    long highTarget = target >>> efEncoder.numLowBits;
    long highValue = backToHighValue(highTarget);
    if (highValue == NO_MORE_VALUES) {
      return NO_MORE_VALUES;
    }
    // Linear search with low values:
    long currentValue = combineHighLowValues(highValue, currentLowValue());
    while (currentValue > target) {
      currentValue = previousValue();
      if (currentValue == NO_MORE_VALUES) {
        return NO_MORE_VALUES;
      }
    }
    return currentValue;
  }

