    public void decode(LongBuffer blocks, LongBuffer values, int iterations) {
      assert blocks.position() + iterations * blocks() <= blocks.limit();
      assert values.position() + iterations * values() <= values.limit();
      for (int i = 0; i < iterations; ++i) {
        final long block0 = blocks.get();
        values.put(block0 >>> 53);
        values.put((block0 >>> 42) & 2047L);
        values.put((block0 >>> 31) & 2047L);
        values.put((block0 >>> 20) & 2047L);
        values.put((block0 >>> 9) & 2047L);
        final long block1 = blocks.get();
        values.put(((block0 & 511L) << 2) | (block1 >>> 62));
        values.put((block1 >>> 51) & 2047L);
        values.put((block1 >>> 40) & 2047L);
        values.put((block1 >>> 29) & 2047L);
        values.put((block1 >>> 18) & 2047L);
        values.put((block1 >>> 7) & 2047L);
        final long block2 = blocks.get();
        values.put(((block1 & 127L) << 4) | (block2 >>> 60));
        values.put((block2 >>> 49) & 2047L);
        values.put((block2 >>> 38) & 2047L);
        values.put((block2 >>> 27) & 2047L);
        values.put((block2 >>> 16) & 2047L);
        values.put((block2 >>> 5) & 2047L);
        final long block3 = blocks.get();
        values.put(((block2 & 31L) << 6) | (block3 >>> 58));
        values.put((block3 >>> 47) & 2047L);
        values.put((block3 >>> 36) & 2047L);
        values.put((block3 >>> 25) & 2047L);
        values.put((block3 >>> 14) & 2047L);
        values.put((block3 >>> 3) & 2047L);
        final long block4 = blocks.get();
        values.put(((block3 & 7L) << 8) | (block4 >>> 56));
        values.put((block4 >>> 45) & 2047L);
        values.put((block4 >>> 34) & 2047L);
        values.put((block4 >>> 23) & 2047L);
        values.put((block4 >>> 12) & 2047L);
        values.put((block4 >>> 1) & 2047L);
        final long block5 = blocks.get();
        values.put(((block4 & 1L) << 10) | (block5 >>> 54));
        values.put((block5 >>> 43) & 2047L);
        values.put((block5 >>> 32) & 2047L);
        values.put((block5 >>> 21) & 2047L);
        values.put((block5 >>> 10) & 2047L);
        final long block6 = blocks.get();
        values.put(((block5 & 1023L) << 1) | (block6 >>> 63));
        values.put((block6 >>> 52) & 2047L);
        values.put((block6 >>> 41) & 2047L);
        values.put((block6 >>> 30) & 2047L);
        values.put((block6 >>> 19) & 2047L);
        values.put((block6 >>> 8) & 2047L);
        final long block7 = blocks.get();
        values.put(((block6 & 255L) << 3) | (block7 >>> 61));
        values.put((block7 >>> 50) & 2047L);
        values.put((block7 >>> 39) & 2047L);
        values.put((block7 >>> 28) & 2047L);
        values.put((block7 >>> 17) & 2047L);
        values.put((block7 >>> 6) & 2047L);
        final long block8 = blocks.get();
        values.put(((block7 & 63L) << 5) | (block8 >>> 59));
        values.put((block8 >>> 48) & 2047L);
        values.put((block8 >>> 37) & 2047L);
        values.put((block8 >>> 26) & 2047L);
        values.put((block8 >>> 15) & 2047L);
        values.put((block8 >>> 4) & 2047L);
        final long block9 = blocks.get();
        values.put(((block8 & 15L) << 7) | (block9 >>> 57));
        values.put((block9 >>> 46) & 2047L);
        values.put((block9 >>> 35) & 2047L);
        values.put((block9 >>> 24) & 2047L);
        values.put((block9 >>> 13) & 2047L);
        values.put((block9 >>> 2) & 2047L);
        final long block10 = blocks.get();
        values.put(((block9 & 3L) << 9) | (block10 >>> 55));
        values.put((block10 >>> 44) & 2047L);
        values.put((block10 >>> 33) & 2047L);
        values.put((block10 >>> 22) & 2047L);
        values.put((block10 >>> 11) & 2047L);
        values.put(block10 & 2047L);
      }
    }

