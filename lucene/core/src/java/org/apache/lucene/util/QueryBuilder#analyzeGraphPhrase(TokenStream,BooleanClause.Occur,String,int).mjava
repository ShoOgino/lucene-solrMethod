  /**
   * Creates a query from a graph token stream by extracting all the finite strings from the graph and using them to create the query.
   */
  protected Query analyzeGraphPhrase(TokenStream source, BooleanClause.Occur operator, String field, int phraseSlop)
      throws IOException {
    source.reset();
    GraphTokenStreamFiniteStrings visitor = new GraphTokenStreamFiniteStrings(source);
    Iterator<TokenStream> it = visitor.getFiniteStrings();
    List<Query> queries = new ArrayList<>();
    while (it.hasNext()) {
      Query query = createFieldQuery(it.next(), operator, field, true, phraseSlop);
      if (query != null) {
        queries.add(query);
      }
    }
    return new GraphQuery(queries.toArray(new Query[0]));
  }

