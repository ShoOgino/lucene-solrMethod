    public void decode(LongBuffer blocks, LongBuffer values, int iterations) {
      assert blocks.position() + iterations * blocks() <= blocks.limit();
      assert values.position() + iterations * values() <= values.limit();
      for (int i = 0; i < iterations; ++i) {
        final long block0 = blocks.get();
        values.put(block0 >>> 46);
        values.put((block0 >>> 28) & 262143L);
        values.put((block0 >>> 10) & 262143L);
        final long block1 = blocks.get();
        values.put(((block0 & 1023L) << 8) | (block1 >>> 56));
        values.put((block1 >>> 38) & 262143L);
        values.put((block1 >>> 20) & 262143L);
        values.put((block1 >>> 2) & 262143L);
        final long block2 = blocks.get();
        values.put(((block1 & 3L) << 16) | (block2 >>> 48));
        values.put((block2 >>> 30) & 262143L);
        values.put((block2 >>> 12) & 262143L);
        final long block3 = blocks.get();
        values.put(((block2 & 4095L) << 6) | (block3 >>> 58));
        values.put((block3 >>> 40) & 262143L);
        values.put((block3 >>> 22) & 262143L);
        values.put((block3 >>> 4) & 262143L);
        final long block4 = blocks.get();
        values.put(((block3 & 15L) << 14) | (block4 >>> 50));
        values.put((block4 >>> 32) & 262143L);
        values.put((block4 >>> 14) & 262143L);
        final long block5 = blocks.get();
        values.put(((block4 & 16383L) << 4) | (block5 >>> 60));
        values.put((block5 >>> 42) & 262143L);
        values.put((block5 >>> 24) & 262143L);
        values.put((block5 >>> 6) & 262143L);
        final long block6 = blocks.get();
        values.put(((block5 & 63L) << 12) | (block6 >>> 52));
        values.put((block6 >>> 34) & 262143L);
        values.put((block6 >>> 16) & 262143L);
        final long block7 = blocks.get();
        values.put(((block6 & 65535L) << 2) | (block7 >>> 62));
        values.put((block7 >>> 44) & 262143L);
        values.put((block7 >>> 26) & 262143L);
        values.put((block7 >>> 8) & 262143L);
        final long block8 = blocks.get();
        values.put(((block7 & 255L) << 10) | (block8 >>> 54));
        values.put((block8 >>> 36) & 262143L);
        values.put((block8 >>> 18) & 262143L);
        values.put(block8 & 262143L);
      }
    }

