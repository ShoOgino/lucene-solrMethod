  /**
   * NOTE: this method creates a compound file for all files returned by
   * info.files(). While, generally, this may include separate norms and
   * deletion files, this SegmentInfo must not reference such files when this
   * method is called, because they are not allowed within a compound file.
   */
  static final Collection<String> createCompoundFile(InfoStream infoStream, Directory directory, final SegmentInfo info, IOContext context)
          throws IOException {

    // TODO: use trackingdirectorywrapper instead of files() to know which files to delete when things fail:
    String cfsFiles[] = info.getCodec().compoundFormat().files(info);
    
    if (infoStream.isEnabled("IW")) {
      infoStream.message("IW", "create compound file");
    }
    // Now merge all added files
    Collection<String> files = info.files();
    
    boolean success = false;
    try {
      info.getCodec().compoundFormat().write(directory, info, files, context);
      success = true;
    } finally {
      if (!success) {
        IOUtils.deleteFilesIgnoringExceptions(directory, cfsFiles);
      }
    }

    // Replace all previous files with the CFS/CFE files:
    Set<String> siFiles = new HashSet<>();
    for (String cfsFile : cfsFiles) {
      siFiles.add(cfsFile);
    }
    info.setFiles(siFiles);

    return files;
  }

