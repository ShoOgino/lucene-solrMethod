  /** Copies the segment files as-is into the IndexWriter's directory. */
  private SegmentInfoPerCommit copySegmentAsIs(SegmentInfoPerCommit info, String segName, IOContext context)
      throws IOException {
    
    // note: we don't really need this fis (its copied), but we load it up
    // so we don't pass a null value to the si writer
    FieldInfos fis = getFieldInfos(info.info);
    
    final Map<String,String> attributes;
    // copy the attributes map, we might modify it below.
    // also we need to ensure its read-write, since we will invoke the SIwriter (which might want to set something).
    if (info.info.attributes() == null) {
      attributes = new HashMap<String,String>();
    } else {
      attributes = new HashMap<String,String>(info.info.attributes());
    }

    //System.out.println("copy seg=" + info.info.name + " version=" + info.info.getVersion());
    // Same SI as before but we change directory and name
    SegmentInfo newInfo = new SegmentInfo(directory, info.info.getVersion(), segName, info.info.getDocCount(),
                                          info.info.getUseCompoundFile(),
                                          info.info.getCodec(), info.info.getDiagnostics(), attributes);
    SegmentInfoPerCommit newInfoPerCommit = new SegmentInfoPerCommit(newInfo, info.getDelCount(), info.getDelGen());

    Set<String> segFiles = new HashSet<String>();

    // Build up new segment's file names.  Must do this
    // before writing SegmentInfo:
    for (String file: info.files()) {
      final String newFileName;
      newFileName = segName + IndexFileNames.stripSegmentName(file);
      segFiles.add(newFileName);
    }
    newInfo.setFiles(segFiles);

    // We must rewrite the SI file because it references segment name in its list of files, etc
    TrackingDirectoryWrapper trackingDir = new TrackingDirectoryWrapper(directory);

    newInfo.getCodec().segmentInfoFormat().getSegmentInfoWriter().write(trackingDir, newInfo, fis, context);

    final Collection<String> siFiles = trackingDir.getCreatedFiles();

    // Copy the segment's files
    for (String file: info.files()) {

      final String newFileName = segName + IndexFileNames.stripSegmentName(file);

      if (siFiles.contains(newFileName)) {
        // We already rewrote this above
        continue;
      }

      assert !directory.fileExists(newFileName): "file \"" + newFileName + "\" already exists; siFiles=" + siFiles;

      info.info.dir.copy(directory, file, newFileName, context);
    }
    
    return newInfoPerCommit;
  }

