  @Override
  boolean start(IndexableField[] fields, int count) {
    doVectors = false;
    doVectorPositions = false;
    doVectorOffsets = false;
    doVectorPayloads = false;
    hasPayloads = false;

    for(int i=0;i<count;i++) {
      IndexableField field = fields[i];
      if (field.fieldType().indexed() && field.fieldType().storeTermVectors()) {
        doVectors = true;
        doVectorPositions |= field.fieldType().storeTermVectorPositions();
        doVectorOffsets |= field.fieldType().storeTermVectorOffsets();
        if (doVectorPositions) {
          doVectorPayloads |= field.fieldType().storeTermVectorPayloads();
        } else if (field.fieldType().storeTermVectorPayloads()) {
          // TODO: move this check somewhere else, and impl the other missing ones
          throw new IllegalArgumentException("cannot index term vector payloads for field: " + field + " without term vector positions");
        }
      }
    }

    if (doVectors) {
      termsWriter.hasVectors = true;
      if (termsHashPerField.bytesHash.size() != 0) {
        // Only necessary if previous doc hit a
        // non-aborting exception while writing vectors in
        // this field:
        termsHashPerField.reset();
      }
    }

    // TODO: only if needed for performance
    //perThread.postingsCount = 0;

    return doVectors;
  }

