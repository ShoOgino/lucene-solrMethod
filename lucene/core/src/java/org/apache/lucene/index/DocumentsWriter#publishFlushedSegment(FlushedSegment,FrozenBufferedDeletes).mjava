  /**
   * Publishes the flushed segment, segment private deletes (if any) and its
   * associated global delete (if present) to IndexWriter.  The actual
   * publishing operation is synced on IW -> BDS so that the {@link SegmentInfo}'s
   * delete generation is always GlobalPacket_deleteGeneration + 1
   */
  private void publishFlushedSegment(FlushedSegment newSegment, FrozenBufferedDeletes globalPacket)
      throws IOException {
    assert newSegment != null;
    assert newSegment.segmentInfo != null;
    final FrozenBufferedDeletes segmentDeletes = newSegment.segmentDeletes;
    //System.out.println("FLUSH: " + newSegment.segmentInfo.info.name);
    if (infoStream.isEnabled("DW")) {
      infoStream.message("DW", "publishFlushedSegment seg-private deletes=" + segmentDeletes);  
    }
    
    if (segmentDeletes != null && infoStream.isEnabled("DW")) {
      infoStream.message("DW", "flush: push buffered seg private deletes: " + segmentDeletes);
    }
    // now publish!
    indexWriter.publishFlushedSegment(newSegment.segmentInfo, segmentDeletes, globalPacket);
  }

