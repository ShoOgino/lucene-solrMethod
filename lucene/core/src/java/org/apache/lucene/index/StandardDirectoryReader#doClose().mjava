  @Override
  protected void doClose() throws IOException {
    Throwable firstExc = null;
    for (final AtomicReader r : getSequentialSubReaders()) {
      // try to close each reader, even if an exception is thrown
      try {
        r.decRef();
      } catch (Throwable t) {
        if (firstExc == null) firstExc = t;
      }
    }

    if (writer != null) {
      // Since we just closed, writer may now be able to
      // delete unused files:
      writer.deletePendingFiles();
    }

    // throw the first exception
    if (firstExc != null) {
      if (firstExc instanceof IOException) throw (IOException) firstExc;
      if (firstExc instanceof RuntimeException) throw (RuntimeException) firstExc;
      if (firstExc instanceof Error) throw (Error) firstExc;
      throw new RuntimeException(firstExc);
    }
  }

