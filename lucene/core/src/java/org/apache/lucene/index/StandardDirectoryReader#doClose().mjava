  @Override
  protected void doClose() throws IOException {
    Throwable firstExc = null;
    for (final LeafReader r : getSequentialSubReaders()) {
      // try to close each reader, even if an exception is thrown
      try {
        r.decRef();
      } catch (Throwable t) {
        if (firstExc == null) {
          firstExc = t;
        }
      }
    }

    if (writer != null) {
      try {
        writer.decRefDeleter(segmentInfos);
      } catch (AlreadyClosedException ex) {
        // This is OK, it just means our original writer was
        // closed before we were, and this may leave some
        // un-referenced files in the index, which is
        // harmless.  The next time IW is opened on the
        // index, it will delete them.
      }
    }

    // throw the first exception
    IOUtils.reThrow(firstExc);
  }

