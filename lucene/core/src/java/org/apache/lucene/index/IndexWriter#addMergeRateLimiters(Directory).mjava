  /** Wraps the incoming {@link Directory} so that we assign a per-thread
   *  {@link MergeRateLimiter} to all created {@link IndexOutput}s. */
  private Directory addMergeRateLimiters(Directory in) {
    return new FilterDirectory(in) {
      @Override
      public IndexOutput createOutput(String name, IOContext context) throws IOException {
        ensureOpen();

        // This Directory is only supposed to be used during merging,
        // so all writes should have MERGE context, else there is a bug 
        // somewhere that is failing to pass down the right IOContext:
        assert context.context == IOContext.Context.MERGE: "got context=" + context.context;
        IndexOutput output = in.createOutput(name, context);
        MergeRateLimiter rateLimiter = rateLimiters.get();
        assert rateLimiter != null;
        return new RateLimitedIndexOutput(rateLimiter, output);
      }
    };
  }

