    private FieldInfo addOrUpdateInternal(String name, int preferredFieldNumber, boolean isIndexed,
        boolean storeTermVector,
        boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normType) {
      FieldInfo fi = fieldInfo(name);
      if (fi == null) {
        // get a global number for this field
        final int fieldNumber = globalFieldNumbers.addOrGet(name, preferredFieldNumber, docValues);
        fi = addInternal(name, fieldNumber, isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, normType);
      } else {
        fi.update(isIndexed, storeTermVector, omitNorms, storePayloads, indexOptions);

        if (docValues != null) {
          DocValuesType currentDVType = fi.getDocValuesType();
          if (currentDVType == null) {
            fi.setDocValuesType(docValues);
          } else if (currentDVType != docValues) {
            throw new IllegalArgumentException("cannot change DocValues type from " + currentDVType + " to " + docValues + " for field \"" + name + "\"");
          }
          fi.setDocValuesType(docValues);
        }

        if (!fi.omitsNorms() && normType != null) {
          DocValuesType currentDVType = fi.getNormType();
          if (currentDVType == null) {
            fi.setNormValueType(docValues);
          } else if (currentDVType != normType) {
            throw new IllegalArgumentException("cannot change Norm type from " + currentDVType + " to " + normType + " for field \"" + name + "\"");
          }
          fi.setNormValueType(normType);
        }
      }
      return fi;
    }

