  /** Gracefully shut down this {@code IndexWriter}
   *  instance, with control over whether to wait for
   *  merges.  See {@link #shutdown()}. */
  public void shutdown(boolean waitForMerges) throws IOException {
    if (pendingCommit != null) {
      throw new IllegalStateException("cannot shutdown: prepareCommit was already called with no corresponding call to commit");
    }
    if (infoStream.isEnabled("IW")) {
      infoStream.message("IW", "now flush at shutdown");
    }
    boolean success = false;
    try {
      flush(waitForMerges, true);
      finishMerges(waitForMerges);
      commit();
      // TODO: we could just call rollback, but ... it's nice
      // to catch IW bugs where after waitForMerges/commit we
      // still have running merges / uncommitted changes, or
      // tests that illegally leave threads indexing and then
      // try to use shutdown:
      close();
      success = true;
    } finally {
      if (success == false) {
        // Be certain to close the index on any exception
        try {
          rollback();
        } catch (Throwable t) {
          // Suppress so we keep throwing original exception
        }
      }
    }
  }

