  @Override
  public void flush(SegmentWriteState state, SimpleDVConsumer dvConsumer) throws IOException {

    final int maxDoc = state.segmentInfo.getDocCount();

    dvConsumer.addNumericField(fieldInfo,
                               new Iterable<Number>() {

                                 @Override
                                 public Iterator<Number> iterator() {
                                   return new Iterator<Number>() {
                                     int upto;
                                     AppendingLongBuffer.Iterator iter = pending.iterator();

                                     @Override
                                     public boolean hasNext() {
                                       return upto < maxDoc;
                                     }

                                     @Override
                                     public void remove() {
                                       throw new UnsupportedOperationException();
                                     }

                                     @Override
                                     public Number next() {
                                       // nocommit make
                                       // mutable Number:
                                       long value;
                                       if (upto < pending.size()) {
                                         value =  iter.next();
                                       } else {
                                         value = 0;
                                       }
                                       upto++;
                                       return value;
                                     }
                                   };
                                 }
                               });

    reset();
  }

