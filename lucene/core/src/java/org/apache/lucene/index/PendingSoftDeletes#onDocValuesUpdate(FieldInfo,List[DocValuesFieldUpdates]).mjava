  @Override
  void onDocValuesUpdate(FieldInfo info, List<DocValuesFieldUpdates> updatesToApply) throws IOException {
    if (field.equals(info.name)) {
      assert dvGeneration < info.getDocValuesGen() : "we have seen this generation update already: " + dvGeneration + " vs. " + info.getDocValuesGen();
      DocValuesFieldUpdates.Iterator[] subs = new DocValuesFieldUpdates.Iterator[updatesToApply.size()];
      for(int i=0; i<subs.length; i++) {
        subs[i] = updatesToApply.get(i).iterator();
      }
      DocValuesFieldUpdates.Iterator iterator = DocValuesFieldUpdates.mergedIterator(subs);
      pendingDeleteCount += applySoftDeletes(new DocIdSetIterator() {
        int docID = -1;
        @Override
        public int docID() {
          return docID;
        }

        @Override
        public int nextDoc() {
          return docID = iterator.nextDoc();
        }

        @Override
        public int advance(int target) {
          throw new UnsupportedOperationException();
        }

        @Override
        public long cost() {
          throw new UnsupportedOperationException();
        }
      }, getMutableBits());
      dvGeneration = info.getDocValuesGen();
    }
  }

