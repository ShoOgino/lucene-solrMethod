  /** Creates the {@link SortedSourceSlice}s for
   *  merging. */
  public static List<SortedSourceSlice> buildSlices(
      int[] docBases, MergeState.DocMap[] docMaps,
      DocValues[] docValues, MergeContext ctx) throws IOException {
    final List<SortedSourceSlice> slices = new ArrayList<SortedSourceSlice>();
    for (int i = 0; i < docValues.length; i++) {
      final SortedSourceSlice nextSlice;
      final Source directSource;
      if (docValues[i] != null
          && (directSource = docValues[i].getDirectSource()) != null) {
        final SortedSourceSlice slice = new SortedSourceSlice(i, directSource
            .asSortedSource(), docBases, ctx.getMergeDocCount(), ctx.docToEntry);
        nextSlice = slice;
      } else {
        nextSlice = new SortedSourceSlice(i, new MissingValueSource(ctx),
            docBases, ctx.getMergeDocCount(), ctx.docToEntry);
      }
      createOrdMapping(docBases, docMaps, nextSlice);
      slices.add(nextSlice);
    }
    return Collections.unmodifiableList(slices);
  }

