  public void addNumericUpdate(NumericUpdate update, int docIDUpto) {
    Map<String,NumericUpdate> termUpdates = numericUpdates.get(update.term);
    if (termUpdates == null) {
      termUpdates = new HashMap<String,NumericUpdate>();
      numericUpdates.put(update.term, termUpdates);
      bytesUsed.addAndGet(BYTES_PER_NUMERIC_UPDATE_TERM_ENTRY);
    }
    final NumericUpdate current = termUpdates.get(update.field);
    if (current != null && docIDUpto < current.docIDUpto) {
      // Only record the new number if it's greater than or equal to the current
      // one. This is important because if multiple threads are replacing the
      // same doc at nearly the same time, it's possible that one thread that
      // got a higher docID is scheduled before the other threads.
      return;
    }

    update.docIDUpto = docIDUpto;
    termUpdates.put(update.field, update);
    numNumericUpdates.incrementAndGet();
    if (current == null) {
      bytesUsed.addAndGet(BYTES_PER_NUMERIC_UPDATE_ENTRY + update.sizeInBytes());
    }
  }

