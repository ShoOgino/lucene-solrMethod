  @Override
  public void addField(int docID, StorableField field, FieldInfo fieldInfo) {
    // nocommit: these checks are duplicated everywhere
    final DocValuesType dvType = field.fieldType().docValueType();
    if (dvType != null) {
      DocValuesType currentDVType = fieldInfo.getDocValuesType();
      if (currentDVType == null) {
        fieldInfo.setDocValuesType(dvType);
      } else if (currentDVType != dvType) {
        throw new IllegalArgumentException("cannot change DocValues type from " + currentDVType + " to " + dvType + " for field \"" + fieldInfo.name + "\"");
      }
      if (dvType == DocValuesType.BINARY) {
        addBinaryField(fieldInfo, docID, field.binaryValue());
      } else if (dvType == DocValuesType.SORTED) {
        addSortedField(fieldInfo, docID, field.binaryValue());
        // nocommit: hack
      } else if (dvType == DocValuesType.NUMERIC && field.numericValue() instanceof Float) {
        addNumericField(fieldInfo, docID, field.numericValue().floatValue());
      } else if (dvType == DocValuesType.NUMERIC && field.numericValue() instanceof Double) {
        addNumericField(fieldInfo, docID, field.numericValue().doubleValue());
      } else if (dvType == DocValuesType.NUMERIC) {
        addNumericField(fieldInfo, docID, field.numericValue().longValue());
      } else {
        assert false: "unrecognized DocValues.Type: " + dvType;
      }
    }
  }

