    @Override
    public void add(int doc, Long value) {
      assert value != null;
      // TODO: if the Sorter interface changes to take long indexes, we can remove that limitation
      if (size == Integer.MAX_VALUE) {
        throw new IllegalStateException("cannot support more than Integer.MAX_VALUE doc/value entries");
      }

      // grow the structures to have room for more elements
      if (docs.size() == size) {
        docs = docs.grow(size + 1);
        values = values.grow(size + 1);
        int numWords = (int) (docs.size() >> 6);
        if (docsWithField.getBits().length <= numWords) {
          numWords = ArrayUtil.oversize(numWords + 1, RamUsageEstimator.NUM_BYTES_LONG);
          docsWithField = new FixedBitSet(docsWithField, numWords << 6);
        }
      }
      
      if (value != NumericUpdate.MISSING) {
        // only mark the document as having a value in that field if the value wasn't set to null (MISSING)
        docsWithField.set(size);
      }
      
      docs.set(size, doc);
      values.set(size, value.longValue());
      ++size;
    }

