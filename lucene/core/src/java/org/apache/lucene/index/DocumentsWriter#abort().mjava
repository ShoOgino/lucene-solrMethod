  /** Called if we hit an exception at a bad time (when
   *  updating the index files) and must discard all
   *  currently buffered docs.  This resets our state,
   *  discarding any docs added since last flush. */
  synchronized void abort() throws IOException {
    boolean success = false;

    synchronized (this) {
      deleteQueue.clear();
    }

    try {
      if (infoStream.isEnabled("DW")) {
        infoStream.message("DW", "abort");
      }

      final Iterator<ThreadState> threadsIterator = perThreadPool.getActivePerThreadsIterator();
      while (threadsIterator.hasNext()) {
        final ThreadState perThread = threadsIterator.next();
        perThread.lock();
        try {
          if (perThread.isActive()) { // we might be closed
            try {
              perThread.perThread.abort();
            } catch (IOException ex) {
              // continue
            } finally {
              perThread.perThread.checkAndResetHasAborted();
              flushControl.doOnAbort(perThread);
            }
          } else {
            assert closed;
          }
        } finally {
          perThread.unlock();
        }
      }
      success = true;
    } finally {
      if (infoStream.isEnabled("DW")) {
        infoStream.message("DW", "done abort; abortedFiles=" + abortedFiles + " success=" + success);
      }
    }
  }

