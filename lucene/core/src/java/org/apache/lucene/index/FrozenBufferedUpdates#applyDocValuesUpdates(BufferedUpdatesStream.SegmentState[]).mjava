  private long applyDocValuesUpdates(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {

    if (numericDVUpdates.length == 0 && binaryDVUpdates.length == 0) {
      return 0;
    }

    long startNS = System.nanoTime();

    long updateCount = 0;

    for (BufferedUpdatesStream.SegmentState segState : segStates) {

      if (delGen < segState.delGen) {
        // segment is newer than this deletes packet
        continue;
      }

      if (segState.rld.refCount() == 1) {
        // This means we are the only remaining reference to this segment, meaning
        // it was merged away while we were running, so we can safely skip running
        // because we will run on the newly merged segment next:
        continue;
      }

      if (numericDVUpdates.length > 0) {
        updateCount += applyDocValuesUpdates(segState, numericDVUpdates, true);
      }

      if (binaryDVUpdates.length > 0) {
        updateCount += applyDocValuesUpdates(segState, binaryDVUpdates, false);
      }
    }

    if (infoStream.isEnabled("BD")) {
      infoStream.message("BD",
                         String.format(Locale.ROOT, "applyDocValuesUpdates %.1f msec for %d segments, %d numeric updates and %d binary updates; %d new updates",
                                       (System.nanoTime()-startNS)/1000000.,
                                       segStates.length,
                                       numericDVUpdateCount,
                                       binaryDVUpdateCount,
                                       updateCount));
    }

    return updateCount;
  }

