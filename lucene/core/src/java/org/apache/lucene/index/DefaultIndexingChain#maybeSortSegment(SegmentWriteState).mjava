  private Sorter.DocMap maybeSortSegment(SegmentWriteState state) throws IOException {
    Sort indexSort = state.segmentInfo.getIndexSort();
    if (indexSort == null) {
      return null;
    }

    List<Sorter.DocComparator> comparators = new ArrayList<>();
    for (int i = 0; i < indexSort.getSort().length; i++) {
      SortField sortField = indexSort.getSort()[i];
      PerField perField = getPerField(sortField.getField());
      if (perField != null && perField.docValuesWriter != null &&
          finishedDocValues.contains(perField.fieldInfo.name) == false) {
          perField.docValuesWriter.finish(state.segmentInfo.maxDoc());
          Sorter.DocComparator cmp = perField.docValuesWriter.getDocComparator(state.segmentInfo.maxDoc(), sortField);
          comparators.add(cmp);
          finishedDocValues.add(perField.fieldInfo.name);
      } else {
        // safe to ignore, sort field with no values or already seen before
      }
    }
    Sorter sorter = new Sorter(indexSort);
    // returns null if the documents are already sorted
    return sorter.sort(state.segmentInfo.maxDoc(), comparators.toArray(new Sorter.DocComparator[comparators.size()]));
  }

