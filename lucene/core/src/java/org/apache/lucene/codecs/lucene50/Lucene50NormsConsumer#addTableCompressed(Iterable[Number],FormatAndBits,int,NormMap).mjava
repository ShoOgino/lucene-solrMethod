  private void addTableCompressed(Iterable<Number> values, FormatAndBits compression, int count, NormMap uniqueValues) throws IOException {
    meta.writeVInt(count);
    meta.writeByte(TABLE_COMPRESSED); // table-compressed
    meta.writeLong(data.getFilePointer());
    data.writeVInt(PackedInts.VERSION_CURRENT);
    
    long[] decode = uniqueValues.getDecodeTable();
    // upgrade to power of two sized array
    int size = 1 << compression.bitsPerValue;
    data.writeVInt(size);
    for (int i = 0; i < decode.length; i++) {
      data.writeLong(decode[i]);
    }
    for (int i = decode.length; i < size; i++) {
      data.writeLong(0);
    }

    data.writeVInt(compression.format.getId());
    data.writeVInt(compression.bitsPerValue);

    final PackedInts.Writer writer = PackedInts.getWriterNoHeader(data, compression.format, count, compression.bitsPerValue, PackedInts.DEFAULT_BUFFER_SIZE);
    for(Number nv : values) {
      writer.add(uniqueValues.getOrd(nv.longValue()));
    }
    writer.finish();
  }

