  /** Compress given int[] into output stream, with For format
   */
  public static int compress(final LongBuffer data, LongBuffer packed) throws IOException {
    int numBits=getNumBits(data.array());

    if (numBits == 0) { // when block is equal, save the value once
      packed.put(0, data.get(0)<<32); // java uses big endian for LongBuffer impl 
      return (getHeader(1,numBits));
    }

    PackedInts.Format format = PackedInts.fastestFormatAndBits(128, numBits, PackedInts.FASTEST).format;
    PackedInts.Encoder encoder = PackedInts.getEncoder(format, PackedInts.VERSION_CURRENT, numBits);
    int perIter = encoder.values();
    int iters = 128/perIter;
    int nblocks = encoder.blocks()*iters;
    assert 128 % perIter == 0;

    packed.rewind();
    data.rewind();

    encoder.encode(data, packed, iters);

    int encodedSize = nblocks*2;
    return getHeader(encodedSize,numBits);
  }

