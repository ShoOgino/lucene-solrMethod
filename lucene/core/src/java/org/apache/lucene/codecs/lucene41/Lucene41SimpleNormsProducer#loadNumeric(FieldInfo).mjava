  private NumericDocValues loadNumeric(FieldInfo field) throws IOException {
    NumericEntry entry = numerics.get(field.number);
    final IndexInput data = this.data.clone();
    data.seek(entry.offset);
    if (entry.tableized) {
      int size = data.readVInt();
      final long decode[] = new long[size];
      for (int i = 0; i < decode.length; i++) {
        decode[i] = data.readLong();
      }
      final long minValue = data.readLong();
      assert minValue == 0;
      final PackedInts.Reader reader = PackedInts.getReader(data);
      return new NumericDocValues() {
        @Override
        public long get(int docID) {
          return decode[(int)reader.get(docID)];
        }
      };
    } else {
      final long minValue = data.readLong();
      final PackedInts.Reader reader = PackedInts.getReader(data);
      return new NumericDocValues() {
        @Override
        public long get(int docID) {
          return minValue + reader.get(docID);
        }
      };
    }
  }

