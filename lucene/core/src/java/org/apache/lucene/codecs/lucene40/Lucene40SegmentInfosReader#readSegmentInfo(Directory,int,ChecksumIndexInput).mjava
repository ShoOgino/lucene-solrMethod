  public SegmentInfo readSegmentInfo(Directory dir, int format, ChecksumIndexInput input) throws IOException {
    final String version = input.readString();
    final String name = input.readString();
    final int docCount = input.readInt();
    final long delGen = input.readLong();
    // this is still written in 4.0 if we open a 3.x and upgrade the SI
    final int docStoreOffset = input.readInt();
    final String docStoreSegment;
    final boolean docStoreIsCompoundFile;
    if (docStoreOffset != -1) { 
      docStoreSegment = input.readString();
      docStoreIsCompoundFile = input.readByte() == SegmentInfo.YES;
    } else {
      docStoreSegment = name;
      docStoreIsCompoundFile = false;
    }
    final int numNormGen = input.readInt();
    final Map<Integer,Long> normGen;
    if (numNormGen == SegmentInfo.NO) {
      normGen = null;
    } else {
      normGen = new HashMap<Integer, Long>();
      for(int j=0;j<numNormGen;j++) {
        normGen.put(input.readInt(), input.readLong());
      }
    }
    final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;

    final int delCount = input.readInt();
    assert delCount <= docCount;
    final boolean hasProx = input.readByte() == 1;
    final Codec codec = Codec.forName(input.readString());
    final Map<String,String> diagnostics = input.readStringStringMap();
    final boolean hasVectors = input.readByte() == 1;
    
    return new SegmentInfo(dir, version, name, docCount, delGen, docStoreOffset,
      docStoreSegment, docStoreIsCompoundFile, normGen, isCompoundFile,
      delCount, hasProx, codec, diagnostics, hasVectors);
  }

