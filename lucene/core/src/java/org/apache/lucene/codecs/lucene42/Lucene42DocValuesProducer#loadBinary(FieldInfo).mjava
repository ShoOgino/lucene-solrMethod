  private BinaryDocValues loadBinary(FieldInfo field) throws IOException {
    BinaryEntry entry = binaries.get(field.number);
    data.seek(entry.offset);
    assert entry.numBytes < Integer.MAX_VALUE; // nocommit
    final byte[] bytes = new byte[(int)entry.numBytes];
    data.readBytes(bytes, 0, bytes.length);
    if (entry.minLength == entry.maxLength) {
      final int fixedLength = entry.minLength;
      return new BinaryDocValues() {
        @Override
        public void get(int docID, BytesRef result) {
          result.bytes = bytes;
          result.offset = docID * fixedLength;
          result.length = fixedLength;
        }
      };
    } else {
      final MonotonicBlockPackedReader addresses = new MonotonicBlockPackedReader(data, entry.packedIntsVersion, entry.blockSize, entry.count, false);
      return new BinaryDocValues() {
        @Override
        public void get(int docID, BytesRef result) {
          long startAddress = docID == 0 ? 0 : addresses.get(docID-1);
          long endAddress = addresses.get(docID); 
          result.bytes = bytes;
          result.offset = (int) startAddress;
          result.length = (int) (endAddress - startAddress);
        }
      };
    }
  }

