  /** 
   * Generate the 4 byte header, which contains (from lsb to msb):
   *
   * 8 bits for uncompressed int num - 1 (use up to 7 bits i.e 128 actually)
   *
   * 8 bits for exception num - 1 (when no exceptions, this is undefined)
   *
   * 8 bits for the index of the first exception + 1 (when no exception, this is 0)
   *
   * 6 bits for num of frame bits
   * 2 bits for the exception code: 00: byte, 01: short, 10: int
   *
   */
  // TODO: exception num should never be equal with uncompressed int num!!!
  // first exception ranges from -1 ~ 255
  // the problem is that we don't need first exception to be -1 ...
  // it is ok to range from 0~255, and judge exception for exception num (0~255)
  // uncompressed int num: (1~256)
  static int getHeader(int numInts, int numBits, int excNum, int excFirstPos, int excBytes) {
    return  (numInts-1)
          | (((excNum-1) & MASK[8]) << 8)
          | ((excFirstPos+1) << 16)
          | ((numBits) << 24)
          | ((excBytes/2) << 30);
  }

