  static void writeImpacts(CompetitiveFreqNormAccumulator acc, IndexOutput out) throws IOException {
    SortedSet<FreqAndNorm> freqAndNorms = acc.getCompetitiveFreqNormPairs();
    FreqAndNorm previous = new FreqAndNorm(0, 0);
    for (FreqAndNorm freqAndNorm : freqAndNorms) {
      assert freqAndNorm.freq > previous.freq;
      assert Long.compareUnsigned(freqAndNorm.norm, previous.norm) > 0;
      int freqDelta = freqAndNorm.freq - previous.freq - 1;
      long normDelta = freqAndNorm.norm - previous.norm - 1;
      if (normDelta == 0) {
        // most of time, norm only increases by 1, so we can fold everything in a single byte
        out.writeVInt(freqDelta << 1);
      } else {
        out.writeVInt((freqDelta << 1) | 1);
        out.writeZLong(normDelta);
      }
      previous = freqAndNorm;
    }
  }

