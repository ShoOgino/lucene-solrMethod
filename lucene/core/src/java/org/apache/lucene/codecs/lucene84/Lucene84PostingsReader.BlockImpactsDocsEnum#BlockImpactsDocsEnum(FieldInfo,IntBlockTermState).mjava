    public BlockImpactsDocsEnum(FieldInfo fieldInfo, IntBlockTermState termState) throws IOException {
      indexHasFreqs = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0;
      final boolean indexHasPositions = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0;
      final boolean indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;
      final boolean indexHasPayloads = fieldInfo.hasPayloads();

      this.docIn = Lucene84PostingsReader.this.docIn.clone();

      docFreq = termState.docFreq;
      docIn.seek(termState.docStartFP);

      doc = -1;
      accum = 0;
      docUpto = 0;
      docBufferUpto = BLOCK_SIZE;

      skipper = new Lucene84ScoreSkipReader(docIn.clone(),
          MAX_SKIP_LEVELS,
          indexHasPositions,
          indexHasOffsets,
          indexHasPayloads);
      skipper.init(termState.docStartFP+termState.skipOffset, termState.docStartFP, termState.posStartFP, termState.payStartFP, docFreq);

      if (indexHasFreqs == false) {
        Arrays.fill(freqBuffer, 1L);
      }
    }

