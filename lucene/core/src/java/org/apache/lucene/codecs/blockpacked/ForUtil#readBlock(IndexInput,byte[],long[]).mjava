  /**
   * Read the next block of data (<code>For</code> format).
   *
   * @param in        the input to use to read data
   * @param encoded   a buffer that can be used to store encoded data
   * @param decoded   where to write decoded data
   * @throws IOException
   */
  static void readBlock(IndexInput in, byte[] encoded, long[] decoded) throws IOException {
    final int numBits = in.readVInt();
    assert numBits <= 32 : numBits;

    if (numBits == ALL_VALUES_EQUAL) {
      final int value = in.readInt();
      Arrays.fill(decoded, value);
      return;
    }

    final int encodedSize = encodedSize(numBits);
    in.readBytes(encoded, 0, encodedSize);

    final PackedInts.Decoder decoder = DECODERS[numBits];
    final int iters = ITERATIONS[numBits];
    assert iters * decoder.valueCount() == BLOCK_SIZE;
    assert 8 * iters * decoder.blockCount() == encodedSize;

    decoder.decode(encoded, 0, decoded, 0, iters);
  }

