  // nocommit bogus forceNorms:
  // dead simple impl: codec can optimize
  protected void mergeNumericField(MergeState mergeState, boolean forceNorms) throws IOException {
    // first compute min and max value of live ones to be merged.
    long minValue = Long.MAX_VALUE;
    long maxValue = Long.MIN_VALUE;
    for (AtomicReader reader : mergeState.readers) {
      final int maxDoc = reader.maxDoc();
      final Bits liveDocs = reader.getLiveDocs();
      //System.out.println("merge field=" + mergeState.fieldInfo.name);
      NumericDocValues docValues = forceNorms ? reader.simpleNormValues(mergeState.fieldInfo.name) : reader.getNumericDocValues(mergeState.fieldInfo.name);
      if (docValues == null) {
        // nocommit this isn't correct i think?  ie this one
        // segment may have no docs containing this
        // field... and that doesn't mean norms are omitted ...
        //assert !forceNorms;
        docValues = new NumericDocValues.EMPTY(maxDoc);
      }
      for (int i = 0; i < maxDoc; i++) {
        if (liveDocs == null || liveDocs.get(i)) {
          long val = docValues.get(i);
          minValue = Math.min(val, minValue);
          maxValue = Math.max(val, maxValue);
        }
        mergeState.checkAbort.work(300);
      }
    }
    // now we can merge
    NumericDocValuesConsumer field = addNumericField(mergeState.fieldInfo, minValue, maxValue);
    field.merge(mergeState, forceNorms);
  }

