    public boolean nextNonLeaf() {
      //if (DEBUG) System.out.println("  frame.next ord=" + ord + " nextEnt=" + nextEnt + " entCount=" + entCount);
      assert nextEnt != -1 && nextEnt < entCount: "nextEnt=" + nextEnt + " entCount=" + entCount + " fp=" + fp;
      nextEnt++;
      final int code = suffixesReader.readVInt();
      suffix = code >>> 1;
      startBytePos = suffixesReader.getPosition();
      term.length = prefix + suffix;
      if (term.bytes.length < term.length) {
        term.grow(term.length);
      }
      suffixesReader.readBytes(term.bytes, prefix, suffix);
      if ((code & 1) == 0) {
        // A normal term
        termExists = true;
        subCode = 0;
        state.termBlockOrd++;
        return false;
      } else {
        // A sub-block; make sub-FP absolute:
        termExists = false;
        subCode = suffixesReader.readVLong();
        lastSubFP = fp - subCode;
        //if (DEBUG) {
        //System.out.println("    lastSubFP=" + lastSubFP);
        //}
        return true;
      }
    }

