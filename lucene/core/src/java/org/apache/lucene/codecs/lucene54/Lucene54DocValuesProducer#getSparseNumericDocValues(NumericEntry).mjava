  private SparseNumericDocValues getSparseNumericDocValues(NumericEntry entry) throws IOException {
    final RandomAccessInput docIdsData = this.data.randomAccessSlice(entry.missingOffset, entry.offset - entry.missingOffset);
    final LongValues docIDs = DirectMonotonicReader.getInstance(entry.monotonicMeta, docIdsData);
    final LongValues values = getNumeric(entry.nonMissingValues); // cannot be sparse
    return new SparseNumericDocValues(Math.toIntExact(entry.numDocsWithValue), docIDs, values);
  }

