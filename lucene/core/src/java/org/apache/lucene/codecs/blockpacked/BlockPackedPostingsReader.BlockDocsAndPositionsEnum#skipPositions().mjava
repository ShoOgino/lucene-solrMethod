    // nocommit in theory we could avoid loading frq block
    // when not needed, ie, use skip data to load how far to
    // seek the pos pointe ... instead of having to load frq
    // blocks only to sum up how many positions to skip
    private void skipPositions() throws IOException {
      // Skip positions now:
      int toSkip = posPendingCount - freq;
      if (DEBUG) {
        System.out.println("      FPR.skipPositions: toSkip=" + toSkip);
      }

      final int leftInBlock = BLOCK_SIZE - posBufferUpto;
      if (toSkip < leftInBlock) {
        posBufferUpto += toSkip;
        if (DEBUG) {
          System.out.println("        skip w/in block to posBufferUpto=" + posBufferUpto);
        }
      } else {
        toSkip -= leftInBlock;
        while(toSkip >= BLOCK_SIZE) {
          if (DEBUG) {
            System.out.println("        skip whole block @ fp=" + posIn.getFilePointer());
          }
          assert posIn.getFilePointer() != lastPosBlockFP;
          ForUtil.skipBlock(posIn);
          toSkip -= BLOCK_SIZE;
        }
        refillPositions();
        posBufferUpto = toSkip;
        if (DEBUG) {
          System.out.println("        skip w/in block to posBufferUpto=" + posBufferUpto);
        }
      }

      position = 0;
    }

