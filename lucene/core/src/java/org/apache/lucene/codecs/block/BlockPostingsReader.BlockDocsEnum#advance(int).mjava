    @Override
    public int advance(int target) throws IOException {
      // nocommit make frq block load lazy/skippable

      // nocommit use skipper!!!  it has next last doc id!!

      if (docFreq > blockSize && target - accum > blockSize) {

        if (DEBUG) {
          System.out.println("load skipper");
        }

        if (skipper == null) {
          // Lazy init: first time this enum has ever been used for skipping
          skipper = new BlockSkipReader((IndexInput) docIn.clone(),
                                        BlockPostingsWriter.maxSkipLevels,
                                        blockSize,
                                        indexHasPos,
                                        indexHasOffsets,
                                        indexHasPayloads);
        }

        if (!skipped) {
          assert skipOffset != -1;
          // This is the first time this enum has skipped
          // since reset() was called; load the skip data:
          skipper.init(docTermStartFP+skipOffset, docTermStartFP, 0, 0, docFreq);
          skipped = true;
        }

        final int newDocUpto = skipper.skipTo(target); 

        if (newDocUpto > docUpto) {
          // Skipper moved
          if (DEBUG) {
            System.out.println("skipper moved to docUpto=" + newDocUpto + " vs current=" + docUpto + "; docID=" + skipper.getDoc() + " fp=" + skipper.getDocPointer());
          }
          assert newDocUpto % blockSize == (blockSize-1): "got " + newDocUpto;
          docUpto = newDocUpto+1;

          // Force to read next block
          docBufferUpto = blockSize;
          accum = skipper.getDoc();               // actually, this is just lastSkipEntry
          docIn.seek(skipper.getDocPointer());    // now point to the block we want to search
        }
      }

      // Now scan... this is an inlined/pared down version
      // of nextDoc():
      while (true) {
        if (DEBUG) {
          System.out.println("  scan doc=" + accum + " docBufferUpto=" + docBufferUpto);
        }
        if (docUpto == docFreq) {
          return doc = NO_MORE_DOCS;
        }

        // nocommit: in theory we should not hit this?  ie
        // skipper should already have moved us to the block
        // containing the doc?  yet assert false trips ... i
        // think because if you advance w/o having done a
        // nextDoc yet()... can we assert/remove this?
        if (docBufferUpto == blockSize) {
          refillDocs();
        }
        accum += docDeltaBuffer[docBufferUpto];
        docUpto++;

        if (accum >= target) {
          break;
        }
        docBufferUpto++;
      }

      if (liveDocs == null || liveDocs.get(accum)) {
        if (DEBUG) {
          System.out.println("  return doc=" + accum);
        }
        freq = freqBuffer[docBufferUpto];
        docBufferUpto++;
        return doc = accum;
      } else {
        if (DEBUG) {
          System.out.println("  now do nextDoc()");
        }
        docBufferUpto++;
        return nextDoc();
      }
    }

