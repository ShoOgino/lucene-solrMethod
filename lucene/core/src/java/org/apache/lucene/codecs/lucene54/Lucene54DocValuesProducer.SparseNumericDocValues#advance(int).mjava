    @Override
    public int advance(int target) throws IOException {
      long loIndex = index;
      long step = 1;
      long hiIndex;
      int hiDoc;

      // gallop forward by exponentially growing the interval
      // in order to find an interval so that the target doc
      // is in ]lo, hi]. Compared to a regular binary search,
      // this optimizes the case that the caller performs many
      // advance calls by small deltas
      do {
        hiIndex = index + step;
        if (hiIndex >= docIDsLength) {
          hiIndex = docIDsLength;
          hiDoc = NO_MORE_DOCS;
          break;
        }
        hiDoc = (int) docIds.get(hiIndex);
        if (hiDoc >= target) {
          break;
        }
        step <<= 1;
      } while (true);

      // now binary search
      while (loIndex + 1 < hiIndex) {
        final long midIndex = (loIndex + 1 + hiIndex) >>> 1;
        final int midDoc = (int) docIds.get(midIndex);
        if (midDoc >= target) {
          hiIndex = midIndex;
          hiDoc = midDoc;
        } else {
          loIndex = midIndex;
        }
      }

      index = (int) hiIndex;
      return doc = hiDoc;
    }

