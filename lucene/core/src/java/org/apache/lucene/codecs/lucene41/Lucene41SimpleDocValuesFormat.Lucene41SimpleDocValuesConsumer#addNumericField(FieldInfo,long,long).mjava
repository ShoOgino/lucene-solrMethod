    @Override
    public NumericDocValuesConsumer addNumericField(FieldInfo field, final long minValue, long maxValue) throws IOException {
      meta.writeVInt(field.number);
      meta.writeLong(minValue);
      meta.writeLong(maxValue);
      long delta = maxValue - minValue;
      final int bitsPerValue;
      if (delta < 0) {
        bitsPerValue = 64;
      } else {
        bitsPerValue = PackedInts.bitsRequired(delta);
      }
      FormatAndBits formatAndBits = PackedInts.fastestFormatAndBits(maxDoc, bitsPerValue, PackedInts.COMPACT);
      
      // nocommit: refactor this crap in PackedInts.java
      // e.g. Header.load()/save() or something rather than how it works now.
      CodecUtil.writeHeader(meta, PackedInts.CODEC_NAME, PackedInts.VERSION_CURRENT);
      meta.writeVInt(bitsPerValue);
      meta.writeVInt(maxDoc);
      meta.writeVInt(formatAndBits.format.getId());
      
      meta.writeLong(data.getFilePointer());
      
      final PackedInts.Writer writer = PackedInts.getWriterNoHeader(data, formatAndBits.format, maxDoc, formatAndBits.bitsPerValue, 0);
      return new NumericDocValuesConsumer() {
        @Override
        public void add(long value) throws IOException {
          writer.add(value - minValue);
        }

        @Override
        public void finish() throws IOException {
          writer.finish();
        }
      };
    }

