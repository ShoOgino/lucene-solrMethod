    @Override
    public FixedIntBlockIndexInput openInput(Directory dir, String fileName, IOContext context) throws IOException {
      return new FixedIntBlockIndexInput(dir.openInput(fileName, context)) {

        @Override
        protected BlockReader getBlockReader(final IndexInput in, final int[] buffer) throws IOException {
          return new BlockReader() {
            private final byte bytes[] = new byte[blockSize*5]; // header * max(Vint)
            
            @Override
            public void readBlock() throws IOException {
              final int numBytes = in.readVInt(); // read header
              if (numBytes == 0) { // 1's
                Arrays.fill(buffer, 1);
                return;
              }
              in.readBytes(bytes, 0, numBytes); // readBytes
              
              int upto = 0;
              
              // decode bytes
              for(int i=0;i<buffer.length;i++) {
                byte b = bytes[upto++];
                int j = b & 0x7F;
                for (int shift = 7; (b & 0x80) != 0; shift += 7) {
                  b = bytes[upto++];
                  j |= (b & 0x7F) << shift;
                }
                buffer[i] = j;
              }
            }
          };
        }
      };
    }

