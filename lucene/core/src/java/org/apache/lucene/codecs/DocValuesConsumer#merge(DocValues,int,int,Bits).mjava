  /**
   * Merges the given {@link DocValues} into this {@link DocValuesConsumer}.
   * 
   * @throws IOException
   *           if an {@link IOException} occurs
   */
  protected void merge(DocValues reader, int docBase, int docCount, Bits liveDocs) throws IOException {
    // This enables bulk copies in subclasses per MergeState, subclasses can
    // simply override this and decide if they want to merge
    // segments using this generic implementation or if a bulk merge is possible
    // / feasible.
    final Source source = reader.getDirectSource();
    assert source != null;
    int docID = docBase;
    final Type type = getType();
    final Field scratchField;
    switch(type) {
    case VAR_INTS:
      scratchField = new PackedLongDocValuesField("", (long) 0);
      break;
    case FIXED_INTS_8:
      scratchField = new ByteDocValuesField("", (byte) 0);
      break;
    case FIXED_INTS_16:
      scratchField = new ShortDocValuesField("", (short) 0);
      break;
    case FIXED_INTS_32:
      scratchField = new IntDocValuesField("", 0);
      break;
    case FIXED_INTS_64:
      scratchField = new LongDocValuesField("", (long) 0);
      break;
    case FLOAT_32:
      scratchField = new FloatDocValuesField("", 0f);
      break;
    case FLOAT_64:
      scratchField = new DoubleDocValuesField("", 0d);
      break;
    case BYTES_FIXED_STRAIGHT:
      scratchField = new StraightBytesDocValuesField("", new BytesRef(), true);
      break;
    case BYTES_VAR_STRAIGHT:
      scratchField = new StraightBytesDocValuesField("", new BytesRef(), false);
      break;
    case BYTES_FIXED_DEREF:
      scratchField = new DerefBytesDocValuesField("", new BytesRef(), true);
      break;
    case BYTES_VAR_DEREF:
      scratchField = new DerefBytesDocValuesField("", new BytesRef(), false);
      break;
    case BYTES_FIXED_SORTED:
      scratchField = new SortedBytesDocValuesField("", new BytesRef(), true);
      break;
    case BYTES_VAR_SORTED:
      scratchField = new SortedBytesDocValuesField("", new BytesRef(), false);
      break;
    default:
      throw new IllegalStateException("unknown Type: " + type);
    }
    for (int i = 0; i < docCount; i++) {
      if (liveDocs == null || liveDocs.get(i)) {
        mergeDoc(scratchField, source, docID++, i);
      }
    }
  }

