  @Override
  public TermVectorsReader vectorsReader(Directory directory, SegmentInfo segmentInfo, FieldInfos fieldInfos, IOContext context) throws IOException {
    final String fileName = IndexFileNames.segmentFileName(Lucene3xSegmentInfoFormat.getDocStoreSegment(segmentInfo), "", Lucene3xTermVectorsReader.VECTORS_FIELDS_EXTENSION);

    // Unfortunately, for 3.x indices, each segment's
    // FieldInfos can lie about hasVectors (claim it's true
    // when really it's false).... so we have to carefully
    // check if the files really exist before trying to open
    // them (4.x has fixed this):
    final boolean exists;
    if (Lucene3xSegmentInfoFormat.getDocStoreOffset(segmentInfo) != -1 && Lucene3xSegmentInfoFormat.getDocStoreIsCompoundFile(segmentInfo)) {
      String cfxFileName = IndexFileNames.segmentFileName(Lucene3xSegmentInfoFormat.getDocStoreSegment(segmentInfo), "", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION);
      if (segmentInfo.dir.fileExists(cfxFileName)) {
        Directory cfsDir = new CompoundFileDirectory(segmentInfo.dir, cfxFileName, context, false);
        try {
          exists = cfsDir.fileExists(fileName);
        } finally {
          cfsDir.close();
        }
      } else {
        exists = false;
      }
    } else {
      exists = directory.fileExists(fileName);
    }

    if (!exists) {
      // 3x's FieldInfos sometimes lies and claims a segment
      // has vectors when it doesn't:
      return null;
    } else {
      return new Lucene3xTermVectorsReader(directory, segmentInfo, fieldInfos, context);
    }
  }

