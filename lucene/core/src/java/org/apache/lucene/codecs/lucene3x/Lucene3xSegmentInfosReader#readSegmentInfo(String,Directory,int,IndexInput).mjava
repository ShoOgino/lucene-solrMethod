  private SegmentInfo readSegmentInfo(String segmentName, Directory dir, int format, IndexInput input) throws IOException {
    // check that it is a format we can understand
    if (format > Lucene3xSegmentInfosFormat.FORMAT_MINIMUM) {
      throw new IndexFormatTooOldException(input, format,
                                           Lucene3xSegmentInfosFormat.FORMAT_MINIMUM, Lucene3xSegmentInfosFormat.FORMAT_CURRENT);
    }
    if (format < Lucene3xSegmentInfosFormat.FORMAT_CURRENT) {
      throw new IndexFormatTooNewException(input, format,
                                           Lucene3xSegmentInfosFormat.FORMAT_MINIMUM, Lucene3xSegmentInfosFormat.FORMAT_CURRENT);
    }
    final String version;
    if (format <= Lucene3xSegmentInfosFormat.FORMAT_3_1) {
      version = input.readString();
    } else {
      version = null;
    }

    // NOTE: we ignore this and use the incoming arg
    // instead, if it's non-null:
    final String name = input.readString();
    if (segmentName == null) {
      segmentName = name;
    }

    final int docCount = input.readInt();
    final long delGen = input.readLong();
    final int docStoreOffset = input.readInt();
    final String docStoreSegment;
    final boolean docStoreIsCompoundFile;
    if (docStoreOffset != -1) {
      docStoreSegment = input.readString();
      docStoreIsCompoundFile = input.readByte() == SegmentInfo.YES;
    } else {
      docStoreSegment = name;
      docStoreIsCompoundFile = false;
    }

    // pre-4.0 indexes write a byte if there is a single norms file
    byte b = input.readByte();

    //System.out.println("version=" + version + " name=" + name + " docCount=" + docCount + " delGen=" + delGen + " dso=" + docStoreOffset + " dss=" + docStoreSegment + " dssCFs=" + docStoreIsCompoundFile + " b=" + b + " format=" + format);

    assert 1 == b : "expected 1 but was: "+ b + " format: " + format;
    final int numNormGen = input.readInt();
    final Map<Integer,Long> normGen;
    if (numNormGen == SegmentInfo.NO) {
      normGen = null;
    } else {
      normGen = new HashMap<Integer, Long>();
      for(int j=0;j<numNormGen;j++) {
        normGen.put(j, input.readLong());
      }
    }
    final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;

    final int delCount = input.readInt();
    assert delCount <= docCount;

    final boolean hasProx = input.readByte() == 1;

    final Map<String,String> diagnostics = input.readStringStringMap();

    if (format <= Lucene3xSegmentInfosFormat.FORMAT_HAS_VECTORS) {
      input.readByte();
    }

    // nocommit we can use hasProx/hasVectors from the 3.x
    // si... if we can pass this to the other components...?

    SegmentInfo info = new SegmentInfo(dir, version, segmentName, docCount, docStoreOffset,
                                       docStoreSegment, docStoreIsCompoundFile, normGen, isCompoundFile,
                                       delCount, null, diagnostics);
    info.setDelGen(delGen);
    return info;
  }

