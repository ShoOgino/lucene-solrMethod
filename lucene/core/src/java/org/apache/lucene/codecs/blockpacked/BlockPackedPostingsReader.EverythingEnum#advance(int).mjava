    @Override
    public int advance(int target) throws IOException {
      // nocommit make frq block load lazy/skippable
      if (DEBUG) {
        System.out.println("  FPR.advance target=" + target);
      }

      if (docFreq > BLOCK_SIZE && target > nextSkipDoc) {

        if (DEBUG) {
          System.out.println("    try skipper");
        }

        if (skipper == null) {
          // Lazy init: first time this enum has ever been used for skipping
          if (DEBUG) {
            System.out.println("    create skipper");
          }
          skipper = new BlockPackedSkipReader((IndexInput) docIn.clone(),
                                        BlockPackedPostingsWriter.maxSkipLevels,
                                        BLOCK_SIZE,
                                        true,
                                        indexHasOffsets,
                                        indexHasPayloads);
        }

        if (!skipped) {
          assert skipOffset != -1;
          // This is the first time this enum has skipped
          // since reset() was called; load the skip data:
          if (DEBUG) {
            System.out.println("    init skipper");
          }
          skipper.init(docTermStartFP+skipOffset, docTermStartFP, posTermStartFP, payTermStartFP, docFreq);
          skipped = true;
        }

        final int newDocUpto = skipper.skipTo(target); 

        if (newDocUpto > docUpto) {
          // Skipper moved
          if (DEBUG) {
            System.out.println("    skipper moved to docUpto=" + newDocUpto + " vs current=" + docUpto + "; docID=" + skipper.getDoc() + " fp=" + skipper.getDocPointer() + " pos.fp=" + skipper.getPosPointer() + " pos.bufferUpto=" + skipper.getPosBufferUpto() + " pay.fp=" + skipper.getPayPointer() + " lastStartOffset=" + lastStartOffset);
          }
          assert newDocUpto % BLOCK_SIZE == (BLOCK_SIZE - 1): "got " + newDocUpto;
          docUpto = newDocUpto+1;

          // Force to read next block
          docBufferUpto = BLOCK_SIZE;
          accum = skipper.getDoc();
          docIn.seek(skipper.getDocPointer());
          posPendingFP = skipper.getPosPointer();
          payPendingFP = skipper.getPayPointer();
          posPendingCount = skipper.getPosBufferUpto();
          lastStartOffset = skipper.getStartOffset();
          payloadByteUpto = skipper.getPayloadByteUpto();
        }
        nextSkipDoc = skipper.getNextSkipDoc();
      }

      // nocommit inline nextDoc here

      // Now scan:
      while (nextDoc() != NO_MORE_DOCS) {
        if (doc >= target) {
          if (DEBUG) {
            System.out.println("  advance return doc=" + doc);
          }
          return doc;
        }
      }

      if (DEBUG) {
        System.out.println("  advance return doc=END");
      }

      return NO_MORE_DOCS;
    }

