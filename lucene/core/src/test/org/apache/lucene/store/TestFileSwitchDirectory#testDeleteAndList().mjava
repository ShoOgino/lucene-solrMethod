  public void testDeleteAndList() throws IOException {
    // relies on windows semantics
    Path path = createTempDir();
    FileSystem fs = new WindowsFS(path.getFileSystem()).getFileSystem(URI.create("file:///"));
    Path indexPath = new FilterPath(path, fs);
    try (final FileSwitchDirectory dir = new FileSwitchDirectory(Collections.singleton("tim"),
        new SimpleFSDirectory(indexPath), new SimpleFSDirectory(indexPath), true)) {
      dir.createOutput("foo.tim", IOContext.DEFAULT).close();
      Function<String[], Long> stripExtra = array -> Arrays.asList(array).stream()
          .filter(f -> f.startsWith("extra") == false).count();
      try (IndexInput indexInput = dir.openInput("foo.tim", IOContext.DEFAULT)) {
        dir.deleteFile("foo.tim");
        assertEquals(1, dir.getPrimaryDir().getPendingDeletions().size());
        assertEquals(1, dir.getPendingDeletions().size());
        assertEquals(0, stripExtra.apply(dir.listAll()).intValue());
        assertEquals(0, stripExtra.apply(dir.getPrimaryDir().listAll()).intValue());
        assertEquals(1, stripExtra.apply(dir.getSecondaryDir().listAll()).intValue());
      }
      assertEquals(0, dir.getPrimaryDir().getPendingDeletions().size());
      assertEquals(0, dir.getPendingDeletions().size());
      assertEquals(0, stripExtra.apply(dir.listAll()).intValue());
      assertEquals(0, stripExtra.apply(dir.getPrimaryDir().listAll()).intValue());
      assertEquals(0, stripExtra.apply(dir.getSecondaryDir().listAll()).intValue());
    }
  }

