  @Test
  public void testRamBytesUsed() {
    ByteBuffersDataOutput out = new ByteBuffersDataOutput();
    // Empty output requires no RAM
    assertEquals(0, out.ramBytesUsed());

    // Non-empty buffer requires RAM
    out.writeInt(4);
    assertEquals(out.ramBytesUsed(), computeRamBytesUsed(out));

    // Make sure this keeps working with multiple backing buffers
    while (out.toBufferList().size() < 2) {
      out.writeLong(42);
    }
    assertEquals(out.ramBytesUsed(), computeRamBytesUsed(out));

    // Make sure this keeps working when increasing the block size
    int currentBlockCapacity = out.toBufferList().get(0).capacity();
    do {
      out.writeLong(42);
    } while (out.toBufferList().get(0).capacity() == currentBlockCapacity);
    assertEquals(out.ramBytesUsed(), computeRamBytesUsed(out));

    // Back to zero after a clear
    out.reset();
    assertEquals(0, out.ramBytesUsed());

    // And back to non-empty
    out.writeInt(4);
    assertEquals(out.ramBytesUsed(), computeRamBytesUsed(out));
  }

