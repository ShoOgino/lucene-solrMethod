  public void testRamBytesUsed() {
    BufferedUpdates bu = new BufferedUpdates("seg1");
    assertEquals(bu.ramBytesUsed(), 0L);
    assertFalse(bu.any());
    int queries = atLeast(1);
    for (int i = 0; i < queries; i++) {
      final int docIDUpto = random().nextBoolean() ? Integer.MAX_VALUE : random().nextInt();
      final Term term = new Term("id", Integer.toString(random().nextInt(100)));
      bu.addQuery(new TermQuery(term), docIDUpto);
    }

    int terms = atLeast(1);
    for (int i = 0; i < terms; i++) {
      final int docIDUpto = random().nextBoolean() ? Integer.MAX_VALUE : random().nextInt();
      final Term term = new Term("id", Integer.toString(random().nextInt(100)));
      bu.addTerm(term, docIDUpto);
    }
    assertTrue("we have added tons of docIds, terms and queries", bu.any());

    long totalUsed = bu.ramBytesUsed();
    assertTrue(totalUsed > 0);

    bu.clearDeleteTerms();
    assertTrue("only terms and docIds are cleaned, the queries are still in memory", bu.any());
    assertTrue("terms are cleaned, ram in used should decrease", totalUsed > bu.ramBytesUsed());

    bu.clear();
    assertFalse(bu.any());
    assertEquals(bu.ramBytesUsed(), 0L);
  }

