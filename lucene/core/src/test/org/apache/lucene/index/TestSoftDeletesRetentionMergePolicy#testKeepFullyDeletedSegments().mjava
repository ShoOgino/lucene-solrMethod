  public void testKeepFullyDeletedSegments() throws IOException {
    Directory dir = newDirectory();
    IndexWriterConfig indexWriterConfig = newIndexWriterConfig();
    IndexWriter writer = new IndexWriter(dir, indexWriterConfig);

    Document doc = new Document();
    doc.add(new StringField("id", "1", Field.Store.YES));
    doc.add(new NumericDocValuesField("soft_delete", 1));
    writer.addDocument(doc);
    DirectoryReader reader = writer.getReader();
    assertEquals(1, reader.leaves().size());
    SegmentReader segmentReader = (SegmentReader) reader.leaves().get(0).reader();
    MergePolicy policy = new SoftDeletesRetentionMergePolicy("soft_delete",
        () -> new DocValuesFieldExistsQuery("keep_around"), NoMergePolicy.INSTANCE);
    assertFalse(policy.keepFullyDeletedSegment(segmentReader));
    reader.close();

    doc = new Document();
    doc.add(new StringField("id", "1", Field.Store.YES));
    doc.add(new NumericDocValuesField("keep_around", 1));
    doc.add(new NumericDocValuesField("soft_delete", 1));
    writer.addDocument(doc);

    reader = writer.getReader();
    assertEquals(2, reader.leaves().size());
    segmentReader = (SegmentReader) reader.leaves().get(0).reader();
    assertFalse(policy.keepFullyDeletedSegment(segmentReader));

    segmentReader = (SegmentReader) reader.leaves().get(1).reader();
    assertTrue(policy.keepFullyDeletedSegment(segmentReader));

    IOUtils.close(reader, writer, dir);
  }

