  /**
   * Creates two empty indexes and wraps a ParallelReader around. Adding this
   * reader to a new index should not throw any exception.
   * 
   * @throws IOException
   */
  public void testEmptyIndex() throws IOException {
    Directory rd1 = newDirectory();
    IndexWriter iw = new IndexWriter(rd1, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));
    iw.close();
    // create a copy:
    Directory rd2 = newDirectory(rd1);

    Directory rdOut = newDirectory();

    IndexWriter iwOut = new IndexWriter(rdOut, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));
    
    ParallelAtomicReader apr = new ParallelAtomicReader(
        SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd1)),
        SlowCompositeReaderWrapper.wrap(DirectoryReader.open(rd2)));
    
    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)
    iwOut.addIndexes(apr);
    iwOut.forceMerge(1);
    
    // 2nd try with a readerless parallel reader
    iwOut.addIndexes(new ParallelAtomicReader());
    iwOut.forceMerge(1);

    ParallelCompositeReader cpr = new ParallelCompositeReader(
        DirectoryReader.open(rd1),
        DirectoryReader.open(rd2));
    
    // When unpatched, Lucene crashes here with a NoSuchElementException (caused by ParallelTermEnum)
    iwOut.addIndexes(cpr);
    iwOut.forceMerge(1);
    
    // 2nd try with a readerless parallel reader
    iwOut.addIndexes(new ParallelCompositeReader());
    iwOut.forceMerge(1);
    
    iwOut.close();
    rdOut.close();
    rd1.close();
    rd2.close();
  }

