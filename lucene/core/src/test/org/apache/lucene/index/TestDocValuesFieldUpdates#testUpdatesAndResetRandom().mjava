  public void testUpdatesAndResetRandom() {
    NumericDocValuesFieldUpdates updates = new NumericDocValuesFieldUpdates(0, "test", 10);
    int numUpdates = 10 + random().nextInt(100);
    Integer[] values = new Integer[5];
    for (int i = 0; i < 5; i++) {
      values[i] = random().nextBoolean() ? null : random().nextInt(100);
      if (values[i] == null) {
        updates.reset(i);
      } else {
        updates.add(i, values[i]);
      }
    }
    for (int i = 0; i < numUpdates; i++) {
      int docId = random().nextInt(5);
      values[docId] = random().nextBoolean() ? null : random().nextInt(100);
      if (values[docId] == null) {
        updates.reset(docId);
      } else {
        updates.add(docId, values[docId]);
      }
    }

    updates.finish();
    NumericDocValuesFieldUpdates.Iterator iterator = updates.iterator();
    int idx = 0;
    while (iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {
      assertEquals(idx, iterator.docID());
      if (values[idx] == null) {
        assertFalse(iterator.hasValue());
      } else {
        assertTrue(iterator.hasValue());
        assertEquals(values[idx].longValue(), iterator.longValue());
      }
      idx++;
    }


  }

