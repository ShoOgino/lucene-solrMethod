  /**
   * Test adding two fields with the same name, but 
   * with different term vector setting (LUCENE-766).
   */
  public void testMixedTermVectorSettingsSameField() throws Exception {
    Document doc = new Document();
    // f1 first without tv then with tv
    doc.add(newStringField("f1", "v1", Field.Store.YES));
    FieldType customType2 = new FieldType(StringField.TYPE_STORED);
    customType2.setStoreTermVectors(true);
    customType2.setStoreTermVectorOffsets(true);
    customType2.setStoreTermVectorPositions(true);
    doc.add(newField("f1", "v2", customType2));
    // f2 first with tv then without tv
    doc.add(newField("f2", "v1", customType2));
    doc.add(newStringField("f2", "v2", Field.Store.YES));

    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(
        TEST_VERSION_CURRENT, new MockAnalyzer(random())));
    writer.addDocument(doc);
    writer.shutdown();

    TestUtil.checkIndex(dir);

    IndexReader reader = DirectoryReader.open(dir);
    // f1
    Terms tfv1 = reader.getTermVectors(0).terms("f1");
    assertNotNull(tfv1);
    assertEquals("the 'with_tv' setting should rule!",2,tfv1.size());
    // f2
    Terms tfv2 = reader.getTermVectors(0).terms("f2");
    assertNotNull(tfv2);
    assertEquals("the 'with_tv' setting should rule!",2,tfv2.size());
    reader.close();
  }

