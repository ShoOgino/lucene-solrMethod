  public void testDocCount() throws IOException {
    Directory dir = newDirectory();

    IndexWriter writer = null;
    IndexReader reader = null;
    int i;

    writer  = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));

    // add 100 documents
    for (i = 0; i < 100; i++) {
      addDocWithIndex(writer,i);
    }
    assertEquals(100, writer.maxDoc());
    writer.close();

    // delete 40 documents
    writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))
                             .setMergePolicy(NoMergePolicy.INSTANCE));
    for (i = 0; i < 40; i++) {
      writer.deleteDocuments(new Term("id", ""+i));
    }
    writer.close();

    reader = DirectoryReader.open(dir);
    assertEquals(60, reader.numDocs());
    reader.close();

    // merge the index down and check that the new doc count is correct
    writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));
    assertEquals(60, writer.numDocs());
    writer.forceMerge(1);
    assertEquals(60, writer.maxDoc());
    assertEquals(60, writer.numDocs());
    writer.close();

    // check that the index reader gives the same numbers.
    reader = DirectoryReader.open(dir);
    assertEquals(60, reader.maxDoc());
    assertEquals(60, reader.numDocs());
    reader.close();

    // make sure opening a new index for create over
    // this existing one works correctly:
    writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))
                             .setOpenMode(OpenMode.CREATE));
    assertEquals(0, writer.maxDoc());
    assertEquals(0, writer.numDocs());
    writer.close();
    dir.close();
  }

