  /**
   * Test correctness of ignored forced exception.
   * The trailing forced exceptions shouldn't be reverted
   * since they're not necessary. 
   */
  public void testForcedException() throws Exception {
    initRandom();
    int sz=ForPostingsFormat.DEFAULT_BLOCK_SIZE;
    Integer[] buff= new Integer[sz];
    int[] data = new int[sz];
    int[] copy = new int[sz];
    byte[] res = new byte[4+sz*8];
    IntBuffer resBuffer = ByteBuffer.wrap(res).asIntBuffer();
    for (int i=0; i<sz-1; ++i)
      buff[i]=gen.nextInt() & 1;
    buff[sz-1]=gen.nextInt() & 0xffffffff;   // create only one exception

    Collections.shuffle(Arrays.asList(buff),gen);
    for (int i=0; i<sz; ++i)
      data[i] = buff[i];

    int ensz = PForUtil.compress(data,sz,resBuffer);

    assert (ensz <= sz*8+4);  // must not exceed the loose upperbound

    resBuffer.rewind();
    PForUtil.decompress(resBuffer,copy);

    //println(getHex(data,sz)+"\n");
    //println(getHex(res,ensz)+"\n");
    //println(getHex(copy,sz)+"\n");
    
    assert cmp(data,sz,copy,sz)==true;
  }

