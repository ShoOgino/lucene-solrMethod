  public void testAlwaysFSTOffHeap() throws IOException {
    boolean alsoLoadIdOffHeap = random().nextBoolean();
    BlockTreeTermsReader.FSTLoadMode loadMode;
    if (alsoLoadIdOffHeap) {
      loadMode = BlockTreeTermsReader.FSTLoadMode.OFF_HEAP;
    } else {
      loadMode = BlockTreeTermsReader.FSTLoadMode.OPTIMIZE_UPDATES_OFF_HEAP;
    }
    try (Directory d = newDirectory()) { // any directory should work now
      try (IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random()))
          .setReaderAttributes(Collections.singletonMap(BlockTreeTermsReader.FST_MODE_KEY, loadMode.name())))) {
        DirectoryReader readerFromWriter = DirectoryReader.open(w);
        for (int i = 0; i < 50; i++) {
          Document doc = new Document();
          doc.add(newStringField("id", "" + i, Field.Store.NO));
          doc.add(newStringField("field", Character.toString((char) (97 + i)), Field.Store.NO));
          doc.add(newStringField("field", Character.toString((char) (98 + i)), Field.Store.NO));
          if (rarely()) {
            w.addDocument(doc);
          } else {
            w.updateDocument(new Term("id", "" + i), doc);
          }
          if (random().nextBoolean()) {
            w.commit();
          }
          if (random().nextBoolean()) {
            DirectoryReader newReader = DirectoryReader.openIfChanged(readerFromWriter);
            if (newReader != null) {
              readerFromWriter.close();
              readerFromWriter = newReader;
            }
            for (LeafReaderContext leaf : readerFromWriter.leaves()) {
              FieldReader field = (FieldReader) leaf.reader().terms("field");
              FieldReader id = (FieldReader) leaf.reader().terms("id");
              if (alsoLoadIdOffHeap) {
                assertTrue(id.isFstOffHeap());
              } else {
                assertFalse(id.isFstOffHeap());
              }
              assertTrue(field.isFstOffHeap());
            }
          }
        }
        readerFromWriter.close();
        w.forceMerge(1);
        w.commit();
      }
      try (DirectoryReader r = DirectoryReader.open(d, Collections.singletonMap(BlockTreeTermsReader.FST_MODE_KEY, loadMode.name()))) {
        assertEquals(1, r.leaves().size());
        FieldReader field = (FieldReader) r.leaves().get(0).reader().terms("field");
        FieldReader id = (FieldReader) r.leaves().get(0).reader().terms("id");
        assertTrue(id.isFstOffHeap());
        assertTrue(field.isFstOffHeap());
      }
    }
  }

