  private void longCompressorMonkeyTest(
      int run, int size, int minValue, int maxValue, double minChance, long randomSeed) {
    final String description = String.format(Locale.ENGLISH,
        "run=%d, size=%d, minValue=%d, maxValue=%d, minChance=%1.2f, seed=%d",
        run, size, minValue, maxValue, minChance, randomSeed);
    Random innerRandom = new Random(randomSeed);
    PackedInts.Mutable expected = PackedInts.getMutable(size, PackedInts.bitsRequired(maxValue), PackedInts.DEFAULT);
    for (int i = 0 ; i < size ; i++) {
      if (innerRandom.nextDouble() <= minChance) {
        continue;
      }
      expected.set(i, maxValue-minValue == 0 ? minValue : innerRandom.nextInt(maxValue-minValue)+minValue);
    }
    assertSparseValid(description, expected);
  }

