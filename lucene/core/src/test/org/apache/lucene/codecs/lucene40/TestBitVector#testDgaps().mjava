    /**
     * Test r/w when size/count cause switching between bit-set and d-gaps file formats.  
     */
    public void testDgaps() throws IOException {
      doTestDgaps(1,0,1);
      doTestDgaps(10,0,1);
      doTestDgaps(100,0,1);
      doTestDgaps(1000,4,7);
      doTestDgaps(10000,40,43);
      doTestDgaps(100000,415,418);
      doTestDgaps(1000000,3123,3126);
      // now exercise skipping of fully populated byte in the bitset (they are omitted if bitset is sparse)
      MockDirectoryWrapper d = new  MockDirectoryWrapper(random(), new RAMDirectory());
      d.setPreventDoubleWrite(false);
      BitVector bv = new BitVector(10000);
      bv.set(0);
      for (int i = 8; i < 16; i++) {
        bv.set(i);
      } // make sure we have once byte full of set bits
      for (int i = 32; i < 40; i++) {
        bv.set(i);
      } // get a second byte full of set bits
      // add some more bits here 
      for (int i = 40; i < 10000; i++) {
        if (random().nextInt(1000) == 0) {
          bv.set(i);
        }
      }
      bv.write(d, "TESTBV", newIOContext(random()));
      BitVector compare = new BitVector(d, "TESTBV", newIOContext(random()));
      assertTrue(doCompare(bv,compare));
    }

