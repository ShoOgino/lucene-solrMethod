  private void doTestImpactSerialization(int[] freqs, long[] norms) throws IOException {
    CompetitiveFreqNormAccumulator acc = new CompetitiveFreqNormAccumulator();
    for (int i = 0; i < freqs.length; ++i) {
      acc.add(freqs[i], norms[i]);
    }
    try(Directory dir = newDirectory()) {
      try (IndexOutput out = dir.createOutput("foo", IOContext.DEFAULT)) {
        Lucene50SkipWriter.writeImpacts(acc, out);
      }
      try (IndexInput in = dir.openInput("foo", IOContext.DEFAULT)) {
        byte[] b = new byte[Math.toIntExact(in.length())];
        in.readBytes(b, 0, b.length);
        Lucene50ScoreSkipReader.readImpacts(new ByteArrayDataInput(b), new SimScorer("") {
          int i = 0;

          @Override
          public float score(float freq, long norm) {
            assert freq == freqs[i];
            assert norm == norms[i];
            i++;
            return 0;
          }
        });
      }
    }
  }

