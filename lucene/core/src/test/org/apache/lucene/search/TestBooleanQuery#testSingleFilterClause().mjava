  public void testSingleFilterClause() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter w = new RandomIndexWriter(random(), dir);
    Document doc = new Document();
    Field f = newTextField("field", "a", Field.Store.NO);
    doc.add(f);
    w.addDocument(doc);
    w.commit();

    DirectoryReader reader = w.getReader();
    final IndexSearcher searcher = new IndexSearcher(reader);

    BooleanQuery query1 = new BooleanQuery();
    query1.add(new TermQuery(new Term("field", "a")), Occur.FILTER);

    // Single clauses rewrite to a term query
    final Query rewritten1 = query1.rewrite(reader);
    assertTrue(rewritten1 instanceof TermQuery);
    assertEquals(0f, rewritten1.getBoost(), 0f);

    // When there are two clauses, we cannot rewrite, but if one of them creates
    // a null scorer we will end up with a single filter scorer and will need to
    // make sure to set score=0
    BooleanQuery query2 = new BooleanQuery();
    query2.add(new TermQuery(new Term("field", "a")), Occur.FILTER);
    query2.add(new TermQuery(new Term("field", "b")), Occur.SHOULD);
    final Weight weight = searcher.createNormalizedWeight(query2, true);
    final Scorer scorer = weight.scorer(reader.leaves().get(0), null);
    assertTrue(scorer.getClass().getName(), scorer instanceof BooleanTopLevelScorers.BoostedScorer);
    assertEquals(0, ((BooleanTopLevelScorers.BoostedScorer) scorer).boost, 0f);

    reader.close();
    w.close();
    dir.close();
  }

