  private static boolean matches(int bytesPerDim, byte[][] lower, boolean[] includeLower, byte[][] upper, boolean[] includeUpper, byte[][] value) {
    int numDims = lower.length;
    for(int dim=0;dim<numDims;dim++) {
      int cmp;
      if (lower[dim] == null) {
        cmp = 1;
      } else {
        cmp = NumericUtils.compare(bytesPerDim, value[dim], 0, lower[dim], 0);
      }

      if (cmp < 0 || (cmp == 0 && includeLower[dim] == false)) {
        // Value is below the lower bound, on this dim
        return false;
      }

      if (upper[dim] == null) {
        cmp = -1;
      } else {
        cmp = NumericUtils.compare(bytesPerDim, value[dim], 0, upper[dim], 0);
      }

      if (cmp > 0 || (cmp == 0 && includeUpper[dim] == false)) {
        // Value is above the upper bound, on this dim
        return false;
      }
    }

    return true;
  }

