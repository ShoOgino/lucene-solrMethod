  public void testMinSegmentSizePredicate() throws IOException, InterruptedException {
    Directory dir = newDirectory();
    IndexWriterConfig iwc = newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE);
    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);
    w.addDocument(new Document());
    DirectoryReader reader = w.getReader();
    IndexSearcher searcher = newSearcher(reader);
    searcher.setQueryCachingPolicy(ALWAYS_CACHE);

    LRUQueryCache cache = new LRUQueryCache(2, 10000, new LRUQueryCache.MinSegmentSizePredicate(2, 0f), Float.POSITIVE_INFINITY);
    searcher.setQueryCache(cache);
    searcher.count(new DummyQuery());

    assertEquals(0, cache.getCacheCount());

    final CountDownLatch[] latch = { new CountDownLatch(1)};
    cache = new LRUQueryCache(2, 10000,
        new LRUQueryCache.MinSegmentSizePredicate(1, 0f), Float.POSITIVE_INFINITY) {
        @Override
        protected void onDocIdSetCache(Object readerCoreKey, long ramBytesUsed) {
          super.onDocIdSetCache(readerCoreKey, ramBytesUsed);
          latch[0].countDown();
        }
      };

    searcher.setQueryCache(cache);

    searcher.count(new DummyQuery());

    latch[0].await();
    assertEquals(1, cache.getCacheCount());

    latch[0] = new CountDownLatch(1);
    cache = new LRUQueryCache(2, 10000,
        new LRUQueryCache.MinSegmentSizePredicate(0, .6f), Float.POSITIVE_INFINITY) {
      @Override
      protected void onDocIdSetCache(Object readerCoreKey, long ramBytesUsed) {
        super.onDocIdSetCache(readerCoreKey, ramBytesUsed);
        latch[0].countDown();
      }
    };

    searcher.setQueryCache(cache);

    searcher.count(new DummyQuery());

    latch[0].await();
    assertEquals(1, cache.getCacheCount());

    w.addDocument(new Document());
    reader.close();
    reader = w.getReader();
    searcher = newSearcher(reader);
    searcher.setQueryCachingPolicy(ALWAYS_CACHE);
    cache = new LRUQueryCache(2, 10000, new LRUQueryCache.MinSegmentSizePredicate(0, .6f), Float.POSITIVE_INFINITY);
    searcher.setQueryCache(cache);
    searcher.count(new DummyQuery());
    assertEquals(0, cache.getCacheCount());

    reader.close();
    w.close();
    dir.close();
  }

