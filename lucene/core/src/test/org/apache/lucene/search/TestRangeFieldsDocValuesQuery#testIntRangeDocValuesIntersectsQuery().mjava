  public void testIntRangeDocValuesIntersectsQuery() throws IOException {
    Directory dir = newDirectory();
    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);
    final int iters = atLeast(10);
    int[] min = {3, 11, 17};
    int[] max = {27, 35, 49};
    for (int i = 0; i < iters; ++i) {
      Document doc = new Document();
      doc.add(new IntRangeDocValuesField("dv", min, max));
      iw.addDocument(doc);
    }

    int[] min2 = {11, 19, 27};
    int[] max2 = {29, 38, 56};

    Document doc = new Document();
    doc.add(new IntRangeDocValuesField("dv", min2, max2));

    iw.commit();

    final IndexReader reader = iw.getReader();
    final IndexSearcher searcher = newSearcher(reader);
    iw.close();

    final int[] lowRange = {6, 16, 19};
    final int[] highRange = {29, 41, 42};

    Query query = IntRangeDocValuesField.newSlowIntersectsQuery("dv", lowRange, highRange);

    assertEquals(searcher.count(query), iters);

    int[] lowRange2 = {2, 9, 18};
    int[] highRange2 = {25, 34, 41};

    query = IntRangeDocValuesField.newSlowIntersectsQuery("dv", lowRange2, highRange2);

    assertEquals(searcher.count(query), iters);

    int[] lowRange3 = {101, 121, 153};
    int[] highRange3 = {156, 127, 176};

    query = IntRangeDocValuesField.newSlowIntersectsQuery("dv", lowRange3, highRange3);

    assertEquals(searcher.count(query), 0);

    reader.close();
    dir.close();
  }

