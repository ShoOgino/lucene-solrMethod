  public void testDocValuesUpdatesDontBreakCache() throws IOException {
    Directory dir = newDirectory();
    IndexWriterConfig iwc = newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE);
    //RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);
    IndexWriter w = new IndexWriter(dir, iwc);
    w.addDocument(new Document());
    w.commit();
    DirectoryReader reader = DirectoryReader.open(w);
    IndexSearcher searcher = newSearcher(reader);
    searcher.setQueryCachingPolicy(QueryCachingPolicy.ALWAYS_CACHE);

    LRUQueryCache cache = new LRUQueryCache(1, 1000, context -> true);
    searcher.setQueryCache(cache);

    DVCacheQuery query = new DVCacheQuery("field");
    assertEquals(1, searcher.count(query));
    assertEquals(1, query.scorerCreatedCount.get());
    assertEquals(1, searcher.count(query));
    assertEquals(1, query.scorerCreatedCount.get());  // should be cached

    Document doc = new Document();
    doc.add(new NumericDocValuesField("field", 1));
    doc.add(newTextField("text", "text", Store.NO));
    w.addDocument(doc);
    reader.close();
    reader = DirectoryReader.open(w);
    searcher = newSearcher(reader);
    searcher.setQueryCachingPolicy(QueryCachingPolicy.ALWAYS_CACHE);
    searcher.setQueryCache(cache);

    assertEquals(2, searcher.count(query));
    assertEquals(2, query.scorerCreatedCount.get());  // first segment cached

    reader.close();
    reader = DirectoryReader.open(w);
    searcher = newSearcher(reader);
    searcher.setQueryCachingPolicy(QueryCachingPolicy.ALWAYS_CACHE);
    searcher.setQueryCache(cache);

    assertEquals(2, searcher.count(query));
    assertEquals(2, query.scorerCreatedCount.get());  // both segments cached


    w.updateNumericDocValue(new Term("text", "text"), "field", 2l);
    reader.close();
    reader = DirectoryReader.open(w);
    searcher = newSearcher(reader);
    searcher.setQueryCachingPolicy(QueryCachingPolicy.ALWAYS_CACHE);
    searcher.setQueryCache(cache);

    assertEquals(2, searcher.count(query));
    assertEquals(3, query.scorerCreatedCount.get());   // second segment no longer cached due to DV update

    assertEquals(2, searcher.count(query));
    assertEquals(4, query.scorerCreatedCount.get());    // still no caching

    reader.close();
    w.close();
    dir.close();

  }

