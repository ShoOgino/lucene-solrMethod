  public void testDoesNotLoadNorms() throws IOException {
    Term allTerm = new Term(FIELD, "all");
    TermQuery termQuery = new TermQuery(allTerm);
    
    LeafReader forbiddenNorms = new FilterLeafReader(indexReader) {
      @Override
      public NumericDocValues getNormValues(String field) throws IOException {
        fail("Norms should not be loaded");
        // unreachable
        return null;
      }
    };
    // We don't use newSearcher because it sometimes runs checkIndex which loads norms
    IndexSearcher indexSearcher = new IndexSearcher(forbiddenNorms);
    
    Weight weight = indexSearcher.createNormalizedWeight(termQuery, true);
    try {
      weight.scorer(forbiddenNorms.getContext()).nextDoc();
      fail("Should load norms");
    } catch (AssertionError e) {
      // ok
    }
    
    weight = indexSearcher.createNormalizedWeight(termQuery, false);
    // should not fail this time since norms are not necessary
    weight.scorer(forbiddenNorms.getContext()).nextDoc();
  }

