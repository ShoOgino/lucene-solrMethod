  private void testExplanations(Query q, DoubleValuesSource vs) throws IOException {
    searcher.search(q, new SimpleCollector() {

      DoubleValues v;
      LeafReaderContext ctx;

      @Override
      protected void doSetNextReader(LeafReaderContext context) throws IOException {
        this.ctx = context;
      }

      @Override
      public void setScorer(Scorer scorer) throws IOException {
        this.v = vs.getValues(this.ctx, DoubleValuesSource.fromScorer(scorer));
      }

      @Override
      public void collect(int doc) throws IOException {
        Explanation scoreExpl = searcher.explain(q, ctx.docBase + doc);
        if (this.v.advanceExact(doc)) {
          CheckHits.verifyExplanation("", doc, (float) v.doubleValue(), true, vs.explain(ctx, doc, scoreExpl));
        }
        else {
          assertFalse(vs.explain(ctx, doc, scoreExpl).isMatch());
        }
      }

      @Override
      public boolean needsScores() {
        return vs.needsScores();
      }
    });
  }

