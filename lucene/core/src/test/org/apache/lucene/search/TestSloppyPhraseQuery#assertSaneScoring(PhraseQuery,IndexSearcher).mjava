  /** checks that no scores or freqs are infinite */
  private void assertSaneScoring(PhraseQuery pq, IndexSearcher searcher) throws Exception {
    searcher.search(pq, new SimpleCollector() {
      Scorer scorer;
      
      @Override
      public void setScorer(Scorer scorer) {
        this.scorer = scorer;
        while (this.scorer instanceof AssertingScorer) {
          this.scorer = ((AssertingScorer)this.scorer).getIn();
        }
      }
      
      @Override
      public void collect(int doc) throws IOException {
        assertFalse(Float.isInfinite(((SloppyPhraseScorer)scorer).freq()));
        assertFalse(Float.isInfinite(scorer.score()));
      }
      
      @Override
      public ScoreMode scoreMode() {
        return ScoreMode.COMPLETE;
      }
    });
    QueryUtils.check(random(), pq, searcher);
  }

