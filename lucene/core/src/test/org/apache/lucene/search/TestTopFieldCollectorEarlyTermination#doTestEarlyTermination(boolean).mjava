  private void doTestEarlyTermination(boolean paging) throws IOException {
    final int iters = atLeast(8);
    for (int i = 0; i < iters; ++i) {
      createRandomIndex(false);
      int maxSegmentSize = 0;
      for (LeafReaderContext ctx : reader.leaves()) {
        maxSegmentSize = Math.max(ctx.reader().numDocs(), maxSegmentSize);
      }
      for (int j = 0; j < iters; ++j) {
        final IndexSearcher searcher = newSearcher(reader);
        final int numHits = TestUtil.nextInt(random(), 1, numDocs);
        FieldDoc after;
        if (paging) {
          assert searcher.getIndexReader().numDocs() > 0;
          TopFieldDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);
          after = (FieldDoc) td.scoreDocs[td.scoreDocs.length - 1];
        } else {
          after = null;
        }
        final boolean fillFields = random().nextBoolean();
        final boolean trackDocScores = random().nextBoolean();
        final boolean trackMaxScore = random().nextBoolean();
        final TopFieldCollector collector1 = TopFieldCollector.create(sort, numHits, after, fillFields, trackDocScores, trackMaxScore, true);
        final TopFieldCollector collector2 = TopFieldCollector.create(sort, numHits, after, fillFields, trackDocScores, trackMaxScore, false);

        final Query query;
        if (random().nextBoolean()) {
          query = new TermQuery(new Term("s", RandomPicks.randomFrom(random(), terms)));
        } else {
          query = new MatchAllDocsQuery();
        }
        searcher.search(query, collector1);
        searcher.search(query, collector2);
        TopDocs td1 = collector1.topDocs();
        TopDocs td2 = collector2.topDocs();

        assertFalse(collector1.isEarlyTerminated());
        if (trackMaxScore == false && paging == false && maxSegmentSize > numHits && query instanceof MatchAllDocsQuery) {
          // Make sure that we sometimes early terminate
          assertTrue(collector2.isEarlyTerminated());
        }
        if (collector2.isEarlyTerminated()) {
          assertTrue(td2.totalHits >= td1.scoreDocs.length);
          assertTrue(td2.totalHits <= reader.maxDoc());
        } else {
          assertEquals(td2.totalHits, td1.totalHits);
        }
        assertTopDocsEquals(td1.scoreDocs, td2.scoreDocs);
      }
      closeIndex();
    }
  }

