  public void testRejectedExecution() throws IOException {
    List<LeafReaderContext> leaves = reader.leaves();
    AtomicInteger numExecutions = new AtomicInteger(0);
    ExecutorService service = new RejectingMockExecutor();

    IndexSearcher searcher = new IndexSearcher(reader, service) {
      @Override
      protected LeafSlice[] slices(List<LeafReaderContext> leaves) {
        ArrayList<LeafSlice> slices = new ArrayList<>();
        for (LeafReaderContext ctx : leaves) {
          slices.add(new LeafSlice(Arrays.asList(ctx)));
        }
        return slices.toArray(new LeafSlice[0]);
      }
    };

    // To ensure that failing ExecutorService still allows query to run
    // successfully
    searcher.search(new MatchAllDocsQuery(), 10);
    if (leaves.size() <= 1) {
      assertEquals(0, numExecutions.get());
    } else {
      assertEquals(leaves.size() - 1, numExecutions.get());
    }

    service.shutdown();
  }

