  // test sorting when the sort field is empty (undefined) for some of the documents
  public void testEmptyFieldSort() throws Exception {

    // NOTE: do not test DocValues fields here, since you
    // can't sort when some documents don't have the field
    sort.setSort (new SortField ("string", SortField.Type.STRING) );
    assertMatches (full, queryF, sort, "ZJI");

    sort.setSort (new SortField ("string", SortField.Type.STRING, true) );
    assertMatches (full, queryF, sort, "IJZ");
    
    sort.setSort (new SortField ("int", SortField.Type.INT) );
    assertMatches (full, queryF, sort, "IZJ");

    sort.setSort (new SortField ("int", SortField.Type.INT, true) );
    assertMatches (full, queryF, sort, "JZI");

    sort.setSort (new SortField ("float", SortField.Type.FLOAT) );
    assertMatches (full, queryF, sort, "ZJI");

    // using a nonexisting field as first sort key shouldn't make a difference:
    sort.setSort (new SortField ("nosuchfield", SortField.Type.STRING),
        new SortField ("float", SortField.Type.FLOAT) );
    assertMatches (full, queryF, sort, "ZJI");

    sort.setSort (new SortField ("float", SortField.Type.FLOAT, true) );
    assertMatches (full, queryF, sort, "IJZ");

    // When a field is null for both documents, the next SortField should be used.
    sort.setSort (new SortField ("int", SortField.Type.INT),
                                new SortField ("string", SortField.Type.STRING),
        new SortField ("float", SortField.Type.FLOAT) );
    assertMatches (full, queryG, sort, "ZWXY");

    // Reverse the last criterium to make sure the test didn't pass by chance
    sort.setSort (new SortField ("int", SortField.Type.INT),
                                new SortField ("string", SortField.Type.STRING),
                  new SortField ("float", SortField.Type.FLOAT, true) );
    assertMatches (full, queryG, sort, "ZYXW");

    // Do the same for a ParallelMultiSearcher
    ExecutorService exec = Executors.newFixedThreadPool(_TestUtil.nextInt(random(), 2, 8));
    IndexSearcher parallelSearcher=new IndexSearcher (full.getIndexReader(), exec);

    sort.setSort (new SortField ("int", SortField.Type.INT),
                  new SortField ("string", SortField.Type.STRING),
                  new SortField ("float", SortField.Type.FLOAT) );
    assertMatches (parallelSearcher, queryG, sort, "ZWXY");

    sort.setSort (new SortField ("int", SortField.Type.INT),
                  new SortField ("string", SortField.Type.STRING),
                  new SortField ("float", SortField.Type.FLOAT, true) );
    assertMatches (parallelSearcher, queryG, sort, "ZYXW");
    exec.shutdown();
    exec.awaitTermination(1000, TimeUnit.MILLISECONDS);
  }

