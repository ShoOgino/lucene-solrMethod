  private void checkSpans(Spans spans, int expectedNumSpans, int expectedNumPayloads,
                          int expectedPayloadLength, int expectedFirstByte) throws IOException {
    assertTrue("spans is null and it shouldn't be", spans != null);
    //each position match should have a span associated with it, since there is just one underlying term query, there should
    //only be one entry in the span
    int seen = 0;
    while (spans.nextDoc() != Spans.NO_MORE_DOCS) {
      while (spans.nextStartPosition() != Spans.NO_MORE_POSITIONS) {
        assertEquals("isPayloadAvailable should return true/false as payloads are expected", expectedNumPayloads > 0, spans.isPayloadAvailable());
        //See payload helper, for the PayloadHelper.FIELD field, there is a single byte payload at every token
        if (spans.isPayloadAvailable()) {
          Collection<byte[]> payload = spans.getPayload();
          assertEquals("payload size", expectedNumPayloads, payload.size());
          for (final byte [] thePayload : payload) {
            assertEquals("payload length", expectedPayloadLength, thePayload.length);
            assertEquals("payload first byte", expectedFirstByte, thePayload[0]);
          }
        }
        seen++;
      }
    }
    assertEquals("expectedNumSpans", expectedNumSpans, seen);
  }

