  public void testByteMismatch() {
    assertEquals(1, FutureArrays.mismatch(bytes("ab"), 0, 2, bytes("ac"), 0, 2));
    assertEquals(0, FutureArrays.mismatch(bytes("ab"), 0, 2, bytes("b"), 0, 1));
    assertEquals(-1, FutureArrays.mismatch(bytes("ab"), 0, 2, bytes("ab"), 0, 2));
    assertEquals(1, FutureArrays.mismatch(bytes("ab"), 0, 2, bytes("a"), 0, 1));
    expectThrows(IllegalArgumentException.class, () -> {
      FutureArrays.mismatch(bytes("ab"), 2, 1, bytes("a"), 0, 1);
    });
    expectThrows(IllegalArgumentException.class, () -> {
      FutureArrays.mismatch(bytes("ab"), 2, 1, bytes("a"), 1, 0);
    });
    expectThrows(NullPointerException.class, () -> {
      FutureArrays.mismatch(null, 0, 2, bytes("a"), 0, 1);
    });
    expectThrows(NullPointerException.class, () -> {
      FutureArrays.mismatch(bytes("ab"), 0, 2, null, 0, 1);
    });
    expectThrows(IndexOutOfBoundsException.class, () -> {
      FutureArrays.mismatch(bytes("ab"), 0, 3, bytes("a"), 0, 1);
    });
    expectThrows(IndexOutOfBoundsException.class, () -> {
      FutureArrays.mismatch(bytes("ab"), 0, 2, bytes("a"), 0, 2);
    });
  }

