  public void testReverseRandom2() throws Exception {
    int ITERS = atLeast(100);
    for(int iter=0;iter<ITERS;iter++) {
      //System.out.println("TEST: iter=" + iter);
      LightAutomaton a = AutomatonTestUtil.randomAutomaton(random());
      if (random().nextBoolean()) {
        a = BasicOperations.removeDeadStates(a);
      }
      LightAutomaton ra = SpecialOperations.reverse(a);
      LightAutomaton rda = BasicOperations.determinize(ra);

      if (BasicOperations.isEmpty(a)) {
        assertTrue(BasicOperations.isEmpty(rda));
        continue;
      }

      RandomAcceptedStrings ras = new RandomAcceptedStrings(a);

      for(int iter2=0;iter2<20;iter2++) {
        // Find string accepted by original automaton
        int[] s = ras.getRandomAcceptedString(random());

        // Reverse it
        for(int j=0;j<s.length/2;j++) {
          int x = s[j];
          s[j] = s[s.length-j-1];
          s[s.length-j-1] = x;
        }
        //System.out.println("TEST:   iter2=" + iter2 + " s=" + Arrays.toString(s));

        // Make sure reversed automaton accepts it
        assertTrue(BasicOperations.run(rda, new IntsRef(s, 0, s.length)));
      }
    }
  }

