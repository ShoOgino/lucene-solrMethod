  /** Test optimization to concatenate() with empty String to an NFA */
  public void testEmptySingletonNFAConcatenate() {
    LightAutomaton singleton = BasicAutomata.makeStringLight("");
    LightAutomaton expandedSingleton = singleton;
    // an NFA (two transitions for 't' from initial state)
    LightAutomaton nfa = BasicOperations.unionLight(BasicAutomata.makeStringLight("this"),
        BasicAutomata.makeStringLight("three"));
    LightAutomaton concat1 = BasicOperations.concatenateLight(expandedSingleton, nfa);
    LightAutomaton concat2 = BasicOperations.concatenateLight(singleton, nfa);
    assertFalse(concat2.isDeterministic());
    assertTrue(BasicOperations.sameLanguage(BasicOperations.determinize(concat1),
                                            BasicOperations.determinize(concat2)));
    assertTrue(BasicOperations.sameLanguage(BasicOperations.determinize(nfa),
                                            BasicOperations.determinize(concat1)));
    assertTrue(BasicOperations.sameLanguage(BasicOperations.determinize(nfa),
                                            BasicOperations.determinize(concat2)));
  }

