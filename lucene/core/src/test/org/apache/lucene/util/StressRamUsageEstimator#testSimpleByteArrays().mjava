  public void testSimpleByteArrays() {
    MemoryMXBean memoryMXBean = ManagementFactory.getMemoryMXBean();

    Object [][] all = new Object [0][];
    try {
      while (true) {
        // Check the current memory consumption and provide the estimate.
        causeGc();
        MemoryUsage mu = memoryMXBean.getHeapMemoryUsage();
        long estimated = shallowSizeOf(all);
        if (estimated > 50 * RamUsageEstimator.ONE_MB) {
          break;
        }

        System.out.println(String.format(Locale.ENGLISH, "%10s\t%10s\t%10s", 
            RamUsageEstimator.humanReadableUnits(mu.getUsed()),
            RamUsageEstimator.humanReadableUnits(mu.getMax()), 
            RamUsageEstimator.humanReadableUnits(estimated)));

        // Make another batch of objects.
        Object[] seg =  new Object[10000];
        all = Arrays.copyOf(all, all.length + 1);
        all[all.length - 1] = seg;
        for (int i = 0; i < seg.length; i++) {
          seg[i] = new byte[random().nextInt(7)];
        }
      }
    } catch (OutOfMemoryError e) {
      // Release and quit.
    }
  }

