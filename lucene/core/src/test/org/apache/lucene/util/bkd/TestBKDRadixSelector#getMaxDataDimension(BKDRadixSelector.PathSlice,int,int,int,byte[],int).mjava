  private byte[] getMaxDataDimension(BKDRadixSelector.PathSlice p, int bytesPerDimension, int dataDims, int indexDims, byte[] maxDim, int splitDim) throws  IOException {
    byte[] max = new byte[(dataDims - indexDims) * bytesPerDimension];
    Arrays.fill(max, (byte) 0);
    int offset = splitDim * bytesPerDimension;
    try (PointReader reader = p.writer.getReader(p.start, p.count)) {
      byte[] value = new byte[(dataDims - indexDims) * bytesPerDimension];
      while (reader.next()) {
        PointValue pointValue = reader.pointValue();
        BytesRef packedValue = pointValue.packedValue();
        if (Arrays.mismatch(maxDim, 0, bytesPerDimension, packedValue.bytes, packedValue.offset + offset, packedValue.offset + offset + bytesPerDimension) == -1) {
          System.arraycopy(packedValue.bytes, packedValue.offset + indexDims * bytesPerDimension, value, 0, (dataDims - indexDims) * bytesPerDimension);
          if (Arrays.compareUnsigned(max, 0, (dataDims - indexDims) * bytesPerDimension, value, 0, (dataDims - indexDims) * bytesPerDimension) < 0) {
            System.arraycopy(value, 0, max, 0, (dataDims - indexDims) * bytesPerDimension);
          }
        }
      }
    }
    return max;
  }

