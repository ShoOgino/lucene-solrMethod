  public void testParseExceptions() {
    ParseException expected = expectThrows(ParseException.class, () -> {
      Version.parse("LUCENE_6_0_0");
    });
    assertTrue(expected.getMessage().contains("LUCENE_6_0_0"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.256");
    });
    assertTrue(expected.getMessage().contains("6.256"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.-1");
    });
    assertTrue(expected.getMessage().contains("6.-1"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.1.256");
    });
    assertTrue(expected.getMessage().contains("6.1.256"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.1.-1");
    });
    assertTrue(expected.getMessage().contains("6.1.-1"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.1.1.3");
    });
    assertTrue(expected.getMessage().contains("6.1.1.3"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.1.1.-1");
    });
    assertTrue(expected.getMessage().contains("6.1.1.-1"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.1.1.1");
    });
    assertTrue(expected.getMessage().contains("6.1.1.1"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.1.1.2");
    });
    assertTrue(expected.getMessage().contains("6.1.1.2"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.0.0.0");
    });
    assertTrue(expected.getMessage().contains("6.0.0.0"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6.0.0.1.42");
    });
    assertTrue(expected.getMessage().contains("6.0.0.1.42"));

    expected = expectThrows(ParseException.class, () -> {
      Version.parse("6..0.1");
    });
    assertTrue(expected.getMessage().contains("6..0.1"));
  }

