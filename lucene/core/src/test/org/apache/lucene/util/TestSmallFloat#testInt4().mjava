  public void testInt4() {
    for (int i = 0; i <= 16; ++i) {
      // all values in 0-16 are encoded accurately
      assertEquals(i, SmallFloat.int4ToLong(SmallFloat.longToInt4(i)));
    }
    final int maxEncoded = SmallFloat.longToInt4(Long.MAX_VALUE);
    for (int i = 1; i < maxEncoded; ++i) {
      assertTrue(SmallFloat.int4ToLong(i) > SmallFloat.int4ToLong(i - 1));
    }
    final int iters = atLeast(1000);
    for (int iter = 0; iter < iters; ++iter) {
      final long l = TestUtil.nextLong(random(), 0, 1L << TestUtil.nextInt(random(), 5, 61));
      int numBits = 64 - Long.numberOfLeadingZeros(l);
      long expected = l;
      if (numBits > 4) {
        long mask = ~0L << (numBits - 4);
        expected &= mask;
      }
      long l2 = SmallFloat.int4ToLong(SmallFloat.longToInt4(l));
      assertEquals(expected, l2);
    }
  }

