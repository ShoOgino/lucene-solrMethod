  public void testCheckFromIndexSize() {
    assertEquals(0, FutureObjects.checkFromIndexSize(0, 0, 0));
    assertEquals(1, FutureObjects.checkFromIndexSize(1, 2, 3));
    
    Exception e = expectThrows(IndexOutOfBoundsException.class, () -> {
      FutureObjects.checkFromIndexSize(-1, 0, 1);
    });
    assertEquals("Range [-1, -1 + 0) out-of-bounds for length 1", e.getMessage());
    
    e = expectThrows(IndexOutOfBoundsException.class, () -> {
      FutureObjects.checkFromIndexSize(0, -1, 1);
    });
    assertEquals("Range [0, 0 + -1) out-of-bounds for length 1", e.getMessage());
    
    e = expectThrows(IndexOutOfBoundsException.class, () -> {
      FutureObjects.checkFromIndexSize(0, 2, 1);
    });
    assertEquals("Range [0, 0 + 2) out-of-bounds for length 1", e.getMessage());
    
    e = expectThrows(IndexOutOfBoundsException.class, () -> {
      FutureObjects.checkFromIndexSize(1, Integer.MAX_VALUE, Integer.MAX_VALUE);
    });
    assertEquals("Range [1, 1 + 2147483647) out-of-bounds for length 2147483647", e.getMessage());
    
    e = expectThrows(IndexOutOfBoundsException.class, () -> {
      FutureObjects.checkFromIndexSize(0, 0, -1);
    });
    assertEquals("Range [0, 0 + 0) out-of-bounds for length -1", e.getMessage());
  }

