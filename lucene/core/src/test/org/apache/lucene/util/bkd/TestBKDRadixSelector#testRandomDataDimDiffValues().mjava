  public void testRandomDataDimDiffValues() throws IOException {
    int values = atLeast(15000);
    Directory dir = getDirectory(values);
    int partitionPoint = random().nextInt(values);
    int sortedOnHeap = random().nextInt(5000);
    int indexDimensions =  TestUtil.nextInt(random(), 1, 8);
    int dataDimensions =  TestUtil.nextInt(random(), indexDimensions, 8);
    int bytesPerDimensions = TestUtil.nextInt(random(), 2, 30);
    int packedLength = dataDimensions * bytesPerDimensions;
    PointWriter points = getRandomPointWriter(dir, values, packedLength);
    byte[] value = new byte[packedLength];
    byte[] dataValue = new byte[(dataDimensions - indexDimensions) * bytesPerDimensions];
    random().nextBytes(value);
    for (int i =0; i < values; i++) {
      random().nextBytes(dataValue);
      System.arraycopy(dataValue, 0, value, indexDimensions * bytesPerDimensions, (dataDimensions - indexDimensions) * bytesPerDimensions);
      points.append(value, i);
    }
    points.close();
    verify(dir, points, dataDimensions, indexDimensions, 0, values, partitionPoint, packedLength, bytesPerDimensions, sortedOnHeap);
    dir.close();
  }

