  final private QueryNode Term(CharSequence field) throws ParseException {QueryNode q;
  Token term, fuzzySlop=null;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case REGEXPTERM:{
      term = jj_consume_token(REGEXPTERM);
q = new RegexpQueryNode(field, term.image.substring(1, term.image.length() - 1));
      break;
      }
    case NUMBER:
    case TERM:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case TERM:{
        term = jj_consume_token(TERM);
        break;
        }
      case NUMBER:{
        term = jj_consume_token(NUMBER);
        break;
        }
      default:
        jj_la1[12] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
q = new FieldQueryNode(field, discardEscapeChar(term.image), term.beginColumn, term.endColumn);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case TILDE:{
        q = FuzzyOp(field, term, q);
        break;
        }
      default:
        jj_la1[13] = jj_gen;
        ;
      }
      break;
      }
    case RANGEIN_START:
    case RANGEEX_START:{
      q = TermRangeExpr(field);
      break;
      }
    case QUOTED:{
      q = QuotedTerm(field);
      break;
      }
    default:
      jj_la1[14] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case CARAT:{
      q = Boost(q);
      break;
      }
    default:
      jj_la1[15] = jj_gen;
      ;
    }
{if ("" != null) return q;}
    throw new Error("Missing return statement in function");
}

