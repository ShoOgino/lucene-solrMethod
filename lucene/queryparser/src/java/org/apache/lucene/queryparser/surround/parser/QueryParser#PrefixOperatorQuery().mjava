  final public SrndQuery PrefixOperatorQuery() throws ParseException {Token oprt;
  List<SrndQuery> queries;
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case OR:{
      oprt = jj_consume_token(OR);
      /* prefix OR */
          queries = FieldsQueryList();
{if ("" != null) return getOrQuery(queries, false /* not infix */, oprt);}
      break;
      }
    case AND:{
      oprt = jj_consume_token(AND);
      /* prefix AND */
          queries = FieldsQueryList();
{if ("" != null) return getAndQuery(queries, false /* not infix */, oprt);}
      break;
      }
    case N:{
      oprt = jj_consume_token(N);
      /* prefix N */
          queries = FieldsQueryList();
{if ("" != null) return getDistanceQuery(queries, false /* not infix */, oprt, false /* not ordered */);}
      break;
      }
    case W:{
      oprt = jj_consume_token(W);
      /* prefix W */
          queries = FieldsQueryList();
{if ("" != null) return getDistanceQuery(queries, false  /* not infix */, oprt, true /* ordered */);}
      break;
      }
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
    throw new Error("Missing return statement in function");
}

