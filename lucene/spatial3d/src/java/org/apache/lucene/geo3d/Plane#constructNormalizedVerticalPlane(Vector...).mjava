  /** Construct the most accurate normalized, vertical plane given a set of points.  If none of the points can determine
   * the plane, return null.
   * @param planePoints is a set of points to choose from.  The best one for constructing the most precise normal plane is picked.
   * @return the normal plane
   */
  public static Plane constructNormalizedVerticalPlane(final Vector... planePoints) {
    // Pick the best one (with the greatest x-y distance)
    double bestDistance = 0.0;
    Vector bestPoint = null;
    for (final Vector point : planePoints) {
      final double pointDist = point.x * point.x + point.y * point.y;
      if (pointDist > bestDistance) {
        bestDistance = pointDist;
        bestPoint = point;
      }
    }
    return constructNormalizedVerticalPlane(bestPoint.x, bestPoint.y);
  }

