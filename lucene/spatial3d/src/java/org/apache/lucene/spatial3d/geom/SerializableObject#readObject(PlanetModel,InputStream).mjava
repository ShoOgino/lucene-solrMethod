  /** Read an object from a stream (for objects that need a PlanetModel).
   * @param planetModel is the planet model to use to deserialize the object.
   * @param inputStream is the input stream.
   * @return the deserialized object.
   */
  static SerializableObject readObject(final PlanetModel planetModel, final InputStream inputStream) throws IOException {
    // Read the class name
    final String className = readString(inputStream);
    try {
      // Look for the class
      final Class<?> clazz = Class.forName(className);
      return readObject(planetModel, inputStream, clazz);
    } catch (ClassNotFoundException e) {
      throw new IOException("Can't find class "+className+" for deserialization: "+e.getMessage(), e);
    }
  }

