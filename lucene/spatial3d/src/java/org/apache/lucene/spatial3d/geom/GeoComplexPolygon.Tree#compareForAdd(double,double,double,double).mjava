    /** Compare a node against a subrange of a new edge.
     * @param nodeMinimumValue is the node's minimum value.
     * @param nodeMaximumValue is the node's maximum value.
     * @param minimumValue is the minimum value for the edge being added.
     * @param maximumValue is the maximum value for the edge being added.
     * @return the comparison result.
     */
    protected int compareForAdd(final double nodeMinimumValue, final double nodeMaximumValue, final double minimumValue, final double maximumValue) {
      if (minimumValue == nodeMinimumValue && maximumValue == nodeMaximumValue) {
        return EXACT;
      } else if (minimumValue <= nodeMinimumValue && maximumValue >= nodeMaximumValue) {
        return CONTAINED;
      } else if (nodeMinimumValue <= minimumValue && nodeMaximumValue >= maximumValue) {
        return WITHIN;
      } else if (maximumValue < nodeMinimumValue) {
        return LESS;
      } else if (minimumValue > nodeMaximumValue) {
        return GREATER;
      } else if (minimumValue < nodeMinimumValue) {
        return OVERLAPS_MINIMUM;
      } else {
        return OVERLAPS_MAXIMUM;
      }
    }

