  @Test @Ignore
  public void testBenchmark() throws Exception {
    final List<Class<? extends Lookup>> benchmarkClasses = Lists.newArrayList();  
    benchmarkClasses.add(JaspellLookup.class);
    benchmarkClasses.add(TSTLookup.class);

    // Run a single pass just to see if everything works fine and provide size estimates.
    final RamUsageEstimator rue = new RamUsageEstimator();
    for (Class<? extends Lookup> cls : benchmarkClasses) {
      Lookup lookup = singleBenchmark(cls, null);
      System.err.println(
          String.format(Locale.ENGLISH,
              "%20s, size[B]=%,d",
              lookup.getClass().getSimpleName(), 
              rue.estimateRamUsage(lookup)));
    }

    int warmupCount = 10;
    int measuredCount = 100;
    for (Class<? extends Lookup> cls : benchmarkClasses) {
      Bench b = fullBenchmark(cls, warmupCount, measuredCount);
      System.err.println(String.format(Locale.ENGLISH,
          "%s: buildTime[ms]=%,d lookupTime[ms]=%,d",
          cls.getSimpleName(),
          (b.buildTime / measuredCount),
          (b.lookupTime / measuredCount / 1000000)));
    }
  }

