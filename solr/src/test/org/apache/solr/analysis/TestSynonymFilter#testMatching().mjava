  public void testMatching() throws IOException {
    SynonymMap map = new SynonymMap();

    boolean orig = false;
    boolean merge = true;
    map.add(strings("a b"), tokens("ab"), orig, merge);
    map.add(strings("a c"), tokens("ac"), orig, merge);
    map.add(strings("a"), tokens("aa"), orig, merge);
    map.add(strings("b"), tokens("bb"), orig, merge);
    map.add(strings("z x c v"), tokens("zxcv"), orig, merge);
    map.add(strings("x c"), tokens("xc"), orig, merge);

    assertTokenizesTo(map, "$", new String[] { "$" });
    assertTokenizesTo(map, "a", new String[] { "aa" });
    assertTokenizesTo(map, "a $", new String[] { "aa", "$" });
    assertTokenizesTo(map, "$ a", new String[] { "$", "aa" });
    assertTokenizesTo(map, "a a", new String[] { "aa", "aa" });
    assertTokenizesTo(map, "b", new String[] { "bb" });
    assertTokenizesTo(map, "z x c v", new String[] { "zxcv" });
    assertTokenizesTo(map, "z x c $", new String[] { "z", "xc", "$" });

    // repeats
    map.add(strings("a b"), tokens("ab"), orig, merge);
    map.add(strings("a b"), tokens("ab"), orig, merge);
    
    // FIXME: the below test intended to be { "ab" }
    assertTokenizesTo(map, "a b", new String[] { "ab", "ab", "ab"  });

    // check for lack of recursion
    map.add(strings("zoo"), tokens("zoo"), orig, merge);
    assertTokenizesTo(map, "zoo zoo $ zoo", new String[] { "zoo", "zoo", "$", "zoo" });
    map.add(strings("zoo"), tokens("zoo zoo"), orig, merge);
    // FIXME: the below test intended to be { "zoo", "zoo", "zoo", "zoo", "$", "zoo", "zoo" }
    // maybe this was just a typo in the old test????
    assertTokenizesTo(map, "zoo zoo $ zoo", new String[] { "zoo", "zoo", "zoo", "zoo", "zoo", "zoo", "$", "zoo", "zoo", "zoo" });
  }

