  public void testCartesian() throws Exception {
    for (int i = 40; i < 50; i++) {
      for (int j = -85; j < -79; j++) {
        assertU(adoc("id", "" + i, "home_tier",
                i + "," + j));
      }
    }
    assertU(commit());
    CartesianPolyFilterBuilder cpfb = new CartesianPolyFilterBuilder("");
    //Get the box based on this point and our distance
    final Shape shape = cpfb.getBoxShape(45, -80, 10);//There's a bit of a bug in here that requires a small tier filter here.
    final List<Double> boxIds = shape.getArea();
    //do a box id search
    StringBuilder qry = new StringBuilder();
    boolean first = true;
    for (Double boxId : boxIds) {
      if (first == true){
        first = false;
      } else {
        qry.append(" OR ");
      }
      qry.append("home_tier:");
      if (boxId < 0) {
        qry.append('\\').append(boxId);
      } else {
        qry.append(boxId);
      }
    }

    assertQ(req("fl", "*,score", "q", qry.toString()),
            "//*[@numFound='1']");

  }

