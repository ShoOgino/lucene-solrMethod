  /**
   * Tests the {@link FieldAnalysisResponse#setResponse(org.apache.solr.common.util.NamedList)} method.
   */
  @Test
  public void testSetResponse() throws Exception {

    // the parsing of the analysis phases is already tested in the AnalysisResponseBaseTest. So we can just fake
    // the phases list here and use it.
    final List<AnalysisResponseBase.AnalysisPhase> phases = new ArrayList<AnalysisResponseBase.AnalysisPhase>(1);
    AnalysisResponseBase.AnalysisPhase expectedPhase = new AnalysisResponseBase.AnalysisPhase("Tokenizer");
    phases.add(expectedPhase);

    NamedList responseNL = buildResponse();
    FieldAnalysisResponse response = new FieldAnalysisResponse() {
      @Override
      protected List<AnalysisPhase> buildPhases(NamedList<Object> phaseNL) {
        return phases;
      }
    };

    response.setResponse(responseNL);

    assertEquals(1, response.getFieldNameAnalysisCount());
    FieldAnalysisResponse.Analysis analysis = response.getFieldNameAnalysis("name");
    Iterator<AnalysisResponseBase.AnalysisPhase> iter = analysis.getIndexPhases().iterator();
    assertTrue(iter.hasNext());
    assertSame(expectedPhase, iter.next());
    assertFalse(iter.hasNext());
    iter = analysis.getQueryPhases().iterator();
    assertTrue(iter.hasNext());
    assertSame(expectedPhase, iter.next());
    assertFalse(iter.hasNext());

    analysis = response.getFieldTypeAnalysis("text");
    iter = analysis.getIndexPhases().iterator();
    assertTrue(iter.hasNext());
    assertSame(expectedPhase, iter.next());
    assertFalse(iter.hasNext());
    iter = analysis.getQueryPhases().iterator();
    assertTrue(iter.hasNext());
    assertSame(expectedPhase, iter.next());
    assertFalse(iter.hasNext());
  }

