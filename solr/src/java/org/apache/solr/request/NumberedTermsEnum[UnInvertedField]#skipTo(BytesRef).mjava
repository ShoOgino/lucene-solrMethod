  public BytesRef skipTo(BytesRef target) throws IOException {

    // already here
    if (termText != null && termText.equals(target)) return termText;

    if (tenum == null) {
      return null;
    }

    int startIdx = Arrays.binarySearch(tindex.index,target);

    if (startIdx >= 0) {
      // we hit the term exactly... lucky us!
      TermsEnum.SeekStatus seekStatus = tenum.seek(target);
      assert seekStatus == TermsEnum.SeekStatus.FOUND;
      pos = startIdx << tindex.intervalBits;
      return setTerm();
    }

    // we didn't hit the term exactly
    startIdx=-startIdx-1;
    
    if (startIdx == 0) {
      // our target occurs *before* the first term
      TermsEnum.SeekStatus seekStatus = tenum.seek(target);
      assert seekStatus == TermsEnum.SeekStatus.NOT_FOUND;
      pos = 0;
      return setTerm();
    }

    // back up to the start of the block
    startIdx--;

    if ((pos >> tindex.intervalBits) == startIdx && termText != null && termText.compareTo(target)<=0) {
      // we are already in the right block and the current term is before the term we want,
      // so we don't need to seek.
    } else {
      // seek to the right block
      TermsEnum.SeekStatus seekStatus = tenum.seek(tindex.index[startIdx]);
      assert seekStatus == TermsEnum.SeekStatus.FOUND;
      pos = startIdx << tindex.intervalBits;
      setTerm();  // should be non-null since it's in the index
    }

    while (termText != null && termText.compareTo(target) < 0) {
      next();
    }

    return termText;
  }

