  /**
   * Generates a word/number part, updating the appropriate attributes
   *
   * @param isSingleWord {@code true} if the generation is occurring from a single word, {@code false} otherwise
   */
  private void generatePart(boolean isSingleWord) {
    clearAttributes();
    termAtttribute.setTermBuffer(savedBuffer, iterator.current, iterator.end - iterator.current);

    int startOffSet = (isSingleWord || !hasIllegalOffsets) ? savedStartOffset + iterator.current : savedStartOffset;
    int endOffSet = (hasIllegalOffsets) ? savedEndOffset : savedStartOffset + iterator.end;

    offsetAttribute.setOffset(startOffSet, endOffSet);
    posIncAttribute.setPositionIncrement(position(false));
    typeAttribute.setType(savedType);
  }

