  @Override
  public void writeSolrDocument(String name, SolrDocument doc, Set<String> returnFields, Map pseudoFields) throws IOException {
    HashMap <String,Object> single = new HashMap<String, Object>();
    HashMap <String,Object> multi = new HashMap<String, Object>();
    int pseudoSize = pseudoFields != null ? pseudoFields.size() : 0;

    for (String fname : doc.getFieldNames()) {
      if(returnFields != null && !returnFields.contains(fname)){
        continue;
      }

      Object val = doc.getFieldValue(fname);
      SchemaField sf = schema.getFieldOrNull(fname);
      if (sf != null && sf.multiValued()) {
        multi.put(fname, val);
      }else{
        single.put(fname, val);
      }
    }

    writeMapOpener(single.size() + multi.size() + pseudoSize);
    for(String fname: single.keySet()){
      Object val = single.get(fname);
      writeKey(fname, true);
      writeVal(fname, val);
    }
    
    for(String fname: multi.keySet()){
      writeKey(fname, true);

      Object val = multi.get(fname);
      if (!(val instanceof Collection)) {
        // should never be reached if multivalued fields are stored as a Collection
        // so I'm assuming a size of 1 just to wrap the single value
        writeArrayOpener(1);
        writeVal(fname, val);
        writeArrayCloser();
      }else{
        writeVal(fname, val);
      }
    }

    if (pseudoSize > 0) {
      writeMap(null,pseudoFields,true, false);
    }
    writeMapCloser();
  }

