    /** 
     * Recursively sets {@link #getParent} and populates {@link #kids} from {@link #kidShortnames} 
     * via the <code>allPages</code> Map 
     */
    public void buildPageTreeRecursive(Page parent, Map<String,Page> allPages) {
      if (null != parent) {
        if (null != this.parent) {
          // as long as we also check (later) that every page has a parent, this check (prior to recusion)
          // also ensures we never have any loops
          throw new RuntimeException(file.getName() + " is listed as the child of (at least) 2 pages: '" + parent.shortname + "' and '" + this.parent.shortname + "'");
        }
        this.parent = parent;
      }
      for (String kidShortname : kidShortnames) {
        Page kid = allPages.get(kidShortname);
        if (null == kid) {
          throw new RuntimeException("Unable to locate " + kidShortname + "; child of " + shortname + "("+file.toString());
        }
        mutableKids.add(kid);
        kid.buildPageTreeRecursive(this, allPages);
      }
    }

