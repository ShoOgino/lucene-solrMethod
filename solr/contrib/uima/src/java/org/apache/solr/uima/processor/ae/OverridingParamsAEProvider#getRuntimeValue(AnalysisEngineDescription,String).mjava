  /* create the value to inject in the runtime parameter depending on its declared type */
  private Object getRuntimeValue(AnalysisEngineDescription desc, String attributeName)
          throws ClassNotFoundException {
    String type = desc.getAnalysisEngineMetaData().getConfigurationParameterDeclarations().
                    getConfigurationParameter(null, attributeName).getType();
    // TODO : do it via reflection ? i.e. Class paramType = Class.forName(type)...
    Object val = null;
    Object runtimeValue = runtimeParameters.get(attributeName);
    if (runtimeValue!=null) {
      if ("String".equals(type)) {
        val = String.valueOf(runtimeValue);
      }
      else if ("Integer".equals(type)) {
        val = Integer.valueOf(runtimeValue.toString());
      }
      else if ("Boolean".equals(type)) {
        val = Boolean.valueOf(runtimeValue.toString());
      }
      else if ("Float".equals(type)) {
        val = Float.valueOf(runtimeValue.toString());
      }
    }

    return val;
  }

