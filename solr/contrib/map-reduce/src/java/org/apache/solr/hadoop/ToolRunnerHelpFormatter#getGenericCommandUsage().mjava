  public static String getGenericCommandUsage() {
    ByteArrayOutputStream bout = new ByteArrayOutputStream();
    String msg;
    try {
      ToolRunner.printGenericCommandUsage(new PrintStream(bout, true, "UTF-8"));
      msg = new String(bout.toByteArray(), "UTF-8");
    } catch (UnsupportedEncodingException e) {
      throw new RuntimeException(e); // unreachable
    }
    
    BufferedReader reader = new BufferedReader(new StringReader(msg));    
    StringBuilder result = new StringBuilder();
    while (true) {
      String line;
      try {
        line = reader.readLine();
      } catch (IOException e) {
        throw new RuntimeException(e); // unreachable
      }
      
      if (line == null) {
        return result.toString(); // EOS
      }
      
      if (!line.startsWith("-")) {
        result.append(line + "\n");
      } else {
        line = line.trim();
        int i = line.indexOf("  ");
        if (i < 0) {
          i = line.indexOf('\t');
        }
        if (i < 0) {
          result.append(line + "\n");          
        } else {
          String title = line.substring(0, i).trim();
          if (title.length() >= 3 && Character.isLetterOrDigit(title.charAt(1)) && Character.isLetterOrDigit(title.charAt(2))) {
            title = "-" + title; // prefer "--libjars" long arg style over "-libjars" style but retain "-D foo" short arg style        
          }
          String help = line.substring(i, line.length()).trim();
          StringWriter strWriter = new StringWriter(); 
          PrintWriter writer = new PrintWriter(strWriter, true);
          TextHelper.printHelp(writer, title, help, new ASCIITextWidthCounter(), ArgumentParsers.getFormatWidth());
          result.append(strWriter.toString());          
        }        
      }
    }
  }

