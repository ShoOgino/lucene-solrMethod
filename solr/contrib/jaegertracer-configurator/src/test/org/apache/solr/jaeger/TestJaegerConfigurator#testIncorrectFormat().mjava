  @Test
  public void testIncorrectFormat() {
    JaegerTracerConfigurator configurator = new JaegerTracerConfigurator();
    NamedList initArgs = new NamedList();
    initArgs.add(AGENT_HOST, 100);
    initArgs.add(AGENT_PORT, 5775);

    IllegalArgumentException exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));
    assertTrue(exc.getMessage().contains(AGENT_HOST));

    initArgs.clear();
    initArgs.add(AGENT_HOST, "localhost");
    initArgs.add(AGENT_PORT, "5775");
    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));
    assertTrue(exc.getMessage().contains(AGENT_PORT));

    initArgs.clear();
    initArgs.add(AGENT_HOST, "localhost");
    initArgs.add(AGENT_PORT, 5775);
    initArgs.add(LOG_SPANS, 10);
    SolrException solrExc = expectThrows(SolrException.class, () -> configurator.init(initArgs));
    assertTrue(solrExc.getMessage().contains(LOG_SPANS));

    initArgs.clear();
    initArgs.add(AGENT_HOST, "localhost");
    initArgs.add(AGENT_PORT, 5775);
    initArgs.add(FLUSH_INTERVAL, "10");
    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));
    assertTrue(exc.getMessage().contains(FLUSH_INTERVAL));

    initArgs.clear();
    initArgs.add(AGENT_HOST, "localhost");
    initArgs.add(AGENT_PORT, 5775);
    initArgs.add(MAX_QUEUE_SIZE, "10");
    exc = expectThrows(IllegalArgumentException.class, () -> configurator.init(initArgs));
    assertTrue(exc.getMessage().contains(MAX_QUEUE_SIZE));

  }

