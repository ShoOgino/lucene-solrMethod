  private int testOverwrittenMethods() throws Exception {
    int overridableMethodCount = 0;
    for (final Method superClassMethod : LTRScoringModel.class.getDeclaredMethods()) {
      final int modifiers = superClassMethod.getModifiers();
      if (Modifier.isFinal(modifiers)) continue;
      if (Modifier.isStatic(modifiers)) continue;

      ++overridableMethodCount;
      if (Arrays.asList(
          "getName",  // the wrapper model's name is its own name i.e. _not_ the name of the wrapped model
          "getFeatureStoreName", // wrapper and wrapped model feature store should match, so need not override
          "getParams" // the wrapper model's params are its own params i.e. _not_ the params of the wrapped model
          ).contains(superClassMethod.getName())) {
        try {
          final Method subClassMethod = WrapperModel.class.getDeclaredMethod(
              superClassMethod.getName(),
              superClassMethod.getParameterTypes());
          fail(WrapperModel.class + " need not override\n'" + superClassMethod + "'"
               + " but it does override\n'" + subClassMethod + "'");
        } catch (NoSuchMethodException e) {
          // ok
        }
      } else {
        try {
          final Method subClassMethod = WrapperModel.class.getDeclaredMethod(
              superClassMethod.getName(),
              superClassMethod.getParameterTypes());
          assertEquals("getReturnType() difference",
              superClassMethod.getReturnType(),
              subClassMethod.getReturnType());
        } catch (NoSuchMethodException e) {
          fail(WrapperModel.class + " needs to override '" + superClassMethod + "'");
        }
      }
    }
    return overridableMethodCount;
  }

