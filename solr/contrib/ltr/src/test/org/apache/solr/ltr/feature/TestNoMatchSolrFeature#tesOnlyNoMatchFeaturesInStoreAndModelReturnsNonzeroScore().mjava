  @Test
  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {
    // Tests model with all no matching features but expects a non 0 score
    //  MultipleAdditiveTrees will return scores even for docs without any feature matches
    loadModel(
        "nomatchmodel4",
        MultipleAdditiveTreesModel.class.getName(),
        new String[] {"nomatchfeature4"},
        "noMatchFeaturesStore",
        "{\"trees\":[{\"weight\":\"1f\", \"root\":{\"feature\": \"matchedTitle\",\"threshold\": \"0.5f\",\"left\":{\"value\" : \"-10\"},\"right\":{\"value\" : \"9\"}}}]}");

    final SolrQuery query = new SolrQuery();
    query.setQuery("*:*");
    query.add("fl", "*, score,fv:[fv]");
    query.add("rows", "4");
    query.add("rq", "{!ltr model=nomatchmodel4 reRankDocs=4}");

    final String docs0fv_dense_csv = FeatureLoggerTestUtils.toFeatureVector(
        "nomatchfeature4","0.0");
    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector();

    final String docs0fv_default_csv = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);

    assertJQ("/query" + query.toQueryString(),
        "/response/docs/[0]/score==0.0");
    assertJQ("/query" + query.toQueryString(), "/response/docs/[0]/fv=='"+docs0fv_default_csv+"'");
  }

