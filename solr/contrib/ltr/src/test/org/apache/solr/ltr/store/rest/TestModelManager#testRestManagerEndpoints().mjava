  @Test
  public void testRestManagerEndpoints() throws Exception {
    // relies on these ManagedResources being activated in the
    // schema-rest.xml used by this test
    assertJQ("/schema/managed", "/responseHeader/status==0");

    final String valueFeatureClassName = ValueFeature.class.getCanonicalName();

    // Add features
    String feature = "{\"name\": \"test1\", \"class\": \""+valueFeatureClassName+"\", \"params\": {\"value\": 1} }";
    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,
        "/responseHeader/status==0");

    feature = "{\"name\": \"test2\", \"class\": \""+valueFeatureClassName+"\", \"params\": {\"value\": 1} }";
    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,
        "/responseHeader/status==0");

    feature = "{\"name\": \"test3\", \"class\": \""+valueFeatureClassName+"\", \"params\": {\"value\": 1} }";
    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,
        "/responseHeader/status==0");

    feature = "{\"name\": \"test33\", \"store\": \"TEST\", \"class\": \""+valueFeatureClassName+"\", \"params\": {\"value\": 1} }";
    assertJPut(ManagedFeatureStore.REST_END_POINT, feature,
        "/responseHeader/status==0");

    final String multipleFeatures = "[{\"name\": \"test4\", \"class\": \""+valueFeatureClassName+"\", \"params\": {\"value\": 1} }"
        + ",{\"name\": \"test5\", \"class\": \""+valueFeatureClassName+"\", \"params\": {\"value\": 1} } ]";
    assertJPut(ManagedFeatureStore.REST_END_POINT, multipleFeatures,
        "/responseHeader/status==0");

    final String fieldValueFeatureClassName = FieldValueFeature.class.getCanonicalName();

    // Add bad feature (wrong params)_
    final String badfeature = "{\"name\": \"fvalue\", \"class\": \""+fieldValueFeatureClassName+"\", \"params\": {\"value\": 1} }";
    assertJPut(ManagedFeatureStore.REST_END_POINT, badfeature,
        "/error/msg/=='No setter corrresponding to \\'value\\' in "+fieldValueFeatureClassName+"'");

    final String linearModelClassName = LinearModel.class.getCanonicalName();

    // Add models
    String model = "{ \"name\":\"testmodel1\", \"class\":\""+linearModelClassName+"\", \"features\":[] }";
    // fails since it does not have features
    assertJPut(ManagedModelStore.REST_END_POINT, model,
        "/responseHeader/status==400");
    // fails since it does not have weights
    model = "{ \"name\":\"testmodel2\", \"class\":\""+linearModelClassName+"\", \"features\":[{\"name\":\"test1\"}, {\"name\":\"test2\"}] }";
    assertJPut(ManagedModelStore.REST_END_POINT, model,
        "/responseHeader/status==400");
    // success
    model = "{ \"name\":\"testmodel3\", \"class\":\""+linearModelClassName+"\", \"features\":[{\"name\":\"test1\"}, {\"name\":\"test2\"}],\"params\":{\"weights\":{\"test1\":1.5,\"test2\":2.0}}}";
    assertJPut(ManagedModelStore.REST_END_POINT, model,
        "/responseHeader/status==0");
    // success
    final String multipleModels = "[{ \"name\":\"testmodel4\", \"class\":\""+linearModelClassName+"\", \"features\":[{\"name\":\"test1\"}, {\"name\":\"test2\"}],\"params\":{\"weights\":{\"test1\":1.5,\"test2\":2.0}} }\n"
        + ",{ \"name\":\"testmodel5\", \"class\":\""+linearModelClassName+"\", \"features\":[{\"name\":\"test1\"}, {\"name\":\"test2\"}],\"params\":{\"weights\":{\"test1\":1.5,\"test2\":2.0}} } ]";
    assertJPut(ManagedModelStore.REST_END_POINT, multipleModels,
        "/responseHeader/status==0");
    final String qryResult = JQ(ManagedModelStore.REST_END_POINT);

    assert (qryResult.contains("\"name\":\"testmodel3\"")
        && qryResult.contains("\"name\":\"testmodel4\"") && qryResult
          .contains("\"name\":\"testmodel5\""));
    /*
     * assertJQ(LTRParams.MSTORE_END_POINT, "/models/[0]/name=='testmodel3'");
     * assertJQ(LTRParams.MSTORE_END_POINT, "/models/[1]/name=='testmodel4'");
     * assertJQ(LTRParams.MSTORE_END_POINT, "/models/[2]/name=='testmodel5'");
     */
    assertJQ(ManagedFeatureStore.REST_END_POINT,
        "/featureStores==['TEST','_DEFAULT_']");
    assertJQ(ManagedFeatureStore.REST_END_POINT + "/_DEFAULT_",
        "/features/[0]/name=='test1'");
    assertJQ(ManagedFeatureStore.REST_END_POINT + "/TEST",
        "/features/[0]/name=='test33'");
  }

