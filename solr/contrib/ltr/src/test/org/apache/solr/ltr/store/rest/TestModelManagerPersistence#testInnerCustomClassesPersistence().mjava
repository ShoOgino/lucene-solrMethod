  @Test
  public void testInnerCustomClassesPersistence() throws Exception {

    final String featureStoreName = "test42";

    final String featureName = "feature42";
    final String featureClassName;
    if (random().nextBoolean()) {
      featureClassName = ValueFeature.class.getName();
    } else {
      featureClassName = DummyCustomFeature.class.getName();
    }

    loadFeature(featureName, featureClassName, "test42",
        "{\"value\":"+random().nextInt(100)+"}");
    assertJQ(ManagedFeatureStore.REST_END_POINT + "/"+featureStoreName,
        "/features/[0]/name=='"+featureName+"'");

    final String modelName = "model42";
    final String modelClassName;
    if (random().nextBoolean()) {
      modelClassName = LinearModel.class.getName();
    } else {
      modelClassName = DummyCustomModel.class.getName();
    }

    loadModel(modelName, modelClassName,
        new String[] { featureName }, featureStoreName,
        "{\"weights\":{\""+featureName+"\":1.0}}");
    assertJQ(ManagedModelStore.REST_END_POINT,
        "/models/[0]/name=='"+modelName+"'");

    restTestHarness.reload();
    assertJQ(ManagedFeatureStore.REST_END_POINT + "/"+featureStoreName,
        "/features/[0]/name=='"+featureName+"'");
    assertJQ(ManagedModelStore.REST_END_POINT,
        "/models/[0]/name=='"+modelName+"'");

    assertJDelete(ManagedModelStore.REST_END_POINT + "/"+modelName,
        "/responseHeader/status==0");
    assertJQ(ManagedModelStore.REST_END_POINT,
        "/models/==[]");

    assertJDelete(ManagedFeatureStore.REST_END_POINT + "/"+featureStoreName,
        "/responseHeader/status==0");
    assertJQ(ManagedFeatureStore.REST_END_POINT + "/"+featureStoreName,
        "/features/==[]");
  }

