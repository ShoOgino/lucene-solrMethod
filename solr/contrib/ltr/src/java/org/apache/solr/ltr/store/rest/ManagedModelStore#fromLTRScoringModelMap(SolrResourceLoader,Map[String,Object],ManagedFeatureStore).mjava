  @SuppressWarnings("unchecked")
  public static LTRScoringModel fromLTRScoringModelMap(SolrResourceLoader solrResourceLoader,
      Map<String,Object> modelMap, ManagedFeatureStore managedFeatureStore) {

    final FeatureStore featureStore =
        managedFeatureStore.getFeatureStore((String) modelMap.get(STORE_KEY));

    final List<Feature> features = new ArrayList<>();
    final List<Normalizer> norms = new ArrayList<>();

    final List<Object> featureList = (List<Object>) modelMap.get(FEATURES_KEY);
    if (featureList != null) {
      for (final Object feature : featureList) {
        final Map<String,Object> featureMap = (Map<String,Object>) feature;
        features.add(lookupFeatureFromFeatureMap(featureMap, featureStore));
        norms.add(createNormalizerFromFeatureMap(solrResourceLoader, featureMap));
      }
    }

    final LTRScoringModel ltrScoringModel = LTRScoringModel.getInstance(solrResourceLoader,
        (String) modelMap.get(CLASS_KEY), // modelClassName
        (String) modelMap.get(NAME_KEY), // modelName
        features,
        norms,
        featureStore.getName(),
        featureStore.getFeatures(),
        (Map<String,Object>) modelMap.get(PARAMS_KEY));

    if (ltrScoringModel instanceof AdapterModel) {
      initAdapterModel(solrResourceLoader, (AdapterModel)ltrScoringModel, managedFeatureStore);
    }

    return ltrScoringModel;
  }

