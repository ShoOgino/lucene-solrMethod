    public SolrFeatureWeight(IndexSearcher searcher,
        SolrQueryRequest request, Query originalQuery, Map<String,String[]> efi) throws IOException {
      super(SolrFeature.this, searcher, request, originalQuery, efi);
      try {
        String solrQuery = q;
        final List<String> fqs = fq;

        if ((solrQuery == null) || solrQuery.isEmpty()) {
          solrQuery = "*:*";
        }

        solrQuery = macroExpander.expand(solrQuery);
        if (solrQuery == null) {
          throw new FeatureException(this.getClass().getSimpleName()+" requires efi parameter that was not passed in request.");
        }

        final SolrQueryRequest req = makeRequest(request.getCore(), solrQuery,
            fqs, df);
        if (req == null) {
          throw new IOException("ERROR: No parameters provided");
        }

        // Build the filter queries
        queryAndFilters = new ArrayList<Query>(); // If there are no fqs we just want an empty list
        if (fqs != null) {
          for (String fq : fqs) {
            if ((fq != null) && (fq.trim().length() != 0)) {
              fq = macroExpander.expand(fq);
              if (fq == null) {
                throw new FeatureException(this.getClass().getSimpleName()+" requires efi parameter that was not passed in request.");
              }
              final QParser fqp = QParser.getParser(fq, req);
              final Query filterQuery = fqp.getQuery();
              if (filterQuery != null) {
                queryAndFilters.add(filterQuery);
              }
            }
          }
        }

        final QParser parser = QParser.getParser(solrQuery, req);
        query = parser.parse();

        // Query can be null if there was no input to parse, for instance if you
        // make a phrase query with "to be", and the analyzer removes all the
        // words
        // leaving nothing for the phrase query to parse.
        if (query != null) {
          queryAndFilters.add(query);
          solrQueryWeight = searcher.createWeight(searcher.rewrite(query), ScoreMode.COMPLETE, 1);
        } else {
          solrQueryWeight = null;
        }
      } catch (final SyntaxError e) {
        throw new FeatureException("Failed to parse feature query.", e);
      }
    }

