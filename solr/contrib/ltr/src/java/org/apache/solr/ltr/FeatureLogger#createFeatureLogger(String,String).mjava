  /**
   * returns a FeatureLogger that logs the features in output, using the format
   * specified in the 'stringFormat' param: 'csv' will log the features as a unique
   * string in csv format 'json' will log the features in a map in a Map of
   * featureName keys to featureValue values if format is null or empty, csv
   * format will be selected.
   * 'featureFormat' param: 'dense' will write features in dense format,
   * 'sparse' will write the features in sparse format, null or empty will
   * default to 'sparse'
   *
   *
   * @return a feature logger for the format specified.
   */
  public static FeatureLogger<?> createFeatureLogger(String stringFormat, String featureFormat) {
    final FeatureFormat f;
    if (featureFormat == null || featureFormat.isEmpty() ||
        featureFormat.equals("sparse")) {
      f = FeatureFormat.SPARSE;
    }
    else if (featureFormat.equals("dense")) {
      f = FeatureFormat.DENSE;
    }
    else {
      f = FeatureFormat.SPARSE;
      log.warn("unknown feature logger feature format {} | {}", stringFormat, featureFormat);
    }
    if ((stringFormat == null) || stringFormat.isEmpty()) {
      return new CSVFeatureLogger(f);
    }
    if (stringFormat.equals("csv")) {
      return new CSVFeatureLogger(f);
    }
    if (stringFormat.equals("json")) {
      return new MapFeatureLogger(f);
    }
    log.warn("unknown feature logger string format {} | {}", stringFormat, featureFormat);
    return null;

  }

