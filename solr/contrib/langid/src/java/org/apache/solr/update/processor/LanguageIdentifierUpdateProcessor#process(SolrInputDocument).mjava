  /**
   * This is the main process method called from processAdd()
   * @param doc the SolrInputDocument to modify
   */
  protected void process(SolrInputDocument doc) {
    String docLang = null;
    HashSet<String> docLangs = new HashSet<>();
    String fallbackLang = getFallbackLang(doc, fallbackFields, fallbackValue);

    if(langField == null || !doc.containsKey(langField) || (doc.containsKey(langField) && overwrite)) {
      List<DetectedLanguage> languagelist = detectLanguage(doc);
      docLang = resolveLanguage(languagelist, fallbackLang);
      docLangs.add(docLang);
      if (log.isDebugEnabled()) {
        log.debug("Detected main document language from fields {}: {}", Arrays.toString(inputFields), docLang);
      }

      if(doc.containsKey(langField) && overwrite) {
        if (log.isDebugEnabled()) {
          log.debug("Overwritten old value {}", doc.getFieldValue(langField));
        }
      }
      if(langField != null && langField.length() != 0) {
        doc.setField(langField, docLang);
      }
    } else {
      // langField is set, we sanity check it against whitelist and fallback
      docLang = resolveLanguage(doc.getFieldValue(langField).toString(), fallbackLang);
      docLangs.add(docLang);
      log.debug("Field {} already contained value {}, not overwriting.", langField, docLang);
    }

    if(enableMapping) {
      for (String fieldName : allMapFieldsSet) {
        if(doc.containsKey(fieldName)) {
          String fieldLang;
          if(mapIndividual && mapIndividualFieldsSet.contains(fieldName)) {
            List<DetectedLanguage> languagelist = detectLanguage(solrDocReader(doc, new String[]{fieldName}));
            fieldLang = resolveLanguage(languagelist, docLang);
            docLangs.add(fieldLang);
            log.debug("Mapping field {} using individually detected language {}", fieldName, fieldLang);
          } else {
            fieldLang = docLang;
            log.debug("Mapping field {} using document global language {}", fieldName, fieldLang);
          }
          String mappedOutputField = getMappedField(fieldName, fieldLang);

          if (mappedOutputField != null) {
            if (log.isDebugEnabled()) {
              log.debug("Mapping field {} to {}", doc.getFieldValue(docIdField), fieldLang);
            }
            SolrInputField inField = doc.getField(fieldName);
            doc.setField(mappedOutputField, inField.getValue());
            if(!mapKeepOrig) {
              log.debug("Removing old field {}", fieldName);
              doc.removeField(fieldName);
            }
          } else {
            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Invalid output field mapping for "
                    + fieldName + " field and language: " + fieldLang);
          }
        }
      }
    }

    // Set the languages field to an array of all detected languages
    if(langsField != null && langsField.length() != 0) {
      doc.setField(langsField, docLangs.toArray());
    }
  }

