  @Test
  public void singleValueStringTest() {
    TestStringValue val = new TestStringValue();
    TestStringValue comp = new TestStringValue();
    TestStringValue fill = new TestStringValue();

    AnalyticsValueStream uncasted = ReplaceFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, comp, fill});
    assertTrue(uncasted instanceof StringValue);
    StringValue func = (StringValue) uncasted;

    // Value doesn't exist
    val.setExists(false);
    comp.setExists(false);
    fill.setExists(false);
    func.getString();
    assertFalse(func.exists());

    val.setExists(false);
    comp.setValue("abc456").setExists(true);
    fill.setValue("not touched").setExists(true);
    func.getString();
    assertFalse(func.exists());
    
    // Comp doesn't exist
    val.setValue("abcd").setExists(true);
    comp.setExists(false);
    fill.setValue("12234").setExists(true);
    assertEquals("abcd", func.getString());
    assertTrue(func.exists());
    
    // Value exists
    // Comp != Val
    val.setValue("original").setExists(true);
    comp.setValue("different").setExists(true);
    
    fill.setValue("anything").setExists(true);
    assertEquals("original", func.getString());
    assertTrue(func.exists());
    
    fill.setExists(false);
    assertEquals("original", func.getString());
    assertTrue(func.exists());
    
    // Comp == Val
    val.setValue("the same").setExists(true);
    comp.setValue("the same").setExists(true);
    
    fill.setExists(false);
    func.getString();
    assertFalse(func.exists());

    fill.setValue("replacement").setExists(true);
    assertEquals("replacement", func.getString());
    assertTrue(func.exists());
  }

