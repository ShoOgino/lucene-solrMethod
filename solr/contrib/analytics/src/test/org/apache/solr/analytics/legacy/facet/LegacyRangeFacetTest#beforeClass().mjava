  @BeforeClass
  public static void beforeClass() throws Exception {
    initCore("solrconfig-analytics.xml","schema-analytics.xml");
    h.update("<delete><query>*:*</query></delete>");
    
    //INT
    intLongTestStart = new ArrayList<>();
    intDoubleTestStart = new ArrayList<>();
    intDateTestStart = new ArrayList<>();
    
    //FLOAT
    floatLongTestStart = new ArrayList<>();
    floatDoubleTestStart = new ArrayList<>();
    floatDateTestStart = new ArrayList<>();
    
    for (int j = 0; j < NUM_LOOPS; ++j) {
      int i = j%INT;
      long l = j%LONG;
      float f = j%FLOAT;
      double d = j%DOUBLE;
      int dt = j%DATE;
      int s = j%STRING;
      assertU(adoc("id", "1000" + j, "int_id", "" + i, "long_ld", "" + l, "float_fd", "" + f, 
          "double_dd", "" + d,  "date_dtd", (1000+dt) + "-01-01T23:59:59Z", "string_sd", "abc" + s));
      //Longs
      if (j-LONG<0) {
        ArrayList<Integer> list1 = new ArrayList<>();
        list1.add(i);
        intLongTestStart.add(list1);
        ArrayList<Float> list2 = new ArrayList<>();
        list2.add(f);
        floatLongTestStart.add(list2);
      } else {
        intLongTestStart.get((int)l).add(i);
        floatLongTestStart.get((int)l).add(f);
      }
      //Doubles
      if (j-DOUBLE<0) {
        ArrayList<Integer> list1 = new ArrayList<>();
        list1.add(i);
        intDoubleTestStart.add(list1);
        ArrayList<Float> list2 = new ArrayList<>();
        list2.add(f);
        floatDoubleTestStart.add(list2);
      } else {
        intDoubleTestStart.get((int)d).add(i);
        floatDoubleTestStart.get((int)d).add(f);
      }
      //Dates
      if (j-DATE<0) {
        ArrayList<Integer> list1 = new ArrayList<>();
        list1.add(i);
        intDateTestStart.add(list1);
        ArrayList<Float> list2 = new ArrayList<>();
        list2.add(f);
        floatDateTestStart.add(list2);
      } else {
        intDateTestStart.get(dt).add(i);
        floatDateTestStart.get(dt).add(f);
      }
      
      if (usually()) {
        assertU(commit());  // to have several segments
      }
    }
    
    assertU(commit()); 
    
    setResponse(h.query(request(fileToStringArr(LegacyRangeFacetTest.class, fileName))));
  }

