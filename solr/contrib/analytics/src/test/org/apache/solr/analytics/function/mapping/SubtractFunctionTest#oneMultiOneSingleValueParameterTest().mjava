  @Test
  public void oneMultiOneSingleValueParameterTest() {
    TestLongValueStream minuend = new TestLongValueStream();
    TestDoubleValue subtrahend = new TestDoubleValue();

    AnalyticsValueStream uncasted = SubtractFunction.creatorFunction.apply(new AnalyticsValueStream[] {minuend, subtrahend});
    assertTrue(uncasted instanceof DoubleValueStream);
    DoubleValueStream func = (DoubleValueStream) uncasted;

    // No values, One value
    minuend.setValues();
    subtrahend.setValue(21.56F).setExists(true);
    func.streamDoubles( value -> {
      assertTrue("There should be no values to stream", false);
    });

    // Multiple values, no value
    minuend.setValues(4L, 10023L);
    subtrahend.setExists(false);
    func.streamDoubles( value -> {
      assertTrue("There should be no values to stream", false);
    });

    // Multiple values, one value
    minuend.setValues(20L, 5L, 234L);
    subtrahend.setValue(44.56F).setExists(true);
    Iterator<Double> values = Arrays.asList(-24.56, -39.56, 189.44).iterator();
    func.streamDoubles( value -> {
      assertTrue(values.hasNext());
      assertEquals(values.next(), value, 0.00001);
    });
    assertFalse(values.hasNext());
  }

