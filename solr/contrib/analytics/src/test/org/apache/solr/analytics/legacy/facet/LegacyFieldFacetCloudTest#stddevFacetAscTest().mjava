  @SuppressWarnings("unchecked")
  @Test
  public void stddevFacetAscTest() throws Exception { 
    String[] params = new String[] {
        "o.stddev.s.int", "stddev(int_id)",
        "o.stddev.s.long", "stddev(long_ld)",
        "o.stddev.s.float", "stddev(float_fd)",
        "o.stddev.s.double", "stddev(double_dd)",
        "o.stddev.ff", "string_sd",
        "o.stddev.ff", "date_dtd"
    };
    NamedList<Object> response = queryLegacyCloudAnalytics(params);
    
    //Int Date
    ArrayList<Double> intDate = getValueList(response, "stddev", "fieldFacets", "date_dtd", "int", false);
    ArrayList<Double> intDateTest = calculateFacetedNumberStat(intDateTestStart, "stddev");
    checkStddevs(response, intDate, intDateTest);
    //Int String
    ArrayList<Double> intString = getValueList(response, "stddev", "fieldFacets", "string_sd", "int", false);
    ArrayList<Double> intStringTest = calculateFacetedNumberStat(intStringTestStart, "stddev");
    checkStddevs(response, intString, intStringTest);

    //Long Date
    ArrayList<Double> longDate = getValueList(response, "stddev", "fieldFacets", "date_dtd", "long", false);
    ArrayList<Double> longDateTest = calculateFacetedNumberStat(longDateTestStart, "stddev");
    checkStddevs(response, longDate, longDateTest);
    //Long String
    ArrayList<Double> longString = getValueList(response, "stddev", "fieldFacets", "string_sd", "long", false);
    ArrayList<Double> longStringTest = calculateFacetedNumberStat(longStringTestStart, "stddev");
    checkStddevs(response, longString, longStringTest);

    //Float Date
    ArrayList<Double> floatDate = getValueList(response, "stddev", "fieldFacets", "date_dtd", "float", false);
    ArrayList<Double> floatDateTest = calculateFacetedNumberStat(floatDateTestStart, "stddev");
    checkStddevs(response, floatDate, floatDateTest);
    //Float String
    ArrayList<Double> floatString = getValueList(response, "stddev", "fieldFacets", "string_sd", "float", false);
    ArrayList<Double> floatStringTest = calculateFacetedNumberStat(floatStringTestStart, "stddev");
    checkStddevs(response, floatString, floatStringTest);

    //Double Date
    ArrayList<Double> doubleDate = getValueList(response, "stddev", "fieldFacets", "date_dtd", "double", false);
    ArrayList<Double> doubleDateTest = calculateFacetedNumberStat(doubleDateTestStart, "stddev");
    checkStddevs(response, doubleDate, doubleDateTest);
    //Double String
    ArrayList<Double> doubleString = getValueList(response, "stddev", "fieldFacets", "string_sd", "double", false);
    ArrayList<Double> doubleStringTest = calculateFacetedNumberStat(doubleStringTestStart, "stddev");
    checkStddevs(response, doubleString, doubleStringTest);
  }

