  @Test
  public void singleValueIntTest() {
    TestIntValue val = new TestIntValue();
    TestBooleanValue filter = new TestBooleanValue();

    AnalyticsValueStream uncasted = FilterFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, filter});
    assertTrue(uncasted instanceof IntValue);
    IntValue func = (IntValue) uncasted;

    // Value doesn't exist
    val.setExists(false);
    filter.setExists(false);
    func.getInt();
    assertFalse(func.exists());

    val.setValue(32).setExists(true);
    filter.setExists(false);
    func.getInt();
    assertFalse(func.exists());

    val.setExists(false);
    filter.setValue(true).setExists(true);
    func.getInt();
    assertFalse(func.exists());

    // Value exists
    val.setValue(21).setExists(true);
    filter.setValue(true).setExists(true);
    assertEquals(21, func.getInt());
    assertTrue(func.exists());

    val.setValue(-100).setExists(true);
    filter.setValue(false).setExists(true);
    func.getInt();
    assertFalse(func.exists());

    val.setValue(50).setExists(true);
    filter.setValue(true).setExists(true);
    assertEquals(50, func.getInt());
    assertTrue(func.exists());

    val.setValue(5432).setExists(true);
    filter.setValue(false).setExists(true);
    func.getInt();
    assertFalse(func.exists());
  }

