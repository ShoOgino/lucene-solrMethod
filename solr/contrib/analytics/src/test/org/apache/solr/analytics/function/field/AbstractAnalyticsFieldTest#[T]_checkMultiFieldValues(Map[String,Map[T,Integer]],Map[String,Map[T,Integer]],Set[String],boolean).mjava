  protected <T> void checkMultiFieldValues(Map<String,Map<T,Integer>> expected, Map<String,Map<T,Integer>> found, Set<String> missing, boolean deduplicated) {
    expected.forEach( (id, expectedValues) -> {
      assertTrue("Field does not contain values for id '" + id + "'.", found.containsKey(id));
      Map<T,Integer> foundValues = found.get(id);
      expectedValues.forEach( (value, count) -> {
        assertTrue("Value '" + value + "' not found for document with id '" + id + "'.", foundValues.containsKey(value));
        if (deduplicated) {
          assertEquals(1, foundValues.get(value).intValue());
        } else {
          assertEquals(count, foundValues.get(value));
        }
      });
      assertEquals(expectedValues.size(), foundValues.size());
    });
    assertEquals(expected.size(), found.size());
    
    missingDocuments.forEach( id -> assertTrue("Field does not have correct information for missing id '" + id + "'.", missing.contains(id)));
    assertEquals(missingDocuments.size(), missing.size());
  }

