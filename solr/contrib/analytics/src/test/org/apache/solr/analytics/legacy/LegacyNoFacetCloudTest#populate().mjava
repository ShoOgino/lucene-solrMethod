  @Before
  public void populate() throws Exception {
    intTestStart = new ArrayList<>();
    longTestStart = new ArrayList<>();
    floatTestStart = new ArrayList<>();
    doubleTestStart = new ArrayList<>();
    dateTestStart = new ArrayList<>();
    stringTestStart = new ArrayList<>();
    intMissing = 0;
    longMissing = 0;
    doubleMissing = 0;
    floatMissing = 0;
    dateMissing = 0;
    stringMissing = 0;
    
    UpdateRequest req = new UpdateRequest();
    for (int j = 0; j < NUM_LOOPS; ++j) {
      int i = j%INT;
      long l = j%LONG;
      float f = j%FLOAT;
      double d = j%DOUBLE;
      String dt = (1800+j%DATE) + "-12-31T23:59:59Z";
      String s = "str" + (j%STRING);
      List<String> fields = new ArrayList<>();
      fields.add("id"); fields.add("1000"+j);
      
      if( i != 0 ){
        fields.add("int_id"); fields.add("" + i);
        intTestStart.add(i);
      } else intMissing++;
      
      if( l != 0l ){
        fields.add("long_ld"); fields.add("" + l);
        longTestStart.add(l);
      } else longMissing++;
      
      if( f != 0.0f ){
        fields.add("float_fd"); fields.add("" + f);
        floatTestStart.add(f);
      } else floatMissing++;
      
      if( d != 0.0d ){
        fields.add("double_dd"); fields.add("" + d);
        doubleTestStart.add(d);
      } else doubleMissing++;
      
      if( (j%DATE) != 0 ){
        fields.add("date_dtd"); fields.add(dt);
        dateTestStart.add(dt);
      } else dateMissing++;
      
      if( (j%STRING) != 0 ){
        fields.add("string_sd"); fields.add(s);
        stringTestStart.add(s);
      } else stringMissing++;

      req.add(fields.toArray(new String[0]));
    }
    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);
  }

