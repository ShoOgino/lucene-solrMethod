  @Test
  public void missingTest() throws Exception { 
    String[] params = new String[] {
        "o.missingn.s.int", "missing(int_id)",
        "o.missingn.s.long", "missing(long_ld)",
        "o.missingn.s.float", "missing(float_fd)",
        "o.missingn.s.double", "missing(double_dd)",
        "o.missingn.ff", "string_sd",
        "o.missingn.ff", "date_dtd",

        "o.missing.s.str", "missing(string_sd)",
        "o.missing.s.date", "missing(date_dtd)",
        "o.missing.ff", "int_id",
        "o.missing.ff", "long_ld"
    };
    NamedList<Object> response = queryCloudAnalytics(params);
    String responseStr = response.toString();
    
    //Int Date
    Collection<Long> intDate = getValueList(response, "missingn", "fieldFacets", "date_dtd", "int", false);
    setLatestType("int");
    assertEquals(responseStr,intDateTestMissing,intDate);
    
    //Int String
    Collection<Long> intString = getValueList(response, "missingn", "fieldFacets", "string_sd", "int", false);
    assertEquals(responseStr,intStringTestMissing,intString);

    //Long Date
    Collection<Long> longDate = getValueList(response, "missingn", "fieldFacets", "date_dtd", "long", false);
    setLatestType("long");
    assertEquals(responseStr,longDateTestMissing,longDate);
    
    //Long String
    Collection<Long> longString = getValueList(response, "missingn", "fieldFacets", "string_sd", "long", false);
    assertEquals(responseStr,longStringTestMissing,longString);

    //Float Date
    Collection<Long> floatDate = getValueList(response, "missingn", "fieldFacets", "date_dtd", "float", false);
    setLatestType("float");
    assertEquals(responseStr,floatDateTestMissing,floatDate);
    
    //Float String
    Collection<Long> floatString = getValueList(response, "missingn", "fieldFacets", "string_sd", "float", false);
    assertEquals(responseStr,floatStringTestMissing,floatString);

    //Double Date
    Collection<Long> doubleDate = getValueList(response, "missingn", "fieldFacets", "date_dtd", "double", false);
    setLatestType("double");
    assertEquals(responseStr,doubleDateTestMissing,doubleDate);
    
    //Double String
    Collection<Long> doubleString = getValueList(response, "missingn", "fieldFacets", "string_sd", "double", false);
    assertEquals(responseStr,doubleStringTestMissing,doubleString);

    //Date Int
    Collection<Long> dateInt = getValueList(response, "missing", "fieldFacets", "int_id", "date", false);
    setLatestType("date");
    assertEquals(responseStr,dateIntTestMissing,dateInt);
    
    //Date Long
    Collection<Long> dateLong = getValueList(response, "missing", "fieldFacets", "long_ld", "date", false);
    assertEquals(responseStr,dateLongTestMissing,dateLong);

    //String Int
    Collection<Long> stringInt = getValueList(response, "missing", "fieldFacets", "int_id", "str", false);
    setLatestType("string");
    assertEquals(responseStr,stringIntTestMissing,stringInt);
    
    //String Long
    Collection<Long> stringLong = getValueList(response, "missing", "fieldFacets", "long_ld", "str", false);
    assertEquals(responseStr,stringLongTestMissing,stringLong);
  }

