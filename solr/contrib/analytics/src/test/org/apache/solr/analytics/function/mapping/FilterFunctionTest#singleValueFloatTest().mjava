  @Test
  public void singleValueFloatTest() {
    TestFloatValue val = new TestFloatValue();
    TestBooleanValue filter = new TestBooleanValue();

    AnalyticsValueStream uncasted = FilterFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, filter});
    assertTrue(uncasted instanceof FloatValue);
    FloatValue func = (FloatValue) uncasted;

    // Value doesn't exist
    val.setExists(false);
    filter.setExists(false);
    func.getFloat();
    assertFalse(func.exists());

    val.setValue(32.123F).setExists(true);
    filter.setExists(false);
    func.getFloat();
    assertFalse(func.exists());
    
    val.setExists(false);
    filter.setValue(true).setExists(true);
    func.getFloat();
    assertFalse(func.exists());

    // Value exists
    val.setValue(21.453F).setExists(true);
    filter.setValue(true).setExists(true);
    assertEquals(21.453F, func.getFloat(), .000001);
    assertTrue(func.exists());

    val.setValue(-100.123F).setExists(true);
    filter.setValue(false).setExists(true);
    func.getFloat();
    assertFalse(func.exists());

    val.setValue(50.5F).setExists(true);
    filter.setValue(true).setExists(true);
    assertEquals(50.5F, func.getFloat(), .000001);
    assertTrue(func.exists());

    val.setValue(25643.23F).setExists(true);
    filter.setValue(false).setExists(true);
    func.getFloat();
    assertFalse(func.exists());
  }

