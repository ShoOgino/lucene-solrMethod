  @Test
  public void constantParsingTest() throws DateTimeParseException {
    // Int
    AnalyticsValueStream uncasted = ConstantValue.creatorFunction.apply("1234");
    assertTrue(uncasted instanceof ConstantIntValue);
    assertEquals(1234, ((ConstantIntValue)uncasted).getInt());

    // Long
    uncasted = ConstantValue.creatorFunction.apply("1234123412341234");
    assertTrue(uncasted instanceof ConstantLongValue);
    assertEquals(1234123412341234L, ((ConstantLongValue)uncasted).getLong());

    // Floats cannot currently be implicitly created

    // Double
    uncasted = ConstantValue.creatorFunction.apply("12341234.12341234");
    assertTrue(uncasted instanceof ConstantDoubleValue);
    assertEquals(12341234.12341234, ((ConstantDoubleValue)uncasted).getDouble(), .000000001);

    // String
    uncasted = ConstantValue.creatorFunction.apply("'abcdef'");
    assertTrue(uncasted instanceof ConstantStringValue);
    assertEquals("abcdef", ((ConstantStringValue)uncasted).getString());
    
    uncasted = ConstantValue.creatorFunction.apply("\"abcdef\"");
    assertTrue(uncasted instanceof ConstantStringValue);
    assertEquals("abcdef", ((ConstantStringValue)uncasted).getString());

    // Date
    uncasted = ConstantValue.creatorFunction.apply("1800-01-01T10:30:15.33Z");
    assertTrue(uncasted instanceof ConstantDateValue);
    assertEquals(Date.from(Instant.parse("1800-01-01T10:30:15.33Z")), ((ConstantDateValue)uncasted).getDate());
  }

