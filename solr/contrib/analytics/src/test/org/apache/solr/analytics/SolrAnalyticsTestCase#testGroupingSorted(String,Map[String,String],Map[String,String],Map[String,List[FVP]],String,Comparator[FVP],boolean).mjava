  private void testGroupingSorted(String grouping,
                                    Map<String, String> expressions,
                                    Map<String, String> facets,
                                    Map<String, List<FVP>> results,
                                    String sort,
                                    Comparator<FVP> comparator,
                                    boolean sortAscending) throws Exception {
    StringBuilder analyticsRequest = new StringBuilder("{ \"groupings\": { \"" + grouping + "\" : { \"expressions\" : {");
    String expressionsStr = expressions.entrySet()
        .stream()
        .map( entry -> '"' + entry.getKey() + "\":\"" + entry.getValue() + '"')
        .collect(Collectors.joining(" , "));
    analyticsRequest.append(expressionsStr);
    analyticsRequest.append("}, \"facets\": {");
    String facetsStr = facets.entrySet()
        .stream()
        .map( entry -> '"' + entry.getKey() + "\":" + entry.getValue().replaceFirst("}\\s*$", sort) + "}")
        .collect(Collectors.joining(" , "));
    analyticsRequest.append(facetsStr);
    analyticsRequest.append("}}}}");

    String groupingResults = results.entrySet()
        .stream()
        .map( facet -> {
          String resultList = facet.getValue()
              .stream()
              .sorted(sortAscending ? comparator : comparator.reversed())
              .map( fvp -> fvp.toJsonResults() )
              .collect(Collectors.joining(" , "));
          return '"' + facet.getKey() + "\" : [ " + resultList + " ]";
        })
        .collect(Collectors.joining(" , "));

    testAnalytics(analyticsRequest.toString(), "groupings/" + grouping + "=={"+groupingResults+", \"_UNORDERED_\":true}");
  }

