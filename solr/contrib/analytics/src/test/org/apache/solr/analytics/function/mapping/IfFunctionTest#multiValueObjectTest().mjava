  @Test
  public void multiValueObjectTest() {
    TestBooleanValue cond = new TestBooleanValue();
    TestAnalyticsValueStream then = new TestAnalyticsValueStream();
    TestAnalyticsValueStream els = new TestAnalyticsValueStream();

    AnalyticsValueStream func = IfFunction.creatorFunction.apply(new AnalyticsValueStream[] {cond, then, els});

    // No values
    cond.setExists(false);
    then.setValues();
    els.setValues();
    func.streamObjects( value -> {
      assertTrue("There should be no values to stream", false);
    });

    cond.setExists(false);
    then.setValues(new Date(142341), "abcsdafasd", 1234.1324123);
    els.setValues(324923.0234F, 123, Boolean.TRUE, "if statement");
    func.streamObjects( value -> {
      assertTrue("There should be no values to stream", false);
    });
    
    // Result doesn't exist
    cond.setValue(true).setExists(true);
    then.setValues();
    els.setValues(324923.0234F, 123, Boolean.TRUE, "if statement");
    func.streamObjects( value -> {
      assertTrue("There should be no values to stream", false);
    });
    
    cond.setValue(false).setExists(true);
    then.setValues(new Date(142341), "abcsdafasd", 1234.1324123);
    els.setValues();
    func.streamObjects( value -> {
      assertTrue("There should be no values to stream", false);
    });
    
    // Values exist
    cond.setValue(true).setExists(true);
    then.setValues(new Date(142341), "abcsdafasd", 1234.1324123);
    els.setValues(324923.0234F, 123, Boolean.TRUE, "if statement");
    Iterator<Object> values1 = Arrays.<Object>asList(new Date(142341), "abcsdafasd", 1234.1324123).iterator();
    func.streamObjects( value -> {
      assertTrue(values1.hasNext());
      assertEquals(values1.next(), value);
    });
    assertFalse(values1.hasNext());

    cond.setValue(false).setExists(true);
    then.setValues(new Date(142341), "abcsdafasd", 1234.1324123);
    els.setValues(324923.0234F, 123, Boolean.TRUE, "if statement");
    Iterator<Object> values2 = Arrays.<Object>asList(324923.0234F, 123, Boolean.TRUE, "if statement").iterator();
    func.streamObjects( value -> {
      assertTrue(values2.hasNext());
      assertEquals(values2.next(), value);
    });
    assertFalse(values2.hasNext());
  }

