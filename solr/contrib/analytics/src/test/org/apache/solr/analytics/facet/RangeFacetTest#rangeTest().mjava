  @SuppressWarnings("unchecked")
  @Test
  public void rangeTest() throws Exception {
    
    //Int Long
    ArrayList<Long> intLong = getLongList("ri", "rangeFacets", "long_ld", "long", "count");
    ArrayList<Long> intLongTest = calculateStat(transformLists(intLongTestStart, 5, 30, 5
                                                        , false, true, false, false, false), "count");
    assertEquals(getRawResponse(), intLong,intLongTest);
    //Int Double
    ArrayList<Double> intDouble = getDoubleList("ri", "rangeFacets", "double_dd", "double", "mean");
    ArrayList<Double> intDoubleTest = calculateNumberStat(transformLists(intDoubleTestStart, 3, 39, 7
                                                          , false, false, true, false, true), "mean");
    assertEquals(getRawResponse(), intDouble,intDoubleTest);
    //Int Date
    ArrayList<Long> intDate = getLongList("ri", "rangeFacets", "date_dtd", "long", "count");
    ArrayList<Long> intDateTest = (ArrayList<Long>)calculateStat(transformLists(intDateTestStart, 7, 44, 7
                                                      , false, true, false, true, true), "count");
    assertEquals(getRawResponse(), intDate,intDateTest);
    
    //Float Long
    ArrayList<Double> floatLong = getDoubleList("rf", "rangeFacets", "long_ld", "double", "median");
    ArrayList<Double> floatLongTest = calculateNumberStat(transformLists(floatLongTestStart, 0, 29, 4
                                                          , false, true, true, true, true), "median");
    assertEquals(getRawResponse(), floatLong,floatLongTest);
    //Float Double
    ArrayList<Long> floatDouble = getLongList("rf", "rangeFacets", "double_dd", "long", "count");
    ArrayList<Long> floatDoubleTest = (ArrayList<Long>)calculateStat(transformLists(floatDoubleTestStart, 4, 47, 11
                                                                     , false, false, false, true, false), "count");
    assertEquals(getRawResponse(), floatDouble,floatDoubleTest);
    //Float Date                      
    ArrayList<Double> floatDate = getDoubleList("rf", "rangeFacets", "date_dtd", "double", "sumOfSquares");
    ArrayList<Double> floatDateTest = calculateNumberStat(transformLists(floatDateTestStart, 4, 46, 5
                                                          , false, false, true, true, false), "sumOfSquares");
    assertEquals(getRawResponse(), floatDate,floatDateTest);
  }

