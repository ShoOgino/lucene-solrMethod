  @Test
  public void oneMultiOneSingleValueParameterUnseperatedTest() {
    TestStringValueStream val1 = new TestStringValueStream();
    TestStringValue val2 = new TestStringValue();

    AnalyticsValueStream uncasted = ConcatFunction.creatorFunction.apply(new AnalyticsValueStream[] {val1, val2});
    assertTrue(uncasted instanceof StringValueStream);
    StringValueStream func = (StringValueStream) uncasted;

    // None exist
    val1.setValues();
    val2.setExists(false);
    func.streamStrings( value -> {
      assertTrue("There should be no values to stream", false);
    });

    // One exists
    val1.setValues("def");
    val2.setExists(false);
    func.streamStrings( value -> {
      assertTrue("There should be no values to stream", false);
    });

    val1.setValues();
    val2.setValue("abc").setExists(true);
    func.streamStrings( value -> {
      assertTrue("There should be no values to stream", false);
    });

    // Both exist
    val1.setValues("def", "ghi", "jkl");
    val2.setValue("abc").setExists(true);
    Iterator<String> values2 = Arrays.asList("defabc", "ghiabc", "jklabc").iterator();
    func.streamStrings( value -> {
      assertTrue(values2.hasNext());
      assertEquals(values2.next(), value);
    });
    assertFalse(values2.hasNext());
  }

