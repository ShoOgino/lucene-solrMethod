  @Test
  public void singleValueFloatTest() {
    TestFloatValue val = new TestFloatValue();
    TestFloatValue comp = new TestFloatValue();
    TestFloatValue fill = new TestFloatValue();

    AnalyticsValueStream uncasted = ReplaceFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, comp, fill});
    assertTrue(uncasted instanceof FloatValue);
    FloatValue func = (FloatValue) uncasted;

    // Value doesn't exist
    val.setExists(false);
    comp.setExists(false);
    fill.setExists(false);
    func.getFloat();
    assertFalse(func.exists());

    val.setExists(false);
    comp.setValue(3124123.32F).setExists(true);
    fill.setValue(-32473.336F).setExists(true);
    func.getFloat();
    assertFalse(func.exists());
    
    // Comp doesn't exist
    val.setValue(-745.234F).setExists(true);
    comp.setExists(false);
    fill.setValue(23423.324F).setExists(true);
    assertEquals(-745.234F, func.getFloat(), .0000001);
    assertTrue(func.exists());
    
    // Value exists
    // Comp != Val
    val.setValue(3423.304F).setExists(true);
    comp.setValue(3423.303F).setExists(true);
    
    fill.setValue(-23.764F).setExists(true);
    assertEquals(3423.304F, func.getFloat(), .0000001);
    assertTrue(func.exists());
    
    fill.setExists(false);
    assertEquals(3423.304F, func.getFloat(), .0000001);
    assertTrue(func.exists());
    
    // Comp == Val
    val.setValue(-154.45F).setExists(true);
    comp.setValue(-154.45F).setExists(true);
    
    fill.setExists(false);
    func.getFloat();
    assertFalse(func.exists());

    fill.setValue(4353434.234F).setExists(true);
    assertEquals(4353434.234F, func.getFloat(), .0000001);
    assertTrue(func.exists());
  }

