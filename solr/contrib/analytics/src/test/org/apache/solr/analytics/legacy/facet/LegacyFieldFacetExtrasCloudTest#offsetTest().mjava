  @Test
  public void offsetTest() throws Exception {
    String[] params = new String[] {
        "o.offAll.s.mean", "mean(int_id)",
        "o.offAll.ff", "long_ld",
        "o.offAll.ff.long_ld.ss", "mean",
        "o.offAll.ff.long_ld.sd", "asc",
        "o.offAll.ff.long_ld.limit", "7",

        "o.off0.s.mean", "mean(int_id)",
        "o.off0.ff", "long_ld",
        "o.off0.ff.long_ld.ss", "mean",
        "o.off0.ff.long_ld.sd", "asc",
        "o.off0.ff.long_ld.limit", "2",
        "o.off0.ff.long_ld.offset", "0",

        "o.off1.s.mean", "mean(int_id)",
        "o.off1.ff", "long_ld",
        "o.off1.ff.long_ld.ss", "mean",
        "o.off1.ff.long_ld.sd", "asc",
        "o.off1.ff.long_ld.limit", "2",
        "o.off1.ff.long_ld.offset", "2",

        "o.off2.s.mean", "mean(int_id)",
        "o.off2.ff", "long_ld",
        "o.off2.ff.long_ld.ss", "mean",
        "o.off2.ff.long_ld.sd", "asc",
        "o.off2.ff.long_ld.limit", "3",
        "o.off2.ff.long_ld.offset", "4"
    };

    NamedList<Object> response = queryLegacyCloudAnalytics(params);
    String responseStr = response.toString();

    Collection<Double> lon;

    List<Double> all = new ArrayList<>();
    lon = getValueList(response, "off0", "fieldFacets", "long_ld", "mean", false);
    assertEquals(responseStr, lon.size(),2);
    assertArrayEquals(new Double[]{ 1.5,  2.0 }, lon.toArray(new Double[0]));
    all.addAll(lon);

    lon = getValueList(response, "off1", "fieldFacets", "long_ld", "mean", false);
    assertEquals(responseStr, lon.size(),2);
    assertArrayEquals(new Double[]{ 3.0,  4.0 }, lon.toArray(new Double[0]));
    all.addAll(lon);

    lon = getValueList(response, "off2", "fieldFacets", "long_ld", "mean", false);
    assertEquals(responseStr, lon.size(),3);
    assertArrayEquals(new Double[]{ 5.0,  5.75, 6.0 }, lon.toArray(new Double[0]));
    all.addAll(lon);

    lon = getValueList(response, "offAll", "fieldFacets", "long_ld", "mean", false);
    assertEquals(responseStr, lon.size(),7);
    assertArrayEquals(all.toArray(new Double[0]), lon.toArray(new Double[0]));
  }

