  @Before
  public void beforeTest() throws Exception {

    //INT
    int1TestStart.add(new ArrayList<Integer>());
    int2TestStart.add(new ArrayList<Integer>());

    //LONG
    longTestStart.add(new ArrayList<Long>());
    longTestStart.add(new ArrayList<Long>());

    //FLOAT
    floatTestStart.add(new ArrayList<Float>());
    floatTestStart.add(new ArrayList<Float>());
    floatTestStart.add(new ArrayList<Float>());

    UpdateRequest req = new UpdateRequest();

    for (int j = 0; j < NUM_LOOPS; ++j) {
      int i = j%INT;
      long l = j%LONG;
      float f = j%FLOAT;
      double d = j%DOUBLE;
      int dt = j%DATE;
      int s = j%STRING;

      List<String> fields = new ArrayList<>();
      fields.add("id"); fields.add("1000"+j);
      fields.add("int_id"); fields.add("" + i);
      fields.add("long_ld"); fields.add("" + l);
      fields.add("float_fd"); fields.add("" + f);
      fields.add("double_dd"); fields.add("" + d);
      fields.add("date_dtd"); fields.add((1000+dt) + "-01-01T23:59:59Z");
      fields.add("string_sd"); fields.add("abc" + s);
      req.add(fields.toArray(new String[0]));

      if (f<=50) {
        int1TestStart.get(0).add(i);
      }
      if (f<=30) {
        int2TestStart.get(0).add(i);
      }
      if (s == 1) {
        longTestStart.get(0).add(l);
      }
      if (s == 2) {
        longTestStart.get(1).add(l);
      }
      if (l>=30) {
        floatTestStart.get(0).add(f);
      }
      if (d<=50) {
        floatTestStart.get(1).add(f);
      }
      if (l>=20) {
        floatTestStart.get(2).add(f);
      }
    }

    req.commit(cluster.getSolrClient(), COLLECTIONORALIAS);
  }

