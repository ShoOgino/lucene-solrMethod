  @Test
  public void limitTest() throws Exception { 
    String[] params = new String[] {
        "o.lr.s.mean", "mean(int_id)",
        "o.lr.s.median", "median(int_id)",
        "o.lr.s.count", "count(int_id)",
        "o.lr.s.percentile_20", "percentile(20,int_id)",
        "o.lr.ff.long_ld", "long_ld",
        "o.lr.ff.long_ld.ss", "mean",
        "o.lr.ff.long_ld.sd", "asc",
        "o.lr.ff.long_ld.limit", "5",
        "o.lr.ff.float_fd", "float_fd",
        "o.lr.ff.float_fd.ss", "median",
        "o.lr.ff.float_fd.sd", "desc",
        "o.lr.ff.float_fd.limit", "3",
        "o.lr.ff.double_dd", "double_dd",
        "o.lr.ff.double_dd.ss", "count",
        "o.lr.ff.double_dd.sd", "asc",
        "o.lr.ff.double_dd.limit", "7",
        "o.lr.ff.string_sd", "string_sd",
        "o.lr.ff.string_sd.ss", "percentile_20",
        "o.lr.ff.string_sd.sd", "desc",
        "o.lr.ff.string_sd.limit", "1"
    };
    
    NamedList<Object> response = queryLegacyCloudAnalytics(params);
    String responseStr = response.toString();

    Collection<Double> lon = getValueList(response, "lr", "fieldFacets", "long_ld", "mean", false);
    assertEquals(responseStr, lon.size(),5);
    Collection<Double> flo = getValueList(response, "lr", "fieldFacets", "float_fd", "median", false);
    assertEquals(responseStr, flo.size(),3);
    Collection<Long> doub = getValueList(response, "lr", "fieldFacets", "double_dd", "count", false);
    assertEquals(responseStr, doub.size(),7);
    Collection<Integer> string = getValueList(response, "lr", "fieldFacets", "string_sd", "percentile_20", false);
    assertEquals(responseStr, string.size(),1);
  }

