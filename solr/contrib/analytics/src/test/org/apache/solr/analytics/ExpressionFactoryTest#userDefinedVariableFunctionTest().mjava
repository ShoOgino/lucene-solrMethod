  @Test
  public void userDefinedVariableFunctionTest() {
    ExpressionFactory fact = getExpressionFactory();

    // Single parameter function
    fact.startRequest();
    fact.addUserDefinedVariableFunction("single_func(a)", "sum(add(a,double_d,float_f))");
    assertEquals("div(sum(add(int_i,double_d,float_f)),count(string_s))", fact.createExpression("div(single_func(int_i),count(string_s))").getExpressionStr());

    // Multi parameter function
    fact.startRequest();
    fact.addUserDefinedVariableFunction("multi_func(a,b,c)", "median(if(boolean_b,add(a,b),c))");
    assertEquals("div(median(if(boolean_b,add(int_i,double_d),float_f)),count(string_s))", fact.createExpression("div(multi_func(int_i,double_d,float_f),count(string_s))").getExpressionStr());

    // Function within function
    fact.startRequest();
    fact.addUserDefinedVariableFunction("inner_func(a,b)", "div(add(a,b),b)");
    fact.addUserDefinedVariableFunction("outer_func(a,b,c)", "pow(inner_func(a,b),c)");
    assertEquals("div(median(pow(div(add(int_i,double_d),double_d),float_f)),count(string_s))", fact.createExpression("div(median(outer_func(int_i,double_d,float_f)),count(string_s))").getExpressionStr());

    // Variable parameter function
    fact.startRequest();
    fact.addUserDefinedVariableFunction("var_func(a,b..)", "div(add(b),a)");
    assertEquals("unique(div(add(double_d,float_f),int_i))", fact.createExpression("unique(var_func(int_i,double_d,float_f))").getExpressionStr());
    assertEquals("unique(div(add(double_d,float_f,long_l),int_i))", fact.createExpression("unique(var_func(int_i,double_d,float_f,long_l))").getExpressionStr());

    // Variable parameter function with for-each
    fact.startRequest();
    fact.addUserDefinedVariableFunction("var_func_fe(a,b..)", "div(add(b:abs(_)),a)");
    assertEquals("unique(div(add(abs(double_d),abs(float_f)),int_i))", fact.createExpression("unique(var_func_fe(int_i,double_d,float_f))").getExpressionStr());
    assertEquals("unique(div(add(abs(double_d),abs(float_f),abs(long_l)),int_i))", fact.createExpression("unique(var_func_fe(int_i,double_d,float_f,long_l))").getExpressionStr());
  }

