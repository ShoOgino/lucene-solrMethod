  @Test
  public void oneMultiOneSingleValueParameterTest() {
    TestLongValueStream dividend = new TestLongValueStream();
    TestDoubleValue divisor = new TestDoubleValue();
    
    AnalyticsValueStream uncasted = DivideFunction.creatorFunction.apply(new AnalyticsValueStream[] {dividend, divisor});
    assertTrue(uncasted instanceof DoubleValueStream);
    DoubleValueStream func = (DoubleValueStream) uncasted;

    // No values, One value
    dividend.setValues();
    divisor.setValue(21.56F).setExists(true);
    func.streamDoubles( value -> {
      assertTrue("There should be no values to stream", false);
    });
    
    // Multiple values, no value
    dividend.setValues(4L, 10023L);
    divisor.setExists(false);
    func.streamDoubles( value -> {
      assertTrue("There should be no values to stream", false);
    });
    
    // Multiple values, one value
    dividend.setValues(20L, 5L, -234L);
    divisor.setValue(44.56F).setExists(true);
    Iterator<Double> values = Arrays.asList(0.448833, 0.112208, -5.251346).iterator();
    func.streamDoubles( value -> {
      assertTrue(values.hasNext());
      assertEquals(values.next(), value, 0.00001);
    });
    assertFalse(values.hasNext());
  }

