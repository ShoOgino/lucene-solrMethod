  @SuppressWarnings("unchecked")
  @Test
  public void countTest() throws Exception { 
    String[] params = new String[] {
        "o.countn.s.int", "count(int_id)",
        "o.countn.s.long", "count(long_ld)",
        "o.countn.s.float", "count(float_fd)",
        "o.countn.s.double", "count(double_dd)",
        "o.countn.ff", "string_sd",
        "o.countn.ff", "date_dtd",

        "o.count.s.str", "count(string_sd)",
        "o.count.s.date", "count(date_dtd)",
        "o.count.ff", "int_id",
        "o.count.ff", "long_ld"
    };
    NamedList<Object> response = queryCloudAnalytics(params);
    String responseStr = response.toString();
    
    //Int Date
    Collection<Long> intDate = getValueList(response, "countn", "fieldFacets", "date_dtd", "int", false);
    ArrayList<Long> intDateTest = (ArrayList<Long>)calculateStat(intDateTestStart, "count");
    assertEquals(responseStr,intDate,intDateTest);
    
    //Int String
    Collection<Long> intString = getValueList(response, "countn", "fieldFacets", "string_sd", "int", false);
    ArrayList<Long> intStringTest = (ArrayList<Long>)calculateStat(intStringTestStart, "count");
    assertEquals(responseStr,intString,intStringTest);

    //Long Date
    Collection<Long> longDate = getValueList(response, "countn", "fieldFacets", "date_dtd", "long", false);
    ArrayList<Long> longDateTest = (ArrayList<Long>)calculateStat(longDateTestStart, "count");
    assertEquals(responseStr,longDate,longDateTest);
    
    //Long String
    Collection<Long> longString = getValueList(response, "countn", "fieldFacets", "string_sd", "long", false);
    ArrayList<Long> longStringTest = (ArrayList<Long>)calculateStat(longStringTestStart, "count");
    assertEquals(responseStr,longString,longStringTest);

    //Float Date
    Collection<Long> floatDate = getValueList(response, "countn", "fieldFacets", "date_dtd", "float", false);
    ArrayList<Long> floatDateTest = (ArrayList<Long>)calculateStat(floatDateTestStart, "count");
    assertEquals(responseStr,floatDate,floatDateTest);
    
    //Float String
    Collection<Long> floatString = getValueList(response, "countn", "fieldFacets", "string_sd", "float", false);
    ArrayList<Long> floatStringTest = (ArrayList<Long>)calculateStat(floatStringTestStart, "count");
    assertEquals(responseStr,floatString,floatStringTest);

    //Double Date
    Collection<Long> doubleDate = getValueList(response, "countn", "fieldFacets", "date_dtd", "double", false);
    ArrayList<Long> doubleDateTest = (ArrayList<Long>)calculateStat(doubleDateTestStart, "count");
    assertEquals(responseStr,doubleDate,doubleDateTest);
    
    //Double String
    Collection<Long> doubleString = getValueList(response, "countn", "fieldFacets", "string_sd", "double", false);
    ArrayList<Long> doubleStringTest = (ArrayList<Long>)calculateStat(doubleStringTestStart, "count");
    assertEquals(responseStr,doubleString,doubleStringTest);

    //Date Int
    Collection<Long> dateInt = getValueList(response, "count", "fieldFacets", "int_id", "date", false);
    ArrayList<Long> dateIntTest = (ArrayList<Long>)calculateStat(dateIntTestStart, "count");
    assertEquals(responseStr,dateIntTest,dateInt);
    
    //Date Long
    Collection<Long> dateLong = getValueList(response, "count", "fieldFacets", "long_ld", "date", false);
    ArrayList<Long> dateLongTest = (ArrayList<Long>)calculateStat(dateLongTestStart, "count");
    assertEquals(responseStr,dateLong,dateLongTest);

    //String Int
    Collection<Long> stringInt = getValueList(response, "count", "fieldFacets", "int_id", "str", false);
    ArrayList<Long> stringIntTest = (ArrayList<Long>)calculateStat(stringIntTestStart, "count");
    assertEquals(responseStr,stringInt,stringIntTest);
    
    //String Long
    Collection<Long> stringLong = getValueList(response, "count", "fieldFacets", "long_ld", "str", false);
    ArrayList<Long> stringLongTest = (ArrayList<Long>)calculateStat(stringLongTestStart, "count");
    assertEquals(responseStr,stringLong,stringLongTest);
  }

