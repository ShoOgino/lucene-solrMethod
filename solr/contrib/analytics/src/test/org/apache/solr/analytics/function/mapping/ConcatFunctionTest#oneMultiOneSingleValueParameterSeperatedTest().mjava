  @Test
  public void oneMultiOneSingleValueParameterSeperatedTest() {
    TestStringValueStream val1 = new TestStringValueStream();
    TestStringValue val2 = new TestStringValue();
    ConstantStringValue sep = new ConstantStringValue("<");
    
    AnalyticsValueStream uncasted = SeparatedConcatFunction.creatorFunction.apply(new AnalyticsValueStream[] {sep, val1, val2});
    assertTrue(uncasted instanceof StringValueStream);
    StringValueStream func = (StringValueStream) uncasted;

    // None exist
    val1.setValues();
    val2.setExists(false);
    func.streamStrings( value -> {
      assertTrue("There should be no values to stream", false);
    });
    
    // One exists
    val1.setValues("def");
    val2.setExists(false);
    func.streamStrings( value -> {
      assertTrue("There should be no values to stream", false);
    });

    val1.setValues();
    val2.setValue("abc").setExists(true);
    func.streamStrings( value -> {
      assertTrue("There should be no values to stream", false);
    });
    
    // Both exist
    val1.setValues("def", "ghi", "jkl");
    val2.setValue("abc").setExists(true);
    Iterator<String> values2 = Arrays.asList("def<abc", "ghi<abc", "jkl<abc").iterator();
    func.streamStrings( value -> {
      assertTrue(values2.hasNext());
      assertEquals(values2.next(), value);
    });
    assertFalse(values2.hasNext());
  }

