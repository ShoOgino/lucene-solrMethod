  @Test
  public void groupingReductionManagerCreationTest() {
    ExpressionFactory fact = getExpressionFactory();

    // No grouped expressions
    fact.startRequest();
    fact.createExpression("unique(add(int_i,float_f))");
    fact.createExpression("sum(add(int_i,double_d))");
    fact.startGrouping();
    testReductionManager(fact.createGroupingReductionManager(false), false);

    // No grouped fields
    fact.startRequest();
    fact.createExpression("unique(add(int_i,float_f))");
    fact.createExpression("sum(add(int_i,double_d))");
    fact.startGrouping();
    fact.createExpression("sum(add(1,2))");
    testReductionManager(fact.createGroupingReductionManager(false), true);

    // Single grouping, no ungrouped
    fact.startRequest();
    fact.startGrouping();
    fact.createExpression("unique(add(int_i,float_f))");
    fact.createExpression("sum(add(int_i,double_d))");
    testReductionManager(fact.createGroupingReductionManager(false), true, "int_i", "float_f", "double_d");

    // Single grouping, with ungrouped
    fact.startRequest();
    fact.createExpression("count(string_s)");
    fact.startGrouping();
    fact.createExpression("unique(add(int_i,float_f))");
    fact.createExpression("sum(add(int_i,double_d))");
    testReductionManager(fact.createGroupingReductionManager(false), true, "int_i", "float_f", "double_d");

    // Multiple groupings, no ungrouped
    fact.startRequest();
    fact.startGrouping();
    fact.createExpression("unique(add(int_i,float_f))");
    fact.createExpression("sum(add(int_i,double_d))");
    testReductionManager(fact.createGroupingReductionManager(false), true, "int_i", "float_f", "double_d");
    fact.startGrouping();
    testReductionManager(fact.createGroupingReductionManager(false), false);
    fact.startGrouping();
    fact.createExpression("unique(add(int_i,float_f))");
    fact.createExpression("ordinal(1,concat(string_s,'-extra'))");
    testReductionManager(fact.createGroupingReductionManager(false), true, "int_i", "float_f", "string_s");

    // Multiple groupings, with grouped
    fact.startRequest();
    fact.createExpression("count(string_s)");
    fact.createExpression("median(date_math(date_dt,'+1DAY'))");
    fact.startGrouping();
    fact.createExpression("unique(add(int_i,float_f))");
    fact.createExpression("sum(add(int_i,double_d))");
    testReductionManager(fact.createGroupingReductionManager(false), true, "int_i", "float_f", "double_d");
    fact.startGrouping();
    testReductionManager(fact.createGroupingReductionManager(false), false);
    fact.startGrouping();
    fact.createExpression("unique(add(int_i,float_f))");
    fact.createExpression("ordinal(1,concat(string_s,'-extra'))");
    testReductionManager(fact.createGroupingReductionManager(false), true, "int_i", "float_f", "string_s");
  }

