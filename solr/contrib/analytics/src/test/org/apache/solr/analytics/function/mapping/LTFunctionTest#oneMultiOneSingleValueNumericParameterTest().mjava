  @Test
  public void oneMultiOneSingleValueNumericParameterTest() {
    TestDoubleValueStream base = new TestDoubleValueStream();
    TestDoubleValue comp = new TestDoubleValue();

    AnalyticsValueStream uncasted = LTFunction.creatorFunction.apply(new AnalyticsValueStream[] {base, comp});
    assertTrue(uncasted instanceof BooleanValueStream);
    BooleanValueStream func = (BooleanValueStream) uncasted;

    // No values
    base.setValues();
    comp.setValue(-4.2).setExists(true);
    func.streamBooleans( value -> {
      assertTrue("There should be no values to stream", false);
    });

    base.setValues(-4.2);
    comp.setExists(false);
    func.streamBooleans( value -> {
      assertTrue("There should be no values to stream", false);
    });

    // One value
    base.setValues(-4.2);
    comp.setValue(-4).setExists(true);
    Iterator<Boolean> values1 = Arrays.asList(true).iterator();
    func.streamBooleans( value -> {
      assertTrue(values1.hasNext());
      assertEquals(values1.next(), value);
    });
    assertFalse(values1.hasNext());

    // Multiple values
    base.setValues(4, -10, 2345, -74, 4.0001);
    comp.setValue(4).setExists(true);
    Iterator<Boolean> values2 = Arrays.asList(false, true, false, true, false).iterator();
    func.streamBooleans( value -> {
      assertTrue(values2.hasNext());
      assertEquals(values2.next(), value);
    });
    assertFalse(values2.hasNext());
  }

