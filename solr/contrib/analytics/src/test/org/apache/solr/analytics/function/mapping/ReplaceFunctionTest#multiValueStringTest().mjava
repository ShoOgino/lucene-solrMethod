  @Test
  public void multiValueStringTest() {
    TestStringValueStream val = new TestStringValueStream();
    TestStringValue comp = new TestStringValue();
    TestStringValue fill = new TestStringValue();

    AnalyticsValueStream uncasted = ReplaceFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, comp, fill});
    assertTrue(uncasted instanceof StringValueStream);
    StringValueStream func = (StringValueStream) uncasted;

    // No values
    val.setValues();
    comp.setExists(false);
    fill.setExists(false);
    func.streamStrings( value -> {
      assertTrue("There should be no values to stream", false);
    });

    val.setValues();
    comp.setValue("ads").setExists(true);
    fill.setValue("empty").setExists(true);
    func.streamStrings( value -> {
      assertTrue("There should be no values to stream", false);
    });
    
    // Comp doesn't exist
    val.setValues("abc", "123", "456", "def", "123");
    comp.setExists(false);
    fill.setValue("won't show up").setExists(true);
    Iterator<String> values1 = Arrays.asList("abc", "123", "456", "def", "123").iterator();
    func.streamStrings( value -> {
      assertTrue(values1.hasNext());
      assertEquals(values1.next(), value);
    });
    assertFalse(values1.hasNext());
    
    // Values exist
    val.setValues("abc", "123", "456", "def", "123");
    comp.setValue("123").setExists(true);
    fill.setExists(false);
    Iterator<String> values2 = Arrays.asList("abc", "456", "def").iterator();
    func.streamStrings( value -> {
      assertTrue(values2.hasNext());
      assertEquals(values2.next(), value);
    });
    assertFalse(values2.hasNext());

    val.setValues("abc", "123", "456", "def", "123");
    comp.setValue("456").setExists(true);
    fill.setValue("changed").setExists(true);
    Iterator<String> values3 = Arrays.asList("abc", "123", "changed", "def", "123").iterator();
    func.streamStrings( value -> {
      assertTrue(values3.hasNext());
      assertEquals(values3.next(), value);
    });
    assertFalse(values3.hasNext());
  }

