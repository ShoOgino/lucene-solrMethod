  @Test
  public void constantFloatTest() {
    ConstantFloatValue val = new ConstantFloatValue(24F);
    
    assertTrue(val.exists());
    assertEquals(24F, val.getFloat(), .00001);
    assertEquals(24.0, val.getDouble(), .00001);
    assertEquals("24.0", val.getString());
    assertEquals(24F, val.getObject());
    
    TestIntValue counter = new TestIntValue();
    counter.setValue(0);
    val.streamFloats( value -> {
      assertEquals(24F, value, .00001);
      assertEquals(0, counter.getInt());
      counter.setValue(1);
    });
    counter.setValue(0);
    val.streamDoubles( value -> {
      assertEquals(24.0, value, .00001);
      assertEquals(0, counter.getInt());
      counter.setValue(1);
    });
    counter.setValue(0);
    val.streamStrings( value -> {
      assertEquals("24.0", value);
      assertEquals(0, counter.getInt());
      counter.setValue(1);
    });
    counter.setValue(0);
    val.streamObjects( value -> {
      assertEquals(24F, value);
      assertEquals(0, counter.getInt());
      counter.setValue(1);
    });
  }

