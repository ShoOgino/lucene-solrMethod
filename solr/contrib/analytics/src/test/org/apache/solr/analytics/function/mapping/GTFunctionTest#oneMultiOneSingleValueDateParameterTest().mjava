  @Test
  public void oneMultiOneSingleValueDateParameterTest() {
    TestDateValueStream base = new TestDateValueStream();
    TestDateValue comp = new TestDateValue();

    AnalyticsValueStream uncasted = GTFunction.creatorFunction.apply(new AnalyticsValueStream[] {base, comp});
    assertTrue(uncasted instanceof BooleanValueStream);
    BooleanValueStream func = (BooleanValueStream) uncasted;

    // No values
    base.setValues();
    comp.setValue("1800-01-02T10:20:30Z").setExists(true);
    func.streamBooleans( value -> {
      assertTrue("There should be no values to stream", false);
    });

    base.setValues("1800-01-02T10:20:30Z");
    comp.setExists(false);
    func.streamBooleans( value -> {
      assertTrue("There should be no values to stream", false);
    });

    // One value
    base.setValues("1800-01-02T10:20:30Z");
    comp.setValue("1803-01-02T10:20:30Z").setExists(true);
    Iterator<Boolean> values1 = Arrays.asList(false).iterator();
    func.streamBooleans( value -> {
      assertTrue(values1.hasNext());
      assertEquals(values1.next(), value);
    });
    assertFalse(values1.hasNext());

    // Multiple values
    base.setValues("1800-03-02T10:20:30Z", "1799-01-01T10:20:29Z", "1800-01-02T10:20:31Z", "1800-01-02T10:20:30Z", "1800-01-02T10:20:29Z");
    comp.setValue("1800-01-02T10:20:30Z").setExists(true);
    Iterator<Boolean> values2 = Arrays.asList(true, false, true, false, false).iterator();
    func.streamBooleans( value -> {
      assertTrue(values2.hasNext());
      assertEquals(values2.next(), value);
    });
    assertFalse(values2.hasNext());
  }

