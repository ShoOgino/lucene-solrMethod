  @Test
  public void singleValueLongTest() {
    TestLongValue val = new TestLongValue();
    TestLongValue comp = new TestLongValue();
    TestLongValue fill = new TestLongValue();

    AnalyticsValueStream uncasted = ReplaceFunction.creatorFunction.apply(new AnalyticsValueStream[] {val, comp, fill});
    assertTrue(uncasted instanceof LongValue);
    LongValue func = (LongValue) uncasted;

    // Value doesn't exist
    val.setExists(false);
    comp.setExists(false);
    fill.setExists(false);
    func.getLong();
    assertFalse(func.exists());

    val.setExists(false);
    comp.setValue(234L).setExists(true);
    fill.setValue(232584L).setExists(true);
    func.getLong();
    assertFalse(func.exists());
    
    // Comp doesn't exist
    val.setValue(745L).setExists(true);
    comp.setExists(false);
    fill.setValue(23423L).setExists(true);
    assertEquals(745L, func.getLong());
    assertTrue(func.exists());
    
    // Value exists
    // Comp != Val
    val.setValue(21L).setExists(true);
    comp.setValue(234L).setExists(true);
    
    fill.setValue(23423L).setExists(true);
    assertEquals(21L, func.getLong());
    assertTrue(func.exists());
    
    fill.setExists(false);
    assertEquals(21L, func.getLong());
    assertTrue(func.exists());
    
    // Comp == Val
    val.setValue(-154L).setExists(true);
    comp.setValue(-154L).setExists(true);
    
    fill.setExists(false);
    func.getLong();
    assertFalse(func.exists());

    fill.setValue(23423L).setExists(true);
    assertEquals(23423L, func.getLong());
    assertTrue(func.exists());
  }

