  /**
   * Create an {@link AnalyticsField} out of the given {@link SchemaField}.
   * <p>
   * Currently only fields with doc-values enabled are supported.
   *
   * @param field the field to convert for analytics
   * @return an analytics representation of the field
   * @throws SolrException if the field is not supported by the analytics framework
   */
  private AnalyticsField createField(SchemaField field) throws SolrException {
    String fieldName = field.getName();
    if (fields.containsKey(fieldName)) {
      return fields.get(fieldName);
    }
    if (!field.hasDocValues()) {
      throw new SolrException(ErrorCode.BAD_REQUEST,"The field "+fieldName+" does not have docValues enabled.");
    }
    boolean multivalued = field.multiValued();
    FieldType fieldType = field.getType();
    AnalyticsField aField;
    if (fieldType instanceof BoolField) {
      if (multivalued) {
        aField = new BooleanMultiField(fieldName);
      } else {
        aField = new BooleanField(fieldName);
      }
    } else if (fieldType instanceof TrieIntField) {
      if (multivalued) {
        aField = new IntMultiTrieField(fieldName);
      } else {
        aField = new IntField(fieldName);
      }
    } else if (fieldType instanceof IntPointField) {
      if (multivalued) {
        aField = new IntMultiPointField(fieldName);
      } else {
        aField = new IntField(fieldName);
      }
    } else if (fieldType instanceof TrieLongField) {
      if (multivalued) {
        aField = new LongMultiTrieField(fieldName);
      } else {
        aField = new LongField(fieldName);
      }
    } else if (fieldType instanceof LongPointField) {
      if (multivalued) {
        aField = new LongMultiPointField(fieldName);
      } else {
        aField = new LongField(fieldName);
      }
    } else if (fieldType instanceof TrieFloatField) {
      if (multivalued) {
        aField = new FloatMultiTrieField(fieldName);
      } else {
        aField = new FloatField(fieldName);
      }
    } else if (fieldType instanceof FloatPointField) {
      if (multivalued) {
        aField = new FloatMultiPointField(fieldName);
      } else {
        aField = new FloatField(fieldName);
      }
    } else if (fieldType instanceof TrieDoubleField) {
      if (multivalued) {
        aField = new DoubleMultiTrieField(fieldName);
      } else {
        aField = new DoubleField(fieldName);
      }
    } else if (fieldType instanceof DoublePointField) {
      if (multivalued) {
        aField = new DoubleMultiPointField(fieldName);
      } else {
        aField = new DoubleField(fieldName);
      }
    } else if (fieldType instanceof TrieDateField) {
      if (multivalued) {
        aField = new DateMultiTrieField(fieldName);
      } else {
        aField = new DateField(fieldName);
      }
    } else if (fieldType instanceof DatePointField) {
      if (multivalued) {
        aField = new DateMultiPointField(fieldName);
      } else {
        aField = new DateField(fieldName);
      }
    } else if (fieldType instanceof StrField) {
      if (multivalued) {
        aField = new StringMultiField(fieldName);
      } else {
        aField = new StringField(fieldName);
      }
    } else {
      throw new SolrException(ErrorCode.BAD_REQUEST,"FieldType of the following field not supported by analytics: "+fieldName);
    }
    return aField;
  }

