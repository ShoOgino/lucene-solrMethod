  private static FacetResultsComparator constructSortCriteria(List<AnalyticsSortCriteriaRequest> criteria, Map<String, AnalyticsExpression> expressions) {
    ArrayList<FacetResultsComparator> comparators = new ArrayList<>();
    for (AnalyticsSortCriteriaRequest criterion : criteria) {
      FacetResultsComparator comparator;
      if (criterion instanceof AnalyticsExpressionSortRequest) {
        comparator = constructExpressionSortCriteria((AnalyticsExpressionSortRequest) criterion, expressions);
      } else if (criterion instanceof AnalyticsFacetValueSortRequest) {
        comparator = constructFacetValueSortCriteria((AnalyticsFacetValueSortRequest) criterion);
      } else {
        // Shouldn't happen
        throw new SolrException(ErrorCode.BAD_REQUEST,"Sort Criteria must either be expressions or facetValues, '" + criterion.getClass().getName() + "' given.");
      }
      if (criterion.direction != null && criterion.direction.length() > 0) {
        if (sortAscending.test(criterion.direction)) {
          comparator.setDirection(true);
        } else if (sortDescending.test(criterion.direction)) {
          comparator.setDirection(false);
        } else {
          throw new SolrException(ErrorCode.BAD_REQUEST,"Sort direction '" + criterion.direction + " is not a recognized direction.");
        }
      }
      comparators.add(comparator);
    }
    return DelegatingComparator.joinComparators(comparators);
  }

