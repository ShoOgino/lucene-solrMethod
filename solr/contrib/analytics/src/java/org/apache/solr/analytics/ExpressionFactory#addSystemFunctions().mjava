  /**
   * Add the natively supported functionality.
   */
  public void addSystemFunctions() {
    // Mapping Functions
    expressionCreators.put(AbsoluteValueFunction.name, AbsoluteValueFunction.creatorFunction);
    expressionCreators.put(AndFunction.name, AndFunction.creatorFunction);
    expressionCreators.put(AddFunction.name, AddFunction.creatorFunction);
    expressionCreators.put(BottomFunction.name, BottomFunction.creatorFunction);
    expressionCreators.put(CeilingFunction.name, CeilingFunction.creatorFunction);
    expressionCreators.put(ConcatFunction.name, ConcatFunction.creatorFunction);
    expressionCreators.put(ConcatSeparatedFunction.name, ConcatSeparatedFunction.creatorFunction);
    expressionCreators.put(DateMathFunction.name, DateMathFunction.creatorFunction);
    expressionCreators.put(DateParseFunction.name, DateParseFunction.creatorFunction);
    expressionCreators.put(DivideFunction.name, DivideFunction.creatorFunction);
    expressionCreators.put(DocCountFunction.name, DocCountFunction.creatorFunction);
    expressionCreators.put(EqualFunction.name,EqualFunction.creatorFunction);
    expressionCreators.put(FillMissingFunction.name, FillMissingFunction.creatorFunction);
    expressionCreators.put(FilterFunction.name, FilterFunction.creatorFunction);
    expressionCreators.put(FloorFunction.name, FloorFunction.creatorFunction);
    expressionCreators.put(GTFunction.name,GTFunction.creatorFunction);
    expressionCreators.put(GTEFunction.name,GTEFunction.creatorFunction);
    expressionCreators.put(IfFunction.name, IfFunction.creatorFunction);
    expressionCreators.put(JoinFunction.name, JoinFunction.creatorFunction);
    expressionCreators.put(LogFunction.name,LogFunction.creatorFunction);
    expressionCreators.put(LTFunction.name,LTFunction.creatorFunction);
    expressionCreators.put(LTEFunction.name,LTEFunction.creatorFunction);
    expressionCreators.put(MultFunction.name, MultFunction.creatorFunction);
    expressionCreators.put(NegateFunction.name, NegateFunction.creatorFunction);
    expressionCreators.put(OrFunction.name, OrFunction.creatorFunction);
    expressionCreators.put(PowerFunction.name, PowerFunction.creatorFunction);
    expressionCreators.put(ReplaceFunction.name, ReplaceFunction.creatorFunction);
    expressionCreators.put(RemoveFunction.name, RemoveFunction.creatorFunction);
    expressionCreators.put(RoundFunction.name, RoundFunction.creatorFunction);
    expressionCreators.put(StringCastFunction.name, StringCastFunction.creatorFunction);
    expressionCreators.put(SubtractFunction.name, SubtractFunction.creatorFunction);
    expressionCreators.put(TopFunction.name, TopFunction.creatorFunction);
    
    // Reduction Functions
    expressionCreators.put(CountFunction.name, CountFunction.creatorFunction);
    expressionCreators.put(MaxFunction.name, MaxFunction.creatorFunction);
    expressionCreators.put(MedianFunction.name, MedianFunction.creatorFunction);
    expressionCreators.put(MinFunction.name, MinFunction.creatorFunction);
    expressionCreators.put(MissingFunction.name, MissingFunction.creatorFunction);
    expressionCreators.put(OrdinalFunction.name, OrdinalFunction.creatorFunction);
    expressionCreators.put(PercentileFunction.name, PercentileFunction.creatorFunction);
    expressionCreators.put(SumFunction.name, SumFunction.creatorFunction);
    expressionCreators.put(UniqueFunction.name, UniqueFunction.creatorFunction);
    
    // Variables
    addSystemVariableFunction("wmean(a,b)","div(mean(prod(a,b)),sum(b))");
    addSystemVariableFunction("mean(a)","div(sum(a),count(a))");
    addSystemVariableFunction("sumofsquares(a)","sum(pow(a,2))");
    addSystemVariableFunction("sqrt(a)","pow(a,0.5)");
    addSystemVariableFunction("variance(a)","sub(mean(pow(a,2)),pow(mean(a),2))");
    addSystemVariableFunction("stddev(a)","sqrt(variance(a))");
    addSystemVariableFunction("csv(a..)","concatsep(',',a)");
    addSystemVariableFunction("csv_output(a..)","concatsep(',',a:fillmissing(join(_,';'),''))");
  }

