  /**
   * Given a document, queryFacet name and query, adds the document to the
   * {@link StatsCollector}s held in the bucket corresponding to the queryFacet name and query.
   * Called during post processing.
   */
  @Override
  public void collectQuery(int doc, String facetName, String query) throws IOException {
    Map<String,StatsCollector[]> map = queryFacetCollectors.get(facetName);
    StatsCollector[] statsCollectors = map.get(query);
    // If the query has not been seen yet, a StatsCollector array is
    // created and associated with that bucket.
    if( statsCollectors == null ){
      statsCollectors = statsCollectorArraySupplier.get();
      map.put(query,statsCollectors);
      queryFacetExpressions.get(facetName).put(query,makeExpressions(statsCollectors));
      for (StatsCollector statsCollector : statsCollectors) {
        statsCollector.setNextReader(context);
      }
    }
    for (StatsCollector statsCollector : statsCollectors) {
      statsCollector.collect(doc);
    }
  }

