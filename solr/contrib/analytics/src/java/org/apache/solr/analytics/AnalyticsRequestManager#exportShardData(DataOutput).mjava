  /**
   * Export the shard data for this request through a bit-stream,
   * to be imported by the {@link #importShardData} method in the originating shard.
   * <p>
   * First the overall data is exported, then the grouping data is exported.
   *
   * @param output The bit-stream to output the shard data through
   * @throws IOException if an exception occurs while writing to the {@link DataOutput}
   */
  public void exportShardData(DataOutput output) throws IOException {
    ungroupedReductionManager.setShardOutput(output);

    ungroupedReductionManager.prepareReductionDataIO(ungroupedData);
    ungroupedReductionManager.exportData();

    output.writeInt(groupingManagers.size());
    for (Map.Entry<String, AnalyticsGroupingManager> entry : groupingManagers.entrySet()) {
      output.writeUTF(entry.getKey());
      entry.getValue().exportShardData(output);
    }
  }

