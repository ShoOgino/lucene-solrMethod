  /**
   * Determine whether the expression is a unreduced mapping expression, a reduced mapping expression, or a constant.
   * 
   * @param exprString the string representing the expression, used when creating exceptions
   * @param params the parameters 
   * @return the expression type
   * @throws SolrException if the params are incompatable types,
   * for example if reduced and unreduced params are both included
   */
  static ExpressionType determineMappingPhase(String exprString, AnalyticsValueStream... params) throws SolrException {
    boolean unreduced = true;
    boolean reduced = true;
    for (AnalyticsValueStream param : params) {
      unreduced &= param.getExpressionType().isUnreduced();
      reduced &= param.getExpressionType().isReduced();
    }
    if (unreduced && reduced) {
      return ExpressionType.CONST;
    }
    else if (unreduced) {
      return ExpressionType.UNREDUCED_MAPPING;
    }
    else if (reduced) {
      return ExpressionType.REDUCED_MAPPING;
    }
    else {
      throw new SolrException(ErrorCode.BAD_REQUEST,"The following expression contains incorrect parameters. " + 
                            "(ReductionFunctions cannot be in the paramters of other ReductionFunctions): " + exprString);
    }
  }

