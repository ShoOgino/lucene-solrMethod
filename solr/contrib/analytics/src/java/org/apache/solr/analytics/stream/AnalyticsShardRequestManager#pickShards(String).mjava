  /**
   * Pick one replica from each shard to send the shard requests to.
   * 
   * @param collection that is being queried
   * @throws IOException if an exception occurs while finding replicas
   */
  protected void pickShards(String collection) throws IOException {
    try {

      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();
      ClusterState clusterState = zkStateReader.getClusterState();
      Set<String> liveNodes = clusterState.getLiveNodes();

      Slice[] slices = clusterState.getCollection(collection).getActiveSlicesArr();

      for(Slice slice : slices) {
        Collection<Replica> replicas = slice.getReplicas();
        List<Replica> shuffler = new ArrayList<>();
        for(Replica replica : replicas) {
          if(replica.getState() == Replica.State.ACTIVE && liveNodes.contains(replica.getNodeName()))
          shuffler.add(replica);
        }

        Collections.shuffle(shuffler, new Random());
        Replica rep = shuffler.get(0);
        ZkCoreNodeProps zkProps = new ZkCoreNodeProps(rep);
        String url = zkProps.getCoreUrl();
        replicaUrls.add(url);
      }
    } catch (Exception e) {
      throw new IOException(e);
    }
  }

