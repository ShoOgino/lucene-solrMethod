  /**
   * Import the shard data for this request from a bit-stream,
   * exported by the {@link #exportShardData} method in the each of the collection's shards.
   * <p>
   * First the overall data is imported, then the grouping data is imported.
   * 
   * @param input The bit-stream to import the shard data from
   * @throws IOException if an exception occurs while reading from the {@link DataInput}
   */
  public synchronized void importShardData(DataInput input) throws IOException {
    ungroupedReductionManager.setShardInput(input);
    
    // The ungroupedData will not exist for the first shard imported
    if (ungroupedData == null) {
      ungroupedData = ungroupedReductionManager.newDataCollectionIO();
    } else {
      ungroupedReductionManager.prepareReductionDataIO(ungroupedData);
    }
    ungroupedReductionManager.mergeData();
    
    int size = input.readInt();
    while (--size >= 0) {
      String groupingName = input.readUTF();
      groupingManagers.get(groupingName).importShardData(input);
    }
  }

