  /**
   * Create a Manager to oversee the given {@link ReductionDataCollector}s.
   * 
   * @param reductionDataCollectors array of collectors that are collecting over the same set of data
   * @param fields all fields used by the given collectors
   */
  public ReductionCollectionManager(final ReductionDataCollector<?>[] reductionDataCollectors, final Iterable<AnalyticsField> fields) {
    this.reductionDataCollectors = reductionDataCollectors;
    Arrays.sort(reductionDataCollectors, (a,b) -> a.getExpressionStr().compareTo(b.getExpressionStr()));
    
    reservations = new LinkedList<>();
    for (int i = 0; i < reductionDataCollectors.length; i++) {
      reductionDataCollectors[i].submitReservations(reservation -> reservations.add(reservation));
    }
    
    this.fields = fields;
    
    this.readers = new ArrayList<>();
    this.writers = new ArrayList<>();
  }

