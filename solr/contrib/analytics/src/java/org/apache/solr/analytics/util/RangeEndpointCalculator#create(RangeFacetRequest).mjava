  public static RangeEndpointCalculator<? extends Comparable<?>> create(RangeFacetRequest request){
    final SchemaField sf = request.getField();
    final FieldType ft = sf.getType();
    final RangeEndpointCalculator<?> calc;
    if (ft instanceof TrieField) {
      switch (ft.getNumberType()) {
        case FLOAT:
          calc = new FloatRangeEndpointCalculator(request);
          break;
        case DOUBLE:
          calc = new DoubleRangeEndpointCalculator(request);
          break;
        case INTEGER:
          calc = new IntegerRangeEndpointCalculator(request);
          break;
        case LONG:
          calc = new LongRangeEndpointCalculator(request);
          break;
        case DATE:
          calc = new DateRangeEndpointCalculator(request, null);
          break;
        default:
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Unable to range facet on tried field of unexpected type:" + sf.getName());
      }
    } else {
      throw new SolrException (SolrException.ErrorCode.BAD_REQUEST, "Unable to range facet on field:" + sf);
    } 
    return calc;
  }

