  /**
   * Get the documents returned by the query and filter queries included in the request.
   *
   * @param req the request sent to the handler
   * @return the set of documents matching the query
   * @throws SyntaxError if there is a syntax error in the queries
   * @throws IOException if an error occurs while searching the index
   */
  private DocSet getDocuments(SolrQueryRequest req) throws SyntaxError, IOException {
    SolrParams params = req.getParams();
    ArrayList<Query> queries = new ArrayList<>();

    // Query Param
    String queryString = params.get( CommonParams.Q );

    String defType = params.get(QueryParsing.DEFTYPE, QParserPlugin.DEFAULT_QTYPE);

    QParser parser = QParser.getParser(queryString, defType, req);
    Query query = parser.getQuery();
    if (query == null) {
      // normalize a null query to a query that matches nothing
      query = new MatchNoDocsQuery();
    }
    queries.add(query);

    // Filter Params
    String[] fqs = req.getParams().getParams(CommonParams.FQ);
    if (fqs!=null) {
      for (String fq : fqs) {
        if (fq != null && fq.trim().length()!=0) {
          QParser fqp = QParser.getParser(fq, req);
          queries.add(fqp.getQuery());
        }
      }
    }
    return req.getSearcher().getDocSet(queries);
  }

