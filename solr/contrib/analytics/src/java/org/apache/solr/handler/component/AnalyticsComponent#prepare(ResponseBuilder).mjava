  @Override
  public void prepare(ResponseBuilder rb) throws IOException {
    // First check to see if there is an analytics request using the current format
    String analyticsRequest = rb.req.getParams().get(AnalyticsRequestParser.analyticsParamName);
    rb.setOlapAnalytics(false);
    rb.setAnalytics(false);
    boolean isDistributed = rb.isDistributed();
    if (analyticsRequest != null) {
      rb.setAnalytics(true);
      rb.setAnalyticsRequestManager(
          AnalyticsRequestParser.parse(
              analyticsRequest,
              new ExpressionFactory(rb.req.getSchema()), isDistributed));
    }
    // If there is no request in the current format, check for the old olap-style format
    else if (rb.req.getParams().getBool(OldAnalyticsParams.OLD_ANALYTICS,false)) {
      rb.setAnalyticsRequestManager(
          AnalyticsRequestParser.parse(
              OldAnalyticsRequestConverter.convert(rb.req.getParams()),
              new ExpressionFactory(rb.req.getSchema()), isDistributed));
      rb.setOlapAnalytics(true);
      rb.setAnalytics(true);
    }

    if (rb.isAnalytics()) {
      AnalyticsRequestManager reqManager = getAnalyticsRequestManager(rb);

      // Check to see if the request is distributed
      if (isDistributed) {
        reqManager.sendShards = true;
        reqManager.shardStream = new AnalyticsShardRequestManager(rb.req.getParams(), reqManager);
      } else {
        reqManager.sendShards = false;
        rb.setNeedDocSet( true );
      }
    }
  }

