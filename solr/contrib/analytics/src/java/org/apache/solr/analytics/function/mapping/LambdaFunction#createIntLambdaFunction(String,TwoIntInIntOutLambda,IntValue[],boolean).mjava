  /**
   * Creates a function that associatively (order is guaranteed) reduces multiple
   * single-value integer expressions into a single-value integer expression for each document.
   * <br>
   * For a document, every parameter's value must exist for the resulting value to exist if {@code allMustExist} is true.
   * If {@code allMustExist} is false, only one of the parameters' values must exist.
   *
   * @param name name for the function
   * @param lambda the associative function used to reduce the values: {@code (integer, integer) -> integer}
   * @param params the expressions to reduce
   * @param allMustExist whether all parameters are required to exist
   * @return a single-value expression that reduces the parameters with the given lambda
   */
  public static IntValue createIntLambdaFunction(String name, TwoIntInIntOutLambda lambda, IntValue[] params, boolean allMustExist) {
    if (allMustExist) {
      return new MultiIntValueInIntValueOutRequireAllFunction(name,lambda,params);
    } else {
      return new MultiIntValueInIntValueOutRequireOneFunction(name,lambda,params);
    }
  }

