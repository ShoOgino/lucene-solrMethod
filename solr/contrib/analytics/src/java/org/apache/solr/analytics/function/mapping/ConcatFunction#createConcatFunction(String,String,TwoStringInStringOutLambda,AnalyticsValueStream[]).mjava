  private static StringValueStream createConcatFunction(String functionName, String uniqueName, TwoStringInStringOutLambda lambda, AnalyticsValueStream[] params) {
    if (params.length == 0) {
      throw new SolrException(ErrorCode.BAD_REQUEST, "The "+functionName+" function requires parameters.");
    } else if (params.length == 1) {
      if (params[0] instanceof StringValueStream) {
        return LambdaFunction.createStringLambdaFunction(uniqueName, lambda, (StringValueStream)params[0]);
      }
      throw new SolrException(ErrorCode.BAD_REQUEST, "The "+functionName+" function requires that all parameters be string-castable.");
    } else if (params.length == 2) {
      // If it is not a pair of a single valued and multi valued string, then it will be taken care of below
      if (params[0] instanceof StringValueStream && params[1] instanceof StringValueStream
          && !(params[0] instanceof StringValue && params[1] instanceof StringValue)) {
        return LambdaFunction.createStringLambdaFunction(uniqueName, lambda, (StringValueStream)params[0], (StringValueStream)params[1]);
      }
    }
    StringValue[] castedParams = new StringValue[params.length];
    for (int i = 0; i < params.length; i++) {
      if (params[i] instanceof StringValue) {
        castedParams[i] = (StringValue) params[i];
      } else {
        throw new SolrException(ErrorCode.BAD_REQUEST, "The "+functionName+" function requires that all parameters be string-castable, and if more than 2 parameters"
            + " are provided then all must be single-valued.");
      }
    }
    return LambdaFunction.createStringLambdaFunction(uniqueName, lambda, castedParams, false);
  }

