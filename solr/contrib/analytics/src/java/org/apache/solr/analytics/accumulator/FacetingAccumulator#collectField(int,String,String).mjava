  /**
   * Given a document, fieldFacet field and facetValue, adds the document to the
   * {@link StatsCollector}s held in the bucket corresponding to the fieldFacet field and facetValue.
   * Called during initial document collection.
   */
  @Override
  public void collectField(int doc, String facetField, String facetValue) throws IOException {
    Map<String,StatsCollector[]> map = fieldFacetCollectors.get(facetField);
    StatsCollector[] statsCollectors = map.get(facetValue);
    // If the facetValue has not been seen yet, a StatsCollector array is
    // created and associated with that bucket.
    if( statsCollectors == null ){
      statsCollectors = statsCollectorArraySupplier.get();
      map.put(facetValue,statsCollectors);
      fieldFacetExpressions.get(facetField).put(facetValue,makeExpressions(statsCollectors));
      for (StatsCollector statsCollector : statsCollectors) {
        statsCollector.setNextReader(context);
      }
    }
    for (StatsCollector statsCollector : statsCollectors) {
      statsCollector.collect(doc);
    }
  }

