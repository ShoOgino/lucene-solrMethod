  private static EnumSet<FacetRangeOther> constructOthers(List<String> othersRequest, String facetName) throws SolrException {
    EnumSet<FacetRangeOther> others = EnumSet.noneOf(FacetRangeOther.class);
    for (String rawOther : othersRequest) {
      if (!others.add(FacetRangeOther.get(rawOther))) {
        throw new SolrException(ErrorCode.BAD_REQUEST, "Duplicate include value '" + rawOther + "' found in range facet '" + facetName + "'");
      }
    }
    if (others.contains(FacetRangeOther.NONE)) {
      if (others.size() > 1) {
        throw new SolrException(ErrorCode.BAD_REQUEST, "Include value 'NONE' is used with other includes in a range facet '" + facetName + "'. "
            + "If 'NONE' is used, it must be the only include.");
      }
      return EnumSet.noneOf(FacetRangeOther.class);
    }
    if (others.contains(FacetRangeOther.ALL)) {
      if (others.size() > 1) {
        throw new SolrException(ErrorCode.BAD_REQUEST, "Include value 'ALL' is used with other includes in a range facet '" + facetName + "'. "
            + "If 'ALL' is used, it must be the only include.");
      }
      return EnumSet.of(FacetRangeOther.BEFORE, FacetRangeOther.BETWEEN, FacetRangeOther.AFTER);
    }
    return others;
  }

