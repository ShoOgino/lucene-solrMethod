  @Override
  public void createFacetValueExecuters(final Filter filter, SolrQueryRequest queryRequest, Consumer<FacetValueQueryExecuter> consumer) {
    queries.forEach( (queryName, query) -> {
      final Query q;
      try {
        q = QParser.getParser(query, queryRequest).getQuery();
      } catch( Exception e ){
        throw new SolrException(ErrorCode.BAD_REQUEST,"Invalid query '"+query+"' in query facet '" + getName() + "'",e);
      }
      // The searcher sends docIds to the QueryFacetAccumulator which forwards
      // them to <code>collectQuery()</code> in this class for collection.
      Query queryQuery = new BooleanQuery.Builder()
          .add(q, Occur.MUST)
          .add(filter, Occur.FILTER)
          .build();

      ReductionDataCollection dataCol = collectionManager.newDataCollection();
      reductionData.put(queryName, dataCol);
      consumer.accept(new FacetValueQueryExecuter(dataCol, queryQuery));
    });
  }

