    @Override
    public int compare(Entry<String,Expression[]> o1, Entry<String,Expression[]> o2) {
      
      // Handle nulls. Null is treated as an infinitely big number so that in case of ASCENDING sorts, 
      // Nulls will appear last. In case of DESC sorts, Nulls will appear last. 
      boolean firstIsNull = false;
      if (o1 == null || o1.getValue() == null || o1.getValue()[comparatorExpressionPlace] == null) 
        firstIsNull = true;
      boolean secondIsNull = false;
      if (o2 == null || o2.getValue() == null || o2.getValue()[comparatorExpressionPlace] == null) 
        secondIsNull  = true;
      if (firstIsNull && secondIsNull)
        return 0;
      else if (firstIsNull)
        return 1;
      else if (secondIsNull)
        return -1;
      
      return comp.compare(o1.getValue()[comparatorExpressionPlace], o2.getValue()[comparatorExpressionPlace]);
    }

