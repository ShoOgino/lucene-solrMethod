  @Test
  public void queryCollections() throws Exception {
    List<Collector.MetricFamilySamples> collection1Metrics = solrCloudScraper.collections(
        configuration.getCollectionsConfiguration().get(0)).asList();

    assertEquals(2, collection1Metrics.size());
    Collector.MetricFamilySamples liveNodeSamples = collection1Metrics.get(0);
    assertEquals("solr_collections_live_nodes", liveNodeSamples.name);
    assertEquals("See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus", liveNodeSamples.help);
    assertEquals(1, liveNodeSamples.samples.size());

    assertEquals(
        getClusterState().getLiveNodes().size(),
        liveNodeSamples.samples.get(0).value, 0.001);

    Collector.MetricFamilySamples shardLeaderSamples = collection1Metrics.get(1);

    DocCollection collection = getCollectionState();
    List<Replica> allReplicas = collection.getReplicas();
    assertEquals(allReplicas.size(), shardLeaderSamples.samples.size());

    Collection<Slice> slices = getCollectionState().getSlices();

    Set<String> leaderCoreNames = slices.stream()
        .map(slice -> collection.getLeader(slice.getName()).getCoreName())
        .collect(Collectors.toSet());

    for (Collector.MetricFamilySamples.Sample sample : shardLeaderSamples.samples) {
      assertEquals("solr_collections_shard_leader", sample.name);
      assertEquals(Arrays.asList("collection", "shard", "replica", "core", "type", "zk_host"), sample.labelNames);
      assertEquals(leaderCoreNames.contains(sample.labelValues.get(3)) ? 1.0 : 0.0, sample.value, 0.001);
    }
  }

