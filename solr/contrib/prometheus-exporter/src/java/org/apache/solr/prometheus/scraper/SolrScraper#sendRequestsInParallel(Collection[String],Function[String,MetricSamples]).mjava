  protected Map<String, MetricSamples> sendRequestsInParallel(
      Collection<String> items,
      Function<String, MetricSamples> samplesCallable) throws IOException {

    List<CompletableFuture<Pair<String, MetricSamples>>> futures = items.stream()
        .map(item -> CompletableFuture.supplyAsync(() -> new Pair<>(item, samplesCallable.apply(item)), executor))
        .collect(Collectors.toList());

    Future<List<Pair<String, MetricSamples>>> allComplete = Async.waitForAllSuccessfulResponses(futures);

    try {
      return allComplete.get().stream().collect(Collectors.toMap(Pair::first, Pair::second));
    } catch (InterruptedException | ExecutionException e) {
      throw new IOException(e);
    }
  }

