  protected Map<String, MetricSamples> sendRequestsInParallel(
      Collection<String> items,
      Function<String, MetricSamples> samplesCallable) throws IOException {

    Map<String, MetricSamples> result = new HashMap<>(); // sync on this when adding to it below

    try {
      // invoke each samplesCallable with each item and putting the results in the above "result" map.
      executor.invokeAll(
          items.stream()
              .map(item -> (Callable<MetricSamples>) () -> {
                try {
                  final MetricSamples samples = samplesCallable.apply(item);
                  synchronized (result) {
                    result.put(item, samples);
                  }
                } catch (Exception e) {
                  // do NOT totally fail; just log and move on
                  log.warn("Error occurred during metrics collection", e);
                }
                return null;//not used
              })
              .collect(Collectors.toList())
      );
    } catch (InterruptedException e) {
      Thread.currentThread().interrupt();
      throw new RuntimeException(e);
    }

    return result;
  }

