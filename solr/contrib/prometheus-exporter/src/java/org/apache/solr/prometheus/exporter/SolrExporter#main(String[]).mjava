  /**
   * Entry point of SolrExporter.
   */
  public static void main( String[] args ) {
    ArgumentParser parser = ArgumentParsers.newArgumentParser(SolrCollector.class.getSimpleName())
        .description("Prometheus exporter for Apache Solr.");

    parser.addArgument(ARG_PORT_FLAGS)
        .metavar(ARG_PORT_METAVAR).dest(ARG_PORT_DEST).type(Integer.class)
        .setDefault(ARG_PORT_DEFAULT).help(ARG_PORT_HELP);

    parser.addArgument(ARG_BASE_URL_FLAGS)
        .metavar(ARG_BASE_URL_METAVAR).dest(ARG_BASE_URL_DEST).type(String.class)
        .setDefault(ARG_BASE_URL_DEFAULT).help(ARG_BASE_URL_HELP);

    parser.addArgument(ARG_ZK_HOST_FLAGS)
        .metavar(ARG_ZK_HOST_METAVAR).dest(ARG_ZK_HOST_DEST).type(String.class)
        .setDefault(ARG_ZK_HOST_DEFAULT).help(ARG_ZK_HOST_HELP);

    parser.addArgument(ARG_CONFIG_FLAGS)
        .metavar(ARG_CONFIG_METAVAR).dest(ARG_CONFIG_DEST).type(String.class)
        .setDefault(ARG_CONFIG_DEFAULT).help(ARG_CONFIG_HELP);

    parser.addArgument(ARG_NUM_THREADS_FLAGS)
        .metavar(ARG_NUM_THREADS_METAVAR).dest(ARG_NUM_THREADS_DEST).type(Integer.class)
        .setDefault(ARG_NUM_THREADS_DEFAULT).help(ARG_NUM_THREADS_HELP);

    try {
      Namespace res = parser.parseArgs(args);

      int port = res.getInt(ARG_PORT_DEST);

      String connStr = "http://localhost:8983/solr";
      if (!res.getString(ARG_BASE_URL_DEST).equals("")) {
        connStr = res.getString(ARG_BASE_URL_DEST);
      } else if (!res.getString(ARG_ZK_HOST_DEST).equals("")) {
        connStr = res.getString(ARG_ZK_HOST_DEST);
      }

      Path configPath = Paths.get(res.getString(ARG_CONFIG_DEST));
      int numThreads = res.getInt(ARG_NUM_THREADS_DEST);

      SolrExporter solrExporter = new SolrExporter(port, connStr, configPath, numThreads);
      solrExporter.start();
      log.info("Start server");
    } catch (ParserConfigurationException | SAXException | IOException e) {
      log.error("Start server failed: " + e.toString());
    } catch (ArgumentParserException e) {
      parser.handleError(e);
    }
  }

