  @Test
  public void testEmptyResultSet() throws Exception {
      MockInitialContextFactory.bind("java:comp/env/jdbc/JndiDB", dataSource);

      props.put(JdbcDataSource.JNDI_NAME, "java:comp/env/jdbc/JndiDB");
      when(dataSource.getConnection()).thenReturn(connection);

      jdbcDataSource.init(context, props);

      Statement statement = mock(Statement.class);
      when(connection.createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY))
          .thenReturn(statement);
      when(statement.execute("query")).thenReturn(true);
      ResultSet resultSet = mock(ResultSet.class);
      when(statement.getResultSet()).thenReturn(resultSet);
      ResultSetMetaData metaData = mock(ResultSetMetaData.class);
      when(resultSet.getMetaData()).thenReturn(metaData);
      when(metaData.getColumnCount()).thenReturn(0);
      when(resultSet.next()).thenReturn(false);
      when(statement.getMoreResults()).thenReturn(false);
      when(statement.getUpdateCount()).thenReturn(-1);

      Iterator<Map<String,Object>> resultSetIterator = jdbcDataSource.getData("query");
      resultSetIterator.hasNext();
      resultSetIterator.hasNext();

      verify(connection).setAutoCommit(false);
      verify(connection).createStatement(ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_READ_ONLY);
      verify(statement).setFetchSize(500);
      verify(statement).setMaxRows(0);
      verify(statement).execute("query");
      verify(statement).getResultSet();
      verify(resultSet).getMetaData();
      verify(metaData).getColumnCount();
      verify(resultSet).next();
      verify(resultSet).close();
      verify(statement).getMoreResults();
      verify(statement).getUpdateCount();
      verify(statement).close();
  }

