  @Test
  public void testEndToEnd() throws Exception {
    LocalSolrQueryRequest request = lrf.makeRequest(
        "command", "full-import", "config", "data-config-end-to-end.xml",
        "clean", "true", "commit", "true", "synchronous", "true", "indent", "true");
    h.query("/dataimport-end-to-end", request);
    assertQ(req("*:*"), "//*[@numFound='20']");
    assertQ(req("COUNTRY_NAME:zealand"), "//*[@numFound='2']");
    assertQ(req("COUNTRY_NAME:niue"), "//*[@numFound='3']");
    
    //It would be nice if there was a way to get it to run transformers before putting
    //data in the cache, then id=2 (person=Ethan, country=NU,NA,NE) could join...)
    //assertQ(req("COUNTRY_NAME:Netherlands"), "//*[@numFound='3']");
    
    assertQ(req("NAME:michael"), "//*[@numFound='1']");
    assertQ(req("SPORT_NAME:kayaking"), "//*[@numFound='2']");
    assertQ(req("SPORT_NAME:fishing"), "//*[@numFound='1']");
    
    request = lrf.makeRequest("indent", "true");
    String response = h.query("/dataimport-end-to-end", request);
    Matcher m = Pattern.compile(".str name..Total Requests made to DataSource..(\\d+)..str.").matcher(response);
    Assert.assertTrue(m.find() && m.groupCount()==1);
    int numRequests = Integer.parseInt(m.group(1));
    Assert.assertTrue(
        "The database should have been hit once each " +
        "for 'Person' & 'Country' and ~20 times for 'Sport'", numRequests<30);
  }

