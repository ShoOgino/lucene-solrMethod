  @Test
  public void testRetrieveFromDriverManager() throws Exception {
    // we're not (directly) using a Mockito based mock class here because it won't have a consistent class name
    // that will work with DriverManager's class bindings
    MockDriver mockDriver = new MockDriver(connection);
    DriverManager.registerDriver(mockDriver);
    try {
      props.put(JdbcDataSource.DRIVER, MockDriver.class.getName());
      props.put(JdbcDataSource.URL, MockDriver.MY_JDBC_URL);
      props.put("holdability", "HOLD_CURSORS_OVER_COMMIT");

      Connection conn = jdbcDataSource.createConnectionFactory(context, props).call();

      verify(connection).setAutoCommit(false);
      verify(connection).setHoldability(1);

      assertSame("connection", conn, connection);
    } catch(Exception e) {
      throw e;
    } finally {
      DriverManager.deregisterDriver(mockDriver);
    }
  }

