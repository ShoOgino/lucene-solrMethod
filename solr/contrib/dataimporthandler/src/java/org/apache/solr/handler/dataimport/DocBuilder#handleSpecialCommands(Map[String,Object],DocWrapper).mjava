  private void handleSpecialCommands(Map<String, Object> arow, DocWrapper doc) {
    Object value = arow.get(DELETE_DOC_BY_ID);
    if (value != null) {
      if (value instanceof Collection) {
        @SuppressWarnings({"rawtypes"})
        Collection collection = (Collection) value;
        for (Object o : collection) {
          writer.deleteDoc(o.toString());
          importStatistics.deletedDocCount.incrementAndGet();
        }
      } else {
        writer.deleteDoc(value);
        importStatistics.deletedDocCount.incrementAndGet();
      }
    }    
    value = arow.get(DELETE_DOC_BY_QUERY);
    if (value != null) {
      if (value instanceof Collection) {
        @SuppressWarnings({"rawtypes"})
        Collection collection = (Collection) value;
        for (Object o : collection) {
          writer.deleteByQuery(o.toString());
          importStatistics.deletedDocCount.incrementAndGet();
        }
      } else {
        writer.deleteByQuery(value.toString());
        importStatistics.deletedDocCount.incrementAndGet();
      }
    }
    value = arow.get(DOC_BOOST);
    if (value != null) {
      String message = "Ignoring document boost: " + value + " as index-time boosts are not supported anymore";
      if (WARNED_ABOUT_INDEX_TIME_BOOSTS.compareAndSet(false, true)) {
        log.warn(message);
      } else {
        log.debug(message);
      }
    }

    value = arow.get(SKIP_DOC);
    if (value != null) {
      if (Boolean.parseBoolean(value.toString())) {
        throw new DataImportHandlerException(DataImportHandlerException.SKIP,
                "Document skipped :" + arow);
      }
    }

    value = arow.get(SKIP_ROW);
    if (value != null) {
      if (Boolean.parseBoolean(value.toString())) {
        throw new DataImportHandlerException(DataImportHandlerException.SKIP_ROW);
      }
    }
  }

