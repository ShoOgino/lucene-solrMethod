  private void verifyWithSchema(Map<String,EntityField> fields) {
    Map<String,SchemaField> schemaFields = null;
    if (schema == null) {
      schemaFields = Collections.emptyMap();
    } else {
      schemaFields = schema.getFields();
    }
    for (Map.Entry<String,SchemaField> entry : schemaFields.entrySet()) {
      SchemaField sf = entry.getValue();
      if (!fields.containsKey(sf.getName())) {
        if (sf.isRequired()) {
          if (log.isInfoEnabled()) {
            log.info("{} is a required field in SolrSchema . But not found in DataConfig", sf.getName());
          }
        }
      }
    }
    for (Map.Entry<String,EntityField> entry : fields.entrySet()) {
      EntityField fld = entry.getValue();
      SchemaField field = getSchemaField(fld.getName());
      if (field == null && !isSpecialCommand(fld.getName())) {
        if (log.isInfoEnabled()) {
          log.info("The field :{} present in DataConfig does not have a counterpart in Solr Schema", fld.getName());
        }
      }
    }
  }

