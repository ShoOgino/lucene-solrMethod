  /**
   * If where clause is not present the cache is a Map of query vs List of Rows.
   * 
   * @param query
   *          string for which cached row is to be returned
   * 
   * @return the cached row corresponding to the given query
   */
  protected Map<String,Object> getSimpleCacheData(Context context,
      String query, Iterator<Map<String,Object>> rowIterator) {
    if (dataSourceRowCache == null) {      
      DIHCache cache = queryVsCache.get(query);      
      if (cache == null) {        
        cache = instantiateCache(context);        
        queryVsCache.put(query, cache);        
        populateCache(query, rowIterator);        
        queryVsCacheIterator.put(query, cache.iterator());        
      }      
      Iterator<Map<String,Object>> cacheIter = queryVsCacheIterator.get(query);      
      dataSourceRowCache = cacheIter;
    }
    
    return getFromRowCacheTransformed();
  }

