  /**
   * analyze the range with the analyzer, instead of the collator.
   * because icu collators are not thread safe, this keeps things 
   * simple (we already have a threadlocal clone in the reused TS)
   */
  private BytesRef analyzeRangePart(String field, String part) {
    TokenStream source;
      
    try {
      source = analyzer.tokenStream(field, new StringReader(part));
      source.reset();
    } catch (IOException e) {
      throw new RuntimeException("Unable to initialize TokenStream to analyze range part: " + part, e);
    }
      
    TermToBytesRefAttribute termAtt = source.getAttribute(TermToBytesRefAttribute.class);
    BytesRef bytes = termAtt.getBytesRef();

    // we control the analyzer here: most errors are impossible
    try {
      if (!source.incrementToken())
        throw new IllegalArgumentException("analyzer returned no terms for range part: " + part);
      termAtt.fillBytesRef();
      assert !source.incrementToken();
    } catch (IOException e) {
      throw new RuntimeException("error analyzing range part: " + part, e);
    }
      
    try {
      source.end();
      source.close();
    } catch (IOException e) {
      throw new RuntimeException("Unable to end & close TokenStream after analyzing range part: " + part, e);
    }
      
    return new BytesRef(bytes);
  }

