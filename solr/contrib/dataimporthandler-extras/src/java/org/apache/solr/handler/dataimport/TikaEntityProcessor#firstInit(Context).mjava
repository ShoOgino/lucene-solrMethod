  @Override
  protected void firstInit(Context context) {
    super.firstInit(context);
    // See similar code in ExtractingRequestHandler.inform
    try {
      String tikaConfigLoc = context.getResolvedEntityAttribute("tikaConfig");
      if (tikaConfigLoc == null) {
        ClassLoader classLoader = context.getSolrCore().getResourceLoader().getClassLoader();
        try (InputStream is = classLoader.getResourceAsStream("solr-default-tika-config.xml")) {
          tikaConfig = new TikaConfig(is);
        }
      } else {
        File configFile = new File(tikaConfigLoc);
        if (configFile.isAbsolute()) {
          tikaConfig = new TikaConfig(configFile);
        } else { // in conf/
          try (InputStream is = context.getSolrCore().getResourceLoader().openResource(tikaConfigLoc)) {
            tikaConfig = new TikaConfig(is);
          }
        }
      }
    } catch (Exception e) {
      wrapAndThrow(SEVERE, e,"Unable to load Tika Config");
    }

    String extractEmbeddedString = context.getResolvedEntityAttribute("extractEmbedded");
    if ("true".equals(extractEmbeddedString)) {
      extractEmbedded = true;
    }
    format = context.getResolvedEntityAttribute("format");
    if(format == null)
      format = "text";
    if (!"html".equals(format) && !"xml".equals(format) && !"text".equals(format)&& !"none".equals(format) )
      throw new DataImportHandlerException(SEVERE, "'format' can be one of text|html|xml|none");

    htmlMapper = context.getResolvedEntityAttribute("htmlMapper");
    if (htmlMapper == null)
      htmlMapper = "default";
    if (!"default".equals(htmlMapper) && !"identity".equals(htmlMapper))
      throw new DataImportHandlerException(SEVERE, "'htmlMapper', if present, must be 'default' or 'identity'");

    parser = context.getResolvedEntityAttribute("parser");
    if(parser == null) {
      parser = AUTO_PARSER;
    }

    spatialMetadataField = context.getResolvedEntityAttribute("spatialMetadataField");
  }

