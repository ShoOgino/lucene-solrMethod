    public MessageIterator(Folder folder, int batchSize) {
      super();
      
      try {
        this.folder = folder;
        this.batchSize = batchSize;
        SearchTerm st = getSearchTerm();
        
        log.info("SearchTerm=" + st);
        
        if (st != null || folder instanceof GmailFolder) {
          doBatching = false;
          // Searching can still take a while even though we're only pulling
          // envelopes; unless you're using gmail server-side filter, which is
          // fast
          log.info("Searching folder " + folder.getName() + " for messages");
          final RTimer searchTimer = new RTimer();

          // If using GMail, speed up the envelope processing by doing a
          // server-side
          // search for messages occurring on or after the fetch date (at
          // midnight),
          // which reduces the number of envelopes we need to pull from the
          // server
          // to apply the precise DateTerm filter; GMail server-side search has
          // date
          // granularity only but the local filters are also applied
                    
          if (folder instanceof GmailFolder && fetchMailsSince != null) {
            String afterCrit = "after:" + afterFmt.format(fetchMailsSince);
            log.info("Added server-side gmail filter: " + afterCrit);
            Message[] afterMessages = folder.search(new GmailRawSearchTerm(
                afterCrit));
            
            log.info("GMail server-side filter found " + afterMessages.length
                + " messages received " + afterCrit + " in folder " + folder.getName());
            
            // now pass in the server-side filtered messages to the local filter
            messagesInCurBatch = folder.search((st != null ? st : this), afterMessages);
          } else {
            messagesInCurBatch = folder.search(st);
          }          
          totalInFolder = messagesInCurBatch.length;
          folder.fetch(messagesInCurBatch, fp);
          current = 0;
          log.info("Total messages : " + totalInFolder);
          log.info("Search criteria applied. Batching disabled. Took {} (ms)", searchTimer.getTime());
        } else {
          totalInFolder = folder.getMessageCount();
          log.info("Total messages : " + totalInFolder);
          getNextBatch(batchSize, folder);
        }
      } catch (MessagingException e) {
        throw new DataImportHandlerException(DataImportHandlerException.SEVERE,
            "Message retreival failed", e);
      }
    }

