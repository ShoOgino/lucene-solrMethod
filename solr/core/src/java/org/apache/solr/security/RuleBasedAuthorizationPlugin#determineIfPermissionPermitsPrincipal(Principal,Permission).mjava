  private MatchStatus determineIfPermissionPermitsPrincipal(Principal principal, Permission governingPermission) {
    if (governingPermission.role == null) {
      log.debug("Governing permission [{}] has no role; permitting access", governingPermission);
      return MatchStatus.PERMITTED;
    }
    if (principal == null) {
      log.debug("Governing permission [{}] has role, but request principal cannot be identified; forbidding access", governingPermission);
      return MatchStatus.USER_REQUIRED;
    } else if (governingPermission.role.contains("*")) {
      log.debug("Governing permission [{}] allows all roles; permitting access", governingPermission);
      return MatchStatus.PERMITTED;
    }

    Set<String> userRoles = usersVsRoles.get(principal.getName());
    for (String role : governingPermission.role) {
      if (userRoles != null && userRoles.contains(role)) {
        log.debug("Governing permission [{}] allows access to role [{}]; permitting access", governingPermission, role);
        return MatchStatus.PERMITTED;
      }
    }
    log.info("This resource is configured to have a permission {}, The principal {} does not have the right role ", governingPermission, principal);
    return MatchStatus.FORBIDDEN;
  }

