  @Override
  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, final String scope) {
    String className = this.getClass().getSimpleName();
    log.debug("Initializing metrics for {}", className);
    this.metricManager = manager;
    this.registryName = registryName;
    // Metrics
    registry = manager.registry(registryName);
    numErrors = manager.meter(this, registryName, "errors", getCategory().toString(), scope, className);
    numLost = manager.meter(this, registryName, "lost", getCategory().toString(), scope, className);
    numLogged = manager.meter(this, registryName, "count", getCategory().toString(), scope, className);
    requestTimes = manager.timer(this, registryName, "requestTimes", getCategory().toString(), scope, className);
    totalTime = manager.counter(this, registryName, "totalTime", getCategory().toString(), scope, className);
    if (async) {
      manager.registerGauge(this, registryName, () -> blockingQueueSize, "queueCapacity", true, "queueCapacity", getCategory().toString(), scope, className);
      manager.registerGauge(this, registryName, () -> blockingQueueSize - queue.remainingCapacity(), "queueSize", true, "queueSize", getCategory().toString(), scope, className);
      queuedTime = manager.timer(this, registryName, "queuedTime", getCategory().toString(), scope, className);
    }
    manager.registerGauge(this, registryName, () -> async, "async", true, "async", getCategory().toString(), scope, className);
  }

