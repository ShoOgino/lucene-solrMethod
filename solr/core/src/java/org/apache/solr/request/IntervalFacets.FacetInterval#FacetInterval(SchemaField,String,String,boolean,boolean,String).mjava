    /**
     * 
     * Constructor that accepts already parsed values of start and end. This constructor
     * can only be used with numeric field types.
     * 
     * @param schemaField schemaField for this range
     * @param startStr String representation of the start value of this interval. Can be a "*".
     * @param endStr String representation of the end value of this interval. Can be a "*".
     * @param includeLower Indicates weather this interval should include values equal to start
     * @param includeUpper Indicates weather this interval should include values equal to end
     * @param key String key of this interval
     */
    FacetInterval(SchemaField schemaField, String startStr, String endStr,
        boolean includeLower, boolean includeUpper, String key) {
      assert schemaField.getType().getNumericType() != null: "Only numeric fields supported with this constructor";
      this.key = key;
      this.startOpen = !includeLower;
      this.endOpen = !includeUpper;
      this.start = getLimitFromString(schemaField, startStr);
      this.end = getLimitFromString(schemaField, endStr);
      assert start == null || end == null || start.compareTo(end) < 0: 
        "Bad start/end limits: " + startStr + "/" + endStr;
      setNumericLimits(schemaField);
    }

