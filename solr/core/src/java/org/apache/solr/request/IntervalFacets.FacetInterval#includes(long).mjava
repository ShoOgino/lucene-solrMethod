    /**
     * Method to use to check whether a document should be counted for
     * an interval or not. Before calling this method on a multi-valued
     * and/or non-numeric field make sure you call {@link #updateContext(SortedDocValues)}
     * or {@link #updateContext(SortedSetDocValues)} (depending on the DV type). It
     * is OK to call this method without other previous calls on numeric fields
     * (with {@link NumericDocValues})
     *
     * @param value For numeric single value fields, this {@code value}
     *              should be the {@code long} representation of the value of the document
     *              in the specified field. For multi-valued and/or non-numeric fields, {@code value}
     *              should be the ordinal of the term in the current segment
     * @return <ul><li>{@link IntervalCompareResult#INCLUDED} if the value is included in the interval
     * <li>{@link IntervalCompareResult#GREATER_THAN_END} if the value is greater than {@code endLimit}
     * <li>{@link IntervalCompareResult#LOWER_THAN_START} if the value is lower than {@code startLimit}
     * </ul>
     * @see org.apache.lucene.util.LegacyNumericUtils#floatToSortableInt(float)
     * @see org.apache.lucene.util.LegacyNumericUtils#doubleToSortableLong(double)
     */
    public IntervalCompareResult includes(long value) {
      if (startLimit > value) {
        return IntervalCompareResult.LOWER_THAN_START;
      }
      if (endLimit < value) {
        return IntervalCompareResult.GREATER_THAN_END;
      }
      return IntervalCompareResult.INCLUDED;
    }

