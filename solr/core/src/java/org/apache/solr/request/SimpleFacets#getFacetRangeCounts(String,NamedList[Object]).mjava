  void getFacetRangeCounts(String facetRange, NamedList<Object> resOuter)
      throws IOException, SyntaxError {

    final IndexSchema schema = searcher.getSchema();

    parseParams(FacetParams.FACET_RANGE, facetRange);
    String f = facetValue;
    String methodStr = params.get(FacetParams.FACET_RANGE_METHOD);
    FacetRangeMethod method = (methodStr==null?FacetRangeMethod.getDefault():FacetRangeMethod.get(methodStr));
    boolean groupFacet = params.getBool(GroupParams.GROUP_FACET, false);
    if (groupFacet && method.equals(FacetRangeMethod.DV)) {
      // the user has explicitly selected the FacetRangeMethod.DV method
      log.warn("Range facet method '" + FacetRangeMethod.DV + "' is not supported together with '" + 
              GroupParams.GROUP_FACET + "'. Will use method '" + FacetRangeMethod.FILTER + "' instead");
      method = FacetRangeMethod.FILTER;
    }

    final SchemaField sf = schema.getField(f);
    final FieldType ft = sf.getType();

    RangeEndpointCalculator<?> calc = null;

    if (ft instanceof TrieField) {
      final TrieField trie = (TrieField)ft;

      switch (trie.getType()) {
        case FLOAT:
          calc = new FloatRangeEndpointCalculator(sf);
          break;
        case DOUBLE:
          calc = new DoubleRangeEndpointCalculator(sf);
          break;
        case INTEGER:
          calc = new IntegerRangeEndpointCalculator(sf);
          break;
        case LONG:
          calc = new LongRangeEndpointCalculator(sf);
          break;
        case DATE:
          calc = new DateRangeEndpointCalculator(sf, null);
          break;
        default:
          throw new SolrException
              (SolrException.ErrorCode.BAD_REQUEST,
                  "Unable to range facet on tried field of unexpected type:" + f);
      }
    } else if (ft instanceof DateRangeField) {
      calc = new DateRangeFieldEndpointCalculator(sf, null);
      if (method.equals(FacetRangeMethod.DV)) {
        // the user has explicitly selected the FacetRangeMethod.DV method
        log.warn("Range facet method '" + FacetRangeMethod.DV + "' is not supported together with field type '" + 
            DateRangeField.class + "'. Will use method '" + FacetRangeMethod.FILTER + "' instead");
        method = FacetRangeMethod.FILTER;
      }
    } else {
      throw new SolrException
          (SolrException.ErrorCode.BAD_REQUEST,
              "Unable to range facet on field:" + sf);
    }
    if (method.equals(FacetRangeMethod.DV)) {
      assert ft instanceof TrieField;
      resOuter.add(key, getFacetRangeCountsDocValues(sf, calc));
    } else {
      resOuter.add(key, getFacetRangeCounts(sf, calc));
    }
  }

