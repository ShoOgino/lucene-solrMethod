    public void handleConflict(Map<String,Object> container, List<String> path, String key, Object current, Object previous) {
      boolean handleAsList = isList(container, path, key, current, previous);
      if (handleAsList) {
        container.put(key, makeList(current, previous) );
        return;
      }

      if (previous instanceof Map && current instanceof Map) {
        @SuppressWarnings({"unchecked"})
        Map<String,Object> prevMap = (Map<String,Object>)previous;
        @SuppressWarnings({"unchecked"})
        Map<String,Object> currMap = (Map<String,Object>)current;
        if (prevMap.size() == 0) return;
        mergeMap(prevMap, currMap, path);
        container.put(key, prevMap);
        return;
      }

      // if we aren't handling as a list, and we aren't handling as a map, then just overwrite (i.e. nothing else to do)
      return;
    }

