  public static void mergeObjects(Map<String,Object> top, List<String> path, Object val, ConflictHandler handler) {
    Map<String,Object> outer = top;
    for (int i=0; i<path.size()-1; i++) {
      Map<String,Object> sub = (Map<String,Object>)outer.get(path.get(i));
      if (sub == null) {
        sub = new LinkedHashMap<String,Object>();
        outer.put(path.get(i), sub);
      }
      outer = sub;
    }

    String key = path.size() > 0 ? path.get(path.size()-1) : null;

    if (key != null) {
      Object existingVal = outer.put(key, val);
      if (existingVal != null) {
        // OK, now we need to merge values
        handler.handleConflict(outer, path, key, val, existingVal);
      }
    } else if (val instanceof Map) {
      // merging at top level...
      Map<String,Object> newMap = (Map<String,Object>)val;
      handler.mergeMap(outer, newMap, path);
    } else {
      // todo: find a way to return query param in error message
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
          "Expected JSON Object but got " + val.getClass().getSimpleName() + "=" + val);
    }
  }

