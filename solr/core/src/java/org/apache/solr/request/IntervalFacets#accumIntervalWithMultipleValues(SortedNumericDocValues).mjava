  private void accumIntervalWithMultipleValues(SortedNumericDocValues longs) throws IOException {
    // longs should be already positioned to the correct doc
    assert longs.docID() != -1;
    assert longs.docValueCount() > 0: "Should have at least one value for this document";
    int currentInterval = 0;
    for (int i = 0; i < longs.docValueCount(); i++) {
      boolean evaluateNextInterval = true;
      long value = longs.nextValue();
      while (evaluateNextInterval && currentInterval < intervals.length) {
        IntervalCompareResult result = intervals[currentInterval].includes(value);
        switch (result) {
          case INCLUDED:
            /*
             * Increment the current interval and move to the next one using
             * the same value
             */
            intervals[currentInterval].incCount();
            currentInterval++;
            break;
          case LOWER_THAN_START:
            /*
             * None of the next intervals will match this value (all of them have 
             * higher start value). Move to the next value for this document. 
             */
            evaluateNextInterval = false;
            break;
          case GREATER_THAN_END:
            /*
             * Next interval may match this value
             */
            currentInterval++;
            break;
        }
        //Maybe return if currentInterval == intervals.length?
      }
     }
  }

