  @Override
  @SuppressWarnings({"unchecked"})
  public void prepare(ResponseBuilder rb) throws IOException {
    Map<String, Object> json = rb.req.getJSON();
    Map<String, Object> jsonFacet = null;
    if (json == null) {
      int version = rb.req.getParams().getInt("facet.version", 1);
      if (version <= 1) return;
      boolean facetsEnabled = rb.req.getParams().getBool(FacetParams.FACET, false);
      if (!facetsEnabled) return;
      jsonFacet = new LegacyFacet(rb.req.getParams()).getLegacy();
    } else {
      Object jsonObj = json.get("facet");
      if (jsonObj instanceof Map) {
        jsonFacet = (Map<String, Object>) jsonObj;
      } else if (jsonObj != null) {
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
            "Expected Map for 'facet', received " + jsonObj.getClass().getSimpleName() + "=" + jsonObj);
      }
    }
    if (jsonFacet == null) return;

    SolrParams params = rb.req.getParams();

    boolean isShard = params.getBool(ShardParams.IS_SHARD, false);
    @SuppressWarnings({"unchecked"})
    Map<String, Object> facetInfo = null;
    if (isShard) {
      String jfacet = params.get(FACET_INFO);
      if (jfacet == null) {
        // if this is a shard request, but there is no _facet_ info, then don't do anything.
        return;
      }
      facetInfo = (Map<String, Object>) fromJSONString(jfacet);
    }

    // At this point, we know we need to do something.  Create and save the state.
    rb.setNeedDocSet(true);

    // Parse the facet in the prepare phase?
    FacetRequest facetRequest = FacetRequest.parse(rb.req, jsonFacet);

    FacetComponentState fcState = new FacetComponentState();
    fcState.rb = rb;
    fcState.isShard = isShard;
    fcState.facetInfo = facetInfo;
    fcState.facetCommands = jsonFacet;
    fcState.facetRequest = facetRequest;

    rb.req.getContext().put(FacetComponentState.class, fcState);
  }

