  @VisibleForTesting
  static byte[] asPngBytes(final int columns, final int rows, final int[] counts, FacetDebugInfo debugInfo) {
    long startTimeNano = System.nanoTime();
    BufferedImage image = PngHelper.newImage(columns, rows);
    for (int c = 0; c < columns; c++) {
      for (int r = 0; r < rows; r++) {
        PngHelper.writeCountAtColumnRow(image, rows, c, r, counts[c * rows + r]);
      }
    }
    byte[] bytes = PngHelper.writeImage(image);
    long durationMs = TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTimeNano);
    if (log.isDebugEnabled()) {
      log.debug("heatmap nativeSize={} pngSize={} pngTime={}", (counts.length * 4), bytes.length, durationMs);
    }
    if (debugInfo != null) {
      debugInfo.putInfoItem("heatmap png timing", durationMs);
    }
    return bytes;
  }

