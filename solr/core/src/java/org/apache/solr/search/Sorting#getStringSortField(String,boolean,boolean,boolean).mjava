  /** Returns a {@link SortField} for a string field.
   *  If nullLast and nullFirst are both false, then default lucene string sorting is used where
   *  null strings sort first in an ascending sort, and last in a descending sort.
   *
   * @param fieldName   the name of the field to sort on
   * @param reverse     true for a reverse (desc) sort
   * @param nullLast    true if null should come last, regardless of sort order
   * @param nullFirst   true if null should come first, regardless of sort order
   * @return SortField
   */
  public static SortField getStringSortField(String fieldName, boolean reverse, boolean nullLast, boolean nullFirst) {
    if (nullFirst && nullLast) {
      throw new IllegalArgumentException("Cannot specify missing values as both first and last");
    }

    SortField sortField = new SortField(fieldName, SortField.Type.STRING, reverse);

    // 4 cases:
    // missingFirst / forward: default lucene behavior
    // missingFirst / reverse: set sortMissingLast
    // missingLast  / forward: set sortMissingLast
    // missingLast  / reverse: default lucene behavior
    
    if (nullFirst && reverse) {
      sortField.setMissingValue(SortField.STRING_LAST);
    } else if (nullLast && !reverse) {
      sortField.setMissingValue(SortField.STRING_LAST);
    }

    return sortField;
  }

