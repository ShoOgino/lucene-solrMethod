  private void parseFieldList(String[] fl, SolrQueryRequest req) {
    _wantsScore = false;
    _wantsAllFields = false;
    if (fl == null || fl.length == 0 || fl.length == 1 && fl[0].length()==0) {
      _wantsAllFields = true;
      return;
    }

    NamedList<String> rename = new NamedList<String>();
    DocTransformers augmenters = new DocTransformers();
    for (String fieldList : fl) {
      add(fieldList,rename,augmenters,req);
    }
    for( int i=0; i<rename.size(); i++ ) {
      String from = rename.getName(i);
      String to = rename.getVal(i);
      okFieldNames.add( to );
      boolean copy = (reqFieldNames!=null && reqFieldNames.contains(from));
      if(!copy) {
        // Check that subsequent copy/rename requests have the field they need to copy
        for(int j=i+1; j<rename.size(); j++) {
          if(from.equals(rename.getName(j))) {
            rename.setName(j, to); // copy from the current target
            if(reqFieldNames==null) {
              reqFieldNames = new HashSet<String>();
            }
            reqFieldNames.add(to); // don't rename our current target
          }
        }
      }
      augmenters.addTransformer( new RenameFieldTransformer( from, to, copy ) );
    }

    if( !_wantsAllFields ) {
      if( !globs.isEmpty() ) {
        // TODO??? need to fill up the fields with matching field names in the index
        // and add them to okFieldNames?
        // maybe just get all fields?
        // this would disable field selection optimization... i think thatis OK
        fields.clear(); // this will get all fields, and use wantsField to limit
      }
      okFieldNames.addAll( fields );
    }

    if( augmenters.size() == 1 ) {
      transformer = augmenters.getTransformer(0);
    }
    else if( augmenters.size() > 1 ) {
      transformer = augmenters;
    }
  }

