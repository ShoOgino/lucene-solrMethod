    void add(long val) {
      if (val == 0) {
        zeroCount = 1;
        return;
      }
      if (cardinality >= threshold) {
        rehash();
      }
      
      // For floats: exponent bits start at bit 23 for single precision,
      // and bit 52 for double precision.
      // Many values will only have significant bits just to the right of that,
      // and the leftmost bits will all be zero.

      // For now, lets just settle to get first 8 significant mantissa bits of double or float in the lowest bits of our hash
      // The upper bits of our hash will be irrelevant.
      int h = (int) (val + (val >>> 44) + (val >>> 15));
      for (int slot = h & mask; ;slot = (slot + 1) & mask) {
        long v = vals[slot];
        if (v == 0) {
          vals[slot] = val;
          cardinality++;
          break;
        } else if (v == val) {
          // val is already in the set
          break;
        }
      }
    }

