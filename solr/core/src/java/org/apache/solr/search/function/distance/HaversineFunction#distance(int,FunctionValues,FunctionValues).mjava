  /**
   * @param doc  The doc to score
   * @param p1DV
   * @param p2DV
   * @return The haversine distance formula
   */
  protected double distance(int doc, FunctionValues p1DV, FunctionValues p2DV) {

    double[] p1D = new double[2];
    double[] p2D = new double[2];
    p1DV.doubleVal(doc, p1D);
    p2DV.doubleVal(doc, p2D);
    double y1;
    double x1;
    double y2;
    double x2;
    if (convertToRadians) {
      y1 = p1D[0] * HaversineConstFunction.DEGREES_TO_RADIANS;
      x1 = p1D[1] * HaversineConstFunction.DEGREES_TO_RADIANS;
      y2 = p2D[0] * HaversineConstFunction.DEGREES_TO_RADIANS;
      x2 = p2D[1] * HaversineConstFunction.DEGREES_TO_RADIANS;
    } else {
      y1 = p1D[0];
      x1 = p1D[1];
      y2 = p2D[0];
      x2 = p2D[1];
    }
    return DistanceUtils.distHaversineRAD(y1,x1,y2,x2)*radius;
  }

