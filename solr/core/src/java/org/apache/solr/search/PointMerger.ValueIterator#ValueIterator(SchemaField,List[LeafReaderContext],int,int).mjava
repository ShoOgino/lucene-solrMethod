    public ValueIterator(SchemaField field, List<LeafReaderContext> readers, int totalBufferSize, int minSegBufferSize) throws IOException {
      assert field.getType().isPointField();
      queue = new PQueue(readers.size());
      long ndocs = readers.get(readers.size()-1).docBase + readers.get(readers.size()-1).reader().maxDoc();
      for (LeafReaderContext ctx : readers) {
        PointValues pv = ctx.reader().getPointValues(field.getName());
        if (pv == null) continue;
        BaseSeg seg = null;
        // int capacity = 2;
        int capacity = (int)((long)totalBufferSize * ctx.reader().maxDoc() / ndocs);
        capacity = Math.max(capacity, minSegBufferSize);

        switch (field.getType().getNumberType()) {
          case INTEGER:
            seg = new IntSeg(pv, capacity);
            break;
          case LONG:
            seg = new LongSeg(pv, capacity);
            break;
          case FLOAT:
            seg = new FloatSeg(pv, capacity);
            break;
          case DOUBLE:
            seg = new DoubleSeg(pv, capacity);
            break;
          case DATE:
            break;
        }
        int count = seg.setNextValue();
        if (count >= 0) {
          queue.add(seg);
        }
      }
      if (queue.size() > 0) topVal = queue.top().getMutableValue().duplicate();
    }

