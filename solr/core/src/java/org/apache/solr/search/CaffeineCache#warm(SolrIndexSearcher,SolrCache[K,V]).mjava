  @Override
  public void warm(SolrIndexSearcher searcher, SolrCache<K,V> old) {
    if (regenerator == null) {
      return;
    }
    
    long warmingStartTime = System.nanoTime();
    Map<K, V> hottest = Collections.emptyMap();
    CaffeineCache<K,V> other = (CaffeineCache<K,V>)old;

    // warm entries
    if (isAutowarmingOn()) {
      Eviction<K, V> policy = other.cache.policy().eviction().get();
      int size = autowarm.getWarmCount(other.cache.asMap().size());
      hottest = policy.hottest(size);
    }

    for (Entry<K, V> entry : hottest.entrySet()) {
      try {
        boolean continueRegen = regenerator.regenerateItem(
            searcher, this, old, entry.getKey(), entry.getValue());
        if (!continueRegen) {
          break;
        }
      }
      catch (Exception e) {
        SolrException.log(log, "Error during auto-warming of key:" + entry.getKey(), e);
      }
    }

    inserts.reset();
    priorStats = other.cache.stats().plus(other.priorStats);
    priorInserts = other.inserts.sum() + other.priorInserts;
    warmupTime = TimeUnit.MILLISECONDS.convert(System.nanoTime() - warmingStartTime, TimeUnit.NANOSECONDS);
  }

