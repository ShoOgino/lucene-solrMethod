  protected void findStartAndEndOrds() throws IOException {
    sortedDocValues = FieldUtil.getSortedDocValues(fcontext.qcontext, sf, null);

    if (prefixRef != null) {
      startTermIndex = sortedDocValues.lookupTerm(prefixRef.get());
      if (startTermIndex < 0) startTermIndex = -startTermIndex - 1;
      prefixRef.append(UnicodeUtil.BIG_TERM);
      endTermIndex = sortedDocValues.lookupTerm(prefixRef.get());
      assert endTermIndex < 0;
      endTermIndex = -endTermIndex - 1;
    } else {
      startTermIndex = 0;
      endTermIndex = sortedDocValues.getValueCount();
    }

    // optimize collecting the "missing" bucket when startTermindex is 0 (since the "missing" ord is -1)
    startTermIndex = startTermIndex==0 && freq.missing ? -1 : startTermIndex;

    nTerms = endTermIndex - startTermIndex;
  }

