    private TupleStream createSolrStream() {
      StreamExpression searchExpr = new StreamExpression("search")
              .withParameter(collection)
              .withParameter(new StreamExpressionNamedParameter(CommonParams.Q, query));
      String fq = createHashRangeFq();
      if (fq != null) {
        searchExpr.withParameter(new StreamExpressionNamedParameter(CommonParams.FQ, fq));
      }
      searchExpr.withParameter(new StreamExpressionNamedParameter(CommonParams.FL, fromField))
              .withParameter(new StreamExpressionNamedParameter(CommonParams.SORT, fromField + " asc"))
              .withParameter(new StreamExpressionNamedParameter(CommonParams.QT, "/export"));

      for (Map.Entry<String,String[]> entry : otherParams) {
        for (String value : entry.getValue()) {
          searchExpr.withParameter(new StreamExpressionNamedParameter(entry.getKey(), value));
        }
      }

      StreamExpression uniqueExpr = new StreamExpression("unique");
      uniqueExpr.withParameter(searchExpr)
              .withParameter(new StreamExpressionNamedParameter("over", fromField));

      ModifiableSolrParams params = new ModifiableSolrParams();
      params.set("expr", uniqueExpr.toString());
      params.set(CommonParams.QT, "/stream");
      params.set(CommonParams.WT, CommonParams.JAVABIN);

      return new SolrStream(solrUrl + "/" + collection, params);
    }

