  @Override
  public ValueSource parse(FunctionQParser fp) throws SyntaxError {
    
    final String sortFieldName = fp.parseArg();
    final Query query;
    if (fp.hasMoreArguments()){
      query = fp.parseNestedQuery();
    } else {
      query = fp.subQuery(fp.getParam(CommonParams.Q), null).getQuery();
    }
    
    BitSetProducer parentFilter;
    BitSetProducer childFilter;
    SchemaField sf;
    try {
      AllParentsAware bjQ;
      if (!(query instanceof AllParentsAware)) {
        throw new SyntaxError("expect a reference to block join query "+
              AllParentsAware.class.getSimpleName()+" in "+fp.getString());
      }
      bjQ = (AllParentsAware) query;
      
      parentFilter = BlockJoinParentQParser.getCachedBitSetProducer(fp.getReq(), bjQ.getParentQuery());
      childFilter = BlockJoinParentQParser.getCachedBitSetProducer(fp.getReq(), bjQ.getChildQuery());

      if (sortFieldName==null || sortFieldName.equals("")) {
        throw new SyntaxError ("field is omitted in "+fp.getString());
      }
      
      sf = fp.getReq().getSchema().getFieldOrNull(sortFieldName);
      if (null == sf) {
        throw new SyntaxError
          (NAME+" sort param field \""+ sortFieldName+"\" can't be found in schema");
      }
    } catch (SyntaxError e) {
      log.error("can't parse {}", fp.getString(), e);
      throw e;
    }
    return new BlockJoinSortFieldValueSource(childFilter, parentFilter, sf);
  }

