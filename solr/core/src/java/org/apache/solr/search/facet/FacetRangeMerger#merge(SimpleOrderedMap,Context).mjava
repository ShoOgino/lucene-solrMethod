  public void merge(@SuppressWarnings("rawtypes") SimpleOrderedMap facetResult, Context mcontext) {
    boolean all = freq.others.contains(FacetParams.FacetRangeOther.ALL);

    if (all || freq.others.contains(FacetParams.FacetRangeOther.BEFORE)) {
      Object o = facetResult.get(FacetParams.FacetRangeOther.BEFORE.toString());
      if (o != null) {
        if (beforeBucket == null) {
          beforeBucket = newBucket(null, mcontext);
        }
        beforeBucket.mergeBucket((SimpleOrderedMap)o, mcontext);
      }
    }

    if (all || freq.others.contains(FacetParams.FacetRangeOther.AFTER)) {
      Object o = facetResult.get(FacetParams.FacetRangeOther.AFTER.toString());
      if (o != null) {
        if (afterBucket == null) {
          afterBucket = newBucket(null, mcontext);
        }
        afterBucket.mergeBucket((SimpleOrderedMap)o , mcontext);
      }
    }

    if (all || freq.others.contains(FacetParams.FacetRangeOther.BETWEEN)) {
      Object o = facetResult.get(FacetParams.FacetRangeOther.BETWEEN.toString());
      if (o != null) {
        if (betweenBucket == null) {
          betweenBucket = newBucket(null, mcontext);
        }
        betweenBucket.mergeBucket((SimpleOrderedMap)o , mcontext);
      }
    }

    Object shard_actual_end = facetResult.get(FacetRange.ACTUAL_END_JSON_KEY);
    if (null != shard_actual_end) {
      if (null == actual_end) {
        actual_end = shard_actual_end;
      } else {
        assert actual_end.equals(shard_actual_end) : actual_end + " != " + shard_actual_end;
      }
    }

    @SuppressWarnings({"unchecked", "rawtypes"})
    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get("buckets");
    mergeBucketList(bucketList , mcontext);
  }

