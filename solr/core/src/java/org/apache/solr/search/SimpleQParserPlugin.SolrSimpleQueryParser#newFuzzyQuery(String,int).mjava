    @Override
    protected Query newFuzzyQuery(String text, int fuzziness) {
      BooleanQuery.Builder bq = new BooleanQuery.Builder();

      for (Map.Entry<String, Float> entry : weights.entrySet()) {
        String field = entry.getKey();
        FieldType type = schema.getFieldType(field);
        Query fuzzy = null;

        if (type instanceof TextField) {
          // If the field type is a TextField then use the multi term analyzer.
          Analyzer analyzer = ((TextField)type).getMultiTermAnalyzer();
          BytesRef termBytes = TextField.analyzeMultiTerm(field, text, analyzer);
          if (termBytes != null) {
            String term = termBytes.utf8ToString();
            fuzzy = new FuzzyQuery(new Term(entry.getKey(), term), fuzziness);
          }
        } else {
          // If the type is *not* a TextField don't do any analysis.
          fuzzy = new FuzzyQuery(new Term(entry.getKey(), text), fuzziness);
        }
        if (fuzzy != null) {
          float boost = entry.getValue();
          if (boost != 1f) {
            fuzzy = new BoostQuery(fuzzy, boost);
          }
          bq.add(fuzzy, BooleanClause.Occur.SHOULD);
        }
      }

      return simplify(bq.build());
    }

