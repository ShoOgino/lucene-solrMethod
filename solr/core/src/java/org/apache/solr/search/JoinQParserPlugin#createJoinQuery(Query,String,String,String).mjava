  /**
   * A helper method for other plugins to create (non-scoring) JoinQueries wrapped around arbitrary queries against the same core.
   * 
   * @param subQuery the query to define the starting set of documents on the "left side" of the join
   * @param fromField "left side" field name to use in the join
   * @param toField "right side" field name to use in the join
   * @param method indicates which implementation should be used to process the join.  Currently only 'index',
   *               'dvWithScore', and 'topLevelDV' are supported.
   */
  public static Query createJoinQuery(Query subQuery, String fromField, String toField, String method) {
    // no method defaults to 'index' for back compatibility
    if ( method == null ) {
      return new JoinQuery(fromField, toField, null, subQuery);
    }


    final Method joinMethod = parseMethodString(method);
    if (! JOIN_METHOD_WHITELIST.contains(joinMethod)) {
      // TODO Throw something that the callers here (FacetRequest) can catch and produce a more domain-appropriate error message for?
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
          "Join method " + method + " not supported for non-scoring, same-core joins");
    }

    final JoinParams jParams = new JoinParams(fromField, null, subQuery, 0L, toField);
    return joinMethod.makeJoinDirectFromParams(jParams);
  }

