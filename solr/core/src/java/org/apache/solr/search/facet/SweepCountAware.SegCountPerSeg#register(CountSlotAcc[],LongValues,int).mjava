    /**
     * Maps accumulated per-segment term ords to global term ords and increments global slots on the specified countAccs
     * accordingly. The index of each CountSlotAcc in the specified countAccs array must correspond to the
     * the static index of its associated count accumulation doc domain and per-seg count array.
     * 
     * @param countAccs - global-scope CountSlotAccs (one for each domain) to be incremented for the most recently accumulated
     * segment
     * @param toGlobal - mapping of per-segment term ords to global term ords for the most recently accumulated segment
     * @param maxSegOrd - the max per-seg term ord for the most recently accumulated segment
     */
    public void register(CountSlotAcc[] countAccs, LongValues toGlobal, int maxSegOrd) {
      int segOrd = maxSegOrd;
      final int maxIdx = countAccs.length - 1;
      for (;;) {
        if (seen[segOrd]) {
          int i = maxIdx;
          int slot = toGlobal == null ? segOrd : (int)toGlobal.get(segOrd);
          do {
            final int inc = allSegCounts[i][segOrd];
            if (inc > 0) {
              countAccs[i].incrementCount(slot, inc);
            }
          } while (i-- > 0);
        }
        if (--segOrd < 0) {
          break;
        }
      }
    }

