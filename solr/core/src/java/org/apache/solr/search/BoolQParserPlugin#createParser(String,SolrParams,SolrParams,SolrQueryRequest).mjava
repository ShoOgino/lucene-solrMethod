  @Override
  public QParser createParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {
    return new QParser(qstr, localParams, params, req) {
      @Override
      public Query parse() throws SyntaxError {
        BooleanQuery.Builder builder = new BooleanQuery.Builder();
        SolrParams solrParams = SolrParams.wrapDefaults(localParams, params);
        addQueries(builder, solrParams.getParams("must"), BooleanClause.Occur.MUST);
        addQueries(builder, solrParams.getParams("must_not"), BooleanClause.Occur.MUST_NOT);
        addQueries(builder, solrParams.getParams("filter"), BooleanClause.Occur.FILTER);
        addQueries(builder, solrParams.getParams("should"), BooleanClause.Occur.SHOULD);
        return builder.build();
      }

      private void addQueries(BooleanQuery.Builder builder, String[] subQueries, BooleanClause.Occur occur) throws SyntaxError {
        if (subQueries != null) {
          for (String subQuery : subQueries) {
            builder.add(subQuery(subQuery, null).parse(), occur);
          }
        }
      }
    };
  }

