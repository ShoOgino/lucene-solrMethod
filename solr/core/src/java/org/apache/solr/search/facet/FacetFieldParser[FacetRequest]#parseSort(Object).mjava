  // Sort specification is currently
  // sort : 'mystat desc'
  // OR
  // sort : { mystat : 'desc' }
  private static FacetRequest.FacetSort parseSort(Object sort) {
    if (sort == null) {
      return null;
    } else if (sort instanceof String) {
      String sortStr = (String)sort;
      if (sortStr.endsWith(" asc")) {
        return new FacetRequest.FacetSort(sortStr.substring(0, sortStr.length()-" asc".length()),
                                          FacetRequest.SortDirection.asc);
      } else if (sortStr.endsWith(" desc")) {
        return new FacetRequest.FacetSort(sortStr.substring(0, sortStr.length()-" desc".length()),
                                          FacetRequest.SortDirection.desc);
      } else {
        return new FacetRequest.FacetSort(sortStr,
                                          // default direction for "index" is ascending
                                          ("index".equals(sortStr)
                                           ? FacetRequest.SortDirection.asc
                                           : FacetRequest.SortDirection.desc));
      }
    } else {
     // sort : { myvar : 'desc' }
      Map<String,Object> map = (Map<String,Object>)sort;
      // TODO: validate
      Map.Entry<String,Object> entry = map.entrySet().iterator().next();
      String k = entry.getKey();
      Object v = entry.getValue();
      return new FacetRequest.FacetSort(k, FacetRequest.SortDirection.valueOf(v.toString()));
    }
  }

