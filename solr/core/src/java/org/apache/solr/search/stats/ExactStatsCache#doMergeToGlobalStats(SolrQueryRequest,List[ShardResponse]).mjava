  @Override
  protected void doMergeToGlobalStats(SolrQueryRequest req, List<ShardResponse> responses) {
    Set<Term> allTerms = new HashSet<>();
    for (ShardResponse r : responses) {
      if (log.isDebugEnabled()) {
        log.debug("Merging to global stats, shard={}, response={}", r.getShard(), r.getSolrResponse().getResponse());
      }
      // response's "shard" is really a shardURL, or even a list of URLs
      String shard = r.getShard();
      SolrResponse res = r.getSolrResponse();
      if (res.getException() != null) {
        log.debug("Exception response={}", res);
        continue;
      }
      if (res.getResponse().get(ShardParams.SHARD_NAME) != null) {
        shard = (String) res.getResponse().get(ShardParams.SHARD_NAME);
      }
      NamedList<Object> nl = res.getResponse();

      String termStatsString = (String) nl.get(TERM_STATS_KEY);
      if (termStatsString != null) {
        addToPerShardTermStats(req, shard, termStatsString);
      }
      Set<Term> terms = StatsUtil.termsFromEncodedString((String) nl.get(TERMS_KEY));
      allTerms.addAll(terms);
      String colStatsString = (String) nl.get(COL_STATS_KEY);
      Map<String,CollectionStats> colStats = StatsUtil.colStatsMapFromString(colStatsString);
      if (colStats != null) {
        addToPerShardColStats(req, shard, colStats);
      }
    }
    if (allTerms.size() > 0) {
      req.getContext().put(TERMS_KEY, StatsUtil.termsToEncodedString(allTerms));
    }
    if (log.isDebugEnabled()) printStats(req);
  }

