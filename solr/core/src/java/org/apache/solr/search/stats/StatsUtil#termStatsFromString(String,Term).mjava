  private static TermStats termStatsFromString(String data, Term t) {
    if (data == null || data.trim().length() == 0) {
      LOG.warn("Invalid empty term stats string");
      return null;
    }
    String[] vals = data.split(",");
    if (vals.length < 2) {
      LOG.warn("Invalid term stats string, num fields " + vals.length
          + " < 2, '" + data + "'");
      return null;
    }
    Term termToUse;
    int idx = 0;
    if (vals.length == 3) {
      idx++;
      // with term
      Term term = termFromString(vals[0]);
      if (term != null) {
        termToUse = term;
        if (t != null) {
          assert term.equals(t);
        }
      } else { // failed term decoding
        termToUse = t;
      }
    } else {
      termToUse = t;
    }
    if (termToUse == null) {
      LOG.warn("Missing term in termStats '" + data + "'");
      return null;
    }
    try {
      long docFreq = Long.parseLong(vals[idx++]);
      long totalTermFreq = Long.parseLong(vals[idx]);
      return new TermStats(termToUse.toString(), docFreq, totalTermFreq);
    } catch (Exception e) {
      LOG.warn("Invalid termStats string '" + data + "'");
      return null;
    }
  }

