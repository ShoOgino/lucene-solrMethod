  /**
   * Free's resources associated with this searcher.
   *
   * In particular, the underlying reader and any cache's in use are closed.
   */
  @Override
  public void close() throws IOException {
    if (debug) {
      if (cachingEnabled) {
        StringBuilder sb = new StringBuilder();
        sb.append("Closing ").append(name);
        for (SolrCache cache : cacheList) {
          sb.append("\n\t");
          sb.append(cache);
        }
        log.debug(sb.toString());
      } else {
        if (debug) log.debug("Closing " + name);
      }
    }

    core.getInfoRegistry().remove(name);

    // super.close();
    // can't use super.close() since it just calls reader.close() and that may only be called once
    // per reader (even if incRef() was previously called).
    try {
      if (closeReader) reader.decRef();
    } catch (Throwable t) {
      SolrException.log(log, "Problem dec ref'ing reader", t);
    }

    for (SolrCache cache : cacheList) {
      cache.close();
    }

    if (reserveDirectory) {
      directoryFactory.release(getIndexReader().directory());
    }
    if (createdDirectory) {
      directoryFactory.release(getIndexReader().directory());
    }
   
    
    // do this at the end so it only gets done if there are no exceptions
    numCloses.incrementAndGet();
  }

