  @Override
  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {
    FacetComponentState facetState = getFacetComponentState(rb);
    if (facetState == null) return;

    for (ShardResponse shardRsp : sreq.responses) {
      SolrResponse rsp = shardRsp.getSolrResponse();
      NamedList<Object> top = rsp.getResponse();
      if (top == null) continue; // shards.tolerant=true will cause this to happen on exceptions/errors
      Object facet = top.get("facets");
      if (facet == null) continue;
      if (facetState.merger == null) {
        facetState.merger = facetState.facetRequest.createFacetMerger(facet);
        facetState.mcontext = new FacetMerger.Context( sreq.responses.size() );
      }

      if ((sreq.purpose & PURPOSE_REFINE_JSON_FACETS) != 0) {
        // System.err.println("REFINE FACET RESULT FROM SHARD = " + facet);
        // call merge again with a diff flag set on the context???
        facetState.mcontext.root = facet;
        facetState.mcontext.setShard(shardRsp.getShard());  // TODO: roll newShard into setShard?
        facetState.merger.merge(facet , facetState.mcontext);
        return;
      }

      // System.err.println("MERGING FACET RESULT FROM SHARD = " + facet);
      facetState.mcontext.root = facet;
      facetState.mcontext.newShard(shardRsp.getShard());
      facetState.merger.merge(facet , facetState.mcontext);
    }
  }

