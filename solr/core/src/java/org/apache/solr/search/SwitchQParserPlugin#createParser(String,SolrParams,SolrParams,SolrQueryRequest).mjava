  @Override
  public QParser createParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {
    return new QParser(qstr, localParams, params, req) {
      QParser subParser;

      @Override
      public Query parse() throws SyntaxError {
        String val = localParams.get(QueryParsing.V);

        // we don't want to wrapDefaults arround params, because then 
        // clients could add their own switch options 
        String subQ = localParams.get(SWITCH_DEFAULT);
        subQ = StringUtils.isBlank(val)
          ? localParams.get(SWITCH_CASE, subQ)
          : localParams.get(SWITCH_CASE + "." + val.trim(), subQ);

        if (null == subQ) {
          throw new SyntaxError("No "+SWITCH_DEFAULT+", and no switch case matching specified query string: \"" + val + "\"");
        }

        subParser = subQuery(subQ, null);
        return subParser.getQuery();
      }

      @Override
      public String[] getDefaultHighlightFields() {
        return subParser.getDefaultHighlightFields();
      }
                                           
      @Override
      public Query getHighlightQuery() throws SyntaxError {
        return subParser.getHighlightQuery();
      }

      @Override
      public void addDebugInfo(NamedList<Object> debugInfo) {
        subParser.addDebugInfo(debugInfo);
      }
    };
  }

