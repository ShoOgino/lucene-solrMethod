  /** @lucene.internal
   * gets a cached version of the IndexFingerprint for this searcher
   **/
  public IndexFingerprint getIndexFingerprint(long maxVersion) throws IOException {
    final SolrIndexSearcher searcher = this;
    final AtomicReference<IOException> exception = new AtomicReference<>();
    try {
      return maxVersionFingerprintCache.computeIfAbsent(maxVersion, key -> {
        try {
          return IndexFingerprint.getFingerprint(searcher, key);
        } catch (IOException e) {
          exception.set(e);
          return null;
        }
      });
    } finally {
      if (exception.get() != null) throw exception.get();
    }
  }

