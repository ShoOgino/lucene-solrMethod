  /** Computes the timestamp of the next collection given the timestamp of the one before. */
  public static Instant computeNextCollTimestamp(Instant fromTimestamp, String intervalDateMath, TimeZone intervalTimeZone) {
    //TODO overload DateMathParser.parseMath to take tz and "now"
    final DateMathParser dateMathParser = new DateMathParser(intervalTimeZone);
    dateMathParser.setNow(Date.from(fromTimestamp));
    final Instant nextCollTimestamp;
    try {
      nextCollTimestamp = dateMathParser.parseMath(intervalDateMath).toInstant();
    } catch (ParseException e) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
          "Invalid Date Math String:'" + intervalDateMath +'\'', e);
    }
    assert nextCollTimestamp.isAfter(fromTimestamp);
    return nextCollTimestamp;
  }

