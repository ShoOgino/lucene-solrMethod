  @Override
  public void close() throws IOException {
    log.debug("Closing Writer " + name);
    Directory directory = getDirectory();
    final InfoStream infoStream = isClosed ? null : getConfig().getInfoStream();
    try {
      while (true) {
        try {
          super.close();
        } catch (ThreadInterruptedException e) {
          // don't allow interruption
          continue;
        } catch (Throwable t) {
          log.error("Error closing IndexWriter, trying rollback", t);
          super.rollback();
        }
        if (writeLock != null && writeLock.isLocked()) {
          try {
            // we go right to the lock because
            // IndexWriter#unlock(Directory) does
            // not work well in this case with
            // native locks
            writeLock.release();
          } catch (Throwable t) {
            log.error(
                "Coud not unlock directory after seemingly failed IndexWriter#close()",
                t);
          }
        }
        break;
      }
    } finally {
      if (infoStream != null) {
        infoStream.close();
      }
      
      isClosed = true;
      
      directoryFactory.release(directory);
      
      numCloses.incrementAndGet();
    }
  }

