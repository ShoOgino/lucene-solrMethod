  private boolean handleVersions(ShardResponse srsp) {
    // we retrieved the last N updates from the replica
    List<Long> otherVersions = (List<Long>)srsp.getSolrResponse().getResponse().get("versions");
    // TODO: how to handle short lists?

    SyncShardRequest sreq = (SyncShardRequest) srsp.getShardRequest();
    Object fingerprint = srsp.getSolrResponse().getResponse().get("fingerprint");

    if (log.isInfoEnabled()) {
      log.info("{} Received {} versions from {} fingerprint:{}", msg(), otherVersions.size(), sreq.shards[0], fingerprint);
    }
    if (fingerprint != null) {
      sreq.fingerprint = IndexFingerprint.fromObject(fingerprint);
    }

    if (otherVersions.size() == 0) {
      // when sync with other replicas, they may not contains any updates
      return true;
    }
    
    MissedUpdatesRequest updatesRequest = missedUpdatesFinder.find(
        otherVersions, sreq.shards[0],
        () -> core.getSolrConfig().useRangeVersionsForPeerSync && canHandleVersionRanges(sreq.shards[0]));

    if (updatesRequest == MissedUpdatesRequest.ALREADY_IN_SYNC) {
      return true;
    } else if (updatesRequest == MissedUpdatesRequest.UNABLE_TO_SYNC) {
      return false;
    } else if (updatesRequest == MissedUpdatesRequest.EMPTY) {
      // If we requested updates from another replica, we can't compare fingerprints yet with this replica, we need to defer
      if (doFingerprint) {
        sreq.doFingerprintComparison = true;
      }
      return true;
    }

    sreq.totalRequestedUpdates = updatesRequest.totalRequestedUpdates;
    return requestUpdates(srsp, updatesRequest.versionsAndRanges, updatesRequest.totalRequestedUpdates);
  }

