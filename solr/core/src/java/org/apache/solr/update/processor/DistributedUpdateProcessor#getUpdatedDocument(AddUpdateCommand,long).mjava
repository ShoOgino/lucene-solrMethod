  // TODO: may want to switch to using optimistic locking in the future for better concurrency
  // that's why this code is here... need to retry in a loop closely around/in versionAdd
  boolean getUpdatedDocument(AddUpdateCommand cmd, long versionOnUpdate) throws IOException {
    if (!AtomicUpdateDocumentMerger.isAtomicUpdate(cmd)) return false;

    Set<String> inPlaceUpdatedFields = AtomicUpdateDocumentMerger.computeInPlaceUpdatableFields(cmd);
    if (inPlaceUpdatedFields.size() > 0) { // non-empty means this is suitable for in-place updates
      if (docMerger.doInPlaceUpdateMerge(cmd, inPlaceUpdatedFields)) {
        return true;
      } else {
        // in-place update failed, so fall through and re-try the same with a full atomic update
      }
    }
    
    // full (non-inplace) atomic update
    SolrInputDocument sdoc = cmd.getSolrInputDocument();
    BytesRef id = cmd.getIndexedId();
    SolrInputDocument oldRootDocWithChildren = RealTimeGetComponent.getInputDocument(cmd.getReq().getCore(), id, RealTimeGetComponent.Resolution.ROOT_WITH_CHILDREN);

    if (oldRootDocWithChildren == null) {
      if (versionOnUpdate > 0) {
        // could just let the optimistic locking throw the error
        throw new SolrException(ErrorCode.CONFLICT, "Document not found for update.  id=" + cmd.getPrintableId());
      } else if (req.getParams().get(ShardParams._ROUTE_) != null) {
        // the specified document could not be found in this shard
        // and was explicitly routed using _route_
        throw new SolrException(ErrorCode.BAD_REQUEST,
            "Could not find document " + idField.getName() + ":" + id +
                ", perhaps the wrong \"_route_\" param was supplied");
      }
    } else {
      oldRootDocWithChildren.remove(CommonParams.VERSION_FIELD);
    }


    SolrInputDocument mergedDoc;
    if(idField == null || oldRootDocWithChildren == null) {
      // create a new doc by default if an old one wasn't found
      mergedDoc = docMerger.merge(sdoc, new SolrInputDocument());
    } else {
      if(req.getSchema().savesChildDocRelations() &&
          !sdoc.getField(idField.getName()).getFirstValue().toString()
              .equals((String) oldRootDocWithChildren.getFieldValue(IndexSchema.ROOT_FIELD_NAME))) {
        // this is an update where the updated doc is not the root document
        SolrInputDocument sdocWithChildren = RealTimeGetComponent.getInputDocument(cmd.getReq().getCore(),
            id, RealTimeGetComponent.Resolution.DOC_WITH_CHILDREN);
        mergedDoc = docMerger.mergeChildDoc(sdoc, oldRootDocWithChildren, sdocWithChildren);
      } else {
        mergedDoc = docMerger.merge(sdoc, oldRootDocWithChildren);
      }
    }
    cmd.solrDoc = mergedDoc;
    return true;
  }

