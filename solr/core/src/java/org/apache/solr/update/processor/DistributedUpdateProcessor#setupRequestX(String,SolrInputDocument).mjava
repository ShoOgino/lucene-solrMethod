  private List<Node> setupRequestX(String id, SolrInputDocument doc) {
    List<Node> nodes = null;

    // if we are in zk mode...
    if (zkEnabled) {
      // set num nodes
      ClusterState cstate = zkController.getClusterState();
      numNodes = cstate.getLiveNodes().size();
      DocCollection coll = cstate.getCollection(collection);
      Slice slice = coll.getRouter().getTargetShard(id, doc, req.getParams(), coll);

      Replica leader = slice.getLeader();

      String coreName = req.getCore().getName();
      String coreNodeName = zkController.getNodeName() + "_" + coreName;
      isLeader = coreNodeName.equals(leader.getName());  // is this me?

      DistribPhase phase =
          DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));

      doDefensiveChecks(slice.getName(), phase);


      if (DistribPhase.FROMLEADER == phase) {
        // we are coming from the leader, just go local - add no urls
        forwardToLeader = false;
      } else if (isLeader) {
        // that means I want to forward onto my replicas...
        // so get the replicas...
        forwardToLeader = false;
        List<ZkCoreNodeProps> replicaProps = zkController.getZkStateReader()
            .getReplicaProps(collection, slice.getName(), zkController.getNodeName(),
                coreName, null, ZkStateReader.DOWN);
        if (replicaProps != null) {
          nodes = new ArrayList<Node>(replicaProps.size());
          // check for test param that lets us miss replicas
          String[] skipList = req.getParams().getParams("test.distrib.skip.servers");
          Set<String> skipListSet = null;
          if (skipList != null) {
            skipListSet = new HashSet<String>(skipList.length);
            skipListSet.addAll(Arrays.asList(skipList));
          }

          for (ZkCoreNodeProps props : replicaProps) {
            if (skipList != null) {
              if (!skipListSet.contains(props.getCoreUrl())) {
                nodes.add(new StdNode(props));
              }
            } else {
              nodes.add(new StdNode(props));
            }
          }
        }

      } else {
        // I need to forward onto the leader...
        nodes = new ArrayList<Node>(1);
        nodes.add(new RetryNode(new ZkCoreNodeProps(leader), zkController.getZkStateReader(), collection, leader.getName()));
        forwardToLeader = true;
      }

    }

    return nodes;
  }

