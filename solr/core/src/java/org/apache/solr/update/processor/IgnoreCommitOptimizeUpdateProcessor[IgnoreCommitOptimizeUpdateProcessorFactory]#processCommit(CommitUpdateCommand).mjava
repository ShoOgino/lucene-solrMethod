  @Override
  public void processCommit(CommitUpdateCommand cmd) throws IOException {

    if (ignoreOptimizeOnly && !cmd.optimize) {
      // we're setup to only ignore optimize requests so it's OK to pass this commit on down the line
      if (next != null) next.processCommit(cmd);
      return;
    }

    if (cmd.getReq().getParams().getBool(DistributedUpdateProcessor.COMMIT_END_POINT, false)) {
      // this is a targeted commit from replica to leader needed for recovery, so can't be ignored
      if (next != null) next.processCommit(cmd);
      return;
    }

    final String cmdType = cmd.optimize ? "optimize" : "commit";
    if (errorCode != null) {
      IgnoreCommitOptimizeUpdateProcessorFactory.log.info(
          "{} from client application ignored with error code: {}", cmdType, errorCode.code);
      rsp.setException(new SolrException(errorCode, responseMsg));
    } else {
      // errorcode is null, treat as a success with an optional message warning the commit request was ignored
      IgnoreCommitOptimizeUpdateProcessorFactory.log.info(
          "{} from client application ignored with status code: 200", cmdType);
      if (responseMsg != null) {
        NamedList<Object> responseHeader = rsp.getResponseHeader();
        if (responseHeader != null) {
          responseHeader.add("msg", responseMsg);
        } else {
          responseHeader = new SimpleOrderedMap<Object>();
          responseHeader.add("msg", responseMsg);
          rsp.add("responseHeader", responseHeader);
        }
      }
    }
  }

