  @Override
  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {
    final LeafReader wrapped = wrap((LeafReader) searcher.getIndexReader());
    final IndexSearcher privateContext = new IndexSearcher(wrapped);
    privateContext.setQueryCache(searcher.getQueryCache());
    final Weight inner = in.createWeight(privateContext, needsScores, boost);
    return new Weight(DeleteByQueryWrapper.this) {
      @Override
      public void extractTerms(Set<Term> terms) {
        throw new UnsupportedOperationException();
      }

      @Override
      public Explanation explain(LeafReaderContext context, int doc) throws IOException { throw new UnsupportedOperationException(); }

      @Override
      public Scorer scorer(LeafReaderContext context) throws IOException {
        return inner.scorer(privateContext.getIndexReader().leaves().get(0));
      }

      @Override
      public IndexReader.CacheHelper getCacheHelper(LeafReaderContext context) {
        return inner.getCacheHelper(context);
      }
    };
  }

