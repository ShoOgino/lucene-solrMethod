  /**
   * expert: Reset the update log before initialisation. This is called by
   * {@link org.apache.solr.handler.IndexFetcher#moveTlogFiles(File)} during a
   * a Recovery operation in order to re-initialise the UpdateLog with a new set of tlog files.
   * @see #initForRecovery(File, long)
   */
  public BufferedUpdates resetForRecovery() {
    synchronized (this) { // since we blocked updates in IndexFetcher, this synchronization shouldn't strictly be necessary.
      // If we are buffering, we need to return the related information to the index fetcher
      // for properly initialising the new update log - SOLR-8263
      BufferedUpdates bufferedUpdates = new BufferedUpdates();
      if (state == State.BUFFERING && tlog != null) {
        bufferedUpdates.tlog = tlog.tlogFile; // file to keep
        bufferedUpdates.offset = this.recoveryInfo.positionOfStart;
      }

      // Close readers
      for (CdcrLogReader reader : logPointers.keySet()) {
        reader.close();
      }
      logPointers.clear();

      // Close and clear logs
      doClose(prevTlog);
      doClose(tlog);

      for (TransactionLog log : logs) {
        if (log == prevTlog || log == tlog) continue;
        doClose(log);
      }

      logs.clear();
      newestLogsOnStartup.clear();
      tlog = prevTlog = null;
      prevMapLog = prevMapLog2 = null;

      map.clear();
      if (prevMap != null) prevMap.clear();
      if (prevMap2 != null) prevMap2.clear();

      tlogFiles = null;
      numOldRecords = 0;

      oldDeletes.clear();
      deleteByQueries.clear();

      return bufferedUpdates;
    }
  }

