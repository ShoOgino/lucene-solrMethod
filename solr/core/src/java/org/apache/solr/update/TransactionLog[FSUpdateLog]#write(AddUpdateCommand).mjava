  public long write(AddUpdateCommand cmd) {
    LogCodec codec = new LogCodec();
    synchronized (fos) {
      try {
        long pos = fos.size();   // if we had flushed, this should be equal to channel.position()
        SolrInputDocument sdoc = cmd.getSolrInputDocument();

        if (pos == 0) { // TODO: needs to be changed if we start writing a header first
          addGlobalStrings(sdoc.getFieldNames());
          pos = fos.size();
        }

        /***
        System.out.println("###writing at " + pos + " fos.size()=" + fos.size() + " raf.length()=" + raf.length());
         if (pos != fos.size()) {
          throw new RuntimeException("ERROR" + "###writing at " + pos + " fos.size()=" + fos.size() + " raf.length()=" + raf.length());
        }
         ***/

        codec.init(fos);
        codec.writeTag(JavaBinCodec.ARR, 3);
        codec.writeInt(UpdateLog.ADD);  // should just take one byte
        codec.writeLong(0);  // the version... should also just be one byte if 0
        codec.writeSolrInputDocument(cmd.getSolrInputDocument());
        // fos.flushBuffer();  // flush later

        assert pos < fos.size();
        return pos;
      } catch (IOException e) {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
      }
    }
  }

