  static List<UpdateRequestProcessorFactory> getReqProcessors(String processor, SolrCore core) {
    if (processor == null) return Collections.emptyList();
    List<UpdateRequestProcessorFactory> result = new ArrayList<>();
    List<String> names = StrUtils.splitSmart(processor, ',');
    for (String s : names) {
      s = s.trim();
      if (s.isEmpty()) continue;
      UpdateRequestProcessorFactory p = null;
      PluginBag.PluginHolder<UpdateRequestProcessorFactory> holder = core.getUpdateProcessors().getRegistry().get(s);
      if (holder instanceof PackagePluginHolder) {
        p = new LazyUpdateRequestProcessorFactory(holder);
      } else {
        p = core.getUpdateProcessors().get(s);
      }
      if (p == null) {
        Class<UpdateRequestProcessorFactory> factoryClass = implicits.get(s);
        if(factoryClass != null) {
          PluginInfo pluginInfo = new PluginInfo("updateProcessor",
              Utils.makeMap("name", s,
                  "class", factoryClass.getName()));
          UpdateRequestProcessorFactory plugin = p = core.getUpdateProcessors().createPlugin(pluginInfo).get();
          if (plugin instanceof SolrCoreAware) ((SolrCoreAware) plugin).inform(core);
          core.getUpdateProcessors().put(s, plugin);
        }
        if (p == null)
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "No such processor " + s);
      }
      result.add(p);
    }
    return result;
  }

