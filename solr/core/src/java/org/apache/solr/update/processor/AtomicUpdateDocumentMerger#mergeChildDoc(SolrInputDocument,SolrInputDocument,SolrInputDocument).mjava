  /**
   *
   * Merges an Atomic Update inside a document hierarchy
   * @param sdoc the doc containing update instructions
   * @param oldDocWithChildren the doc (children included) before the update
   * @param sdocWithChildren the updated doc prior to the update (children included)
   * @return root doc (children included) after update
   */
  public SolrInputDocument mergeChildDoc(SolrInputDocument sdoc, SolrInputDocument oldDocWithChildren,
                                         SolrInputDocument sdocWithChildren) {
    // get path of document to be updated
    String updatedDocPath = (String) sdocWithChildren.getFieldValue(IndexSchema.NEST_PATH_FIELD_NAME);
    // get the SolrInputField containing the document which the AddUpdateCommand updates
    SolrInputField sifToReplace = getFieldFromHierarchy(oldDocWithChildren, updatedDocPath);
    // update SolrInputField, either appending or replacing the updated document
    updateDocInSif(sifToReplace, sdocWithChildren, sdoc);
    return oldDocWithChildren;
  }

