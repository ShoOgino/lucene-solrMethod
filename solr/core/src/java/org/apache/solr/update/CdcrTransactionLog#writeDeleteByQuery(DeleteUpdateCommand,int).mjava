  @Override
  public long writeDeleteByQuery(DeleteUpdateCommand cmd, int flags) {
    LogCodec codec = new LogCodec(resolver);
    try {
      checkWriteHeader(codec, null);

      MemOutputStream out = new MemOutputStream(new byte[20 + (cmd.query.length())]);
      codec.init(out);
      codec.writeTag(JavaBinCodec.ARR, 4);
      codec.writeInt(UpdateLog.DELETE_BY_QUERY | flags);  // should just take one byte
      codec.writeLong(cmd.getVersion());
      codec.writeStr(cmd.query);
      if (cmd.getReq().getParamString().contains(CdcrUpdateProcessor.CDCR_UPDATE)) {
        // if the update is received via cdcr source; add extra boolean entry
        // CdcrReplicator.isTargetCluster() checks that particular boolean to accept or discard the update
        // to forward to its own target cluster
        codec.writePrimitive(true);
      } else {
        codec.writePrimitive(false);
      }
      synchronized (this) {
        long pos = fos.size();   // if we had flushed, this should be equal to channel.position()
        out.writeAll(fos);
        endRecord(pos);
        // fos.flushBuffer();  // flush later
        return pos;
      }
    } catch (IOException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
    }
  }

