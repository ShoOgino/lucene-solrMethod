  /** This is the worker part for the ScheduledFuture **/
  public synchronized void run() {
    long started = System.currentTimeMillis();
    SolrQueryRequest req = new LocalSolrQueryRequest(core,
        new ModifiableSolrParams());
    try {
      CommitUpdateCommand command = new CommitUpdateCommand(req, false);
      command.waitSearcher = waitSearcher;
      command.softCommit = softCommit;
      // no need for command.maxOptimizeSegments = 1; since it is not optimizing
      core.getUpdateHandler().commit(command);
      autoCommitCount++;
    } catch (Exception e) {
      log.error("auto commit error...");
      e.printStackTrace();
    } finally {
      pending = null;
      req.close();
    }
    
    // check if docs have been submitted since the commit started
    if (lastAddedTime > started) {
      if (docsUpperBound > 0 && docsSinceCommit > docsUpperBound) {
        pending = scheduler.schedule(this, 100, TimeUnit.MILLISECONDS);
      } else if (timeUpperBound > 0) {
        pending = scheduler.schedule(this, timeUpperBound,
            TimeUnit.MILLISECONDS);
      }
    }
  }

