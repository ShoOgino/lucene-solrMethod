  @Override
  public UpdateRequestProcessor getInstance(SolrQueryRequest req,
                                            SolrQueryResponse rsp,
                                            UpdateRequestProcessor next) {
    return new AllValuesOrNoneFieldMutatingUpdateProcessor(getSelector(), next) {
      final ParsePosition parsePosition = new ParsePosition(0);

      @Override
      protected Object mutateValue(Object srcVal) {
        if (srcVal instanceof CharSequence) {
          String srcStringVal = srcVal.toString();
          // trim single quotes around date if present
          // see issue #5279  (Apache HttpClient)
          int stringValLen = srcStringVal.length();
          if (stringValLen > 1
              && srcStringVal.startsWith("'")
              && srcStringVal.endsWith("'")
          ) {
            srcStringVal = srcStringVal.substring(1, stringValLen - 1);
          }

          for (Map.Entry<String,DateTimeFormatter> format : formats.entrySet()) {
            DateTimeFormatter parser = format.getValue();
            try {
              return Date.from(parseInstant(parser, srcStringVal, parsePosition));
            } catch (DateTimeParseException e) {
              log.debug("value '{}' is not parseable with format '{}'",
                        new Object[] { srcStringVal, format.getKey() });
            }
          }
          log.debug("value '{}' was not parsed by any configured format, thus was not mutated", srcStringVal);
          return SKIP_FIELD_VALUE_LIST_SINGLETON;
        }
        if (srcVal instanceof Date) {
          return srcVal;
        }
        return SKIP_FIELD_VALUE_LIST_SINGLETON;
      }
    };
  }

