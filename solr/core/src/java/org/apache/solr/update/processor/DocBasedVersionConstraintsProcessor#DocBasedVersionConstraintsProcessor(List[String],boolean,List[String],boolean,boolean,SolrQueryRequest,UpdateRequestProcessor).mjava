  public DocBasedVersionConstraintsProcessor(List<String> versionFields,
                                             boolean ignoreOldUpdates,
                                             List<String> deleteVersionParamNames,
                                             boolean supportMissingVersionOnOldDocs,
                                             boolean useFieldCache,
                                             SolrQueryRequest req,
                                             UpdateRequestProcessor next ) {
    super(next);
    this.ignoreOldUpdates = ignoreOldUpdates;
    this.deleteVersionParamNames = deleteVersionParamNames.toArray(EMPTY_STR_ARR);
    this.supportMissingVersionOnOldDocs = supportMissingVersionOnOldDocs;
    this.core = req.getCore();
    this.versionFieldNames = versionFields.toArray(EMPTY_STR_ARR);
    IndexSchema schema = core.getLatestSchema();
    userVersionFields = new SchemaField[versionFieldNames.length];
    for (int i = 0; i < versionFieldNames.length; i++) {
      userVersionFields[i] = schema.getField(versionFieldNames[i]);
    }
    this.solrVersionField = schema.getField(CommonParams.VERSION_FIELD);
    this.useFieldCache = useFieldCache;

    this.distribProc = getDistributedUpdateProcessor(next);

    this.phase = DistributedUpdateProcessor.DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));
  }

