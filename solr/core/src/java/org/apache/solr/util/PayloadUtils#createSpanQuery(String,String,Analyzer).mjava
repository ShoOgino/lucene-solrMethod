  public static SpanQuery createSpanQuery(String field, String value, Analyzer analyzer) {
    SpanQuery query;
    try {
      // adapted this from QueryBuilder.createSpanQuery (which isn't currently public) and added reset(), end(), and close() calls
      TokenStream in = analyzer.tokenStream(field, value);
      in.reset();

      TermToBytesRefAttribute termAtt = in.getAttribute(TermToBytesRefAttribute.class);

      List<SpanTermQuery> terms = new ArrayList<>();
      while (in.incrementToken()) {
        terms.add(new SpanTermQuery(new Term(field, termAtt.getBytesRef())));
      }
      in.end();
      in.close();

      if (terms.isEmpty()) {
        query = null;
      } else if (terms.size() == 1) {
        query = terms.get(0);
      } else {
        query = new SpanNearQuery(terms.toArray(new SpanTermQuery[terms.size()]), 0, true);
      }
    } catch (IOException e) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);
    }
    return query;
  }

