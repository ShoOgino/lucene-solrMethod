    @SuppressWarnings("static-access")
    @Override
    public Option[] getOptions() {
      Option[] configOptions = new Option[] {
          OptionBuilder
              .withArgName("ACTION")
              .hasArg()
              .isRequired(false)
              .withDescription("Config API action, one of: set-property, unset-property; default is set-property")
              .create("action"),
          OptionBuilder
              .withArgName("PROP")
              .hasArg()
              .isRequired(true)
              .withDescription("Name of the Config API property to apply the action to, such as: updateHandler.autoSoftCommit.maxTime")
              .create("property"),
          OptionBuilder
              .withArgName("VALUE")
              .hasArg()
              .isRequired(false)
              .withDescription("Set the property to this value; accepts JSON objects and strings")
              .create("value"),
          OptionBuilder
              .withArgName("HOST")
              .hasArg()
              .isRequired(false)
              .withDescription("Base Solr URL, which can be used to determine the zkHost if that's not known")
              .create("solrUrl"),
          OptionBuilder
              .withArgName("HOST")
              .hasArg()
              .isRequired(false)
              .withDescription("Address of the Zookeeper ensemble")
              .withLongOpt("zkHost")
              .create('z'),
          OptionBuilder
              .withArgName("PORT")
              .hasArg()
              .isRequired(false)
              .withDescription("The port of the Solr node to use when applying configuration change")
              .withLongOpt("port")
              .create('p'),
          OptionBuilder
              .withArgName("SCHEME")
              .hasArg()
              .isRequired(false)
              .withDescription("The scheme for accessing Solr.  Accepted values: http or https.  Default: http")
              .withLongOpt("scheme")
              .create('s')
      };
      return joinOptions(configOptions, cloudOptions);
    }

