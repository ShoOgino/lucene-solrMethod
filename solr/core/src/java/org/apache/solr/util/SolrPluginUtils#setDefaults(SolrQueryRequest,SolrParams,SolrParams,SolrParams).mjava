  /**
   * Set default-ish params on a SolrQueryRequest.
   *
   * RequestHandlers can use this method to ensure their defaults and
   * overrides are visible to other components such as the response writer
   *
   * @param req The request whose params we are interested i
   * @param defaults values to be used if no values are specified in the request params
   * @param appends values to be appended to those from the request (or defaults) when dealing with multi-val params, or treated as another layer of defaults for singl-val params.
   * @param invariants values which will be used instead of any request, or default values, regardless of context.
   */
  public static void setDefaults(SolrQueryRequest req, SolrParams defaults,
                                 SolrParams appends, SolrParams invariants) {

    List<String> paramNames = null;
    String useParams = req.getParams().get(RequestParams.USEPARAM);
    if (useParams != null && !useParams.isEmpty()) {
      // now that we have expanded the request macro useParams with the actual values
      // it makes no sense to keep it visible now on.
      // distrib request sends all params to the nodes down the line and
      // if it sends the useParams to other nodes , they will expand them as well.
      // which is not desirable. At the same time, because we send the useParams
      // value as an empty string to other nodes we get the desired benefit of
      // overriding the useParams specified in the requestHandler directly
      req.setParams(SolrParams.wrapDefaults(maskUseParams, req.getParams()));
    }
    if (useParams == null) useParams = (String) req.getContext().get(RequestParams.USEPARAM);
    if (useParams != null && !useParams.isEmpty()) paramNames = StrUtils.splitSmart(useParams, ',');
    if (paramNames != null) {
      for (String name : paramNames) {
        SolrParams requestParams = req.getCore().getSolrConfig().getRequestParams().getParams(name);
        if (requestParams != null) {
          defaults = SolrParams.wrapDefaults(requestParams, defaults);
        }
      }
    }

    SolrParams p = req.getParams();
    p = SolrParams.wrapDefaults(p, defaults);
    p = SolrParams.wrapAppended(p, appends);
    p = SolrParams.wrapDefaults(invariants, p);

    req.setParams(p);
  }

