  static Map<String, Object> convertAggregateMetric(AggregateMetric metric, boolean skipAggregateValues) {
    Map<String, Object> response = new LinkedHashMap<>();
    response.put("count", metric.size());
    response.put(MAX, metric.getMax());
    response.put(MIN, metric.getMin());
    response.put(MEAN, metric.getMean());
    response.put(STDDEV, metric.getStdDev());
    response.put(SUM, metric.getSum());
    if (!(metric.isEmpty() || skipAggregateValues)) {
      Map<String, Object> values = new LinkedHashMap<>();
      response.put(VALUES, values);
      metric.getValues().forEach((k, v) -> {
        Map<String, Object> map = new LinkedHashMap<>();
        map.put("value", v.value);
        map.put("updateCount", v.updateCount.get());
        values.put(k, map);
      });
    }
    return response;
  }

