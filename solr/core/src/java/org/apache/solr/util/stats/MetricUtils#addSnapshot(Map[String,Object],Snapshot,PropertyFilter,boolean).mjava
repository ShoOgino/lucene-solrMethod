  // some snapshots represent time in ns, other snapshots represent raw values (eg. chunk size)
  static void addSnapshot(Map<String, Object> response, Snapshot snapshot, PropertyFilter propertyFilter, boolean ms) {
    BiConsumer<String, Object> filter = (k, v) -> {
      if (propertyFilter.accept(k)) {
        response.put(k, v);
      }
    };
    filter.accept((ms ? MIN_MS: MIN), nsToMs(ms, snapshot.getMin()));
    filter.accept((ms ? MAX_MS: MAX), nsToMs(ms, snapshot.getMax()));
    filter.accept((ms ? MEAN_MS : MEAN), nsToMs(ms, snapshot.getMean()));
    filter.accept((ms ? MEDIAN_MS: MEDIAN), nsToMs(ms, snapshot.getMedian()));
    filter.accept((ms ? STDDEV_MS: STDDEV), nsToMs(ms, snapshot.getStdDev()));
    filter.accept((ms ? P75_MS: P75), nsToMs(ms, snapshot.get75thPercentile()));
    filter.accept((ms ? P95_MS: P95), nsToMs(ms, snapshot.get95thPercentile()));
    filter.accept((ms ? P99_MS: P99), nsToMs(ms, snapshot.get99thPercentile()));
    filter.accept((ms ? P999_MS: P999), nsToMs(ms, snapshot.get999thPercentile()));
  }

