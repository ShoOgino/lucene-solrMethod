  public static void setDefaults(SolrRequestHandler handler, SolrQueryRequest req, SolrParams defaults,
                                 SolrParams appends, SolrParams invariants) {

    List<String> paramNames = null;
    String useParams = req.getParams().get(RequestParams.USEPARAM);
    if (useParams != null && !useParams.isEmpty()) {
      // now that we have expanded the request macro useParams with the actual values
      // it makes no sense to keep it visible now on.
      // distrib request sends all params to the nodes down the line and
      // if it sends the useParams to other nodes , they will expand them as well.
      // which is not desirable. At the same time, because we send the useParams
      // value as an empty string to other nodes we get the desired benefit of
      // overriding the useParams specified in the requestHandler directly
      req.setParams(SolrParams.wrapDefaults(maskUseParams, req.getParams()));
    }
    if (useParams == null) useParams = (String) req.getContext().get(RequestParams.USEPARAM);
    if (useParams != null && !useParams.isEmpty()) paramNames = StrUtils.splitSmart(useParams, ',');
    if (paramNames != null) {
      for (String name : paramNames) {
        SolrParams requestParams = req.getCore().getSolrConfig().getRequestParams().getParams(name);
        if (requestParams != null) {
          defaults = SolrParams.wrapDefaults(requestParams, defaults);
        }
      }
    }

    RequestUtil.processParams(handler, req, defaults, appends, invariants);
  }

