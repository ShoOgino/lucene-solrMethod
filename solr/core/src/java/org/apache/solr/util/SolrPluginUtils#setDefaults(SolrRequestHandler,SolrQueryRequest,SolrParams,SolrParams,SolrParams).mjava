  public static void setDefaults(SolrRequestHandler handler, SolrQueryRequest req, SolrParams defaults,
                                 SolrParams appends, SolrParams invariants) {
    String useParams = (String) req.getContext().get(USEPARAM);
    if(useParams != null) {
      RequestParams rp = req.getCore().getSolrConfig().getRequestParams();
      defaults = applyParamSet(rp, defaults, useParams, DEFAULTS);
      appends = applyParamSet(rp, appends, useParams, APPENDS);
      invariants = applyParamSet(rp, invariants, useParams, INVARIANTS);
    }
    useParams = req.getParams().get(USEPARAM);
    if (useParams != null && !useParams.isEmpty()) {
      RequestParams rp = req.getCore().getSolrConfig().getRequestParams();
      // now that we have expanded the request macro useParams with the actual values
      // it makes no sense to keep it visible now on.
      // distrib request sends all params to the nodes down the line and
      // if it sends the useParams to other nodes , they will expand them as well.
      // which is not desirable. At the same time, because we send the useParams
      // value as an empty string to other nodes we get the desired benefit of
      // overriding the useParams specified in the requestHandler directly
      req.setParams(SolrParams.wrapDefaults(maskUseParams, req.getParams()));
      defaults = applyParamSet(rp, defaults, useParams, DEFAULTS);
      appends = applyParamSet(rp, appends, useParams, APPENDS);
      invariants = applyParamSet(rp, invariants, useParams, INVARIANTS);
    }
    RequestUtil.processParams(handler, req, defaults, appends, invariants);
  }

