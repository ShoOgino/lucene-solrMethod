  public static void invokeSetters(Object bean, Iterable<Map.Entry<String,Object>> initArgs, boolean lenient) {
    if (initArgs == null) return;
    final Class<?> clazz = bean.getClass();
    for (Map.Entry<String,Object> entry : initArgs) {
      String key = entry.getKey();
      String setterName = "set" + String.valueOf(Character.toUpperCase(key.charAt(0))) + key.substring(1);
      try {
        final Object val = entry.getValue();
        final Method method = findSetter(clazz, setterName, key, val.getClass(), lenient);
        if (method != null) {
          method.invoke(bean, val);
        }
      } catch (InvocationTargetException | IllegalAccessException e1) {
        if (lenient) {
          continue;
        }
        throw new RuntimeException("Error invoking setter " + setterName + " on class : " + clazz.getName(), e1);
      }
      catch (AssertionError ae) {
        throw new RuntimeException("Error invoking setter " + setterName + " on class : " + clazz.getName()+
            ". This might be a case of SOLR-12207", ae);
      }
    }
  }

