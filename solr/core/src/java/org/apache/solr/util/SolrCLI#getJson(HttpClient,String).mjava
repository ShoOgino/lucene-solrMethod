  /**
   * Utility function for sending HTTP GET request to Solr and then doing some
   * validation of the response.
   */
  @SuppressWarnings({"unchecked"})
  public static Map<String,Object> getJson(HttpClient httpClient, String getUrl) throws Exception {
    Map<String,Object> json = null;
       
    // ensure we're requesting JSON back from Solr
    HttpGet httpGet = new HttpGet(new URIBuilder(getUrl).setParameter("wt", "json").build());

    //Will throw HttpResponseException if a non-ok response
    String content = httpClient.execute(httpGet, new BasicResponseHandler());
    
    Object resp = ObjectBuilder.getVal(new JSONParser(content));
    if (resp != null && resp instanceof Map) {
      json = (Map<String,Object>)resp;
    } else {
      throw new SolrServerException("Expected JSON object in response from "+
          getUrl+" but received "+ resp);
    }
    
    // lastly check the response JSON from Solr to see if it is an error
    Long statusCode = asLong("/responseHeader/status", json);
    
    if (statusCode == -1) {
      throw new SolrServerException("Unable to determine outcome of GET request to: "+
          getUrl+"! Response: "+json);
    } else if (statusCode != 0) {
      String errMsg = asString("/error/msg", json);
      
      errMsg = errMsg == null ? String.valueOf(json) : errMsg;
      throw new SolrServerException("Request to "+getUrl+" failed due to: "+errMsg);
    }

    return json;
  }  

