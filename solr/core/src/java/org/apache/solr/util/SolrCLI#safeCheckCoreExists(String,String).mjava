  public static boolean safeCheckCoreExists(String coreStatusUrl, String coreName) {
    boolean exists = false;
    try {
      boolean wait = false;
      final long startWaitAt = System.nanoTime();
      do{
        if (wait) {
          final int clamPeriodForStatusPollMs = 1000;
          Thread.sleep(clamPeriodForStatusPollMs);
        }
        Map<String,Object> existsCheckResult = getJson(coreStatusUrl);
        @SuppressWarnings("unchecked")
        Map<String,Object> status = (Map<String, Object>)existsCheckResult.get("status");
        @SuppressWarnings("unchecked")
        Map<String,Object> coreStatus = (Map<String, Object>)status.get(coreName);
        @SuppressWarnings("unchecked")
        Map<String,Object> failureStatus = (Map<String, Object>)existsCheckResult.get("initFailures");
        String errorMsg = (String) failureStatus.get(coreName);
        final boolean hasName = coreStatus != null && coreStatus.containsKey(NAME);
        exists = hasName || errorMsg != null;
        wait = hasName && errorMsg==null && "true".equals(coreStatus.get("isLoading"));
      }while (wait &&
          System.nanoTime() - startWaitAt < MAX_WAIT_FOR_CORE_LOAD_NANOS);
    } catch (Exception exc) {
      // just ignore it since we're only interested in a positive result here
    }
    return exists;
  }

