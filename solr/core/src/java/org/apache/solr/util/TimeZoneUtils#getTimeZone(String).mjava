  /**
   * This method is provided as a replacement for TimeZone.getTimeZone but 
   * with out the anoying behavior of returning "GMT" for gibberish input.
   * <p>
   * This method will return null unless the input is either:
   * </p>
   * <ul>
   *  <li>Included in the set of known TimeZone IDs
   *  <li>A "CustomID" specified as a numeric offset from "GMT"</li>
   * </ul>
   * 
   * @param ID Either a TimeZone ID found in KNOWN_TIMEZONE_IDS, or a "CustomID" specified as a GMT offset.
   * @return A TImeZone object corrisponding to the input, or null if no such TimeZone is supported.
   * @see #KNOWN_TIMEZONE_IDS
   * @see TimeZone
   */
  public static final TimeZone getTimeZone(final String ID) {
    if (null == ID) return null;
    if (KNOWN_TIMEZONE_IDS.contains(ID)) return TimeZone.getTimeZone(ID);

    Matcher matcher = CUSTOM_ID_REGEX.matcher(ID);
    if (matcher.matches()) {
      int hour = Integer.parseInt(matcher.group(1));
      if (hour < 0 || 23 < hour) return null;
      
      final String minStr = matcher.group(2);
      if (null != minStr) {
        int min = Integer.parseInt(minStr);
        if (min < 0 || 59 < min) return null;
      }
      return TimeZone.getTimeZone(ID);
    }
    return null;
  }

