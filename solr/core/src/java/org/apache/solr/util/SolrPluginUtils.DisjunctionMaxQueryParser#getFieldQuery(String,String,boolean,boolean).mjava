    /**
     * Delegates to the super class unless the field has been specified
     * as an alias -- in which case we recurse on each of
     * the aliased fields, and the results are composed into a
     * DisjunctionMaxQuery.  (so yes: aliases which point at other
     * aliases should work)
     */
    @Override
    protected Query getFieldQuery(String field, String queryText, boolean quoted, boolean raw)
        throws SyntaxError {

      if (aliases.containsKey(field)) {

        Alias a = aliases.get(field);

        List<Query> disjuncts = new ArrayList<>();
        for (String f : a.fields.keySet()) {

          Query sub = getFieldQuery(f,queryText,quoted, false);
          if (null != sub) {
            if (null != a.fields.get(f)) {
              sub = new BoostQuery(sub, a.fields.get(f));
            }
            disjuncts.add(sub);
          }
        }
        return disjuncts.isEmpty()
            ? null
            : new DisjunctionMaxQuery(disjuncts, a.tie);

      } else {
        try {
          return super.getFieldQuery(field, queryText, quoted, raw);
        } catch (Exception e) {
          return null;
        }
      }
    }

