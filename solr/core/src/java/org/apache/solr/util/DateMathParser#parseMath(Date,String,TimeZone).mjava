  /**
   * Parses a String which may be a date (in the standard ISO-8601 format)
   * followed by an optional math expression.
   * @param now an optional fixed date to use as "NOW"
   * @param val the string to parse
   * @param zone the timezone to use
   */
  public static Date parseMath(Date now, String val, TimeZone zone) {
    String math;
    final DateMathParser p = new DateMathParser(zone);

    if (null != now) p.setNow(now);

    if (val.startsWith("NOW")) {
      math = val.substring("NOW".length());
    } else {
      final int zz = val.indexOf('Z');
      if (zz == -1) {
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
            "Invalid Date String:'" + val + '\'');
      }
      math = val.substring(zz+1);
      try {
        p.setNow(parseNoMath(val.substring(0, zz + 1)));
      } catch (DateTimeParseException e) {
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
            "Invalid Date in Date Math String:'" + val + '\'', e);
      }
    }

    if (null == math || math.equals("")) {
      return p.getNow();
    }

    try {
      return p.parseMath(math);
    } catch (ParseException e) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
          "Invalid Date Math String:'" +val+'\'',e);
    }
  }

