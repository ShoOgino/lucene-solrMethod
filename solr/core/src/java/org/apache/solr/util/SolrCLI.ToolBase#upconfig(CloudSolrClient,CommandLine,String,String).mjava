    // It's a little awkward putting this in ToolBase, but to re-use it in upconfig and create, _and_ have access
    // to the (possibly) redirected "stdout", it needs to go here unless we reorganize things a bit.
    protected void upconfig(CloudSolrClient cloudSolrClient, CommandLine cli, String confname, String configSet) throws IOException {

      File configSetDir = null;
      // we try to be flexible and allow the user to specify a configuration directory instead of a configset name
      File possibleConfigDir = new File(configSet);
      if (possibleConfigDir.isDirectory()) {
        configSetDir = possibleConfigDir;
      } else {
        File configsetsDir = new File(cli.getOptionValue("configsetsDir"));
        if (!configsetsDir.isDirectory())
          throw new FileNotFoundException(configsetsDir.getAbsolutePath() + " not found!");

        // upload the configset if it exists
        configSetDir = new File(configsetsDir, configSet);
        if (!configSetDir.isDirectory()) {
          throw new FileNotFoundException("Specified config " + configSet +
              " not found in " + configsetsDir.getAbsolutePath());
        }
      }

      File confDir = new File(configSetDir, "conf");
      if (!confDir.isDirectory()) {
        // config dir should contain a conf sub-directory but if not and there's a solrconfig.xml, then use it
        if ((new File(configSetDir, "solrconfig.xml")).isFile()) {
          confDir = configSetDir;
        } else {
          throw new IllegalArgumentException("Specified configuration directory " + configSetDir.getAbsolutePath() +
              " is invalid;\nit should contain either conf sub-directory or solrconfig.xml");
        }
      }

      //
      echo("Uploading " + confDir.getAbsolutePath() +
          " for config " + confname + " to ZooKeeper at " + cloudSolrClient.getZkHost());
      cloudSolrClient.uploadConfig(confDir.toPath(), confname);
    }

