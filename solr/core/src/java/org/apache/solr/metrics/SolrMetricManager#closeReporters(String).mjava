  /**
   * Close and unregister all {@link SolrMetricReporter}-s for a registry.
   * @param registry registry name
   * @return names of closed reporters
   */
  public Set<String> closeReporters(String registry) {
    // make sure we use a name with prefix, with overrides
    registry = overridableRegistryName(registry);
    try {
      if (!reportersLock.tryLock(10, TimeUnit.SECONDS)) {
        log.warn("Could not obtain lock to modify reporters registry: " + registry);
        return Collections.emptySet();
      }
    } catch (InterruptedException e) {
      log.warn("Interrupted while trying to obtain lock to modify reporters registry: " + registry);
      return Collections.emptySet();
    }
    log.info("Closing metric reporters for: " + registry);
    try {
      Map<String, SolrMetricReporter> perRegistry = reporters.remove(registry);
      if (perRegistry != null) {
        for (SolrMetricReporter reporter : perRegistry.values()) {
          try {
            reporter.close();
          } catch (IOException ioe) {
            log.warn("Exception closing reporter " + reporter, ioe);
          }
        }
        return perRegistry.keySet();
      } else {
        return Collections.emptySet();
      }
    } finally {
      reportersLock.unlock();
    }
  }

