  private PluginInfo preparePlugin(PluginInfo info, Map<String, String> defaultAttributes,
                                   Map<String, Object> defaultInitArgs) {
    if (info == null) {
      return null;
    }
    String classNameAttr = info.attributes.get("class");

    Map<String, String> attrs = new HashMap<>(info.attributes);
    defaultAttributes.forEach((k, v) -> {
      if (!attrs.containsKey(k)) {
        attrs.put(k, v);
      }
    });
    attrs.put("class", classNameAttr);
    Map<String, Object> initArgs = new HashMap<>();
    if (info.initArgs != null) {
      initArgs.putAll(info.initArgs.asMap(10));
    }
    defaultInitArgs.forEach((k, v) -> {
      if (!initArgs.containsKey(k)) {
        initArgs.put(k, v);
      }
    });
    return new PluginInfo(info.type, attrs, new NamedList(initArgs), null);
  }

