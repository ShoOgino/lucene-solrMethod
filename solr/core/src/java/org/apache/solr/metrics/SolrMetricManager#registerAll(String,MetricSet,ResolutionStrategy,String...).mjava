  /**
   * Register all metrics in the provided {@link MetricSet}, optionally skipping those that
   * already exist.
   *
   * @param registry   registry name
   * @param metrics    metric set to register
   * @param strategy   the conflict resolution strategy to use if the named metric already exists.
   * @param metricPath (optional) additional top-most metric name path elements
   * @throws Exception if a metric with this name already exists.
   */
  public void registerAll(String registry, MetricSet metrics, ResolutionStrategy strategy, String... metricPath) throws Exception {
    MetricRegistry metricRegistry = registry(registry);
    synchronized (metricRegistry) {
      Map<String, Metric> existingMetrics = metricRegistry.getMetrics();
      for (Map.Entry<String, Metric> entry : metrics.getMetrics().entrySet()) {
        String fullName = mkName(entry.getKey(), metricPath);
        if (existingMetrics.containsKey(fullName)) {
          if (strategy == ResolutionStrategy.REPLACE) {
            metricRegistry.remove(fullName);
          } else if (strategy == ResolutionStrategy.IGNORE) {
            continue;
          } // strategy == ERROR will fail when we try to register later
        }
        metricRegistry.register(fullName, entry.getValue());
      }
    }
  }

