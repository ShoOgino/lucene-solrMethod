  /**
   * List all available databases created by this node name
   * @param maxLength maximum number of results to return
   * @return list of database names, or empty
   * @throws IOException on server errors
   */
  public List<String> list(int maxLength) throws IOException {
    Set<String> names = new HashSet<>();
    if (persistent) {
      try {
        ModifiableSolrParams params = new ModifiableSolrParams();
        params.add(CommonParams.Q, "*:*");
        params.add(CommonParams.FQ, CommonParams.TYPE + ":" + DOC_TYPE);
        params.add(CommonParams.FL, "id");
        params.add(CommonParams.ROWS, String.valueOf(maxLength));
        QueryResponse rsp = solrClient.query(collection, params);
        SolrDocumentList docs = rsp.getResults();
        if (docs != null) {
          docs.forEach(d -> names.add(((String)d.getFieldValue("id")).substring(idPrefixLength)));
        }
      } catch (SolrServerException e) {
        log.warn("Error retrieving RRD list", e);
      }
    }
    // add in-memory backends not yet stored
    names.addAll(backends.keySet());
    ArrayList<String> list = new ArrayList<>(names);
    Collections.sort(list);
    return list;
  }

