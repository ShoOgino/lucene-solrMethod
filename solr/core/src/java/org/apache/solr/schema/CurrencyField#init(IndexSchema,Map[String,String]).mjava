  @Override
  protected void init(IndexSchema schema, Map<String, String> args) {
    
    // Fail if amountLongSuffix or codeStrSuffix are specified
    List<String> unknownParams = new ArrayList<>();
    fieldSuffixAmountRaw = args.get(PARAM_FIELD_SUFFIX_AMOUNT_RAW);
    if (fieldSuffixAmountRaw != null) {
      unknownParams.add(PARAM_FIELD_SUFFIX_AMOUNT_RAW); 
    }
    fieldSuffixCurrency = args.get(PARAM_FIELD_SUFFIX_CURRENCY);
    if (fieldSuffixCurrency != null) {
      unknownParams.add(PARAM_FIELD_SUFFIX_CURRENCY);
    }
    if ( ! unknownParams.isEmpty()) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "Unknown parameter(s): " + unknownParams);
    }
    
    String precisionStepString = args.get(PARAM_PRECISION_STEP);
    if (precisionStepString == null) {
      precisionStepString = DEFAULT_PRECISION_STEP;
    } else {
      args.remove(PARAM_PRECISION_STEP);
    }

    // Initialize field type for amount
    fieldTypeAmountRaw = new TrieLongField();
    fieldTypeAmountRaw.setTypeName(FIELD_TYPE_AMOUNT_RAW);
    Map<String,String> map = new HashMap<>(1);
    map.put("precisionStep", precisionStepString);
    fieldTypeAmountRaw.init(schema, map);
    fieldSuffixAmountRaw = FIELD_SUFFIX_AMOUNT_RAW;

    // Initialize field type for currency string
    fieldTypeCurrency = new StrField();
    fieldTypeCurrency.setTypeName(FIELD_TYPE_CURRENCY);
    fieldTypeCurrency.init(schema, Collections.emptyMap());
    fieldSuffixCurrency = FIELD_SUFFIX_CURRENCY;

    super.init(schema, args); // Must be called last so that field types are not doubly created
  }

