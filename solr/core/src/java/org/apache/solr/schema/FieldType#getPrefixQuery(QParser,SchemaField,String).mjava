  /**
   * Returns a Query instance for doing prefix searches on this field type.
   * Also, other QueryParser implementations may have different semantics.
   * <p>
   * Sub-classes should override this method to provide their own range query implementation.
   *
   * @param parser       the {@link org.apache.solr.search.QParser} calling the method
   * @param sf           the schema field
   * @param termStr      the term string for prefix query, if blank then this query should match all docs with this field
   * @return a Query instance to perform prefix search
   */
  public Query getPrefixQuery(QParser parser, SchemaField sf, String termStr) {
    if ("".equals(termStr)) {
      return getExistenceQuery(parser, sf);
    }
    PrefixQuery query = new PrefixQuery(new Term(sf.getName(), termStr));
    query.setRewriteMethod(sf.getType().getRewriteMethod(parser, sf));
    return query;
  }

