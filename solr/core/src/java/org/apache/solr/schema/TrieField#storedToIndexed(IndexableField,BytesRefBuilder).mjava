  private void storedToIndexed(IndexableField f, final BytesRefBuilder bytes) {
    final Number val = f.numericValue();
    if (val != null) {
      switch (type) {
        case INTEGER:
          LegacyNumericUtils.intToPrefixCoded(val.intValue(), 0, bytes);
          break;
        case FLOAT:
          LegacyNumericUtils.intToPrefixCoded(LegacyNumericUtils.floatToSortableInt(val.floatValue()), 0, bytes);
          break;
        case LONG: //fallthrough!
        case DATE:
          LegacyNumericUtils.longToPrefixCoded(val.longValue(), 0, bytes);
          break;
        case DOUBLE:
          LegacyNumericUtils.longToPrefixCoded(LegacyNumericUtils.doubleToSortableLong(val.doubleValue()), 0, bytes);
          break;
        default:
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Unknown type for trie field: " + f.name());
      }
    } else {
      // the following code is "deprecated" and only to support pre-3.2 indexes using the old BinaryField encoding:
      final BytesRef bytesRef = f.binaryValue();
      if (bytesRef==null)
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Invalid field contents: "+f.name());
      switch (type) {
        case INTEGER:
          LegacyNumericUtils.intToPrefixCoded(toInt(bytesRef.bytes, bytesRef.offset), 0, bytes);
          break;
        case FLOAT: {
          // WARNING: Code Duplication! Keep in sync with o.a.l.util.LegacyNumericUtils!
          // copied from LegacyNumericUtils to not convert to/from float two times
          // code in next 2 lines is identical to: int v = LegacyNumericUtils.floatToSortableInt(Float.intBitsToFloat(toInt(arr)));
          int v = toInt(bytesRef.bytes, bytesRef.offset);
          if (v<0) v ^= 0x7fffffff;
          LegacyNumericUtils.intToPrefixCoded(v, 0, bytes);
          break;
        }
        case LONG: //fallthrough!
        case DATE:
          LegacyNumericUtils.longToPrefixCoded(toLong(bytesRef.bytes, bytesRef.offset), 0, bytes);
          break;
        case DOUBLE: {
          // WARNING: Code Duplication! Keep in sync with o.a.l.util.LegacyNumericUtils!
          // copied from LegacyNumericUtils to not convert to/from double two times
          // code in next 2 lines is identical to: long v = LegacyNumericUtils.doubleToSortableLong(Double.longBitsToDouble(toLong(arr)));
          long v = toLong(bytesRef.bytes, bytesRef.offset);
          if (v<0) v ^= 0x7fffffffffffffffL;
          LegacyNumericUtils.longToPrefixCoded(v, 0, bytes);
          break;
        }
        default:
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Unknown type for trie field: " + f.name());
      }
    }
  }

