  /**
   * Check's {@link org.apache.solr.schema.SchemaField} instances constructed 
   * using this field type to ensure that they are valid.
   *
   * <p>
   * This method is called by the <code>SchemaField</code> constructor to 
   * check that its initialization does not violate any fundamental
   * requirements of the <code>FieldType</code>.
   * Subclasses may choose to throw a {@link SolrException}
   * if invariants are violated by the <code>SchemaField.</code>
   * </p>
   */
  public void checkSchemaField(final SchemaField field) {
    if (field.hasDocValues()) {
      checkSupportsDocValues();
    }
    if (field.isLarge() && field.multiValued()) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "Field type " + this + " is 'large'; can't support multiValued");
    }
    if (field.isLarge() && getNumberType() != null) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "Field type " + this + " is 'large'; can't support numerics");
    }
  }

