  @Override
  public void setArgs(IndexSchema schema, Map<String, String> args) {
    for (Map.Entry<String, String> entry : FIELD_TYPE_INVARIANTS.entrySet()) {
      final String key = entry.getKey();
      final String hardcodedValue = entry.getValue();
      final String userConfiguredValue = args.get(entry.getKey());

      if (args.containsKey(key)) {
        if (userConfiguredValue.equals(hardcodedValue)) {
          log.warn("FieldType {} does not allow {} to be specified in schema, hardcoded behavior is {}={}",
                  getClass().getSimpleName(), key, key, hardcodedValue);
        } else {
          final String message = String.format(Locale.ROOT, "FieldType %s is incompatible with %s=%s; hardcoded " +
                          "behavior is %s=%s.  Remove specification in schema",
                  getClass().getSimpleName(), key, userConfiguredValue, key, hardcodedValue);
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, message);
        }
      }
    }
    args.putAll(FIELD_TYPE_INVARIANTS);

    super.setArgs(schema, args);
  }

