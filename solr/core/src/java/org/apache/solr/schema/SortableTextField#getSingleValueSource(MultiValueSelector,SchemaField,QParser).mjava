  @Override
  public ValueSource getSingleValueSource(MultiValueSelector choice, SchemaField field, QParser parser) {
    // trivial base case
    if (!field.multiValued()) {
      // single value matches any selector
      return getValueSource(field, parser);
    }
    
    // See LUCENE-6709
    if (! field.hasDocValues()) {
      // type defaults to docValues=true, so error msg from perspective that
      // either type or field must have docValues="false"
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
                              "Can not select  '" + choice.toString() + "' value from multivalued field ("+
                              field.getName() +") when docValues=\"false\", field: " + field.getName());
    }
    SortedSetSelector.Type selectorType = choice.getSortedSetSelectorType();
    if (null == selectorType) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
                              choice.toString() + " is not a supported option for picking a single value"
                              + " from the multivalued field: " + field.getName() +
                              " (type: " + this.getTypeName() + ")");
    }
    
    return new SortedSetFieldSource(field.getName(), selectorType);
  }

