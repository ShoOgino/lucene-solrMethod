  @Override
  public StorableField[] createFields(SchemaField field, Object externalVal, float boost) {
    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);

    StorableField[] f = new StorableField[field.stored() ? 3 : 2];
    SchemaField amountField = getAmountField(field);
    f[0] = amountField.createField(String.valueOf(value.getAmount()), amountField.indexed() && !amountField.omitNorms() ? boost : 1F);
    SchemaField currencyField = getCurrencyField(field);
    f[1] = currencyField.createField(value.getCurrencyCode(), currencyField.indexed() && !currencyField.omitNorms() ? boost : 1F);

    if (field.stored()) {
      org.apache.lucene.document.FieldType customType = new org.apache.lucene.document.FieldType();
      assert !customType.omitNorms();
      customType.setStored(true);
      String storedValue = externalVal.toString().trim();
      if (storedValue.indexOf(",") < 0) {
        storedValue += "," + defaultCurrency;
      }
      f[2] = createField(field.getName(), storedValue, customType, 1F);
    }

    return f;
  }

