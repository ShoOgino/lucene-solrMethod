  /**
   * Returns a Query instance for doing existence searches for a field.
   * If the field does not have docValues or norms, this method will call {@link #getSpecializedExistenceQuery}, which defaults to an unbounded rangeQuery.
   * <p>
   * This method should only be overriden whenever a fieldType does not support {@link org.apache.lucene.search.DocValuesFieldExistsQuery} or {@link org.apache.lucene.search.NormsFieldExistsQuery}.
   * If a fieldType does not support an unbounded rangeQuery as an existenceQuery (such as <code>double</code> or <code>float</code> fields), {@link #getSpecializedExistenceQuery} should be overriden.
   *
   * @param parser The {@link org.apache.solr.search.QParser} calling the method
   * @param field The {@link org.apache.solr.schema.SchemaField} of the field to search
   * @return The {@link org.apache.lucene.search.Query} instance.
   */
  public Query getExistenceQuery(QParser parser, SchemaField field) {
    if (field.hasDocValues()) {
      return new DocValuesFieldExistsQuery(field.getName());
    } else if (!field.omitNorms() && !isPointField()) { //TODO: Remove !isPointField() for SOLR-14199
      return new NormsFieldExistsQuery(field.getName());
    } else {
      // Default to an unbounded range query
      return getSpecializedExistenceQuery(parser, field);
    }
  }

