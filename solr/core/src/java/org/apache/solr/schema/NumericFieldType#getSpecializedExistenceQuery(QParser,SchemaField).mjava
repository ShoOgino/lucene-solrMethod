  /**
   * Override the default existence behavior, so that the non-docValued/norms implementation matches NaN values for double and float fields.
   * The [* TO *] query for those fields does not match 'NaN' values, so they must be matched separately.
   * <p>
   * For doubles and floats the query behavior is equivalent to (field:[* TO *] OR field:NaN).
   * For all other numeric types, the default existence query behavior is used.
   */
  @Override
  public Query getSpecializedExistenceQuery(QParser parser, SchemaField field) {
    if (doubleOrFloat.contains(getNumberType())) {
      return new ConstantScoreQuery(new BooleanQuery.Builder()
          .add(getSpecializedRangeQuery(parser, field, null, null, true, true), BooleanClause.Occur.SHOULD)
          .add(getFieldQuery(parser, field, Float.toString(Float.NaN)), BooleanClause.Occur.SHOULD)
          .setMinimumNumberShouldMatch(1).build());
    } else {
      return super.getSpecializedExistenceQuery(parser, field);
    }
  }

