  protected Query getDocValuesRangeQuery(QParser parser, SchemaField field, String min, String max,
      boolean minInclusive, boolean maxInclusive) {
    assert field.hasDocValues() && !field.multiValued();
    
    switch (getNumberType()) {
      case INTEGER:
        return numericDocValuesRangeQuery(field.getName(),
              min == null ? null : (long) Integer.parseInt(min),
              max == null ? null : (long) Integer.parseInt(max),
              minInclusive, maxInclusive);
      case FLOAT:
        return getRangeQueryForFloatDoubleDocValues(field, min, max, minInclusive, maxInclusive);
      case LONG:
        return numericDocValuesRangeQuery(field.getName(),
              min == null ? null : Long.parseLong(min),
              max == null ? null : Long.parseLong(max),
              minInclusive, maxInclusive);
      case DOUBLE:
        return getRangeQueryForFloatDoubleDocValues(field, min, max, minInclusive, maxInclusive);
      case DATE:
        return numericDocValuesRangeQuery(field.getName(),
              min == null ? null : DateMathParser.parseMath(null, min).getTime(),
              max == null ? null : DateMathParser.parseMath(null, max).getTime(),
              minInclusive, maxInclusive);
      default:
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Unknown type for numeric field");
    }
  }

