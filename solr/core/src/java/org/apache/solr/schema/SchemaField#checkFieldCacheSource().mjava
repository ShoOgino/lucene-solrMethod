  /** 
   * Sanity checks that the properties of this field type are plausible for a field
   * that may be used to get a {@link org.apache.lucene.queries.function.valuesource.FieldCacheSource},
   * throwing an appropriate exception (including the field name) if it is not.  
   * FieldType subclasses can choose to call this method in their 
   * getValueSource implementation 
   * @see FieldType#getValueSource
   */
  public void checkFieldCacheSource() throws SolrException {
    if ( multiValued() ) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, 
                              "can not use FieldCache on multivalued field: " 
                              + getName());
    }
    if (! hasDocValues() ) {
      if ( ! ( indexed() && isUninvertible() && null != this.type.getUninversionType(this) ) ) {
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, 
                                "can not use FieldCache on a field w/o docValues unless it is indexed uninvertible=true and the type supports Uninversion: " 
                                + getName());
      }
    }
  }

