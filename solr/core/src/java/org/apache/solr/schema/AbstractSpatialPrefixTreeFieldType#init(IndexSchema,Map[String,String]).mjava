  @Override
  protected void init(IndexSchema schema, Map<String, String> args) {
    super.init(schema, args);

    args.putIfAbsent(SpatialPrefixTreeFactory.VERSION, schema.getDefaultLuceneMatchVersion().toString());

    // Convert the maxDistErr to degrees (based on distanceUnits) since Lucene spatial layer depends on degrees
    if(args.containsKey(SpatialPrefixTreeFactory.MAX_DIST_ERR)) {
      double maxDistErrOriginal = Double.parseDouble(args.get(SpatialPrefixTreeFactory.MAX_DIST_ERR));
      args.put(SpatialPrefixTreeFactory.MAX_DIST_ERR, 
          Double.toString(maxDistErrOriginal * distanceUnits.multiplierFromThisUnitToDegrees()));
    }

    //Solr expects us to remove the parameters we've used.
    MapListener<String, String> argsWrap = new MapListener<>(args);
    grid = SpatialPrefixTreeFactory.makeSPT(argsWrap, schema.getResourceLoader().getClassLoader(), ctx);
    args.keySet().removeAll(argsWrap.getSeenKeys());

    String v = args.remove(SpatialArgsParser.DIST_ERR_PCT);
    if (v != null)
      distErrPct = Double.valueOf(v);

    v = args.remove(DEFAULT_FIELD_VALUES_ARRAY_LEN);
    if (v != null)
      defaultFieldValuesArrayLen = Integer.valueOf(v);
  }

