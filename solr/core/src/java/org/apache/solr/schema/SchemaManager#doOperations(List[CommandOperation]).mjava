  private List doOperations(List<CommandOperation> operations) throws InterruptedException, IOException, KeeperException {
    //The default timeout is 10 minutes when no BaseSolrResource.UPDATE_TIMEOUT_SECS is specified
    int timeout = req.getParams().getInt(BaseSolrResource.UPDATE_TIMEOUT_SECS, 600);

    //If BaseSolrResource.UPDATE_TIMEOUT_SECS=0 or -1 then end time then we'll try for 10 mins ( default timeout )
    if (timeout < 1) {
      timeout = 600;
    }
    TimeOut timeOut = new TimeOut(timeout, TimeUnit.SECONDS);
    SolrCore core = req.getCore();
    String errorMsg = "Unable to persist managed schema. ";
    while (!timeOut.hasTimedOut()) {
      managedIndexSchema = getFreshManagedSchema(req.getCore());
      for (CommandOperation op : operations) {
        OpType opType = OpType.get(op.name);
        if (opType != null) {
          opType.perform(op, this);
        } else {
          op.addError("No such operation : " + op.name);
        }
      }
      List errs = CommandOperation.captureErrors(operations);
      if (!errs.isEmpty()) return errs;
      SolrResourceLoader loader = req.getCore().getResourceLoader();
      if (loader instanceof ZkSolrResourceLoader) {
        ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader) loader;
        StringWriter sw = new StringWriter();
        try {
          managedIndexSchema.persist(sw);
        } catch (IOException e) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "unable to serialize schema");
          //unlikely
        }

        try {
          int latestVersion = ZkController.persistConfigResourceToZooKeeper(zkLoader, managedIndexSchema.getSchemaZkVersion(),
              managedIndexSchema.getResourceName(), sw.toString().getBytes(StandardCharsets.UTF_8), true);
          req.getCore().getCoreDescriptor().getCoreContainer().reload(req.getCore().getName());
          waitForOtherReplicasToUpdate(timeOut, latestVersion);
          return Collections.emptyList();
        } catch (ZkController.ResourceModifiedInZkException e) {
          log.info("Schema was modified by another node. Retrying..");
        }
      } else {
        try {
          //only for non cloud stuff
          managedIndexSchema.persistManagedSchema(false);
          core.setLatestSchema(managedIndexSchema);
          return Collections.emptyList();
        } catch (SolrException e) {
          log.warn(errorMsg);
          return singletonList(errorMsg + e.getMessage());
        }
      }
    }
    log.warn(errorMsg + "Timed out.");
    return singletonList(errorMsg + "Timed out.");
  }

