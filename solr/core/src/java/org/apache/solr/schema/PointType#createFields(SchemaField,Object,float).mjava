  @Override
  public List<StorableField> createFields(SchemaField field, Object value, float boost) {
    String externalVal = value.toString();
    String[] point = parseCommaSeparatedList(externalVal, dimension);

    // TODO: this doesn't currently support polyFields as sub-field types
    List<StorableField> f = new ArrayList<>(dimension+1);

    if (field.indexed()) {
      for (int i=0; i<dimension; i++) {
        SchemaField sf = subField(field, i, schema);
        f.add(sf.createField(point[i], sf.indexed() && !sf.omitNorms() ? boost : 1f));
      }
    }

    if (field.stored()) {
      String storedVal = externalVal;  // normalize or not?
      FieldType customType = new FieldType();
      customType.setStored(true);
      f.add(createField(field.getName(), storedVal, customType, 1f));
    }
    
    return f;
  }

