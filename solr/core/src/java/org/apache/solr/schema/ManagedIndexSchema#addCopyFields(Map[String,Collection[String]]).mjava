  @Override
  public ManagedIndexSchema addCopyFields(Map<String, Collection<String>> copyFields) {
    ManagedIndexSchema newSchema = null;
    if (isMutable) {
      boolean success = false;
      // even though fields is volatile, we need to synchronize to avoid two addCopyFields
      // happening concurrently (and ending up missing one of them)
      synchronized (getSchemaUpdateLock()) {
        newSchema = shallowCopy(true);
        for (Map.Entry<String, Collection<String>> entry : copyFields.entrySet()) {
          //Key is the name of the field, values are the destinations

          for (String destination : entry.getValue()) {
            newSchema.registerCopyField(entry.getKey(), destination);
          }
        }
        //TODO: move this common stuff out to shared methods
        // Run the callbacks on SchemaAware now that everything else is done
        for (SchemaAware aware : newSchema.schemaAware) {
          aware.inform(newSchema);
        }
        newSchema.refreshAnalyzers();
        success = newSchema.persistManagedSchema(false); // don't just create - update it if it already exists
        if (success) {
          log.debug("Added copy fields for {} sources", copyFields.size());
        } else {
          log.error("Failed to add copy fields for {} sources", copyFields.size());
        }
      }
    }
    return newSchema;
  }

