  @Override
  public List<StorableField> createFields(SchemaField sf, Object value, float boost) {
    if (sf.hasDocValues()) {
      List<StorableField> fields = new ArrayList<StorableField>();
      final StorableField field = createField(sf, value, boost);
      fields.add(field);
      
      if (sf.multiValued()) {
        BytesRef bytes = new BytesRef();
        readableToIndexed(value.toString(), bytes);
        fields.add(new SortedSetDocValuesField(sf.getName(), bytes));
      } else {
        final long bits;
        if (field.numericValue() instanceof Integer || field.numericValue() instanceof Long) {
          bits = field.numericValue().longValue();
        } else if (field.numericValue() instanceof Float) {
          bits = Float.floatToIntBits(field.numericValue().floatValue());
        } else {
          assert field.numericValue() instanceof Double;
          bits = Double.doubleToLongBits(field.numericValue().doubleValue());
        }
        fields.add(new NumericDocValuesField(sf.getName(), bits));
      }
      
      return fields;
    } else {
      return Collections.singletonList(createField(sf, value, boost));
    }
  }

