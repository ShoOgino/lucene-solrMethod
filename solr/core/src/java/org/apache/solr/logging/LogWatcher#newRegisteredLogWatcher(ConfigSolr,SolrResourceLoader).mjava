  /**
   * Create and register a LogWatcher.
   *
   * JUL and Log4j watchers are supported out-of-the-box.  You can register your own
   * LogWatcher implementation via the plugins architecture
   *
   * @param config the CoreContainer's config, with logging configuration details
   * @param loader a SolrResourceLoader, to be used to load plugin LogWatcher implementations.
   *               Can be null if
   *
   * @return a LogWatcher configured for the container's logging framework
   */
  public static LogWatcher newRegisteredLogWatcher(ConfigSolr config, SolrResourceLoader loader) {

    if (!config.getBool(ConfigSolr.CfgProp.SOLR_LOGGING_ENABLED, true))
      return null;

    LogWatcher logWatcher = createWatcher(config, loader);

    if (logWatcher != null) {
      ListenerConfig v = new ListenerConfig();
      v.size = config.getInt(ConfigSolr.CfgProp.SOLR_LOGGING_WATCHER_SIZE, 50);
      v.threshold = config.get(ConfigSolr.CfgProp.SOLR_LOGGING_WATCHER_THRESHOLD, null);
      if (v.size > 0) {
        log.info("Registering Log Listener [{}]", logWatcher.getName());
        logWatcher.registerListener(v);
      }
    }

    return logWatcher;
  }

