  /**
   * Returns a dynamic field list using the given field type by iterating over all
   * dynamic fields defined in the schema. 
   */
  @Override
  protected List<String> getDynamicFieldsWithFieldType(FieldType fieldType) {
    List<String> dynamicFields = new ArrayList<String>();
    for (SchemaField prototype : getSchema().getDynamicFieldPrototypes()) {
      if (prototype.getType().getTypeName().equals(fieldType.getTypeName())) {
        dynamicFields.add(prototype.getName());
      }
    }
    return dynamicFields; // Don't sort these - they're matched in order
  }

