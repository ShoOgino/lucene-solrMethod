  /**
   * Adds one or more new FieldType definitions to the managed schema for the given core.
   */
  protected void addNewFieldTypes(List<FieldType> newFieldTypes, ManagedIndexSchema oldSchema) {
    IndexSchema newSchema = null;
    boolean success = false;
    while (!success) {
      try {
        synchronized (oldSchema.getSchemaUpdateLock()) {
          newSchema = oldSchema.addFieldTypes(newFieldTypes, true);
          getSolrCore().setLatestSchema(newSchema);
          success = true;
        }
      } catch (ManagedIndexSchema.SchemaChangedInZkException e) {
        oldSchema = (ManagedIndexSchema)getSolrCore().getLatestSchema();
      }
    }

    // If using ZooKeeper and the client application has requested an update timeout, then block until all
    // active replicas for this collection process the updated schema
    if (getUpdateTimeoutSecs() > 0 && newSchema != null &&
        newSchema.getResourceLoader() instanceof ZkSolrResourceLoader)
    {
      CoreDescriptor cd = getSolrCore().getCoreDescriptor();
      String collection = cd.getCollectionName();
      if (collection != null) {
        ZkSolrResourceLoader zkLoader = (ZkSolrResourceLoader) newSchema.getResourceLoader();
        ManagedIndexSchema.waitForSchemaZkVersionAgreement(collection,
            cd.getCloudDescriptor().getCoreNodeName(),
            ((ManagedIndexSchema) newSchema).getSchemaZkVersion(),
            zkLoader.getZkController(),
            getUpdateTimeoutSecs());
      }
    }
  }

