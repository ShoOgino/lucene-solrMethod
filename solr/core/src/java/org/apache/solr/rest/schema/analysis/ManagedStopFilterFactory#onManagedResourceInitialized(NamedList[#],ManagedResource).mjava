  /**
   * Callback invoked by the {@link ManagedResource} instance to trigger this
   * class to create the CharArraySet used to create the StopFilter using the
   * wordset managed by {@link ManagedWordSetResource}. Keep in mind that
   * a schema.xml may reuse the same {@link ManagedStopFilterFactory} many
   * times for different field types; behind the scenes all instances of this
   * class/handle combination share the same managed data, hence the need for
   * a listener/callback scheme.
   */
  @Override
  public void onManagedResourceInitialized(NamedList<?> args, ManagedResource res) 
      throws SolrException {

    Set<String> managedWords = ((ManagedWordSetResource)res).getWordSet(); 
        
    // first thing is to rebuild the Lucene CharArraySet from our managedWords set
    // which is slightly inefficient to do for every instance of the managed filter
    // but ManagedResource's don't have access to the luceneMatchVersion
    boolean ignoreCase = args.getBooleanArg("ignoreCase");
    stopWords = new CharArraySet(luceneMatchVersion, managedWords.size(), ignoreCase);
    stopWords.addAll(managedWords);
  }

