  /**
   * If not already registered, registers the given {@link ManagedResource} subclass
   * at the given resourceId, creates an instance, and attaches it to the appropriate
   * Restlet router.  Returns the corresponding instance.
   */
  public synchronized ManagedResource addManagedResource(String resourceId, Class<? extends ManagedResource> clazz) {
    ManagedResource res = null;
    ManagedResourceRegistration existingReg = registry.registered.get(resourceId);
    if (existingReg == null) {
      registry.registerManagedResource(resourceId, clazz, null);
      res = createManagedResource(registry.registered.get(resourceId));
      managed.put(resourceId, res);
      log.info("Registered new managed resource {}", resourceId);
      
      // attach this new resource to the Restlet router
      Matcher resourceIdValidator = resourceIdRegex.matcher(resourceId);
      boolean validated = resourceIdValidator.matches();
      assert validated : "managed resourceId '" + resourceId
                       + "' should already be validated by registerManagedResource()";
      String routerPath = resourceIdValidator.group(1);      
      String path = resourceIdValidator.group(2);
      Router router = SCHEMA_BASE_PATH.equals(routerPath) ? schemaRouter : configRouter;
      if (router != null) {
        attachManagedResource(res, path, router);
      }
    } else {
      res = getManagedResource(resourceId);
    }
    return res;
  }

