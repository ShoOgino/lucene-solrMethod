  /**
   * Returns a map from field type names to a list of dynamic fields that use the field type.
   * The map only includes field types that are used by at least one dynamic field.  
   */
  private Map<String,List<String>> getDynamicFieldsByFieldType() {
    Map<String,List<String>> dynamicFieldsByFieldType = new HashMap<String,List<String>>();
    for (SchemaField schemaField : getSchema().getDynamicFieldPrototypes()) {
      final String fieldType = schemaField.getType().getTypeName();
      List<String> dynamicFields = dynamicFieldsByFieldType.get(fieldType);
      if (null == dynamicFields) {
        dynamicFields = new ArrayList<String>();
        dynamicFieldsByFieldType.put(fieldType, dynamicFields);
      }
      dynamicFields.add(schemaField.getName());
    }
    return dynamicFieldsByFieldType;
  }

