  /**
   * Returns a map from field type names to a sorted list of fields that use the field type.
   * The map only includes field types that are used by at least one field.  
   */
  private Map<String,List<String>> getFieldsByFieldType() {
    Map<String,List<String>> fieldsByFieldType = new HashMap<String,List<String>>();
    for (SchemaField schemaField : getSchema().getFields().values()) {
      final String fieldType = schemaField.getType().getTypeName();
      List<String> fields = fieldsByFieldType.get(fieldType);
      if (null == fields) {
        fields = new ArrayList<String>();
        fieldsByFieldType.put(fieldType, fields);
      }
      fields.add(schemaField.getName());
    }
    for (List<String> fields : fieldsByFieldType.values()) {
      Collections.sort(fields);
    }
    return fieldsByFieldType;
  }

