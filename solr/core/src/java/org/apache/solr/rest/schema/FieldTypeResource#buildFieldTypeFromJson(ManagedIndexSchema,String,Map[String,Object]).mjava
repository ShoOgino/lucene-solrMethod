  /**
   * Builds a FieldType definition from a JSON object.
   */
  @SuppressWarnings("unchecked")
  static FieldType buildFieldTypeFromJson(ManagedIndexSchema oldSchema, String fieldTypeName, Map<String,Object> fieldTypeJson) {
    if (1 == fieldTypeJson.size() && fieldTypeJson.containsKey(IndexSchema.FIELD_TYPE)) {
      fieldTypeJson = (Map<String, Object>)fieldTypeJson.get(IndexSchema.FIELD_TYPE);
    }

    String bodyTypeName = (String) fieldTypeJson.get(IndexSchema.NAME);
    if (bodyTypeName == null) {
      // must provide the name in the JSON for converting to the XML format needed
      // to create FieldType objects using the FieldTypePluginLoader
      fieldTypeJson.put(IndexSchema.NAME, fieldTypeName);
    } else {
      // if they provide it in the JSON, then it must match the value from the path
      if (!fieldTypeName.equals(bodyTypeName)) {
        String message = "Field type name in the request body '" + bodyTypeName
            + "' doesn't match field type name in the request URL '" + fieldTypeName + "'";
        log.error(message);
        throw new SolrException(ErrorCode.BAD_REQUEST, message);
      }
    }

    String className = (String)fieldTypeJson.get(FieldType.CLASS_NAME);
    if (className == null) {
      String message = "Missing required '" + FieldType.CLASS_NAME + "' property!";
      log.error(message);
      throw new SolrException(ErrorCode.BAD_REQUEST, message);
    }

    return oldSchema.newFieldType(fieldTypeName, className, fieldTypeJson);
  }

