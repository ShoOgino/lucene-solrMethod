  /**
   * Pulls the "fl" param from the request and splits it to get the
   * requested list of fields.  The (Dynamic)FieldCollectionResource classes
   * will then restrict the fields sent back in the response to those
   * on this list.  The (Dynamic)FieldResource classes ignore this list, 
   * since the (dynamic) field is specified in the URL path, rather than
   * in a query parameter.
   * <p/>
   * Also pulls the "showDefaults" param from the request, for use by all
   * subclasses to include default values from the associated field type
   * in the response.  By default this param is off.
   */
  @Override
  public void doInit() throws ResourceException {
    super.doInit();
    if (isExisting()) {
      String flParam = getSolrRequest().getParams().get(CommonParams.FL);
      if (null != flParam) {
        String[] fields = flParam.trim().split("[,\\s]+");
        if (fields.length > 0) {
          requestedFields = new LinkedHashMap<String,SimpleOrderedMap<Object>>();
          for (String field : fields) {
            if ( ! field.isEmpty()) {
              requestedFields.put(field, null);
            }
          }
        }
      }
      showDefaults = getSolrRequest().getParams().getBool(SHOW_DEFAULTS, false);
    }
  }

