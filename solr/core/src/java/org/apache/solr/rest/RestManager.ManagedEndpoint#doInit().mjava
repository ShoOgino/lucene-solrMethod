    /**
     * Initialize objects needed to handle a request to the REST API. Specifically,
     * we lookup the RestManager using the ThreadLocal SolrRequestInfo and then
     * dynamically locate the ManagedResource associated with the request URI.
     */
    @Override
    public void doInit() throws ResourceException {
      super.doInit();      
      
      // get the relative path to the requested resource, which is
      // needed to locate ManagedResource impls at runtime
      String resourceId = resolveResourceId(getRequest());

      // supports a request for a registered resource or its child
      RestManager restManager = 
          RestManager.getRestManager(SolrRequestInfo.getRequestInfo());
      
      managedResource = restManager.getManagedResourceOrNull(resourceId);      
      if (managedResource == null) {
        // see if we have a registered endpoint one-level up ...
        int lastSlashAt = resourceId.lastIndexOf('/');
        if (lastSlashAt != -1) {
          String parentResourceId = resourceId.substring(0,lastSlashAt);          
          log.info("Resource not found for {}, looking for parent: {}",
              resourceId, parentResourceId);          
          managedResource = restManager.getManagedResourceOrNull(parentResourceId);
          if (managedResource != null) {
            // verify this resource supports child resources
            if (!(managedResource instanceof ManagedResource.ChildResourceSupport)) {
              String errMsg = String.format(Locale.ROOT,
                  "%s does not support child resources!", managedResource.getResourceId());
              throw new ResourceException(Status.CLIENT_ERROR_BAD_REQUEST, errMsg);
            }
            
            childId = resourceId.substring(lastSlashAt+1);
            log.info("Found parent resource {} for child: {}", 
                parentResourceId, childId);
          }
        }
      }    
      
      if (managedResource == null) {
        if (Method.PUT.equals(getMethod()) || Method.POST.equals(getMethod())) {
          // delegate create requests to the RestManager
          managedResource = restManager.endpoint;
        } else {        
          throw new ResourceException(Status.CLIENT_ERROR_NOT_FOUND, 
              "No REST managed resource registered for path "+resourceId);
        }
      }
      
      log.info("Found ManagedResource [{}] for {}", managedResource, resourceId);
    }    

