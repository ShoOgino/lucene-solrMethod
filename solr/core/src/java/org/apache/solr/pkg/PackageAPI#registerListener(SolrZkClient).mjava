  private void registerListener(SolrZkClient zkClient)
      throws KeeperException, InterruptedException {
    String path = SOLR_PKGS_PATH;
    zkClient.exists(path,
        new Watcher() {

          @Override
          public void process(WatchedEvent event) {
            // session events are not change events, and do not remove the watcher
            if (Event.EventType.None.equals(event.getType())) {
              return;
            }
            try {
              synchronized (this) {
                log.debug("Updating [{}] ... ", path);

                // remake watch
                final Watcher thisWatch = this;
                final Stat stat = new Stat();
                final byte[] data = zkClient.getData(path, thisWatch, stat, true);
                pkgs = readPkgsFromZk(data, stat);
                packageLoader.refreshPackageConf();
              }
            } catch (KeeperException.ConnectionLossException | KeeperException.SessionExpiredException e) {
              log.warn("ZooKeeper watch triggered, but Solr cannot talk to ZK: [{}]", e.getMessage());
            } catch (KeeperException e) {
              log.error("A ZK error has occurred", e);
              throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR, "", e);
            } catch (InterruptedException e) {
              // Restore the interrupted status
              Thread.currentThread().interrupt();
              log.warn("Interrupted", e);
            }
          }

        }, true);
  }

