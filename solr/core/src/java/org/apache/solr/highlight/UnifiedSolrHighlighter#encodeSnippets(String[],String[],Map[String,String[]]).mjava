    /**
     * Encodes the resulting snippets into a namedlist
     *
     * @param keys       the document unique keys
     * @param fieldNames field names to highlight in the order
     * @param snippets   map from field name to snippet array for the docs
     * @return encoded namedlist of summaries
     */
    protected NamedList<Object> encodeSnippets(String[] keys, String[] fieldNames, Map<String, String[]> snippets) {
        NamedList<Object> list = new SimpleOrderedMap<>();
        for (int i = 0; i < keys.length; i++) {
            NamedList<Object> summary = new SimpleOrderedMap<>();
            for (String field : fieldNames) {
                String snippet = snippets.get(field)[i];
                if (snippet == null) {
                    //TODO reuse logic of DefaultSolrHighlighter.alternateField
                    summary.add(field, ZERO_LEN_STR_ARRAY);
                } else {
                    // we used a special snippet separator char and we can now split on it.
                    summary.add(field, snippet.split(SNIPPET_SEPARATOR));
                }
            }
            list.add(keys[i], summary);
        }
        return list;
    }

