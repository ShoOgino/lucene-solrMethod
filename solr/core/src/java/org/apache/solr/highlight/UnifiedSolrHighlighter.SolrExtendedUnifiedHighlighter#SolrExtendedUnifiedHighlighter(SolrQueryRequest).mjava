        public SolrExtendedUnifiedHighlighter(SolrQueryRequest req) {
            super(req.getSearcher(), req.getSchema().getIndexAnalyzer());
            this.params = req.getParams();
            this.schema = req.getSchema();
            this.setMaxLength(
                    params.getInt(HighlightParams.MAX_CHARS, UnifiedHighlighter.DEFAULT_MAX_LENGTH));
            this.setCacheFieldValCharsThreshold(
                    params.getInt(HighlightParams.CACHE_FIELD_VAL_CHARS_THRESHOLD, DEFAULT_CACHE_CHARS_THRESHOLD));

            // SolrRequestInfo is a thread-local singleton providing access to the ResponseBuilder to code that
            //   otherwise can't get it in a nicer way.
            SolrQueryRequest request = SolrRequestInfo.getRequestInfo().getReq();
            final RTimerTree timerTree;
            if (request.getRequestTimer() != null) { //It may be null if not used in a search context.
                timerTree = request.getRequestTimer();
            } else {
                timerTree = new RTimerTree(); // since null checks are annoying
            }
            loadFieldValuesTimer = timerTree.sub("loadFieldValues"); // we assume a new timer, state of STARTED
            loadFieldValuesTimer.pause(); // state of PAUSED now with about zero time. Will fail if state isn't STARTED.
        }

