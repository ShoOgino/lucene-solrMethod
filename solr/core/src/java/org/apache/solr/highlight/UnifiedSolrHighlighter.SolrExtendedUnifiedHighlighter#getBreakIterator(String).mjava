    @Override
    protected BreakIterator getBreakIterator(String field) {
      String language = params.getFieldParam(field, HighlightParams.BS_LANGUAGE);
      String country = params.getFieldParam(field, HighlightParams.BS_COUNTRY);
      String variant = params.getFieldParam(field, HighlightParams.BS_VARIANT);
      Locale locale = parseLocale(language, country, variant);
      String type = params.getFieldParam(field, HighlightParams.BS_TYPE);
      BreakIterator baseBI = parseBreakIterator(type, locale);

      // Use a default fragsize the same as the regex Fragmenter (original Highlighter) since we're
      //  both likely shooting for sentence-like patterns.
      int fragsize = params.getFieldInt(field, HighlightParams.FRAGSIZE, LuceneRegexFragmenter.DEFAULT_FRAGMENT_SIZE);
      if (fragsize <= 1 || baseBI instanceof WholeBreakIterator) { // no real minimum size
        return baseBI;
      }
      return LengthGoalBreakIterator.createMinLength(baseBI, fragsize);
      // TODO option for using createClosestToLength()
    }

