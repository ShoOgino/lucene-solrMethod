  @Override
  public void init(PluginInfo info) {
    Map<String,String> attributes = info.attributes;
    BreakIterator breakIterator = BreakIterator.getSentenceInstance(Locale.ROOT);
    
    // scorer parameters: k1/b/pivot
    String k1 = attributes.get("k1");
    if (k1 == null) {
      k1 = "1.2";
    }
    
    String b = attributes.get("b");
    if (b == null) {
      b = "0.75";
    }
    
    String pivot = attributes.get("pivot");
    if (pivot == null) {
      pivot = "87";
    }
    PassageScorer scorer = new PassageScorer(Float.parseFloat(k1), Float.parseFloat(b), Float.parseFloat(pivot));
    
    // formatter parameters: preTag/postTag/ellipsis
    String preTag = attributes.get("preTag");
    if (preTag == null) {
      preTag = "<em>";
    }
    String postTag = attributes.get("postTag");
    if (postTag == null) {
      postTag = "</em>";
    }
    String ellipsis = attributes.get("ellipsis");
    if (ellipsis == null) {
      ellipsis = "... ";
    }
    PassageFormatter formatter = new PassageFormatter(preTag, postTag, ellipsis);
    
    // maximum content size to process
    int maxLength = PostingsHighlighter.DEFAULT_MAX_LENGTH;
    if (attributes.containsKey("maxLength")) {
      maxLength = Integer.parseInt(attributes.get("maxLength"));
    }
    highlighter = new PostingsHighlighter(maxLength, breakIterator, scorer, formatter);
  }

