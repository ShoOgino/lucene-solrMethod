  /**
   * Returns the indexdir as given in index.properties. If index.properties exists in dataDir and
   * there is a property <i>index</i> available and it points to a valid directory
   * in dataDir that is returned Else dataDir/index is returned. Only called for creating new indexSearchers
   * and indexwriters. Use the getIndexDir() method to know the active index directory
   *
   * @return the indexdir as given in index.properties
   */
  public String getNewIndexDir() {
    String result = dataDir + "index/";
    Properties p = new Properties();
    Directory dir = null;
    try {
      dir = getDirectoryFactory().get(getDataDir(), null);
      if (dir.fileExists("index.properties")){
        final IndexInput input = dir.openInput("index.properties", IOContext.DEFAULT);
  
        final InputStream is = new InputStream() {
          
          @Override
          public int read() throws IOException {
            byte next;
            try {
              next = input.readByte();
            } catch (EOFException e) {
              return -1;
            }
            return next;
          }
          
          @Override
          public void close() throws IOException {
            super.close();
            input.close();
          }
        };
        
        try {
          p.load(is);
          
          String s = p.getProperty("index");
          if (s != null && s.trim().length() > 0) {
              result = dataDir + s;
          }
          
        } catch (Exception e) {
          log.error("Unable to load index.properties", e);
        } finally {
          IOUtils.closeQuietly(is);
        }
      }
    } catch (IOException e) {
      SolrException.log(log, "", e);
    } finally {
    
      try {
        getDirectoryFactory().release(dir);
      } catch (IOException e) {
        SolrException.log(log, "", e);
      }
    }
    if (!result.equals(lastNewIndexDir)) {
      log.info("New index directory detected: old="+lastNewIndexDir + " new=" + result);
    }
    lastNewIndexDir = result;
    return result;
  }

