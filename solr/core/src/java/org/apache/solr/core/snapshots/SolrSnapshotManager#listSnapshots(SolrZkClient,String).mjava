  /**
   * This method returns the {@linkplain CollectionSnapshotMetaData} for each named snapshot for the specified collection in Zookeeper.
   *
   * @param zkClient Zookeeper client
   * @param collectionName The name of the collection
   * @return the {@linkplain CollectionSnapshotMetaData} for each named snapshot
   * @throws InterruptedException In case of thread interruption.
   * @throws KeeperException In case of Zookeeper error
   */
  public static Collection<CollectionSnapshotMetaData> listSnapshots(SolrZkClient zkClient, String collectionName)
      throws InterruptedException, KeeperException {
    Collection<CollectionSnapshotMetaData> result = new ArrayList<>();
    String zkPath = getSnapshotMetaDataZkPath(collectionName, Optional.empty());

    try {
      Collection<String> snapshots = zkClient.getChildren(zkPath, null, true);
      for (String snapshot : snapshots) {
        Optional<CollectionSnapshotMetaData> s = getCollectionLevelSnapshot(zkClient, collectionName, snapshot);
        if (s.isPresent()) {
          result.add(s.get());
        }
      }
    } catch (KeeperException ex) {
      // Gracefully handle the case when the zk node doesn't exist (e.g. due to a concurrent delete collection operation).
      if ( ex.code() != KeeperException.Code.NONODE ) {
        throw ex;
      }
    }
    return result;
  }

