  void verifyJarSignature(ByteBuffer buf) {
    Map<String, byte[]> keys = CloudUtil.getTrustedKeys(coreContainer.getZkController().getZkClient(), "exe");
    if (keys.isEmpty()) {
      if (sig == null) {
        verified = true;
        return;
      } else {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "No public keys are available in ZK to verify signature for runtime lib  " + name);
      }
    } else if (sig == null) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, StrUtils.formatString("runtimelib {0} should be signed with one of the keys in ZK /keys/exe ", name));
    }

    try {
      String matchedKey = new CryptoKeys(keys).verify(sig, buf);
      if (matchedKey == null)
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "No key matched signature for jar : " + name + " version: " + version);
      log.info("Jar {} signed with {} successfully verified", name, matchedKey);
    } catch (Exception e) {
      log.error("Signature verifying error ", e);
      if (e instanceof SolrException) throw (SolrException) e;
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Error verifying key ", e);
    }
  }

