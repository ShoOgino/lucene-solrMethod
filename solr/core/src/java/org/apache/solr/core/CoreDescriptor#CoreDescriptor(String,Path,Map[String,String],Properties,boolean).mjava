  /**
   * Create a new CoreDescriptor.
   * @param name            the CoreDescriptor's name
   * @param instanceDir     a Path resolving to the instanceDir
   * @param coreProps       a Map of the properties for this core
   * @param containerProperties the properties from the enclosing container.
   * @param isZooKeeperAware if true, we ar in SolrCloud mode.
   */


  public CoreDescriptor(String name, Path instanceDir, Map<String, String> coreProps,
                        Properties containerProperties, boolean isZooKeeperAware) {
    this.instanceDir = instanceDir;

    originalCoreProperties.setProperty(CORE_NAME, name);

    name = PropertiesUtil.substituteProperty(checkPropertyIsNotEmpty(name, CORE_NAME),
                                             containerProperties);

    coreProperties.putAll(defaultProperties);
    coreProperties.put(CORE_NAME, name);

    for (Map.Entry<String, String> entry : coreProps.entrySet()) {
      String propname = entry.getKey();
      String propvalue = entry.getValue();

      if (isUserDefinedProperty(propname))
        originalExtraProperties.put(propname, propvalue);
      else
        originalCoreProperties.put(propname, propvalue);

      if (!requiredProperties.contains(propname))   // Required props are already dealt with
        coreProperties.setProperty(propname,
            PropertiesUtil.substituteProperty(propvalue, containerProperties));
    }

    loadExtraProperties();
    buildSubstitutableProperties();

    // TODO maybe make this a CloudCoreDescriptor subclass?
    if (isZooKeeperAware) {
      cloudDesc = new CloudDescriptor(name, coreProperties, this);
    }
    else {
      cloudDesc = null;
    }

    log.debug("Created CoreDescriptor: " + coreProperties);
  }

