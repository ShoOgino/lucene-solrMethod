  private void close(Directory directory) throws IOException {
    synchronized (this) {
      // don't check if already closed here - we need to able to release
      // while #close() waits.
      
      CacheValue cacheValue = byDirectoryCache.get(directory);
      if (cacheValue == null) {
        throw new IllegalArgumentException("Unknown directory: " + directory
            + " " + byDirectoryCache);
      }
      log.debug("Releasing directory: " + cacheValue.path);

      cacheValue.refCnt--;

      if (cacheValue.refCnt == 0 && cacheValue.doneWithDir) {
        closeDirectory(cacheValue);
        
        byDirectoryCache.remove(directory);
        
        // if it's been closed, it's path is now
        // owned by another Directory instance
        if (!cacheValue.closed) {
          byPathCache.remove(cacheValue.path);
        }
      }
    }
  }

