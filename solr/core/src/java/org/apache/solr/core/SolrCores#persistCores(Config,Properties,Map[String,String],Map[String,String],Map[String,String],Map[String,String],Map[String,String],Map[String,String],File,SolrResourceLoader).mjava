  public void persistCores(Config cfg, Properties containerProperties,
      Map<String,String> rootSolrAttribs, Map<String,String> coresAttribs,
      Map<String, String> loggingAttribs, Map<String,String> watcherAttribs,
      Map<String, String> shardHandlerAttrib, Map<String,String> shardHandlerProps,
      File file, SolrResourceLoader loader) throws XPathExpressionException {


    List<SolrXMLSerializer.SolrCoreXMLDef> solrCoreXMLDefs = new ArrayList<SolrXMLSerializer.SolrCoreXMLDef>();
    synchronized (modifyLock) {

      persistCores(cfg, cores, loader, solrCoreXMLDefs);
      persistCores(cfg, transientCores, loader, solrCoreXMLDefs);
      // add back all the cores that aren't loaded, either in cores or transient
      // cores
      for (Map.Entry<String,CoreDescriptor> ent : dynamicDescriptors.entrySet()) {
        if (!cores.containsKey(ent.getKey())
            && !transientCores.containsKey(ent.getKey())) {
          addCoreToPersistList(cfg, loader, ent.getValue(), null, solrCoreXMLDefs);
        }
      }
      for (Map.Entry<String,SolrCore> ent : createdCores.entrySet()) {
        if (!cores.containsKey(ent.getKey())
            && !transientCores.containsKey(ent.getKey())
            && !dynamicDescriptors.containsKey(ent.getKey())) {
          addCoreToPersistList(cfg, loader, ent.getValue().getCoreDescriptor(),
              null, solrCoreXMLDefs);
        }
      }

      SolrXMLSerializer.SolrXMLDef solrXMLDef = new SolrXMLSerializer.SolrXMLDef();
      solrXMLDef.coresDefs = solrCoreXMLDefs;
      solrXMLDef.containerProperties = containerProperties;
      solrXMLDef.solrAttribs = rootSolrAttribs;
      solrXMLDef.coresAttribs = coresAttribs;
      solrXMLDef.loggingAttribs = loggingAttribs;
      solrXMLDef.watcherAttribs = watcherAttribs;
      solrXMLDef.shardHandlerAttribs = shardHandlerAttrib;
      solrXMLDef.shardHandlerProps = shardHandlerProps;
      SOLR_XML_SERIALIZER.persistFile(file, solrXMLDef);
    }

  }

