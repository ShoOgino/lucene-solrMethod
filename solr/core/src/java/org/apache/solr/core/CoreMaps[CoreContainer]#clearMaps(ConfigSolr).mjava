  // We are shutting down. We don't want to risk deadlock, so do this manipulation the expensive way. Note, I've
  // already deadlocked with closing/opening cores while keeping locks here....
  protected void clearMaps(ConfigSolr cfg) {
    List<String> coreNames;
    List<String> transientNames;
    List<SolrCore> pendingToClose;
    synchronized (locker) {
      coreNames = new ArrayList(cores.keySet());
      transientNames = new ArrayList(transientCores.keySet());
      pendingToClose = new ArrayList(pendingCloses);
    }
    for (String coreName : coreNames) {
      SolrCore core = cores.get(coreName);
      if (core != null) {
        try {
          addPersistOneCore(cfg, core, container.loader);

          core.close();
        } catch (Throwable t) {
          SolrException.log(CoreContainer.log, "Error shutting down core", t);
        } finally {
          synchronized (locker) {
            cores.remove(coreName);
          }
        }
      }
    }

    for (String coreName : transientNames) {
      SolrCore core = transientCores.get(coreName);
      if (core != null) {
        try {
          core.close();
        } catch (Throwable t) {
          SolrException.log(CoreContainer.log, "Error shutting down core", t);
        } finally {
          synchronized (locker) {
            transientCores.remove(coreName);
          }
        }
      }
    }

    // We might have some cores that we were _thinking_ about shutting down, so take care of those too.
    for (SolrCore core : pendingToClose) {
      try {
        core.close();
      } catch (Throwable t) {
        SolrException.log(CoreContainer.log, "Error shutting down core", t);
      } finally {
        synchronized (locker) {
          pendingCloses.remove(core);
        }
      }
    }
  }

