  public <T> T newInstance(String cName, Class<T> expectedType, String pkg) {
    try {
      return coreContainer.getResourceLoader().newInstance(cName, expectedType,
          null, new Class[]{CoreContainer.class}, new Object[]{coreContainer});
    } catch (SolrException e) {
      Package p = pkgs.get(pkg);

      if (p != null) {
        try {
          Class<? extends T> klas = p.loader.findClass(cName, expectedType);
          try {
            return klas.getConstructor(CoreContainer.class).newInstance(coreContainer);
          } catch (NoSuchMethodException ex) {
            return klas.getConstructor().newInstance();
          }
        } catch (Exception ex) {
          if (!p.loader.getErrors().isEmpty()) {
            //some libraries were no loaded due to some errors. May the class was there in those libraries
            throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,
                "There were errors loading some libraries: " + StrUtils.join(p.loader.getErrors(), ','), ex);
          }
          //there were no errors in loading any libraries. The class was probably not suppoed to be there in those libraries
          // so throw the original exception
          throw e;
        }
      } else {
        throw e;
      }
    }
  }

