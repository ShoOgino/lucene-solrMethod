  /**
   * This method returns the {@linkplain IndexCommit} associated with the specified
   * <code>commitName</code>. A snapshot with specified <code>commitName</code> must
   * be created before invoking this method.
   *
   * @param commitName The name of persisted commit
   * @return the {@linkplain IndexCommit}
   * @throws IOException in case of I/O error.
   */
  public Optional<IndexCommit> getIndexCommitByName(String commitName) throws IOException {
    Optional<IndexCommit> result = Optional.empty();
    Optional<SnapshotMetaData> metaData = getSnapshotMetaData(commitName);
    if (metaData.isPresent()) {
      String indexDirPath = metaData.get().getIndexDirPath();
      long gen = metaData.get().getGenerationNumber();

      Directory d = solrCore.getDirectoryFactory().get(indexDirPath, DirContext.DEFAULT, DirectoryFactory.LOCK_TYPE_NONE);
      try {
        result = DirectoryReader.listCommits(d)
                                .stream()
                                .filter(ic -> ic.getGeneration() == gen)
                                .findAny();

        if (!result.isPresent()) {
          log.warn("Unable to find commit with generation {} in the directory {}", gen, indexDirPath);
        }

      } finally {
        solrCore.getDirectoryFactory().release(d);
      }
    } else {
      if (log.isWarnEnabled()) {
        log.warn("Commit with name {} is not persisted for core {}", commitName, solrCore.getName());
      }
    }

    return result;
  }

