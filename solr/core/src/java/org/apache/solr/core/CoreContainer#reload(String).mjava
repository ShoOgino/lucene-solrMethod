  // ---------------- Core name related methods --------------- 
  /**
   * Recreates a SolrCore.
   * While the new core is loading, requests will continue to be dispatched to
   * and processed by the old core
   * 
   * @param name the name of the SolrCore to reload
   */
  public void reload(String name) throws ParserConfigurationException, IOException, SAXException {

    // :TODO: would be really nice if this method wrapped any underlying errors and only threw SolrException

    Exception failure = null;
    try {

      name= checkDefault(name);
      SolrCore core;
      synchronized(cores) {
        core = cores.get(name);
      }
      if (core == null)
        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, "No such core: " + name );

      CoreDescriptor cd = core.getCoreDescriptor();
  
      File instanceDir = new File(cd.getInstanceDir());
      if (!instanceDir.isAbsolute()) {
        instanceDir = new File(getSolrHome(), cd.getInstanceDir());
      }

      log.info("Reloading SolrCore '{}' using instanceDir: {}", 
               cd.getName(), instanceDir.getAbsolutePath());
    
      SolrResourceLoader solrLoader;
      if(zkController == null) {
        solrLoader = new SolrResourceLoader(instanceDir.getAbsolutePath(), libLoader, getCoreProps(instanceDir.getAbsolutePath(), cd.getPropertiesName(),cd.getCoreProperties()));
      } else {
        try {
          String collection = cd.getCloudDescriptor().getCollectionName();
          zkController.createCollectionZkNode(cd.getCloudDescriptor());

          String zkConfigName = zkController.readConfigName(collection);
          if (zkConfigName == null) {
            log.error("Could not find config name for collection:" + collection);
            throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,
                                         "Could not find config name for collection:" + collection);
          }
          solrLoader = new ZkSolrResourceLoader(instanceDir.getAbsolutePath(), zkConfigName, libLoader, getCoreProps(instanceDir.getAbsolutePath(), cd.getPropertiesName(),cd.getCoreProperties()), zkController);
        } catch (KeeperException e) {
          log.error("", e);
          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,
                                       "", e);
        } catch (InterruptedException e) {
          // Restore the interrupted status
          Thread.currentThread().interrupt();
          log.error("", e);
          throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,
                                       "", e);
        }
      }
    
      SolrCore newCore = core.reload(solrLoader, core);
      // keep core to orig name link
      String origName = coreToOrigName.remove(core);
      if (origName != null) {
        coreToOrigName.put(newCore, origName);
      }
      register(name, newCore, false);

      // :TODO: Java7...
      // http://docs.oracle.com/javase/7/docs/technotes/guides/language/catch-multiple.html
    } catch (ParserConfigurationException e1) {
      failure = e1;
      throw e1;
    } catch (IOException e2) {
      failure = e2;
      throw e2;
    } catch (SAXException e3) {
      failure = e3;
      throw e3;
    } catch (RuntimeException e4) {
      failure = e4;
      throw e4;
    } finally {
      if (null != failure) {
        log.error("Unable to reload core: " + name, failure);
      }
      synchronized (coreInitFailures) {
        // remove first so insertion order is updated and newest is last
        coreInitFailures.remove(name);
        if (null != failure) {
          coreInitFailures.put(name, failure);
        }
      }
    }
  }

