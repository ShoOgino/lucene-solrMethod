  @SuppressWarnings({"unchecked", "rawtypes"})
  public PluginInfo(String type, Map<String,Object> map) {
    LinkedHashMap m = new LinkedHashMap<>(map);
    initArgs = new NamedList();
    for (Map.Entry<String, Object> entry : map.entrySet()) {
      if (NAME.equals(entry.getKey()) || CLASS_NAME.equals(entry.getKey())) continue;
      Object value = entry.getValue();
      if (value instanceof List) {
        List list = (List) value;
        if (!list.isEmpty() && list.get(0) instanceof Map) {//this is a subcomponent
          for (Object o : list) {
            if (o instanceof Map) o = new NamedList<>((Map) o);
            initArgs.add(entry.getKey(), o);
          }
        } else {
          initArgs.add(entry.getKey(), value);
        }
      } else {
        if (value instanceof Map) value = new NamedList((Map) value);
        initArgs.add(entry.getKey(), value);
      }
    }
    this.type = type;
    this.name = (String) m.get(NAME);
    Pair<String, String> parsed = parseClassName((String) m.get(CLASS_NAME));
    this.className = parsed.second();
    this.pkgName = parsed.first();
    attributes = unmodifiableMap(m);
    this.children =  Collections.<PluginInfo>emptyList();
    isFromSolrConfig = true;
  }

