  /**
   * Return the properties associated with the ConfigSet (e.g. immutable)
   *
   * @param loader the resource loader
   * @param name the name of the config set properties file
   * @return the properties in a NamedList
   */
  public static NamedList readFromResourceLoader(SolrResourceLoader loader, String name) {
    InputStreamReader reader;
    try {
      reader = new InputStreamReader(loader.openResource(name), StandardCharsets.UTF_8);
    } catch (SolrResourceNotFoundException ex) {
      log.info("Did not find ConfigSet properties", ex);
      return null;
    } catch (Exception ex) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "Unable to load reader for ConfigSet properties: " + name, ex);
    }

    try {
      JSONParser jsonParser = new JSONParser(reader);
      Object object = ObjectBuilder.getVal(jsonParser);
      if (!(object instanceof Map)) {
        throw new SolrException(ErrorCode.SERVER_ERROR, "Invalid JSON type " + object.getClass().getName() + ", expected Map");
      }
      return new NamedList((Map)object);
    } catch (Exception ex) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "Unable to load ConfigSet properties", ex);
    } finally {
      IOUtils.closeQuietly(reader);
    }
  }

