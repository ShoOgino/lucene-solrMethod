  /**
   * External executable listener.
   * 
   * @param callback Unused (As of solr 1.4-dev)
   * @return Error code indicating if the command has executed successfully. <br />
   *  0 , indicates normal termination.<br />
   *  non-zero , otherwise.
   */
  protected int exec(String callback) {
    int ret = 0;

    try {
      boolean doLog = log.isDebugEnabled();
      if (doLog) {
        log.debug("About to exec " + cmd[0]);
      }
      final Process proc;
      try {
        proc = Runtime.getRuntime().exec(cmd, envp ,dir);
      } catch (Error err) {
        // Create better error message
        if (err.getMessage() != null && (err.getMessage().contains("posix_spawn") || err.getMessage().contains("UNIXProcess"))) {
          Error newErr = new Error("Error forking command due to JVM locale bug (see https://issues.apache.org/jira/browse/SOLR-6387): " + err.getMessage());
          newErr.setStackTrace(err.getStackTrace());
          err = newErr;
        }
        throw err;
      }

      if (wait) {
        try {
          ret = proc.waitFor();
        } catch (InterruptedException e) {
          SolrException.log(log,e);
          ret = INVALID_PROCESS_RETURN_CODE;
        }
      }

      if (wait && doLog) {
        log.debug("Executable " + cmd[0] + " returned " + ret);
      }

    } catch (IOException e) {
      // don't throw exception, just log it...
      SolrException.log(log,e);
      ret = INVALID_PROCESS_RETURN_CODE;
    }

    return ret;
  }

