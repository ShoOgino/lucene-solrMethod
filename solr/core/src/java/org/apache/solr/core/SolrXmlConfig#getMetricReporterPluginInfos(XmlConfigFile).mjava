  private static PluginInfo[] getMetricReporterPluginInfos(XmlConfigFile config) {
    NodeList nodes = (NodeList) config.evaluate("solr/metrics/reporter", XPathConstants.NODESET);
    List<PluginInfo> configs = new ArrayList<>();
    boolean hasJmxReporter = false;
    if (nodes != null && nodes.getLength() > 0) {
      for (int i = 0; i < nodes.getLength(); i++) {
        // we don't require class in order to support predefined replica and node reporter classes
        PluginInfo info = new PluginInfo(nodes.item(i), "SolrMetricReporter", true, false);
        String clazz = info.className;
        if (clazz != null && clazz.equals(SolrJmxReporter.class.getName())) {
          hasJmxReporter = true;
        }
        configs.add(info);
      }
    }
    // if there's an MBean server running but there was no JMX reporter then add a default one
    MBeanServer mBeanServer = JmxUtil.findFirstMBeanServer();
    if (mBeanServer != null && !hasJmxReporter) {
      log.info("MBean server found: " + mBeanServer + ", but no JMX reporters were configured - adding default JMX reporter.");
      Map<String,Object> attributes = new HashMap<>();
      attributes.put("name", "default");
      attributes.put("class", SolrJmxReporter.class.getName());
      PluginInfo defaultPlugin = new PluginInfo("reporter", attributes);
      configs.add(defaultPlugin);
    }
    return configs.toArray(new PluginInfo[configs.size()]);
  }

