  /**
   * This method returns the configuration parameters for the specified backup.
   *
   * @param backupLoc The base path used to store the backup data.
   * @param backupId  The unique name for the backup whose configuration params are required.
   * @return the configuration parameters for the specified backup.
   * @throws IOException In case of errors.
   */
  public Properties readBackupProperties(String backupLoc, String backupId) throws IOException {
    Preconditions.checkNotNull(backupLoc);
    Preconditions.checkNotNull(backupId);

    // Backup location
    URI backupPath = repository.createURI(backupLoc, backupId);
    if (!repository.exists(backupPath)) {
      throw new SolrException(ErrorCode.SERVER_ERROR, "Couldn't restore since doesn't exist: " + backupPath);
    }

    Properties props = new Properties();
    try (Reader is = new InputStreamReader(new PropertiesInputStream(
        repository.openInput(backupPath, BACKUP_PROPS_FILE, IOContext.DEFAULT)), StandardCharsets.UTF_8)) {
      props.load(is);
      return props;
    }
  }

