  private void closeDirectory(CacheValue cacheValue) {
    List<CloseListener> listeners = closeListeners.remove(cacheValue.directory);
    if (listeners != null) {
      for (CloseListener listener : listeners) {
        try {
          listener.preClose();
        } catch (Throwable t) {
          SolrException.log(log, "Error executing preClose for directory", t);
        }
      }
    }
    
    cacheValue.closeDirectoryCalled = true;
    
    if (cacheValue.deleteOnClose) {
      
      // see if we are a subpath
      Collection<CacheValue> values = byPathCache.values();
      
      Collection<CacheValue> cacheValues = new ArrayList<CacheValue>();
      cacheValues.addAll(values);
      cacheValues.remove(cacheValue);
      for (CacheValue otherCacheValue : cacheValues) {
        // if we are a parent path and all our sub children are not already closed,
        // get a sub path to close us later
        if (otherCacheValue.path.startsWith(cacheValue.path) && !otherCacheValue.closeDirectoryCalled) {
          // we let the sub dir remove and close us
          if (!otherCacheValue.deleteAfterCoreClose && cacheValue.deleteAfterCoreClose) {
            otherCacheValue.deleteAfterCoreClose = true;
          }
          otherCacheValue.removeEntries.addAll(cacheValue.removeEntries);
          otherCacheValue.closeEntries.addAll(cacheValue.closeEntries);
          cacheValue.closeEntries.clear();
          break;
        }
      }
    }
    
    for (CacheValue val : cacheValue.removeEntries) {
      if (!val.deleteAfterCoreClose) {
        try {
          log.info("Removing directory: " + val.path);
          removeDirectory(val);
        } catch (Throwable t) {
          SolrException.log(log, "Error removing directory", t);
        }
      } else {
        removeEntries.add(val);
      }
    }
    
    for (CacheValue val : cacheValue.closeEntries) {
      try {
        log.info("Closing directory: " + val.path);
        val.directory.close();
      } catch (Throwable t) {
        SolrException.log(log, "Error closing directory", t);
      }
      
    }

    if (listeners != null) {
      for (CloseListener listener : listeners) {
        try {
          listener.postClose();
        } catch (Throwable t) {
          SolrException.log(log, "Error executing postClose for directory", t);
        }
      }
    }
  }

