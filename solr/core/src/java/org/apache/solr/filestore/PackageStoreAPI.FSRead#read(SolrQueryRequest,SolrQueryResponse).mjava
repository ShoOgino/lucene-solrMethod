    @Command
    public void read(SolrQueryRequest req, SolrQueryResponse rsp) {
      String path = req.getPathTemplateValues().get("*");
      String pathCopy = path;
      String getFrom = req.getParams().get("getFrom");
      if (getFrom != null) {
        coreContainer.getUpdateShardHandler().getUpdateExecutor().submit(() -> {
          log.debug("Downloading file {}", pathCopy);
          try {
            packageStore.fetch(pathCopy, getFrom);
          } catch (Exception e) {
            log.error("Failed to download file: " + pathCopy, e);
          }
          log.info("downloaded file: {}", pathCopy);
        });
        return;

      }
      if (path == null) {
        path = "";
      }

      PackageStore.FileType typ = packageStore.getType(path, false);
      if (typ == PackageStore.FileType.NOFILE) {
        rsp.add("files", Collections.singletonMap(path, null));
        return;
      }
      if (typ == PackageStore.FileType.DIRECTORY) {
        rsp.add("files", Collections.singletonMap(path, packageStore.list(path, null)));
        return;
      }
      if (req.getParams().getBool("meta", false)) {
        if (typ == PackageStore.FileType.FILE) {
          int idx = path.lastIndexOf('/');
          String fileName = path.substring(idx + 1);
          String parentPath = path.substring(0, path.lastIndexOf('/'));
          List l = packageStore.list(parentPath, s -> s.equals(fileName));
          rsp.add("files", Collections.singletonMap(path, l.isEmpty() ? null : l.get(0)));
          return;
        }
      } else {
        writeRawFile(req, rsp, path);
      }
    }

