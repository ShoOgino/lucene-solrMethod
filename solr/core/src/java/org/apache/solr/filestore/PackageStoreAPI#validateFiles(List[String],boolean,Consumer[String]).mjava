  public void validateFiles(List<String> files, boolean validateSignatures, Consumer<String> errs) {
    for (String path : files) {
      try {
        PackageStore.FileType type = packageStore.getType(path, true);
        if (type != PackageStore.FileType.FILE) {
          errs.accept("No such file : " + path);
          continue;
        }

        packageStore.get(path, entry -> {
          if (entry.getMetaData().signatures == null ||
              entry.getMetaData().signatures.isEmpty()) {
            errs.accept(path + " has no signature");
            return;
          }
          if (validateSignatures) {
            try {
              validate(entry.meta.signatures, entry);
            } catch (SolrException e) {
              log.error("error validating package artifact", e);
              errs.accept(e.getMessage());
            }
          }
        }, false);
      } catch (Exception e) {
        log.error("Error reading file ", e);
        errs.accept("Error reading file " + path + " " + e.getMessage());
      }
    }

  }

