  /**
   * Bootstraps the current configs for all collections in solr.xml.
   * Takes two params - the zkhost to connect to and the solrhome location
   * to find solr.xml.
   *
   * If you also pass a solrPort, it will be used to start
   * an embedded zk useful for single machine, multi node tests.
   * 
   * @param args
   * @throws Exception
   */
  public static void main(String[] args) throws Exception {
    // start up a tmp zk server first
    String zkServerAddress = args[0];
    
    String solrHome = args[1];
   
    String solrPort = null;
    if (args.length > 2) {
      solrPort = args[2];
    }
    

    SolrZkServer zkServer = null;
    if (solrPort != null) {
      zkServer = new SolrZkServer("true", null, solrHome + "/zoo_data", solrHome, solrPort);
      zkServer.parseConfig();
      zkServer.start();
    }
    
    SolrZkClient zkClient = new SolrZkClient(zkServerAddress, 15000, 5000,
        new OnReconnect() {
          @Override
          public void command() {
          }});
    
    SolrResourceLoader loader = new SolrResourceLoader(solrHome);
    solrHome = loader.getInstanceDir();
    
    InputSource cfgis = new InputSource(new File(solrHome, "solr.xml").toURI().toASCIIString());
    Config cfg = new Config(loader, null, cfgis , null, false);
    bootstrapConf(zkClient, cfg, solrHome);
    if (solrPort != null) {
      zkServer.stop();
    }
  }

