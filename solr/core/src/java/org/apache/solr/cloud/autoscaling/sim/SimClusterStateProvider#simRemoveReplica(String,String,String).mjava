  /**
   * Remove replica.
   * @param nodeId node id
   * @param coreNodeName coreNodeName
   */
  public void simRemoveReplica(String nodeId, String collection, String coreNodeName) throws Exception {
    ensureNotClosed();
    
    lock.lockInterruptibly();
    try {
      @SuppressWarnings({"unchecked"})
      final List<Replica> replicas = nodeReplicaMap.computeIfAbsent
        (nodeId, Utils.NEW_SYNCHRONIZED_ARRAYLIST_FUN);
      synchronized (replicas) {
        for (int i = 0; i < replicas.size(); i++) {
          if (collection.equals(replicas.get(i).getCollection()) && coreNodeName.equals(replicas.get(i).getName())) {
            Replica ri = replicas.remove(i);
            colShardReplicaMap.computeIfAbsent(ri.getCollection(), c -> new ConcurrentHashMap<>())
              .computeIfAbsent(ri.getShard(), s -> new ArrayList<>())
              .remove(ri);
            collectionsStatesRef.get(ri.getCollection()).invalidate();

            opDelay(ri.getCollection(), CollectionParams.CollectionAction.DELETEREPLICA.name());

            // update the number of cores in node values, if node is live
            if (liveNodes.contains(nodeId)) {
              Number cores = (Number)cloudManager.getSimNodeStateProvider().simGetNodeValue(nodeId, ImplicitSnitch.CORES);
              if (cores == null || cores.intValue() == 0) {
                throw new Exception("Unexpected value of 'cores' (" + cores + ") on node: " + nodeId);
              }
              cloudManager.getSimNodeStateProvider().simSetNodeValue(nodeId, ImplicitSnitch.CORES, cores.intValue() - 1);
              Number disk = (Number)cloudManager.getSimNodeStateProvider().simGetNodeValue(nodeId, ImplicitSnitch.DISK);
              if (disk == null || disk.doubleValue() == 0.0) {
                throw new Exception("Unexpected value of 'freedisk' (" + disk + ") on node: " + nodeId);
              }
              if (ri.get(Type.CORE_IDX.metricsAttribute) == null) {
                throw new RuntimeException("Missing replica size: " + ri);
              }
              long replicaSize = ((Number)ri.get(Type.CORE_IDX.metricsAttribute)).longValue();
              Number replicaSizeGB = (Number)Type.CORE_IDX.convertVal(replicaSize);
              cloudManager.getSimNodeStateProvider().simSetNodeValue(nodeId, ImplicitSnitch.DISK, disk.doubleValue() + replicaSizeGB.doubleValue());
            }
            log.trace("-- simRemoveReplica {}", ri);
            simRunLeaderElection(ri.getCollection(), ri.getShard(), true);
                                 
            return;
          }
        }
      }
      throw new Exception("Replica " + coreNodeName + " not found on node " + nodeId);
    } finally {
      lock.unlock();
    }
  }

