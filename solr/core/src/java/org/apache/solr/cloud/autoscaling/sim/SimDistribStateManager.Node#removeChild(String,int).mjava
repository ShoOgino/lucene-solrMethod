    public void removeChild(String name, int version) throws NoSuchElementException, BadVersionException, IOException {
      Node n = children.get(name);
      if (n == null) {
        throw new NoSuchElementException(path + "/" + name);
      }
      if (version != -1 && version != n.version) {
        throw new BadVersionException(version, path);
      }
      children.remove(name);
      Set<Watcher> currentWatchers = new HashSet<>(childrenWatches);
      childrenWatches.clear();
      for (Watcher w : currentWatchers) {
        w.process(new WatchedEvent(Watcher.Event.EventType.NodeChildrenChanged, Watcher.Event.KeeperState.SyncConnected, path));
      }
      currentWatchers = new HashSet<>(n.dataWatches);
      n.dataWatches.clear();
      for (Watcher w : currentWatchers) {
        w.process(new WatchedEvent(Watcher.Event.EventType.NodeDeleted, Watcher.Event.KeeperState.SyncConnected, n.path));
      }
      // TODO: not sure if it's correct to recurse and fire watches???
      Set<String> kids = new HashSet<>(n.children.keySet());
      for (String kid : kids) {
        n.removeChild(kid, -1);
      }
    }

