  /**
   * Determine if the a new collection will be required based on the document timestamp. Passing null for
   * preemptiveCreateInterval tells you if the document is beyond all existing collections with a response of
   * {@link CreationType#NONE} or {@link CreationType#SYNCHRONOUS}, and passing a valid date math for
   * preemptiveCreateMath additionally distinguishes the case where the document is close enough to the end of
   * the TRA to trigger preemptive creation but not beyond all existing collections with a value of
   * {@link CreationType#ASYNC_PREEMPTIVE}.
   *
   * @param docTimeStamp The timestamp from the document
   * @param targetCollectionTimestamp The timestamp for the presently selected destination collection
   * @return a {@code CreationType} indicating if and how to create a collection
   */
  private CreationType typeOfCreationRequired(Instant docTimeStamp, Instant targetCollectionTimestamp) {
    final Instant nextCollTimestamp = computeNextCollTimestamp(targetCollectionTimestamp);

    if (!docTimeStamp.isBefore(nextCollTimestamp)) {
      // current document is destined for a collection that doesn't exist, must create the destination
      // to proceed with this add command
      return SYNCHRONOUS;
    }

    if (isNotBlank(getPreemptiveCreateWindow())) {
      Instant preemptNextColCreateTime =
          calcPreemptNextColCreateTime(getPreemptiveCreateWindow(), nextCollTimestamp);
      if (!docTimeStamp.isBefore(preemptNextColCreateTime)) {
        return ASYNC_PREEMPTIVE;
      }
    }

    return NONE;
  }

