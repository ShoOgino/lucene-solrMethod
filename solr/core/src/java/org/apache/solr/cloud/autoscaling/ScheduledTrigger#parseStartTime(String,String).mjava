  private Instant parseStartTime(String startTimeStr, String timeZoneStr) {
    if (startTimeStr == null) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Parameter 'startTime' cannot be null");
    }
    try {
      // try parsing startTime as an ISO-8601 date time string
      return DateMathParser.parseMath(null, startTimeStr).toInstant();
    } catch (SolrException e) {
      if (e.code() != SolrException.ErrorCode.BAD_REQUEST.code)  throw e;
    }
    if (timeZoneStr == null)  {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
          "Either 'startTime' should be an ISO-8601 date time string or 'timeZone' must be not be null");
    }
    DateTimeFormatter dateTimeFormatter = new DateTimeFormatterBuilder()
        .append(DateTimeFormatter.ISO_LOCAL_DATE).appendPattern("['T'[HH[:mm[:ss]]]]")
        .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)
        .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)
        .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)
        .toFormatter(Locale.ROOT).withZone(ZoneId.of(timeZoneStr));
    return Instant.from(dateTimeFormatter.parse(startTimeStr));
  }

