  /**
   * Removes the head of the queue and returns it, blocks until it succeeds.
   * 
   * @return The former head of the queue
   */
  public byte[] take() throws KeeperException, InterruptedException {
    // Same as for element. Should refactor this.
    TimerContext timer = stats.time(dir + "_take");
    try {
      TreeMap<Long, String> orderedChildren = getChildren(Long.MAX_VALUE);
      for (String headNode : orderedChildren.values()) {
        String path = dir + "/" + headNode;
        try {
          byte[] data = zookeeper.getData(path, null, null, true);
          zookeeper.delete(path, -1, true);
          return data;
        } catch (KeeperException.NoNodeException e) {
          // Another client deleted the node first.
        }
      }
      return null; // shouldn't really reach here..
    } finally {
      timer.stop();
    }
  }

