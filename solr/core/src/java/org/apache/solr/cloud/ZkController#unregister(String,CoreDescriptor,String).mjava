  public void unregister(String coreName, CoreDescriptor cd, String configLocation)
      throws InterruptedException, KeeperException {
    final String coreNodeName = cd.getCloudDescriptor().getCoreNodeName();
    final String collection = cd.getCloudDescriptor().getCollectionName();
    assert collection != null;

    if (collection == null || collection.trim().length() == 0) {
      log.error("No collection was specified.");
      return;
    }

    ElectionContext context = electionContexts.remove(new ContextKey(collection, coreNodeName));

    if (context != null) {
      context.cancelElection();
    }

    CloudDescriptor cloudDescriptor = cd.getCloudDescriptor();
    boolean removeWatch = true;
    // if there is no SolrCore which is a member of this collection, remove the watch
    for (SolrCore solrCore : cc.getCores()) {
      if (((ZkSolrResourceLoader) solrCore.getResourceLoader()).getConfigSetZkPath().equals(configLocation))
        configLocation = null; //if a core uses this config dir , then set it to null


      CloudDescriptor cloudDesc = solrCore.getCoreDescriptor()
          .getCloudDescriptor();
      if (cloudDesc != null
          && cloudDescriptor.getCollectionName().equals(
          cloudDesc.getCollectionName())) {
        removeWatch = false;
        break;
      }
    }
    if (removeWatch) zkStateReader.removeZKWatch(collection);
    ZkNodeProps m = new ZkNodeProps(Overseer.QUEUE_OPERATION,
        OverseerAction.DELETECORE.toLower(), ZkStateReader.CORE_NAME_PROP, coreName,
        ZkStateReader.NODE_NAME_PROP, getNodeName(),
        ZkStateReader.COLLECTION_PROP, cloudDescriptor.getCollectionName(),
        ZkStateReader.CORE_NODE_NAME_PROP, coreNodeName);
    overseerJobQueue.offer(ZkStateReader.toJSON(m));

    if (configLocation != null) {
      synchronized (confDirectoryListeners) {
        log.info("This conf directory is no more watched {0}", configLocation);
        confDirectoryListeners.remove(configLocation);
      }
    }
  }

