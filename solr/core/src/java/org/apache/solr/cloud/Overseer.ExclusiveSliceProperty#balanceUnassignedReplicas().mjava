    private void balanceUnassignedReplicas() {
      tmpMaxPropPerNode = origMaxPropPerNode; // A bit clumsy, but don't want to duplicate code.
      tmpModulo = origModulo;

      // Get the nodeName and shardName for the node that has the least room for this

      while (shardsNeedingHosts.size() > 0) {
        String nodeName = "";
        int minSize = Integer.MAX_VALUE;
        SliceReplica srToChange = null;
        for (String slice : shardsNeedingHosts) {
          for (Map.Entry<String, List<SliceReplica>> ent : nodesHostingReplicas.entrySet()) {
            // A little tricky. If we don't set this to something below, then it means all possible places to
            // put this property are full up, so just put it somewhere.
            if (srToChange == null && ent.getValue().size() > 0) {
              srToChange = ent.getValue().get(0);
            }
            ListIterator<SliceReplica> iter = ent.getValue().listIterator();
            while (iter.hasNext()) {
              SliceReplica sr = iter.next();
              if (StringUtils.equals(slice, sr.slice.getName()) == false) {
                continue;
              }
              if (nodesHostingProp.containsKey(ent.getKey()) == false) {
                nodesHostingProp.put(ent.getKey(), new ArrayList<SliceReplica>());
              }
              if (minSize > nodesHostingReplicas.get(ent.getKey()).size() && nodesHostingProp.get(ent.getKey()).size() < tmpMaxPropPerNode) {
                minSize = nodesHostingReplicas.get(ent.getKey()).size();
                srToChange = sr;
                nodeName = ent.getKey();
              }
            }
          }
        }
        // Now, you have a slice and node to put it on
        shardsNeedingHosts.remove(srToChange.slice.getName());
        if (nodesHostingProp.containsKey(nodeName) == false) {
          nodesHostingProp.put(nodeName, new ArrayList<SliceReplica>());
        }
        nodesHostingProp.get(nodeName).add(srToChange);
        adjustLimits(nodesHostingProp.get(nodeName));
        removeSliceAlreadyHostedFromPossibles(srToChange.slice.getName());
        addProp(srToChange.slice, srToChange.replica.getName());
      }
    }

