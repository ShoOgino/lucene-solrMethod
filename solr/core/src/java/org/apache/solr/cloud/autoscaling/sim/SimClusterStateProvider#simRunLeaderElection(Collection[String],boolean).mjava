  /**
   * Simulate running a shard leader election. This operation is a no-op if a leader already exists.
   * If a new leader is elected the cluster state is saved.
   * @param collections list of affected collections
   * @param saveClusterState if true then save cluster state regardless of changes.
   */
  private void simRunLeaderElection(Collection<String> collections, boolean saveClusterState) throws Exception {
    ensureNotClosed();
    if (saveClusterState) {
      lock.lockInterruptibly();
      try {
        collectionsStatesRef.set(null);
      } finally {
        lock.unlock();
      }
    }
    ClusterState state = getClusterState();
    state.forEachCollection(dc -> {
        if (!collections.contains(dc.getName())) {
          return;
        }
        dc.getSlices().forEach(s -> {
          if (log.isTraceEnabled()) {
            log.trace("-- submit leader election for {} / {}", dc.getName(), s.getName());
          }
            cloudManager.submit(() -> {
                simRunLeaderElection(dc.getName(), s.getName(), saveClusterState);
                return true;
              });
          });
      });
  }

