  @Override
  @SuppressWarnings({"rawtypes"})
  public SolrResponse request(SolrRequest req) throws IOException {
    try {
      // NOTE: we're doing 2 odd things here:
      // 1) rather then calling simHandleSolrRequest directly, we're submitting it to the
      //    executor service and immediately waiting on the Future.
      //    - This can introduce a delays if there are a lot of existing background tasks submitted
      // 2) we use simCloudManagerPool directly, instead of using the public submit() method
      //    - this is because there may be "user level" errors (ie: bad input) deliberately generated
      //      by the testcase.  we're going to immediately catch & re-throw any exceptions, so we don't
      //      need/want to be wrapped in a LoggingCallable w/getBackgroundTaskFailureCount() tracking
      Future<SolrResponse> rsp = simCloudManagerPool.submit(() -> simHandleSolrRequest(req));
      return rsp.get(120, TimeUnit.SECONDS); // longer then this and something is seriously wrong
    } catch (Exception e) {
      throw new IOException(e);
    }
  }

