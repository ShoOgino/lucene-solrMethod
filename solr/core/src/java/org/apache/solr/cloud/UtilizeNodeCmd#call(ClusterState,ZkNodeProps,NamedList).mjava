  @Override
  public void call(ClusterState state, ZkNodeProps message, NamedList results) throws Exception {
    ocmh.checkRequired(message, NODE);
    String nodeName = message.getStr(NODE);
    String async = message.getStr(ASYNC);
    AutoScalingConfig autoScalingConfig = ocmh.overseer.getSolrCloudManager().getDistribStateManager().getAutoScalingConfig();

    //first look for any violation that may use this replica
    List<ZkNodeProps> requests = new ArrayList<>();
    //first look for suggestions if any
    List<Suggester.SuggestionInfo> suggestions = PolicyHelper.getSuggestions(autoScalingConfig, ocmh.overseer.getSolrCloudManager());
    for (Suggester.SuggestionInfo suggestionInfo : suggestions) {
      log.info("op: " + suggestionInfo.getOperation());
      String coll = null;
      List<String> pieces = StrUtils.splitSmart(suggestionInfo.getOperation().getPath(), '/');
      if (pieces.size() > 1) {
        coll = pieces.get(2);
      } else {
        continue;
      }
      log.info("coll: " + coll);
      if (suggestionInfo.getOperation() instanceof V2Request) {
        String targetNode = (String) Utils.getObjectByPath(suggestionInfo.getOperation(), true, "command/move-replica/targetNode");
        if (Objects.equals(targetNode, nodeName)) {
          String replica = (String) Utils.getObjectByPath(suggestionInfo.getOperation(), true, "command/move-replica/replica");
          requests.add(new ZkNodeProps(COLLECTION_PROP, coll,
              CollectionParams.TARGET_NODE, targetNode,
              ASYNC, async,
              REPLICA_PROP, replica));
        }
      }
    }
    executeAll(requests);
    PolicyHelper.SessionWrapper sessionWrapper = PolicyHelper.getSession(ocmh.overseer.getSolrCloudManager());
    Policy.Session session =  sessionWrapper.get();
    for (; ; ) {
      Suggester suggester = session.getSuggester(MOVEREPLICA)
          .hint(Suggester.Hint.TARGET_NODE, nodeName);
      session = suggester.getSession();
      SolrRequest request = suggester.getSuggestion();
      if (request == null) break;
      requests.add(new ZkNodeProps(COLLECTION_PROP, request.getParams().get(COLLECTION_PROP),
          CollectionParams.TARGET_NODE, request.getParams().get(CollectionParams.TARGET_NODE),
          REPLICA_PROP, request.getParams().get(REPLICA_PROP),
          ASYNC, request.getParams().get(ASYNC)));
    }
    sessionWrapper.returnSession(session);
    try {
      executeAll(requests);
    } finally {
      sessionWrapper.release();
    }
  }

