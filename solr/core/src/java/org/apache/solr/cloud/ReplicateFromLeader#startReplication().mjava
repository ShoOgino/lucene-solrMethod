  public void startReplication() throws InterruptedException {
    try (SolrCore core = cc.getCore(coreName)) {
      if (core == null) {
        if (cc.isShutDown()) {
          return;
        } else {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "SolrCore not found:" + coreName + " in " + cc.getLoadedCoreNames());
        }
      }
      SolrConfig.UpdateHandlerInfo uinfo = core.getSolrConfig().getUpdateHandlerInfo();
      String pollIntervalStr = "00:00:03";
      if (uinfo.autoCommmitMaxTime != -1) {
        pollIntervalStr = toPollIntervalStr(uinfo.autoCommmitMaxTime/2);
      } else if (uinfo.autoSoftCommmitMaxTime != -1) {
        pollIntervalStr = toPollIntervalStr(uinfo.autoSoftCommmitMaxTime/2);
      }

      NamedList slaveConfig = new NamedList();
      slaveConfig.add("fetchFromLeader", true);
      slaveConfig.add("pollInterval", pollIntervalStr);
      NamedList replicationConfig = new NamedList();
      replicationConfig.add("slave", slaveConfig);

      String lastCommitVersion = getCommitVersion(core);
      if (lastCommitVersion != null) {
        lastVersion = Long.parseLong(lastCommitVersion);
      }

      replicationProcess = new ReplicationHandler();
      replicationProcess.setPollListener((solrCore, pollSuccess) -> {
        if (pollSuccess) {
          String commitVersion = getCommitVersion(core);
          if (commitVersion == null) return;
          if (Long.parseLong(commitVersion) == lastVersion) return;
          UpdateLog updateLog = solrCore.getUpdateHandler().getUpdateLog();
          SolrQueryRequest req = new LocalSolrQueryRequest(core,
              new ModifiableSolrParams());
          CommitUpdateCommand cuc = new CommitUpdateCommand(req, false);
          cuc.setVersion(Long.parseLong(commitVersion));
          updateLog.copyOverOldUpdates(cuc);
          lastVersion = Long.parseLong(commitVersion);
        }
      });
      replicationProcess.init(replicationConfig);
      replicationProcess.inform(core);
    }
  }

