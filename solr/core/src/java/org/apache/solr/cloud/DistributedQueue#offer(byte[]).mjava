  /**
   * Inserts data into queue.  Successfully calling this method does NOT guarantee
   * that the element will be immediately available in the in-memory queue. In particular,
   * calling this method on an empty queue will not necessarily cause {@link #poll()} to
   * return the offered element.  Use a blocking method if you must wait for the offered
   * element to become visible.
   */
  public void offer(byte[] data) throws KeeperException, InterruptedException {
    TimerContext time = stats.time(dir + "_offer");
    try {
      while (true) {
        try {
          // We don't need to explicitly set isDirty here; if there is a watcher, it will
          // see the update and set the bit itself; if there is no watcher we can defer
          // the update anyway.
          zookeeper.create(dir + "/" + PREFIX, data, CreateMode.PERSISTENT_SEQUENTIAL, true);
          return;
        } catch (KeeperException.NoNodeException e) {
          try {
            zookeeper.create(dir, new byte[0], CreateMode.PERSISTENT, true);
          } catch (KeeperException.NodeExistsException ne) {
            // someone created it
          }
        }
      }
    } finally {
      time.stop();
    }
  }

