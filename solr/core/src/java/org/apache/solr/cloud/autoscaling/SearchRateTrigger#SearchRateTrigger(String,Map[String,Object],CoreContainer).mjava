  public SearchRateTrigger(String name, Map<String, Object> properties, CoreContainer container) {
    super(TriggerEventType.SEARCHRATE, name, properties, container.getResourceLoader(), container.getZkController().getZkClient());
    this.timeSource = TimeSource.CURRENT_TIME;
    this.container = container;
    this.state.put("lastCollectionEvent", lastCollectionEvent);
    this.state.put("lastNodeEvent", lastNodeEvent);
    this.state.put("lastShardEvent", lastShardEvent);
    this.state.put("lastReplicaEvent", lastReplicaEvent);

    // parse config options
    collection = (String)properties.getOrDefault(AutoScalingParams.COLLECTION, Policy.ANY);
    shard = (String)properties.getOrDefault(AutoScalingParams.SHARD, Policy.ANY);
    if (collection.equals(Policy.ANY) && !shard.equals(Policy.ANY)) {
      throw new IllegalArgumentException("When 'shard' is other than #ANY collection name must be also other than #ANY");
    }
    node = (String)properties.getOrDefault(AutoScalingParams.NODE, Policy.ANY);
    handler = (String)properties.getOrDefault(AutoScalingParams.HANDLER, "/select");

    if (properties.get("rate") == null) {
      throw new IllegalArgumentException("No 'rate' specified in configuration");
    }
    String rateString = String.valueOf(properties.get("rate"));
    try {
      rate = Double.parseDouble(rateString);
    } catch (Exception e) {
      throw new IllegalArgumentException("Invalid 'rate' configuration value: '" + rateString + "'", e);
    }
  }

