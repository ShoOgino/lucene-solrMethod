  /**
   * Ensures that a searcher is registered for the given core and if not, waits until one is registered
   */
  private static void ensureRegisteredSearcher(SolrCore core) throws InterruptedException {
    if (!core.getSolrConfig().useColdSearcher) {
      RefCounted<SolrIndexSearcher> registeredSearcher = core.getRegisteredSearcher();
      if (registeredSearcher != null) {
        if (log.isDebugEnabled()) {
          log.debug("Found a registered searcher: {} for core: {}", registeredSearcher.get(), core);
        }
        registeredSearcher.decref();
      } else  {
        Future[] waitSearcher = new Future[1];
        if (log.isInfoEnabled()) {
          log.info("No registered searcher found for core: {}, waiting until a searcher is registered before publishing as active", core.getName());
        }
        final RTimer timer = new RTimer();
        RefCounted<SolrIndexSearcher> searcher = null;
        try {
          searcher = core.getSearcher(false, true, waitSearcher, true);
          boolean success = true;
          if (waitSearcher[0] != null)  {
            if (log.isDebugEnabled()) {
              log.debug("Waiting for first searcher of core {}, id: {} to be registered", core.getName(), core);
            }
            try {
              waitSearcher[0].get();
            } catch (ExecutionException e) {
              log.warn("Wait for a searcher to be registered for core {}, id: {} failed due to: {}", core.getName(), core, e, e);
              success = false;
            }
          }
          if (success)  {
            if (searcher == null) {
              // should never happen
              if (log.isDebugEnabled()) {
                log.debug("Did not find a searcher even after the future callback for core: {}, id: {}!!!", core.getName(), core);
              }
            } else  {
              if (log.isInfoEnabled()) {
                log.info("Found a registered searcher: {}, took: {} ms for core: {}, id: {}", searcher.get(), timer.getTime(), core.getName(), core);
              }
            }
          }
        } finally {
          if (searcher != null) {
            searcher.decref();
          }
        }
      }
      RefCounted<SolrIndexSearcher> newestSearcher = core.getNewestSearcher(false);
      if (newestSearcher != null) {
        if (log.isDebugEnabled()) {
          log.debug("Found newest searcher: {} for core: {}, id: {}", newestSearcher.get(), core.getName(), core);
        }
        newestSearcher.decref();
      }
    }
  }

