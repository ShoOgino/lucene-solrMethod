  /**
   * Saves the given asyncId in ZK as a persistent sequential node. This allows us to wait for the completion
   * of pending tasks from this event in {@link ScheduledTriggers}
   * before starting the actions of the next event.
   *
   * @return the path of the newly created node in ZooKeeper
   */
  private String saveAsyncId(DistribStateManager stateManager, TriggerEvent event, String asyncId) throws InterruptedException, AlreadyExistsException, IOException, KeeperException {
    String parentPath = ZkStateReader.SOLR_AUTOSCALING_TRIGGER_STATE_PATH + "/" + event.getSource() + "/" + getName();
    try {
      stateManager.makePath(parentPath);
    } catch (AlreadyExistsException e) {
      // ignore
    }
    return stateManager.createData(parentPath + "/" + PREFIX, Utils.toJSON(Collections.singletonMap("requestid", asyncId)), CreateMode.PERSISTENT_SEQUENTIAL);
  }

