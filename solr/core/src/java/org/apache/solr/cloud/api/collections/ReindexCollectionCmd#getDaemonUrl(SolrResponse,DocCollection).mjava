  // XXX see #waitForDaemon() for why we need this
  private String getDaemonUrl(SolrResponse rsp, DocCollection coll) {
    Map<String, Object> rs = (Map<String, Object>)rsp.getResponse().get("result-set");
    if (rs == null || rs.isEmpty()) {
      log.debug(" -- Missing daemon information in response: " + Utils.toJSONString(rsp));
    }
    List<Object> list = (List<Object>)rs.get("docs");
    if (list == null) {
      log.debug(" -- Missing daemon information in response: " + Utils.toJSONString(rsp));
      return null;
    }
    String replicaName = null;
    for (Object o : list) {
      Map<String, Object> map = (Map<String, Object>)o;
      String op = (String)map.get("DaemonOp");
      if (op == null) {
        continue;
      }
      String[] parts = op.split("\\s+");
      if (parts.length != 4) {
        log.debug(" -- Invalid daemon location info, expected 4 tokens: " + op);
        return null;
      }
      // check if it's plausible
      if (parts[3].contains("shard") && parts[3].contains("replica")) {
        replicaName = parts[3];
        break;
      } else {
        log.debug(" -- daemon location info likely invalid: " + op);
        return null;
      }
    }
    if (replicaName == null) {
      return null;
    }
    // build a baseUrl of the replica
    for (Replica r : coll.getReplicas()) {
      if (replicaName.equals(r.getCoreName())) {
        return r.getBaseUrl() + "/" + r.getCoreName();
      }
    }
    return null;
  }

