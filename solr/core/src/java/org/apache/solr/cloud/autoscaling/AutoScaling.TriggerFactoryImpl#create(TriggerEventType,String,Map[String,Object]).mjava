    @Override
    public synchronized Trigger create(TriggerEventType type, String name, Map<String, Object> props) throws TriggerValidationException {
      if (isClosed) {
        throw new AlreadyClosedException("TriggerFactory has already been closed, cannot create new triggers");
      }
      if (type == null) {
        throw new IllegalArgumentException("Trigger type must not be null");
      }
      if (name == null || name.isEmpty()) {
        throw new IllegalArgumentException("Trigger name must not be empty");
      }
      Trigger t;
      switch (type) {
        case NODEADDED:
          t = new NodeAddedTrigger(name);
          break;
        case NODELOST:
          t = new NodeLostTrigger(name);
        break;
        case SEARCHRATE:
          t = new SearchRateTrigger(name);
        break;
        case METRIC:
          t = new MetricTrigger(name);
        break;
        case SCHEDULED:
          t = new ScheduledTrigger(name);
        break;
        default:
          throw new IllegalArgumentException("Unknown event type: " + type + " in trigger: " + name);
      }
      t.configure(loader, cloudManager, props);
      return t;
    }

