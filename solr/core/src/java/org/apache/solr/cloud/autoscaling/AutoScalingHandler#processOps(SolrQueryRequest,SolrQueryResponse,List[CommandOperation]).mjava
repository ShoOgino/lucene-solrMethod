  public void processOps(SolrQueryRequest req, SolrQueryResponse rsp, List<CommandOperation> ops)
      throws KeeperException, InterruptedException, IOException {
    while (true) {
      AutoScalingConfig initialConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();
      AutoScalingConfig currentConfig = initialConfig;
      for (CommandOperation op : ops) {
        switch (op.name) {
          case CMD_SET_TRIGGER:
            currentConfig = handleSetTrigger(req, rsp, op, currentConfig);
            break;
          case CMD_REMOVE_TRIGGER:
            currentConfig = handleRemoveTrigger(req, rsp, op, currentConfig);
            break;
          case CMD_SET_LISTENER:
            currentConfig = handleSetListener(req, rsp, op, currentConfig);
            break;
          case CMD_REMOVE_LISTENER:
            currentConfig = handleRemoveListener(req, rsp, op, currentConfig);
            break;
          case CMD_SUSPEND_TRIGGER:
            currentConfig = handleSuspendTrigger(req, rsp, op, currentConfig);
            break;
          case CMD_RESUME_TRIGGER:
            currentConfig = handleResumeTrigger(req, rsp, op, currentConfig);
            break;
          case CMD_SET_POLICY:
            currentConfig = handleSetPolicies(req, rsp, op, currentConfig);
            break;
          case CMD_REMOVE_POLICY:
            currentConfig = handleRemovePolicy(req, rsp, op, currentConfig);
            break;
          case CMD_SET_CLUSTER_PREFERENCES:
            currentConfig = handleSetClusterPreferences(req, rsp, op, currentConfig);
            break;
          case CMD_SET_CLUSTER_POLICY:
            currentConfig = handleSetClusterPolicy(req, rsp, op, currentConfig);
            break;
          case CMD_SET_PROPERTIES:
            currentConfig = handleSetProperties(req, rsp, op, currentConfig);
            break;
          default:
            op.addError("Unknown command: " + op.name);
        }
      }
      List errs = CommandOperation.captureErrors(ops);
      if (!errs.isEmpty()) {
        throw new ApiBag.ExceptionWithErrObject(SolrException.ErrorCode.BAD_REQUEST, "Error in command payload", errs);
      }

      if (!currentConfig.equals(initialConfig)) {
        // update in ZK
        if (setAutoScalingConfig(currentConfig)) {
          break;
        } else {
          // someone else updated the config, get the latest one and re-apply our ops
          rsp.getValues().add("retry", "initialVersion=" + initialConfig.getZkVersion());
          continue;
        }
      } else {
        // no changes
        break;
      }
    }
    rsp.getValues().add("result", "success");
  }

