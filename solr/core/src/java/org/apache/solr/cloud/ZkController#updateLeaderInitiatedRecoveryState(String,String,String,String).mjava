  private void updateLeaderInitiatedRecoveryState(String collection, String shardId, String coreNodeName, String state) {
    if (collection == null || shardId == null || coreNodeName == null) {
      log.warn("Cannot set leader-initiated recovery state znode to "+state+" using: collection="+collection+
          "; shardId="+shardId+"; coreNodeName="+coreNodeName);
      return; // if we don't have complete data about a core in cloud mode, do nothing
    }

    String znodePath = getLeaderInitiatedRecoveryZnodePath(collection, shardId, coreNodeName);
    
    if (ZkStateReader.ACTIVE.equals(state)) {
      // since we're marking it active, we don't need this znode anymore, so delete instead of update
      try {
        zkClient.delete(znodePath, -1, false);
      } catch (Exception justLogIt) {
        log.warn("Failed to delete znode "+znodePath+" due to: "+justLogIt);
      }
      return;
    }

    Map<String,Object> stateObj = null;
    try {
      stateObj = getLeaderInitiatedRecoveryStateObject(collection, shardId, coreNodeName);
    } catch (Exception exc) {
      log.warn(exc.getMessage(), exc);
    }
    if (stateObj == null)
      stateObj = ZkNodeProps.makeMap();

    stateObj.put("state", state);
    // only update the createdBy value if it's not set
    if (stateObj.get("createdByNodeName") == null)
      stateObj.put("createdByNodeName", String.valueOf(this.nodeName));

    byte[] znodeData = ZkStateReader.toJSON(stateObj);
    boolean retryOnConnLoss = true; // be a little more robust when trying to write data
    try {
      if (zkClient.exists(znodePath, retryOnConnLoss)) {
        zkClient.setData(znodePath, znodeData, retryOnConnLoss);
      } else {
        zkClient.makePath(znodePath, znodeData, retryOnConnLoss);
      }
      log.info("Wrote "+state+" to "+znodePath);
    } catch (Exception exc) {
      if (exc instanceof SolrException) {
        throw (SolrException)exc;
      } else {
        throw new SolrException(ErrorCode.SERVER_ERROR, 
            "Failed to update data to "+state+" for znode: "+znodePath, exc);        
      }
    }
  }

