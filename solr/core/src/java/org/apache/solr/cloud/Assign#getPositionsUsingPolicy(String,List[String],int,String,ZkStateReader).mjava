  public static Map<ReplicaAssigner.Position, String> getPositionsUsingPolicy(String collName, List<String> shardNames, int numReplicas,
                                                                              String policyName, ZkStateReader zkStateReader) throws KeeperException, InterruptedException {
    try (CloudSolrClient csc = new CloudSolrClient.Builder()
        .withClusterStateProvider(new ZkClientClusterStateProvider(zkStateReader))
        .build()) {
      SolrClientDataProvider clientDataProvider = new SolrClientDataProvider(csc);
      Map<String, List<String>> locations = PolicyHelper.getReplicaLocations(collName,
          zkStateReader.getZkClient().getJson(SOLR_AUTOSCALING_CONF_PATH, true),
          clientDataProvider, singletonMap(collName, policyName), shardNames, numReplicas);
      Map<ReplicaAssigner.Position, String> result = new HashMap<>();
      for (Map.Entry<String, List<String>> e : locations.entrySet()) {
        List<String> value = e.getValue();
        for (int i = 0; i < value.size(); i++) {
          result.put(new ReplicaAssigner.Position(e.getKey(), i, Replica.Type.NRT), value.get(i));
        }
      }
      return result;
    } catch (IOException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Error closing CloudSolrClient",e);
    }
  }

