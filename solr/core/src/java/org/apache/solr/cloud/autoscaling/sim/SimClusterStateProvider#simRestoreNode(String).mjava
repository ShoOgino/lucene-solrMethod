  /**
   * Restore a previously removed node. This also simulates a short replica recovery state.
   * @param nodeId node id to restore
   * @return true when this operation restored any replicas, false otherwise (empty node).
   */
  public boolean simRestoreNode(String nodeId) throws Exception {
    liveNodes.add(nodeId);
    createEphemeralLiveNode(nodeId);
    Set<String> collections = new HashSet<>();
    
    lock.lockInterruptibly();
    try {
      setReplicaStates(nodeId, Replica.State.RECOVERING, collections);
    } finally {
      lock.unlock();
    }
    
    cloudManager.getTimeSource().sleep(1000);
    
    lock.lockInterruptibly();
    try {
      setReplicaStates(nodeId, Replica.State.ACTIVE, collections);
      if (!collections.isEmpty()) {
        collections.forEach(c -> collectionsStatesRef.get(c).invalidate());
        simRunLeaderElection(collections, true);
        return true;
      } else {
        return false;
      }
    } finally {
      lock.unlock();
    }
  }

