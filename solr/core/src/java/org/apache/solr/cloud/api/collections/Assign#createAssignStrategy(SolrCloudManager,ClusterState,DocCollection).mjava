  /**
   * Creates the appropriate instance of {@link AssignStrategy} based on how the cluster and/or individual collections are
   * configured.
   */
  public static AssignStrategy createAssignStrategy(SolrCloudManager solrCloudManager, ClusterState clusterState, DocCollection collection) {
    PlacementPlugin plugin = PlacementPluginConfigImpl.getPlacementPlugin(solrCloudManager);

    if (plugin != null) {
      // If a cluster wide placement plugin is configured (and that's the only way to define a placement plugin), it overrides
      // per collection configuration (i.e. rules are ignored)
      return new PlacementPluginAssignStrategy(collection, plugin);
    } else {
      @SuppressWarnings({"unchecked", "rawtypes"})
      List<Map> ruleMaps = (List<Map>) collection.get(DocCollection.RULE);

      if (ruleMaps != null && !ruleMaps.isEmpty()) {
        List<Rule> rules = new ArrayList<>();
        for (Object map : ruleMaps) rules.add(new Rule((Map) map));
        @SuppressWarnings({"rawtypes"})
        List snitches = (List) collection.get(SNITCH);
        return new RulesBasedAssignStrategy(rules, snitches, clusterState);
      } else {
        return new LegacyAssignStrategy();
      }
    }
  }

