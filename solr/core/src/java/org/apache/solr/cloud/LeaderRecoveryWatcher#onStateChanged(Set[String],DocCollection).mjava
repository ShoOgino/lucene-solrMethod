  @Override
  public boolean onStateChanged(Set<String> liveNodes, DocCollection collectionState) {
    if (collectionState == null) { // collection has been deleted - don't wait
      latch.countDown();
      return true;
    }
    Slice slice = collectionState.getSlice(shardId);
    if (slice == null) { // shard has been removed - don't wait
      latch.countDown();
      return true;
    }
    for (Replica replica : slice.getReplicas()) {
      // check if another replica exists - doesn't have to be the one we're moving
      // as long as it's active and can become a leader, in which case we don't have to wait
      // for recovery of specifically the one that we've just added
      if (!replica.getName().equals(replicaId)) {
        if (replica.getType().equals(Replica.Type.PULL)) { // not eligible for leader election
          continue;
        }
        // check its state
        String coreName = replica.getStr(ZkStateReader.CORE_NAME_PROP);
        if (targetCore != null && !targetCore.equals(coreName)) {
          continue;
        }
        if (replica.isActive(liveNodes)) { // recovered - stop waiting
          latch.countDown();
          return true;
        }
      }
    }
    // set the watch again to wait for the new replica to recover
    return false;
  }

