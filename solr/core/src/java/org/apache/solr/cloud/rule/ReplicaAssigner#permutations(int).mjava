  /**
   * get all permutations for the int[] whose items are 0..level
   */
  public static Iterator<int[]> permutations(final int level) {
    return new Iterator<int[]>() {
      int i = 0;
      int[] next;

      @Override
      public boolean hasNext() {
        AtomicReference<int[]> nthval = new AtomicReference<>();
        permute(0, new int[level], new BitSet(level), nthval, i, new AtomicInteger());
        i++;
        next = nthval.get();
        return next != null;
      }

      @Override
      public int[] next() {
        return next;
      }
    };

  }

