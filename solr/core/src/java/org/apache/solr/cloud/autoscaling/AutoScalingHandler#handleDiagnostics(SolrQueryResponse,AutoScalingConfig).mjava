  private void handleDiagnostics(SolrQueryResponse rsp, AutoScalingConfig autoScalingConf) throws IOException {
    Policy policy = autoScalingConf.getPolicy();
    try (CloudSolrClient build = new CloudSolrClient.Builder()
        .withHttpClient(container.getUpdateShardHandler().getHttpClient())
        .withZkHost(container.getZkController().getZkServerAddress()).build()) {
      DistributedQueueFactory queueFactory = new ZkDistributedQueueFactory(container.getZkController().getZkClient());
      Policy.Session session = policy.createSession(new SolrClientCloudManager(queueFactory, build));
      List<Row> sorted = session.getSorted();
      List<Clause.Violation> violations = session.getViolations();

      List<Preference> clusterPreferences = policy.getClusterPreferences();

      List<Map<String, Object>> sortedNodes = new ArrayList<>(sorted.size());
      for (Row row : sorted) {
        Map<String, Object> map = Utils.makeMap("node", row.node);
        for (Cell cell : row.getCells()) {
          for (Preference clusterPreference : clusterPreferences) {
            Policy.SortParam name = clusterPreference.getName();
            if (cell.getName().equalsIgnoreCase(name.name())) {
              map.put(name.name(), cell.getValue());
              break;
            }
          }
        }
        sortedNodes.add(map);
      }

      Map<String, Object> map = new HashMap<>(2);
      map.put("sortedNodes", sortedNodes);

      map.put("violations", violations);
      rsp.getValues().add("diagnostics", map);
    }
  }

