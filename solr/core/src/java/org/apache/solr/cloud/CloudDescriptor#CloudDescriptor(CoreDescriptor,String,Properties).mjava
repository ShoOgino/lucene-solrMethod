  public CloudDescriptor(CoreDescriptor cd, String coreName, Properties props) {
    this.cd = cd;
    this.shardId = props.getProperty(CoreDescriptor.CORE_SHARD, null);
    if (Strings.isNullOrEmpty(shardId))
      this.shardId = null;
    // If no collection name is specified, we default to the core name
    this.collectionName = props.getProperty(CoreDescriptor.CORE_COLLECTION, coreName);
    this.roles = props.getProperty(CoreDescriptor.CORE_ROLES, null);
    this.nodeName = props.getProperty(CoreDescriptor.CORE_NODE_NAME);
    if (Strings.isNullOrEmpty(nodeName))
      this.nodeName = null;
    this.numShards = PropertiesUtil.toInteger(props.getProperty(CloudDescriptor.NUM_SHARDS), null);
    String replicaTypeStr = props.getProperty(CloudDescriptor.REPLICA_TYPE);
    if (Strings.isNullOrEmpty(replicaTypeStr)) {
      this.replicaType = Replica.Type.NRT;
    } else {
      this.replicaType = Replica.Type.valueOf(replicaTypeStr);
    }
    for (String propName : props.stringPropertyNames()) {
      if (propName.startsWith(ZkController.COLLECTION_PARAM_PREFIX)) {
        collectionParams.put(propName.substring(ZkController.COLLECTION_PARAM_PREFIX.length()), props.getProperty(propName));
      }
    }
  }

