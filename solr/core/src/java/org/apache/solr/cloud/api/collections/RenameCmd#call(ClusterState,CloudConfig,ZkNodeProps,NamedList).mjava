  @Override
  public void call(ClusterState state, CloudConfig cloudConfig, ZkNodeProps message, @SuppressWarnings({"rawtypes"})NamedList results) throws Exception {
    String extCollectionName = message.getStr(CoreAdminParams.NAME);
    String target = message.getStr(CollectionAdminParams.TARGET);

    if (ocmh.zkStateReader.aliasesManager != null) { // not a mock ZkStateReader
      ocmh.zkStateReader.aliasesManager.update();
    }

    if (extCollectionName == null || target == null) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "both collection 'name' and 'target' name must be specified");
    }
    Aliases aliases = ocmh.zkStateReader.getAliases();

    boolean followAliases = message.getBool(FOLLOW_ALIASES, false);
    String collectionName;
    if (followAliases) {
      collectionName = aliases.resolveSimpleAlias(extCollectionName);
    } else {
      collectionName = extCollectionName;
    }
    if (!state.hasCollection(collectionName)) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "source collection '" + collectionName + "' not found.");
    }
    if (ocmh.zkStateReader.getAliases().hasAlias(target)) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "target alias '" + target + "' exists: "
          + ocmh.zkStateReader.getAliases().getCollectionAliasListMap().get(target));
    }

    ocmh.zkStateReader.aliasesManager.applyModificationAndExportToZk(a -> a.cloneWithRename(extCollectionName, target));
  }

