  /**
   * Create as many collections as required. This method loops to allow for the possibility that the route value
   * requires more than one collection to be created. Since multiple threads may be invoking maintain on separate
   * requests to the same alias, we must pass in a descriptor that details what collection is to be created.
   * This assumption is checked when the command is executed in the overseer. When this method
   * finds that all collections required have been created it returns the (possibly new) destination collection
   * for the document that caused the creation cycle.
   *
   * @param cmd                  the update command being processed
   * @param targetCollectionDesc the descriptor for the presently selected collection .
   * @return The destination collection, possibly created during this method's execution
   */
  private String createAllRequiredCollections(AddUpdateCommand cmd, CandidateCollection targetCollectionDesc) {

    SolrQueryRequest req = cmd.getReq();
    SolrCore core = req.getCore();
    CoreContainer coreContainer = core.getCoreContainer();
    do {
      switch (targetCollectionDesc.getCreationType()) {
        case NONE:
          return targetCollectionDesc.destinationCollection; // we don't need another collection
        case SYNCHRONOUS:
          targetCollectionDesc = doSynchronous( cmd, targetCollectionDesc, coreContainer);
          break;
        case ASYNC_PREEMPTIVE:
          return doPreemptive(targetCollectionDesc, core, coreContainer);
        default:
          throw unknownCreateType();
      }
    } while (true);
  }

