  private void callCreateRoutedAlias(ZkNodeProps message, String aliasName, ZkStateReader zkStateReader, ClusterState state) throws Exception {
    // Validate we got everything we need
    if (!message.getProperties().keySet().containsAll(TimeRoutedAlias.REQUIRED_ROUTER_PARAMS)) {
      throw new SolrException(BAD_REQUEST, "A routed alias requires these params: " + TimeRoutedAlias.REQUIRED_ROUTER_PARAMS
      + " plus some create-collection prefixed ones.");
    }

    Map<String, String> aliasProperties = new LinkedHashMap<>();
    message.getProperties().entrySet().stream()
        .filter(entry -> TimeRoutedAlias.PARAM_IS_PROP.test(entry.getKey()))
        .forEach(entry -> aliasProperties.put(entry.getKey(), (String) entry.getValue())); // way easier than .collect

    TimeRoutedAlias timeRoutedAlias = new TimeRoutedAlias(aliasName, aliasProperties); // validates as well

    String start = message.getStr(TimeRoutedAlias.ROUTER_START);
    Instant startTime = parseStart(start, timeRoutedAlias.getTimeZone());

    String initialCollectionName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, startTime);

    // Create the collection
    MaintainRoutedAliasCmd.createCollectionAndWait(state, aliasName, aliasProperties, initialCollectionName, ocmh);
    validateAllCollectionsExistAndNoDups(Collections.singletonList(initialCollectionName), zkStateReader);

    // Create/update the alias
    zkStateReader.aliasesManager.applyModificationAndExportToZk(aliases -> aliases
        .cloneWithCollectionAlias(aliasName, initialCollectionName)
        .cloneWithCollectionAliasProperties(aliasName, aliasProperties));
  }

