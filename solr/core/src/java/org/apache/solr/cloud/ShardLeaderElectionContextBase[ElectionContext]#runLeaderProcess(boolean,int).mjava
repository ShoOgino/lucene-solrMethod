  @Override
  void runLeaderProcess(boolean weAreReplacement, int pauseBeforeStart)
      throws KeeperException, InterruptedException, IOException {
    // register as leader - if an ephemeral is already there, wait just a bit
    // to see if it goes away
    RetryUtil.retryOnThrowable(NodeExistsException.class, 15000, 1000,
        new RetryCmd() {
          
          @Override
          public void execute() throws InterruptedException {
            try {
              zkClient.makePath(leaderPath, ZkStateReader.toJSON(leaderProps),
                  CreateMode.EPHEMERAL, true);
            } catch (KeeperException e) {
              throw new SolrException(
                  ErrorCode.SERVER_ERROR,
                  "Could not register as the leader because creating the ephemeral registration node in ZooKeeper failed", e);
            }
          }
        });
    
    assert shardId != null;
    ZkNodeProps m = ZkNodeProps.fromKeyVals(Overseer.QUEUE_OPERATION,
        ZkStateReader.LEADER_PROP, ZkStateReader.SHARD_ID_PROP, shardId,
        ZkStateReader.COLLECTION_PROP, collection, ZkStateReader.BASE_URL_PROP,
        leaderProps.getProperties().get(ZkStateReader.BASE_URL_PROP),
        ZkStateReader.CORE_NAME_PROP,
        leaderProps.getProperties().get(ZkStateReader.CORE_NAME_PROP),
        ZkStateReader.STATE_PROP, ZkStateReader.ACTIVE);
    Overseer.getInQueue(zkClient).offer(ZkStateReader.toJSON(m));
  }

