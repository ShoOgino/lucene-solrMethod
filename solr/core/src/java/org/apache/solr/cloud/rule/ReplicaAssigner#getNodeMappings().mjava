  /**
   * For each shard return a new set of nodes where the replicas need to be created satisfying
   * the specified rule
   */
  public Map<Position, String> getNodeMappings() {
    List<String> shardNames = new ArrayList<>(shardVsReplicaCount.keySet());
    int[] shardOrder = new int[shardNames.size()];
    for (int i = 0; i < shardNames.size(); i++) shardOrder[i] = i;

    boolean hasFuzzyRules = false;
    int nonWildCardShardRules = 0;
    for (Rule r : rules) {
      if (r.isFuzzy()) hasFuzzyRules = true;
      if (!r.shard.isWildCard()) {
        nonWildCardShardRules++;
        //we will have to try all combinations
        if (shardNames.size() > 10) {
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
              "Max 10 shards allowed if there is a non wild card shard specified in rule");
        }
      }
    }

    Map<Position, String> result = tryAllPermutations(shardNames, shardOrder, nonWildCardShardRules, false);
    if (result == null && hasFuzzyRules) {
      result = tryAllPermutations(shardNames, shardOrder, nonWildCardShardRules, true);
    }
    return result;

  }

