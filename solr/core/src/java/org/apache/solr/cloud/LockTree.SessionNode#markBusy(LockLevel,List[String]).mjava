    /**
     * Marks busy the SessionNode corresponding to <code>lockLevel</code> (node names coming from <code>path</code>).
     * @param path contains at least <code>lockLevel.getHeight()</code> strings, capturing the names of the
     *             <code>SessionNode</code> being walked from the {@link Session#root} to the <code>SessionNode</code>
     *             that is to be marked busy.
     * @param lockLevel the level of the node that should be marked busy.
     */
    void markBusy(LockLevel lockLevel, List<String> path) {
      if (level == lockLevel) {
        // Lock is to be set on current node
        busy = true;
      } else {
        // Recursively create the required SessionNode subtree to capture lock being set on child node.
        String s = path.get(level.getHeight());
        if (kids == null) kids = new HashMap<>();
        SessionNode child = kids.get(s);
        if (child == null) kids.put(s, child = new SessionNode(level.getChild()));
        child.markBusy(lockLevel, path);
      }
    }

