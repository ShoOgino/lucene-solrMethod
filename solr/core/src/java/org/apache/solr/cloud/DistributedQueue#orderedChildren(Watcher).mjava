  /**
   * Returns a Map of the children, ordered by id.
   * 
   * @param watcher
   *          optional watcher on getChildren() operation.
   * @return map from id to child name for all children
   */
  private TreeMap<Long,String> orderedChildren(Watcher watcher)
      throws KeeperException, InterruptedException {
    TreeMap<Long,String> orderedChildren = new TreeMap<>();
    
    List<String> childNames = null;
    try {
      childNames = zookeeper.getChildren(dir, watcher, true);
    } catch (KeeperException.NoNodeException e) {
      throw e;
    }
    
    for (String childName : childNames) {
      try {
        // Check format
        if (!childName.regionMatches(0, prefix, 0, prefix.length())) {
          LOG.debug("Found child node with improper name: " + childName);
          continue;
        }
        String suffix = childName.substring(prefix.length());
        Long childId = new Long(suffix);
        orderedChildren.put(childId, childName);
      } catch (NumberFormatException e) {
        LOG.warn("Found child node with improper format : " + childName + " "
            + e, e);
      }
    }
    
    return orderedChildren;
  }

