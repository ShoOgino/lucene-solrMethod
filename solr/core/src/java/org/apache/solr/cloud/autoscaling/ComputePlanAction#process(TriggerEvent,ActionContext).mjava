  @Override
  public void process(TriggerEvent event, ActionContext context) {
    log.debug("-- processing event: {} with context properties: {}", event, context.getProperties());
    ClusterDataProvider cdp = context.getClusterDataProvider();
    try {
      AutoScalingConfig autoScalingConf = cdp.getAutoScalingConfig();
      if (autoScalingConf.isEmpty()) {
        log.error("Action: " + getName() + " executed but no policy is configured");
        return;
      }
      Policy policy = autoScalingConf.getPolicy();
      Policy.Session session = policy.createSession(cdp);
      Policy.Suggester suggester = getSuggester(session, event, cdp);
      while (true) {
        SolrRequest operation = suggester.getOperation();
        if (operation == null) break;
        log.info("Computed Plan: {}", operation.getParams());
        Map<String, Object> props = context.getProperties();
        props.compute("operations", (k, v) -> {
          List<SolrRequest> operations = (List<SolrRequest>) v;
          if (operations == null) operations = new ArrayList<>();
          operations.add(operation);
          return operations;
        });
        session = suggester.getSession();
        suggester = getSuggester(session, event, cdp);
      }
    } catch (IOException e) {
      log.error("IOException while processing event: " + event, e);
    } catch (Exception e) {
      log.error("Unexpected exception while processing event: " + event, e);
    }
  }

