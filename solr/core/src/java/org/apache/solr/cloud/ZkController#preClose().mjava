  public void preClose() {
    this.isClosed = true;

    try {
      this.removeEphemeralLiveNode();
    } catch (AlreadyClosedException | SessionExpiredException | KeeperException.ConnectionLossException e) {

    } catch (Exception e) {
      log.warn("Error removing live node. Continuing to close CoreContainer", e);
    }

    try {
      if (getZkClient().getConnectionManager().isConnected()) {
        log.info("Publish this node as DOWN...");
        publishNodeAsDown(getNodeName());
      }
    } catch (Exception e) {
      log.warn("Error publishing nodes as down. Continuing to close CoreContainer", e);
    }

    ExecutorService customThreadPool = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrNamedThreadFactory("preCloseThreadPool"));

    try {
      synchronized (collectionToTerms) {
        customThreadPool.submit(() -> collectionToTerms.values().parallelStream().forEach(ZkCollectionTerms::close));
      }

      customThreadPool.submit(() -> replicateFromLeaders.values().parallelStream().forEach(ReplicateFromLeader::stopReplication));
    } finally {
      ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);
    }
  }

