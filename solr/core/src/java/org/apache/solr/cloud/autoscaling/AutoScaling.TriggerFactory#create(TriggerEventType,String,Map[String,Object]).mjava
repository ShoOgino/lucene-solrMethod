    public synchronized Trigger create(TriggerEventType type, String name, Map<String, Object> props) {
      if (isClosed) {
        throw new AlreadyClosedException("TriggerFactory has already been closed, cannot create new triggers");
      }
      switch (type) {
        case NODEADDED:
          return new NodeAddedTrigger(name, props, coreContainer);
        case NODELOST:
          return new NodeLostTrigger(name, props, coreContainer);
        case SEARCHRATE:
          return new SearchRateTrigger(name, props, coreContainer);
        default:
          throw new IllegalArgumentException("Unknown event type: " + type + " in trigger: " + name);
      }
    }

