  private AutoScalingConfig handleRemovePolicy(SolrQueryRequest req, SolrQueryResponse rsp, CommandOperation op,
                                               AutoScalingConfig currentConfig) throws KeeperException, InterruptedException, IOException {
    String policyName = (String) op.getCommandData();

    if (policyName.trim().length() == 0) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "The policy name cannot be empty");
    }
    Map<String, List<Clause>> policies = currentConfig.getPolicy().getPolicies();
    if (policies == null || !policies.containsKey(policyName)) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "No policy exists with name: " + policyName);
    }
    container.getZkController().getZkStateReader().getClusterState().forEachCollection(coll -> {
      if (policyName.equals(coll.getPolicyName())) throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,
          StrUtils.formatString("policy : {0} is being used by collection {1}", policyName, coll.getName()));
    });

    policies = new HashMap<>(policies);
    policies.remove(policyName);
    Policy p = currentConfig.getPolicy().withPolicies(policies);
    currentConfig = currentConfig.withPolicy(p);
    return currentConfig;
  }

