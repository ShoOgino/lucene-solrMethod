      private ClusterState createCollection(ClusterState state, String collectionName, int numShards) {
        log.info("Create collection {} with numShards {}", collectionName, numShards);

        DocRouter router = DocRouter.DEFAULT;
        List<DocRouter.Range> ranges = router.partitionRange(numShards, router.fullRange());

        Map<String, DocCollection> newCollections = new LinkedHashMap<String,DocCollection>();


        Map<String, Slice> newSlices = new LinkedHashMap<String,Slice>();
        newCollections.putAll(state.getCollectionStates());
        for (int i = 0; i < numShards; i++) {
          final String sliceName = "shard" + (i+1);

          Map<String,Object> sliceProps = new LinkedHashMap<String,Object>(1);
          sliceProps.put(Slice.RANGE, ranges.get(i));

          newSlices.put(sliceName, new Slice(sliceName, null, sliceProps));
        }

        // TODO: fill in with collection properties read from the /collections/<collectionName> node
        Map<String,Object> collectionProps = defaultCollectionProps();

        DocCollection newCollection = new DocCollection(collectionName, newSlices, collectionProps, router);

        newCollections.put(collectionName, newCollection);
        ClusterState newClusterState = new ClusterState(state.getLiveNodes(), newCollections);
        return newClusterState;
      }

