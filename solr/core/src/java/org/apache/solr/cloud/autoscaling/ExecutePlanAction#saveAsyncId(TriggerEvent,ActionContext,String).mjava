  /**
   * Saves the given asyncId in ZK as a persistent sequential node.
   *
   * @return the path of the newly created node in ZooKeeper
   */
  private String saveAsyncId(TriggerEvent event, ActionContext context, String asyncId) throws InterruptedException, KeeperException {
    String parentPath = ZkStateReader.SOLR_AUTOSCALING_TRIGGER_STATE_PATH + "/" + context.getSource().getName() + "/" + getName();
    CoreContainer container = context.getCoreContainer();
    SolrZkClient zkClient = container.getZkController().getZkClient();
    try {
      zkClient.makePath(parentPath, new byte[0], CreateMode.PERSISTENT, true);
    } catch (KeeperException.NodeExistsException e) {
      // ignore
    }
    return zkClient.create(parentPath + "/" + PREFIX, Utils.toJSON(Collections.singletonMap("requestid", asyncId)), CreateMode.PERSISTENT_SEQUENTIAL, true);
  }

