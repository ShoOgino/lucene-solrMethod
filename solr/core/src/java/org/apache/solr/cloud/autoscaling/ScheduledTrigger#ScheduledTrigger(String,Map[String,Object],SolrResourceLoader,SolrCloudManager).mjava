  public ScheduledTrigger(String name, Map<String, Object> properties,
                          SolrResourceLoader loader, SolrCloudManager cloudManager) {
    super(TriggerEventType.SCHEDULED, name, properties, loader, cloudManager);

    String timeZoneStr = (String) properties.get("timeZone");
    this.timeZone = TimeZoneUtils.parseTimezone(timeZoneStr); // defaults to UTC

    String startTimeStr = (String) properties.get("startTime");
    this.everyStr = (String) properties.get("every");
    this.graceDurationStr = (String) properties.getOrDefault("graceDuration", DEFAULT_GRACE_DURATION);

    preferredOp = (String) properties.get(PREFERRED_OP);

    // attempt parsing to validate date math strings
    // explicitly set NOW because it may be different for simulated time
    Date now = new Date(TimeUnit.NANOSECONDS.toMillis(cloudManager.getTimeSource().getEpochTimeNs()));
    Instant startTime = parseStartTime(now, startTimeStr, timeZoneStr);
    DateMathParser.parseMath(now, startTime + everyStr, timeZone);
    DateMathParser.parseMath(now, startTime + graceDurationStr, timeZone);

    // We set lastRunAt to be the startTime (which could be a date math expression such as 'NOW')
    // Ordinarily, NOW will always be evaluated in this constructor so it may seem that
    // the trigger will always fire the first time.
    // However, the lastRunAt is overwritten with the value from ZK
    // during restoreState() operation (which is performed before run()) so the trigger works correctly
    this.lastRunAt = startTime;
  }

