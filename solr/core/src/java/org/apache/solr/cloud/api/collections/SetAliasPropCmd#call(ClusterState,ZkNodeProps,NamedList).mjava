  @Override
  public void call(ClusterState state, ZkNodeProps message, NamedList results) throws Exception {
    String aliasName = message.getStr(NAME);


    ZkStateReader zkStateReader = messageHandler.zkStateReader;
    if (zkStateReader.getAliases().getCollectionAliasMap().get(aliasName) == null) {
      // nicer than letting aliases object throw later on...
      throw new SolrException(BAD_REQUEST,
          String.format(Locale.ROOT,  "Can't modify non-existent alias %s", aliasName));
    }

    @SuppressWarnings("unchecked")
    Map<String, String> properties = (Map<String, String>) message.get(PROPERTIES);

    zkStateReader.aliasesManager.applyModificationAndExportToZk(aliases1 -> {
      for (Map.Entry<String, String> entry : properties.entrySet()) {
        String key = entry.getKey();
        if ("".equals(key.trim())) {
          throw new SolrException(BAD_REQUEST, "property keys must not be pure whitespace");
        }
        if (!key.equals(key.trim())) {
          throw new SolrException(BAD_REQUEST, "property keys should not begin or end with whitespace");
        }
        String value = entry.getValue();
        if ("".equals(value)) {
          value = null;
        }
        aliases1 = aliases1.cloneWithCollectionAliasProperties(aliasName, key, value);
      }
      return aliases1;
    });
  }

