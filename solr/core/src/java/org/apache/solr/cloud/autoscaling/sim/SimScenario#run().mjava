  /**
   * Run the scenario.
   */
  public void run() throws Exception {
    for (int i = 0; i < ops.size(); i++) {
      if (abortScenario) {
        log.info("-- abortScenario requested, aborting after " + i + " ops.");
        return;
      }
      SimOp op = ops.get(i);
      log.info((i + 1) + ".\t" + op.getClass().getSimpleName() + "\t" + op.initParams.toString());
      // substitute parameters based on the current context
      if (cluster != null && cluster.getLiveNodesSet().size() > 0) {
        context.put(LIVE_NODES_CTX_PROP, new ArrayList<>(cluster.getLiveNodesSet().get()));
        context.put(RANDOM_NODE_CTX_PROP, cluster.getSimClusterStateProvider().simGetRandomNode());
        context.put(COLLECTIONS_CTX_PROP, cluster.getSimClusterStateProvider().simListCollections());
        context.put(OVERSEER_LEADER_CTX_PROP, cluster.getSimClusterStateProvider().simGetOverseerLeader());
      } else {
        context.remove(LIVE_NODES_CTX_PROP);
        context.remove(COLLECTIONS_CTX_PROP);
        context.remove(RANDOM_NODE_CTX_PROP);
        context.remove(SUGGESTIONS_CTX_PROP);
        context.remove(OVERSEER_LEADER_CTX_PROP);
      }
      op.prepareCurrentParams(this);
      log.info("\t\t" + op.getClass().getSimpleName() + "\t" + op.params.toString());
      op.execute(this);
    }
  }

