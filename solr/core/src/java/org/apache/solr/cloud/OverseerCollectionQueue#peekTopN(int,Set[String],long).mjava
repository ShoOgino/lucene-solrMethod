  public List<QueueEvent> peekTopN(int n, Set<String> excludeSet, long waitMillis)
      throws KeeperException, InterruptedException {
    ArrayList<QueueEvent> topN = new ArrayList<>();

    LOG.debug("Peeking for top {} elements. ExcludeSet: {}", n, excludeSet);
    TimerContext time = null;
    if (waitMillis == Long.MAX_VALUE) time = stats.time(dir + "_peekTopN_wait_forever");
    else time = stats.time(dir + "_peekTopN_wait" + waitMillis);

    try {
      for (String headNode : getChildren(waitMillis)) {
        if (topN.size() < n) {
          try {
            String id = dir + "/" + headNode;
            if (excludeSet.contains(id)) continue;
            QueueEvent queueEvent = new QueueEvent(id,
                zookeeper.getData(dir + "/" + headNode, null, null, true), null);
            topN.add(queueEvent);
          } catch (KeeperException.NoNodeException e) {
            // Another client removed the node first, try next
          }
        } else {
          if (topN.size() >= 1) {
            printQueueEventsListElementIds(topN);
            return topN;
          }
        }
      }

      if (topN.size() > 0 ) {
        printQueueEventsListElementIds(topN);
        return topN;
      }
      return null;
    } finally {
      time.stop();
    }
  }

