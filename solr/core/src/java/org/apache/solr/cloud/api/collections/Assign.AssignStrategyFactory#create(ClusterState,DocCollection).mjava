    public AssignStrategy create(ClusterState clusterState, DocCollection collection) throws IOException, InterruptedException {
      @SuppressWarnings({"unchecked", "rawtypes"})
      List<Map> ruleMaps = (List<Map>) collection.get("rule");
      @SuppressWarnings({"rawtypes"})
      List snitches = (List) collection.get(SNITCH);

      Strategy strategy = null;
      if (ruleMaps != null && !ruleMaps.isEmpty()) {
        strategy = Strategy.RULES;
      } else {
        strategy = Strategy.LEGACY;        
      }
      
      switch (strategy) {
        case LEGACY:
          return new LegacyAssignStrategy();
        case RULES:
          List<Rule> rules = new ArrayList<>();
          for (Object map : ruleMaps) rules.add(new Rule((Map) map));
          return new RulesBasedAssignStrategy(rules, snitches, clusterState);
        default:
          throw new Assign.AssignmentException("Unknown strategy type: " + strategy);
      }
    }

