    public AssignStrategy create(ClusterState clusterState, DocCollection collection) throws IOException, InterruptedException {
      List<Map> ruleMaps = (List<Map>) collection.get("rule");
      String policyName = collection.getStr(POLICY);
      List snitches = (List) collection.get(SNITCH);

      Strategy strategy = null;
      if ((ruleMaps == null || ruleMaps.isEmpty()) && !usePolicyFramework(collection, solrCloudManager)) {
        strategy = Strategy.LEGACY;
      } else if (ruleMaps != null && !ruleMaps.isEmpty()) {
        strategy = Strategy.RULES;
      } else {
        strategy = Strategy.POLICY;
      }

      switch (strategy) {
        case LEGACY:
          return new LegacyAssignStrategy();
        case RULES:
          List<Rule> rules = new ArrayList<>();
          for (Object map : ruleMaps) rules.add(new Rule((Map) map));
          return new RulesBasedAssignStrategy(rules, snitches, clusterState);
        case POLICY:
          return new PolicyBasedAssignStrategy(policyName);
        default:
          throw new Assign.AssignmentException("Unknown strategy type: " + strategy);
      }
    }

