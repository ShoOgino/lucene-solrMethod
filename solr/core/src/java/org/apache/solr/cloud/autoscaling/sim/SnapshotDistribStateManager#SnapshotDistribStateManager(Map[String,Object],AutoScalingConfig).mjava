  /**
   * Populate this instance from a previously generated snapshot.
   * @param snapshot previous snapshot created using this class.
   * @param config optional config to override the one from snapshot, may be null
   */
  public SnapshotDistribStateManager(Map<String, Object> snapshot, AutoScalingConfig config) {
    snapshot.forEach((path, value) -> {
      @SuppressWarnings({"unchecked"})
      Map<String, Object> map = (Map<String, Object>)value;
      Number version = (Number)map.getOrDefault("version", 0);
      String owner = (String)map.get("owner");
      String modeStr = (String)map.getOrDefault("mode", CreateMode.PERSISTENT.toString());
      CreateMode mode = CreateMode.valueOf(modeStr);
      byte[] bytes = null;
      if (map.containsKey("data")) {
        bytes = Base64.base64ToByteArray((String)map.get("data"));
      }
      dataMap.put(path, new VersionedData(version.intValue(), bytes, mode, owner));
    });
    if (config != null) { // overwrite existing
      VersionedData vd = new VersionedData(config.getZkVersion(), Utils.toJSON(config), CreateMode.PERSISTENT, "0");
      dataMap.put(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH, vd);
    }
    if (log.isDebugEnabled()) {
      log.debug("- loaded snapshot of {} resources", dataMap.size());
    }
  }

