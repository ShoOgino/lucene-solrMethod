  @Override
  public void call(ClusterState state, ZkNodeProps message, NamedList results)
      throws Exception {
    String aliasName = message.getStr(NAME);
    String collections = message.getStr("collections");

    ZkStateReader zkStateReader = ocmh.zkStateReader;
    Map<String, String> prevColAliases = zkStateReader.getAliases().getCollectionAliasMap();
    validateAllCollectionsExist(collections, prevColAliases, zkStateReader.getClusterState());

    Map<String, Map<String, String>> newAliasesMap = new HashMap<>();
    Map<String, String> newCollectionAliasesMap = new HashMap<>();
    if (prevColAliases != null) {
      newCollectionAliasesMap.putAll(prevColAliases);
    }
    newCollectionAliasesMap.put(aliasName, collections);
    newAliasesMap.put("collection", newCollectionAliasesMap);
    Aliases newAliases = new Aliases(newAliasesMap);
    byte[] jsonBytes = null;
    if (newAliases.collectionAliasSize() > 0) { // only sub map right now
      jsonBytes = Utils.toJSON(newAliases.getAliasMap());
    }
    try {
      zkStateReader.getZkClient().setData(ZkStateReader.ALIASES, jsonBytes, true);

      checkForAlias(aliasName, collections);
      // some fudge for other nodes
      Thread.sleep(100);
    } catch (KeeperException e) {
      log.error("", e);
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
    } catch (InterruptedException e) {
      log.warn("", e);
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
    }
  }

