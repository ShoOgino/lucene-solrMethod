  @Override
  protected Suggester getSuggester(Policy.Session session, TriggerEvent event, SolrCloudManager cloudManager) {
    // for backward compatibility
    ClusterStateProvider stateProvider = cloudManager.getClusterStateProvider();
    String autoAddReplicas = stateProvider.getClusterProperty(ZkStateReader.AUTO_ADD_REPLICAS, (String) null);
    if (autoAddReplicas != null && autoAddReplicas.equals("false")) {
      return new NoneSuggester();
    }

    Suggester suggester = super.getSuggester(session, event, cloudManager);
    ClusterState clusterState;
    try {
      clusterState = stateProvider.getClusterState();
    } catch (IOException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Exception getting cluster state", e);
    }

    boolean anyCollections = false;
    for (DocCollection collection: clusterState.getCollectionsMap().values()) {
      if (collection.getAutoAddReplicas()) {
        anyCollections = true;
        suggester.hint(Suggester.Hint.COLL, collection.getName());
      }
    }

    if (!anyCollections) return new NoneSuggester();
    return suggester;
  }

