  private Runnable createAutoscalingTriggerIfNotExist() {
    return new Runnable() {
      @Override
      public void run() {
        try {
          boolean triggerExist = getZkStateReader().getAutoScalingConfig()
              .getTriggerConfigs().get(".auto_add_replicas") != null;
          if (triggerExist) return;
        } catch (InterruptedException | KeeperException e) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,
              "Failed when creating .auto_add_replicas trigger");
        }
        while (getZkController().getCoreContainer()
            .getRequestHandler(AutoScalingHandler.HANDLER_PATH) == null) {
          try {
            Thread.sleep(500);
          } catch (InterruptedException e) {
            // expected
          }
        }

        String dsl = AutoScaling.AUTO_ADD_REPLICAS_TRIGGER_DSL.replace("{{waitFor}}",
            String.valueOf(config.getAutoReplicaFailoverWaitAfterExpiration()/1000));
        LocalSolrQueryRequest request = new LocalSolrQueryRequest(null, new ModifiableSolrParams());
        request.getContext().put("httpMethod", "POST");
        request.setContentStreams(Collections.singleton(new ContentStreamBase.StringStream(dsl)));
        SolrQueryResponse response = new SolrQueryResponse();
        getZkController().getCoreContainer()
            .getRequestHandler(AutoScalingHandler.HANDLER_PATH).handleRequest(request, response);
        if (!"success".equals(response.getValues().get("result"))) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,
              "Failed when creating .auto_add_replicas trigger, return " + response);
        }
      }
    };
  }

