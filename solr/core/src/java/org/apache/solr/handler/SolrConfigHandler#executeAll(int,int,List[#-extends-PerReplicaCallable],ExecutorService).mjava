  public static List<String> executeAll(int expectedVersion, int maxWaitSecs, List<? extends PerReplicaCallable> concurrentTasks, ExecutorService parallelExecutor) throws InterruptedException {
    List<Future<Boolean>> results =
        parallelExecutor.invokeAll(concurrentTasks, maxWaitSecs, TimeUnit.SECONDS);

    // determine whether all replicas have the update
    List<String> failedList = null; // lazily init'd
    for (int f = 0; f < results.size(); f++) {
      Boolean success = false;
      Future<Boolean> next = results.get(f);
      if (next.isDone() && !next.isCancelled()) {
        // looks to have finished, but need to check if it succeeded
        try {
          success = next.get();
        } catch (ExecutionException e) {
          // shouldn't happen since we checked isCancelled
        }
      }

      if (!success) {
        String coreUrl = concurrentTasks.get(f).coreUrl;
        log.warn("Core " + coreUrl + "could not get the expected version " + expectedVersion);
        if (failedList == null) failedList = new ArrayList<>();
        failedList.add(coreUrl);
      }
    }
    return failedList;
  }

