    private String translateMatch2(RexNode node) {
      Pair<String, RexLiteral> binaryTranslated = null;
      if (((RexCall) node).getOperands().size() == 2) {
        binaryTranslated = translateBinary((RexCall) node);
      }

      switch (node.getKind()) {
        case NOT:
          return "-"+translateMatch2(((RexCall) node).getOperands().get(0));
        case EQUALS:
          return binaryTranslated.getKey() + ":" + binaryTranslated.getValue().getValue2();
        case NOT_EQUALS:
          return "-" + binaryTranslated.getKey() + ":" + binaryTranslated.getValue().getValue2();
        case LESS_THAN:
          return binaryTranslated.getKey() + ": [ * TO " + binaryTranslated.getValue().getValue2() + " }";
        case LESS_THAN_OR_EQUAL:
          return binaryTranslated.getKey() + ": [ * TO " + binaryTranslated.getValue().getValue2() + " ]";
        case GREATER_THAN:
          return binaryTranslated.getKey() + ": { " + binaryTranslated.getValue().getValue2() + " TO * ]";
        case GREATER_THAN_OR_EQUAL:
          return binaryTranslated.getKey() + ": [ " + binaryTranslated.getValue().getValue2() + " TO * ]";
        default:
          throw new AssertionError("cannot translate " + node);
      }
    }

