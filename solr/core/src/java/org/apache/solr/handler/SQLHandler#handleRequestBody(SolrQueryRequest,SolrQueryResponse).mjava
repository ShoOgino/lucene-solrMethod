  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception {
    SolrParams params = req.getParams();
    params = adjustParams(params);
    req.setParams(params);
    String sql = params.get("stmt");

    TupleStream tupleStream = null;
    try {
      if(sql == null) {
        throw new Exception("stmt parameter cannot be null");
      }

      Properties info = new Properties();
      info.setProperty("model",
          "inline:{\n" +
              "  \"version\": \"1.0\",\n" +
              "  \"defaultSchema\": \"" + defaultZkhost + "\",\n" +
              "  \"schemas\": [\n" +
              "    {\n" +
              "      \"name\": \"" + defaultZkhost + "\",\n" +
              "      \"type\": \"custom\",\n" +
              "      \"factory\": \"" + SolrSchemaFactory.class.getName() + "\",\n" +
              "      \"operand\": {\n" +
              "        \"zk\": \"" + defaultZkhost + "\"\n" +
              "      }\n" +
              "    }\n" +
              "  ]\n" +
              "}");
      info.setProperty("lex", "MYSQL");

      tupleStream = new StreamHandler.TimerStream(new ExceptionStream(
          new JDBCStream("jdbc:calcite:", sql, null, info, null)));

      rsp.add("result-set", tupleStream);
    } catch(Exception e) {
      //Catch the SQL parsing and query transformation exceptions.
      if(tupleStream != null) {
        tupleStream.close();
      }
      SolrException.log(logger, e);
      rsp.add("result-set", new StreamHandler.DummyErrorStream(e));
    }
  }

