  protected ReplicaListTransformer getReplicaListTransformer(final SolrQueryRequest req)
  {
    final SolrParams params = req.getParams();

    if (params.getBool(CommonParams.PREFER_LOCAL_SHARDS, false)) {
      final CoreDescriptor coreDescriptor = req.getCore().getCoreDescriptor();
      final ZkController zkController = coreDescriptor.getCoreContainer().getZkController();
      final String preferredHostAddress = (zkController != null) ? zkController.getBaseUrl() : null;
      if (preferredHostAddress == null) {
        log.warn("Couldn't determine current host address to prefer local shards");
      } else {
        return new ShufflingReplicaListTransformer(r) {
          @Override
          public void transform(List<?> choices)
          {
            if (choices.size() > 1) {
              super.transform(choices);
              if (log.isDebugEnabled()) {
                log.debug("Trying to prefer local shard on {} among the choices: {}",
                    preferredHostAddress, Arrays.toString(choices.toArray()));
              }
              choices.sort(new IsOnPreferredHostComparator(preferredHostAddress));
              if (log.isDebugEnabled()) {
                log.debug("Applied local shard preference for choices: {}",
                    Arrays.toString(choices.toArray()));
              }
            }
          }
        };
      }
    }

    return shufflingReplicaListTransformer;
  }

