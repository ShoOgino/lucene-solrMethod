  private TupleStream handleSelect(String zk,
                                   String collection,
                                   String query,
                                   List<Map.Entry<String, Class>> fields,
                                   List<Pair<String, String>> orders,
                                   String limit) throws IOException {

    ModifiableSolrParams params = new ModifiableSolrParams();
    params.add(CommonParams.Q, query);

    if(orders.size() > 0) {
      params.add(CommonParams.SORT, getSort(orders));
    } else {
      params.add(CommonParams.SORT, "_version_ desc");
    }

    if(fields.size() > 0) {
      params.add(CommonParams.FL, getFields(fields));
    }

    if (limit != null) {
      params.add(CommonParams.ROWS, limit);
      return new LimitStream(new CloudSolrStream(zk, collection, params), Integer.parseInt(limit));
    } else {
      params.add(CommonParams.QT, "/export");
      return new CloudSolrStream(zk, collection, params);
    }
  }

