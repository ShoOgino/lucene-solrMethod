    @Override
    public void processAdd(AddUpdateCommand cmd) throws IOException {
      SolrInputDocument doc = cmd.solrDoc;
      if (doc == null) {
        return;
      }
      String metricName = (String)doc.getFieldValue(MetricUtils.METRIC_NAME);
      if (metricName == null) {
        log.warn("Missing " + MetricUtils.METRIC_NAME + " field in document, skipping: " + doc);
        return;
      }
      doc.remove(MetricUtils.METRIC_NAME);
      // XXX we could modify keys by using this original registry name
      doc.remove(SolrReporter.REGISTRY_ID);
      String groupId = (String)doc.getFieldValue(SolrReporter.GROUP_ID);
      if (groupId == null) {
        log.warn("Missing " + SolrReporter.GROUP_ID + " field in document, skipping: " + doc);
        return;
      }
      doc.remove(SolrReporter.GROUP_ID);
      String reporterId = (String)doc.getFieldValue(SolrReporter.REPORTER_ID);
      if (reporterId == null) {
        log.warn("Missing " + SolrReporter.REPORTER_ID + " field in document, skipping: " + doc);
        return;
      }
      doc.remove(SolrReporter.REPORTER_ID);
      String labelId = (String)doc.getFieldValue(SolrReporter.LABEL_ID);
      doc.remove(SolrReporter.LABEL_ID);
      doc.forEach(f -> {
        String key = MetricRegistry.name(labelId, metricName, f.getName());
        MetricRegistry registry = metricManager.registry(groupId);
        AggregateMetric metric = getOrRegister(registry, key, new AggregateMetric());
        Object o = f.getFirstValue();
        if (o != null) {
          metric.set(reporterId, o);
        } else {
          // remove missing values
          metric.clear(reporterId);
        }
      });
    }

