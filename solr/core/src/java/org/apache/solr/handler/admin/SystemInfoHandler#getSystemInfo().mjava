  /**
   * Get system info
   */
  public static SimpleOrderedMap<Object> getSystemInfo() {
    SimpleOrderedMap<Object> info = new SimpleOrderedMap<>();
    
    OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();
    info.add(NAME, os.getName()); // add at least this one
    try {
      // add remaining ones dynamically using Java Beans API
      addMXBeanProperties(os, OperatingSystemMXBean.class, info);
    } catch (IntrospectionException | ReflectiveOperationException e) {
      log.warn("Unable to fetch properties of OperatingSystemMXBean.", e);
    }

    // There are some additional beans we want to add (not available on all JVMs):
    for (String clazz : Arrays.asList(
        "com.sun.management.OperatingSystemMXBean",
        "com.sun.management.UnixOperatingSystemMXBean", 
        "com.ibm.lang.management.OperatingSystemMXBean"
    )) {
      try {
        final Class<? extends PlatformManagedObject> intf = Class.forName(clazz)
            .asSubclass(PlatformManagedObject.class);
        addMXBeanProperties(os, intf, info);
      } catch (ClassNotFoundException e) {
        // ignore
      } catch (IntrospectionException | ReflectiveOperationException e) {
        log.warn("Unable to fetch properties of JVM-specific OperatingSystemMXBean.", e);
      }
    }

    // Try some command line things:
    try { 
      if (!Constants.WINDOWS) {
        info.add( "uname",  execute( "uname -a" ) );
        info.add( "uptime", execute( "uptime" ) );
      }
    } catch( Exception ex ) {
      log.warn("Unable to execute command line tools to get operating system properties.", ex);
    } 
    return info;
  }

