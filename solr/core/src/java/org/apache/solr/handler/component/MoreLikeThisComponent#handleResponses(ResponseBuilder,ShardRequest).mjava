  @Override
  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {
    if ((sreq.purpose & ShardRequest.PURPOSE_GET_TOP_IDS) != 0
        && rb.req.getParams().getBool(COMPONENT_NAME, false)) {
      if (log.isDebugEnabled()) {
        log.debug("ShardRequest.response.size: {}", sreq.responses.size());
      }
      for (ShardResponse r : sreq.responses) {
        if (r.getException() != null) {
          // This should only happen in case of using shards.tolerant=true. Omit this ShardResponse
          continue;
        }
        NamedList<?> moreLikeThisReponse = (NamedList<?>) r.getSolrResponse()
            .getResponse().get("moreLikeThis");
        if (log.isDebugEnabled()) {
          log.debug("ShardRequest.response.shard: {}", r.getShard());
        }
        if (moreLikeThisReponse != null) {
          for (Entry<String,?> entry : moreLikeThisReponse) {
            if (log.isDebugEnabled()) {
              log.debug("id: '{}' Query: '{}'", entry.getKey(), entry.getValue());
            }
            ShardRequest s = buildShardQuery(rb, (String) entry.getValue(),
                entry.getKey());
            rb.addRequest(this, s);
          }
        }
      }
    }
    
    if ((sreq.purpose & ShardRequest.PURPOSE_GET_MLT_RESULTS) != 0) {
      for (ShardResponse r : sreq.responses) {
        if (log.isDebugEnabled()) {
          log.debug("MLT Query returned: {}", r.getSolrResponse().getResponse());
        }
      }
    }
  }

