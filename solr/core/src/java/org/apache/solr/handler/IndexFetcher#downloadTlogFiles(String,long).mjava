  private long downloadTlogFiles(String timestamp, long latestGeneration) throws Exception {
    UpdateLog ulog = solrCore.getUpdateHandler().getUpdateLog();

    LOG.info("Starting download of tlog files from master: " + tlogFilesToDownload);
    tlogFilesDownloaded = Collections.synchronizedList(new ArrayList<Map<String, Object>>());
    long bytesDownloaded = 0;
    File tmpTlogDir = new File(ulog.getLogDir(), "tlog." + getDateAsStr(new Date()));
    try {
      boolean status = tmpTlogDir.mkdirs();
      if (!status) {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,
            "Failed to create temporary tlog folder: " + tmpTlogDir.getName());
      }
      for (Map<String, Object> file : tlogFilesToDownload) {
        String saveAs = (String) (file.get(ALIAS) == null ? file.get(NAME) : file.get(ALIAS));
        localFileFetcher = new LocalFsFileFetcher(tmpTlogDir, file, saveAs, TLOG_FILE, latestGeneration);
        currentFile = file;
        localFileFetcher.fetchFile();
        bytesDownloaded += localFileFetcher.getBytesDownloaded();
        tlogFilesDownloaded.add(new HashMap<>(file));
      }
      // this is called before copying the files to the original conf dir
      // so that if there is an exception avoid corrupting the original files.
      terminateAndWaitFsyncService();
      ((CdcrUpdateLog) ulog).reset(); // reset the update log before copying the new tlog directory
      copyTmpTlogFiles2Tlog(tmpTlogDir, timestamp);
      ulog.init(solrCore.getUpdateHandler(), solrCore); // re-initialise the update log with the new directory
    } finally {
      delTree(tmpTlogDir);
    }
    return bytesDownloaded;
  }

