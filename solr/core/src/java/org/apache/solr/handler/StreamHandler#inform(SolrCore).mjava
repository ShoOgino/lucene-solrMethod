  public void inform(SolrCore core) {
    String defaultCollection;
    String defaultZkhost;
    CoreContainer coreContainer = core.getCoreContainer();
    this.solrClientCache = coreContainer.getSolrClientCache();
    this.coreName = core.getName();
    String cacheKey = this.getClass().getName() + "_" + coreName + "_";
    this.objectCache = coreContainer.getObjectCache().computeIfAbsent(cacheKey + "objectCache",
        ConcurrentHashMap.class, k-> new ConcurrentHashMap());
    if (coreContainer.isZooKeeperAware()) {
      defaultCollection = core.getCoreDescriptor().getCollectionName();
      defaultZkhost = core.getCoreContainer().getZkController().getZkServerAddress();
      streamFactory.withCollectionZkHost(defaultCollection, defaultZkhost);
      streamFactory.withDefaultZkHost(defaultZkhost);
      modelCache = coreContainer.getObjectCache().computeIfAbsent(cacheKey + "modelCache",
          ModelCache.class,
          k -> new ModelCache(250, defaultZkhost, solrClientCache));
    }
    streamFactory.withSolrResourceLoader(core.getResourceLoader());

    // This pulls all the overrides and additions from the config
    addExpressiblePlugins(streamFactory, core);
  }

