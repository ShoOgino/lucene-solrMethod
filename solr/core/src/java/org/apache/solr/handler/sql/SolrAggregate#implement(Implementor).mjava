  public void implement(Implementor implementor) {
    implementor.visitChild(0, getInput());

    final List<String> inNames = SolrRules.solrFieldNames(getInput().getRowType());


    for(Pair<AggregateCall, String> namedAggCall : getNamedAggCalls()) {


      AggregateCall aggCall = namedAggCall.getKey();

      Pair<String, String> metric = toSolrMetric(implementor, aggCall, inNames);
      implementor.addReverseAggMapping(namedAggCall.getValue(), metric.getKey().toLowerCase(Locale.ROOT)+"("+metric.getValue()+")");
      implementor.addMetricPair(namedAggCall.getValue(), metric.getKey(), metric.getValue());
      if(aggCall.getName() == null) {
        implementor.addFieldMapping(namedAggCall.getValue(),
            aggCall.getAggregation().getName() + "(" + inNames.get(aggCall.getArgList().get(0)) + ")");
      }
    }

    for(int group : getGroupSet()) {
      String inName = inNames.get(group);
      implementor.addBucket(inName);
    }
  }

