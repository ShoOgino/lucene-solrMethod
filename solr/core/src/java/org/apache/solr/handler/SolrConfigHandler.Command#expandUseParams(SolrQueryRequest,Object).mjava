    @SuppressWarnings({"unchecked"})
    private Map<String, Object> expandUseParams(SolrQueryRequest req,
                                                Object plugin) {

      Map<String, Object> pluginInfo = null;
      if (plugin instanceof Map) {
        pluginInfo = (Map) plugin;
      } else if (plugin instanceof PluginInfo) {
        pluginInfo = ((PluginInfo) plugin).toMap(new LinkedHashMap<>());
      }
      @SuppressWarnings({"rawtypes"})
      String useParams = (String) pluginInfo.get(USEPARAM);
      String useParamsInReq = req.getOriginalParams().get(USEPARAM);
      if (useParams != null || useParamsInReq != null) {
        @SuppressWarnings({"rawtypes"})
        Map m = new LinkedHashMap<>();
        pluginInfo.put("_useParamsExpanded_", m);
        List<String> params = new ArrayList<>();
        if (useParams != null) params.addAll(StrUtils.splitSmart(useParams, ','));
        if (useParamsInReq != null) params.addAll(StrUtils.splitSmart(useParamsInReq, ','));
        for (String param : params) {
          RequestParams.ParamSet p = this.req.getCore().getSolrConfig().getRequestParams().getParams(param);
          if (p != null) {
            m.put(param, p);
          } else {
            m.put(param, "[NOT AVAILABLE]");
          }
        }


        LocalSolrQueryRequest r = new LocalSolrQueryRequest(req.getCore(), req.getOriginalParams());
        r.getContext().put(USEPARAM, useParams);
        @SuppressWarnings({"rawtypes"})
        NamedList nl = new PluginInfo(SolrRequestHandler.TYPE, pluginInfo).initArgs;
        SolrPluginUtils.setDefaults(r,
            getSolrParamsFromNamedList(nl, DEFAULTS),
            getSolrParamsFromNamedList(nl, APPENDS),
            getSolrParamsFromNamedList(nl, INVARIANTS));
        //SolrParams.wrapDefaults(maskUseParams, req.getParams())

        MapSolrParams mask = new MapSolrParams(ImmutableMap.<String, String>builder()
            .put("componentName", "")
            .put("expandParams", "")
            .build());
        pluginInfo.put("_effectiveParams_",
            SolrParams.wrapDefaults(mask, r.getParams()));
      }
      return pluginInfo;
    }

