  @Override
  public void initializeMetrics(SolrMetrics m) {
    this.solrMetrics = m.getChildInfo(this);
    numErrors = solrMetrics.meter(this, "errors", getCategory().toString());
    numServerErrors = solrMetrics.meter(this, "serverErrors", getCategory().toString());
    numClientErrors = solrMetrics.meter(this, "clientErrors", getCategory().toString());
    numTimeouts = solrMetrics.meter(this, "timeouts", getCategory().toString());
    requests = solrMetrics.counter(this, "requests", getCategory().toString());
    MetricsMap metricsMap = new MetricsMap((detail, map) ->
        shardPurposes.forEach((k, v) -> map.put(k, v.getCount())));
    solrMetrics.gauge(this, metricsMap, true, "shardRequests", getCategory().toString());
    requestTimes = solrMetrics.timer(this,"requestTimes", getCategory().toString());
    totalTime = solrMetrics.counter(this, "totalTime", getCategory().toString());
    solrMetrics.gauge(this, () -> handlerStart, true, "handlerStart", getCategory().toString());
  }

