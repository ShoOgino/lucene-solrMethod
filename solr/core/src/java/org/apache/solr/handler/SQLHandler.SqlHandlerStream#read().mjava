    // Return a metadata tuple as the first tuple and then pass through to the underlying stream.
    public Tuple read() throws IOException {
      try {
        Map<String, Object> fields = new HashMap<>();
        if(firstTuple) {
          firstTuple = false;

          List<String> metadataFields = new ArrayList<>();
          Map<String, String> metadataAliases = new HashMap<>();
          for(int i = 1; i <= numColumns; i++) {
            String columnName = resultSetMetaData.getColumnName(i);
            String columnLabel = resultSetMetaData.getColumnLabel(i);
            metadataFields.add(columnLabel);
            metadataAliases.put(columnLabel, columnName);
          }

          fields.put("isMetadata", true);
          fields.put("fields", metadataFields);
          fields.put("aliases", metadataAliases);
        } else {
          if(this.resultSet.next()){
            for(int i = 1; i <= numColumns; i++) {
              fields.put(resultSetMetaData.getColumnName(i), this.resultSet.getObject(i));
            }
          } else {
            fields.put("EOF", true);
          }

        }
        return new Tuple(fields);
      } catch (SQLException e) {
        throw new IOException(e);
      }
    }

