  protected void handleRequestRecoveryAction(SolrQueryRequest req,
      SolrQueryResponse rsp) throws IOException {
    final SolrParams params = req.getParams();
    log.info("It has been requested that we recover");
    Thread thread = new Thread() {
      @Override
      public void run() {
        String cname = params.get(CoreAdminParams.CORE);
        if (cname == null) {
          cname = "";
        }
        SolrCore core = null;
        try {
          core = coreContainer.getCore(cname);
          if (core != null) {
            // try to publish as recovering right away
            try {
              coreContainer.getZkController().publish(core.getCoreDescriptor(), ZkStateReader.RECOVERING);
            }  catch (InterruptedException e) {
              Thread.currentThread().interrupt();
              SolrException.log(log, "", e);
            } catch (Throwable e) {
              SolrException.log(log, "", e);
              if (e instanceof Error) {
                throw (Error) e;
              }
            }
            
            core.getUpdateHandler().getSolrCoreState().doRecovery(coreContainer, core.getCoreDescriptor());
          } else {
            SolrException.log(log, "Cound not find core to call recovery:" + cname);
          }
        } finally {
          // no recoveryStrat close for now
          if (core != null) {
            core.close();
          }
        }
      }
    };
    
    thread.start();
  }

