  private List<Group> parseGroups(SolrQueryRequest req) {
    String[] groupStr = req.getParams().getParams("group");
    List<String> groups = Collections.emptyList();
    if (groupStr != null && groupStr.length > 0) {
      groups = new ArrayList<>();
      for (String g : groupStr) {
        groups.addAll(StrUtils.splitSmart(g, ','));
      }
    }

    List<Group> requestedGroups = Arrays.asList(Group.values()); // by default we return all groups
    try {
      if (groups.size() > 0 && !groups.contains("all")) {
        requestedGroups = groups.stream().map(String::trim).map(Group::valueOf).collect(Collectors.toList());
      }
    } catch (IllegalArgumentException e) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Invalid group in: " + groups + " specified. Must be one of (all, jvm, jetty, http, node, core)", e);
    }
    return requestedGroups;
  }

