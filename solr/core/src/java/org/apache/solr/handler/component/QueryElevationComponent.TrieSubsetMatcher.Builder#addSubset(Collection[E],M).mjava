      /**
       * Adds a subset. If the subset is already registered, the new match value is added to the previous one(s).
       *
       * @param subset     The subset of {@link Comparable} elements; it is copied. It is ignored if its size is <code>0</code>.
       *                   Any subset added is guaranteed to be returned by {@link TrieSubsetMatcher#findSubsetsMatching}
       *                   if it matches (i.e. is contained), even if two or more subsets are equal, or equal when ignoring
       *                   duplicate elements.
       * @param matchValue The match value provided each time the subset matches.
       * @return This builder.
       */
      public Builder<E, M> addSubset(Collection<E> subset, M matchValue) {
        if (!subset.isEmpty()) {
          TrieSubsetMatcher.Node<E, M> node = root;
          for (E e : ImmutableSortedSet.copyOf(subset)) {
            node = node.getOrCreateChild(e);
          }
          node.addMatchValue(matchValue);
          subsetCount++;
        }
        return this;
      }

