  /**
   * Download the index files. If a new index is needed, download all the files.
   *
   * @param downloadCompleteIndex is it a fresh index copy
   * @param tmpIndexDir               the directory to which files need to be downloadeed to
   * @param latestGeneration         the version number
   */
  private void downloadIndexFiles(boolean downloadCompleteIndex,
      Directory tmpIndexDir, long latestGeneration) throws Exception {
    String indexDir = solrCore.getIndexDir();
    
    // it's okay to use null for lock factory since we know this dir will exist
    Directory dir = solrCore.getDirectoryFactory().get(indexDir, DirContext.DEFAULT, solrCore.getSolrConfig().indexConfig.lockType);
    try {
      for (Map<String,Object> file : filesToDownload) {
        if (!dir.fileExists((String) file.get(NAME)) || downloadCompleteIndex) {
          dirFileFetcher = new DirectoryFileFetcher(tmpIndexDir, file,
              (String) file.get(NAME), false, latestGeneration);
          currentFile = file;
          dirFileFetcher.fetchFile();
          filesDownloaded.add(new HashMap<String,Object>(file));
        } else {
          LOG.info("Skipping download for " + file.get(NAME));
        }
      }
    } finally {
      solrCore.getDirectoryFactory().release(dir);
    }
  }

