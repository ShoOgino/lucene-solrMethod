  @Command
  public void get(SolrQueryRequest req, SolrQueryResponse rsp) {
    String path = req.getPathTemplateValues().get("*");
    if (path == null || path.isEmpty()) path = "/";
    byte[] d = null;
    try {
      List<String> l = coreContainer.getZkController().getZkClient().getChildren(path, null, false);
      if (l != null && !l.isEmpty()) {
        String prefix = path.endsWith("/") ? path : path + "/";

        rsp.add(path, (MapWriter) ew -> {
          for (String s : l) {
            try {
              Stat stat = coreContainer.getZkController().getZkClient().exists(prefix + s, null, false);
              ew.put(s, (MapWriter) ew1 -> {
                ew1.put("version", stat.getVersion());
                ew1.put("aversion", stat.getAversion());
                ew1.put("children", stat.getNumChildren());
                ew1.put("ctime", stat.getCtime());
                ew1.put("cversion", stat.getCversion());
                ew1.put("czxid", stat.getCzxid());
                ew1.put("ephemeralOwner", stat.getEphemeralOwner());
                ew1.put("mtime", stat.getMtime());
                ew1.put("mzxid", stat.getMzxid());
                ew1.put("pzxid", stat.getPzxid());
                ew1.put("dataLength", stat.getDataLength());
              });
            } catch (Exception e) {
              ew.put("s", Collections.singletonMap("error", e.getMessage()));
            }
          }
        });

      } else {
        d = coreContainer.getZkController().getZkClient().getData(path, null, null, false);
        if (d == null || d.length == 0) {
          rsp.add(path, null);
          return;
        }

        Map<String, String> map = new HashMap<>(1);
        map.put(WT, "raw");
        map.put(OMIT_HEADER, "true");
        req.setParams(SolrParams.wrapDefaults(new MapSolrParams(map), req.getParams()));


        rsp.add(CONTENT, new ContentStreamBase.ByteArrayStream(d, null,
            d[0] == '{' ? CommonParams.JSON_MIME : BinaryResponseParser.BINARY_CONTENT_TYPE));

      }

    } catch (Exception e) {
      rsp.add(CONTENT, new ContentStreamBase.StringStream(Utils.toJSONString(Collections.singletonMap("error", e.getMessage()))));
    }
  }

