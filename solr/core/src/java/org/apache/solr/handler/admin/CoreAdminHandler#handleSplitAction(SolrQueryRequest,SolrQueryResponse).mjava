  protected boolean handleSplitAction(SolrQueryRequest adminReq, SolrQueryResponse rsp) throws IOException {
    SolrParams params = adminReq.getParams();
     // partitions=N    (split into N partitions, leaving it up to solr what the ranges are and where to put them)
    // path - multiValued param, or comma separated param?  Only creates indexes, not cores

    List<HashPartitioner.Range> ranges = null;
    // boolean closeDirectories = true;
    // DirectoryFactory dirFactory = null;


    String cname = params.get(CoreAdminParams.CORE, "");
    SolrCore core = coreContainer.getCore(cname);
    SolrQueryRequest req = new LocalSolrQueryRequest(core, params);
    try {

      String[] pathsArr = params.getParams("path");
      List<String> paths = null;

      String rangesStr = params.get("ranges");    // ranges=a-b,c-d,e-f


      // dirFactory = core.getDirectoryFactory();


      if (pathsArr != null) {

        paths = Arrays.asList(pathsArr);

        if (rangesStr == null) {
          HashPartitioner hp = new HashPartitioner();
          // should this be static?
          // TODO: use real range if we know it.  If we don't know it, we should prob
          // split on every other doc rather than on a hash?
          ranges = hp.partitionRange(pathsArr.length, Integer.MIN_VALUE, Integer.MAX_VALUE);
        }

      }


      SplitIndexCommand cmd = new SplitIndexCommand(req, paths, ranges);
      core.getUpdateHandler().split(cmd);

    } catch (Exception e) {
      log.error("ERROR executing split:", e);
      throw new RuntimeException(e);

    } finally {
      if (req != null) req.close();
      if (core != null) core.close();
    }

    return false;
  }

