  /**
   * Check the request parameters and decide if it should commit or optimize.
   * If it does, it will check other related parameters such as "waitFlush" and "waitSearcher"
   */
  public static boolean handleCommit(SolrQueryRequest req, UpdateRequestProcessor processor, SolrParams params, boolean force ) throws IOException
  {
    if( params == null) {
      params = new MapSolrParams( new HashMap<String, String>() ); 
    }
    
    boolean optimize = params.getBool( UpdateParams.OPTIMIZE, false );
    boolean commit   = params.getBool( UpdateParams.COMMIT,   false );
    boolean softCommit = params.getBool( UpdateParams.SOFT_COMMIT,   false );
    boolean prepareCommit = params.getBool( UpdateParams.PREPARE_COMMIT,   false );


    if( optimize || commit || softCommit || prepareCommit || force ) {
      CommitUpdateCommand cmd = new CommitUpdateCommand(req, optimize );
      updateCommit(cmd, params);
      processor.processCommit( cmd );
      return true;
    }
    
    
    return false;
  }

