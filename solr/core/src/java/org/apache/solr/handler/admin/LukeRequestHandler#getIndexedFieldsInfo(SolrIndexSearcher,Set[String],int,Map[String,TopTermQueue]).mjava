  @SuppressWarnings("unchecked")
  private static SimpleOrderedMap<Object> getIndexedFieldsInfo(
      final SolrIndexSearcher searcher, final Set<String> fields, final int numTerms, Map<String,TopTermQueue> ttinfo)
      throws Exception {

    AtomicReader reader = searcher.getAtomicReader();
    IndexSchema schema = searcher.getSchema();

    Set<String> fieldNames = new TreeSet<String>();
    for(FieldInfo fieldInfo : reader.getFieldInfos()) {
      fieldNames.add(fieldInfo.name);
    }

    // Walk the term enum and keep a priority queue for each map in our set
    SimpleOrderedMap<Object> finfo = new SimpleOrderedMap<Object>();
    Fields theFields = reader.fields();

    for (String fieldName : fieldNames) {
      if (fields != null && ! fields.contains(fieldName)) {
        continue; // we're not interested in this term
      }

      SimpleOrderedMap<Object> f = new SimpleOrderedMap<Object>();

      SchemaField sfield = schema.getFieldOrNull( fieldName );
      FieldType ftype = (sfield==null)?null:sfield.getType();

      f.add( "type", (ftype==null)?null:ftype.getTypeName() );
      f.add( "schema", getFieldFlags( sfield ) );
      if (sfield != null && schema.isDynamicField(sfield.getName()) && schema.getDynamicPattern(sfield.getName()) != null) {
        f.add("dynamicBase", schema.getDynamicPattern(sfield.getName()));
      }

      Terms terms = theFields.terms(fieldName);
      if (terms == null) { // Not indexed, so we need to report what we can (it made it through the fl param if specified)
        finfo.add( fieldName, f );
        continue;
      }

      TopTermQueue topTerms = ttinfo.get( fieldName );
      // If numTerms==0, the call is just asking for a quick field list
      if( ttinfo != null && sfield != null && sfield.indexed() ) {
        if (numTerms > 0) { // Read the actual field from the index and report that too.
          Document doc = null;
          if (topTerms != null && topTerms.getTopTermInfo() != null) {
            Term term = topTerms.getTopTermInfo().term;
            DocsEnum docsEnum = reader.termDocsEnum(reader.getLiveDocs(),
                term.field(),
                new BytesRef(term.text()),
                false);
            if (docsEnum != null) {
              int docId;
              if ((docId = docsEnum.nextDoc()) != DocsEnum.NO_MORE_DOCS) {
                doc = reader.document(docId);
              }
            }
          }
          if( doc != null ) {
            // Found a document with this field
            try {
              IndexableField fld = doc.getField( fieldName );
              if( fld != null ) {
                f.add( "index", getFieldFlags( fld ) );
              }
              else {
                // it is a non-stored field...
                f.add( "index", "(unstored field)" );
              }
            }
            catch( Exception ex ) {
              log.warn( "error reading field: "+fieldName );
            }
          }
          f.add("docs", terms.getDocCount());
        }
        if( topTerms != null ) {
          f.add( "distinct", topTerms.distinctTerms );

          // Include top terms
          f.add( "topTerms", topTerms.toNamedList( searcher.getSchema() ) );

          // Add a histogram
          f.add( "histogram", topTerms.histogram.toNamedList() );
        }
      }
      // Add the field
      finfo.add( fieldName, f );
    }
    return finfo;
  }

