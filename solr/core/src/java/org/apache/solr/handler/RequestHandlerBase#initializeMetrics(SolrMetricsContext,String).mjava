  @Override
  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {
    this.solrMetricsContext = parentContext.getChildContext(this);
    numErrors = solrMetricsContext.meter(this, "errors", getCategory().toString(), scope);
    numServerErrors = solrMetricsContext.meter(this, "serverErrors", getCategory().toString(), scope);
    numClientErrors = solrMetricsContext.meter(this, "clientErrors", getCategory().toString(), scope);
    numTimeouts = solrMetricsContext.meter(this, "timeouts", getCategory().toString(), scope);
    requests = solrMetricsContext.counter(this, "requests", getCategory().toString(), scope);
    MetricsMap metricsMap = new MetricsMap((detail, map) ->
        shardPurposes.forEach((k, v) -> map.put(k, v.getCount())));
    solrMetricsContext.gauge(this, metricsMap, true, "shardRequests", getCategory().toString(), scope);
    requestTimes = solrMetricsContext.timer(this,"requestTimes", getCategory().toString(), scope);
    totalTime = solrMetricsContext.counter(this, "totalTime", getCategory().toString(), scope);
    solrMetricsContext.gauge(this, () -> handlerStart, true, "handlerStart", getCategory().toString(), scope);
  }

