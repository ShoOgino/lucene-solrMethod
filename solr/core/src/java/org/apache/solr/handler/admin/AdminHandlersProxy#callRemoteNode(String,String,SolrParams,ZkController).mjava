  /**
   * Makes a remote request and returns a future and the solr client. The caller is responsible for closing the client 
   */
  public static Pair<Future<NamedList<Object>>, SolrClient> callRemoteNode(String nodeName, String endpoint, 
                                                                           SolrParams params, ZkController zkController) 
      throws IOException, SolrServerException {
    log.debug("Proxying {} request to node {}", endpoint, nodeName);
    URL baseUrl = new URL(zkController.zkStateReader.getBaseUrlForNodeName(nodeName));
    HttpSolrClient solr = new HttpSolrClient.Builder(baseUrl.toString()).build();
    SolrRequest proxyReq = new GenericSolrRequest(SolrRequest.METHOD.GET, endpoint, params);
    HttpSolrClient.HttpUriRequestResponse proxyResp = solr.httpUriRequest(proxyReq);
    return new Pair<>(proxyResp.future, solr);
  }

