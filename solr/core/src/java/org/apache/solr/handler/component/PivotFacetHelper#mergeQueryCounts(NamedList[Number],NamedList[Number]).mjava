  /**
   * Merges query counts returned by a shard into global query counts.
   * Entries found only in shard's query counts will be added to global counts.
   * Entries found in both shard and global query counts will be summed.
   *
   * @param globalQueryCounts The global query counts (across all shards) in which to merge the shard query counts
   * @param shardQueryCounts  Named list from a shard response to be merged into the global counts.
   * @return NamedList containing merged values
   */
  static NamedList<Number> mergeQueryCounts(
      NamedList<Number> globalQueryCounts, NamedList<Number> shardQueryCounts) {
    if (globalQueryCounts == null) {
      return shardQueryCounts;
    }
    for (Entry<String, Number> entry : shardQueryCounts) {
      int idx = globalQueryCounts.indexOf(entry.getKey(), 0);
      if (idx == -1) {
        globalQueryCounts.add(entry.getKey(), entry.getValue());
      } else {
        globalQueryCounts.setVal(idx, FacetComponent.num(globalQueryCounts.getVal(idx).longValue() + entry.getValue().longValue()));
      }
    }
    return globalQueryCounts;
  }

