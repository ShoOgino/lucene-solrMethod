  protected void handleWaitForStateAction(SolrQueryRequest req,
      SolrQueryResponse rsp) throws IOException, InterruptedException {
    final SolrParams params = req.getParams();
    
    String cname = params.get(CoreAdminParams.CORE);
    if (cname == null) {
      cname = "";
    }
    
    String nodeName = params.get("nodeName");
    String coreNodeName = params.get("coreNodeName");
    String waitForState = params.get("state");
    Boolean checkLive = params.getBool("checkLive");
    int pauseFor = params.getInt("pauseFor", 0);
    
    String state = null;
    boolean live = false;
    int retry = 0;
    while (true) {
      SolrCore core = null;
      try {
        core = coreContainer.getCore(cname);
        if (core == null && retry == 30) {
          throw new SolrException(ErrorCode.BAD_REQUEST, "core not found:"
              + cname);
        }
        if (core != null) {
          // wait until we are sure the recovering node is ready
          // to accept updates
          CloudDescriptor cloudDescriptor = core.getCoreDescriptor()
              .getCloudDescriptor();
          ClusterState clusterState = coreContainer.getZkController()
              .getClusterState();
          String collection = cloudDescriptor.getCollectionName();
          Slice slice = clusterState.getSlice(collection,
              cloudDescriptor.getShardId());
          if (slice != null) {
            ZkNodeProps nodeProps = slice.getShards().get(coreNodeName);
            if (nodeProps != null) {
              state = nodeProps.get(ZkStateReader.STATE_PROP);
              live = clusterState.liveNodesContain(nodeName);
              if (nodeProps != null && state.equals(waitForState)) {
                if (checkLive == null) {
                  break;
                } else if (checkLive && live) {
                  break;
                } else if (!checkLive && !live) {
                  break;
                }
              }
            }
          }
        }
        
        if (retry++ == 30) {
          throw new SolrException(ErrorCode.BAD_REQUEST,
              "I was asked to wait on state " + waitForState + " for "
                  + nodeName
                  + " but I still do not see the request state. I see state: "
                  + state + " live:" + live);
        }
      } finally {
        if (core != null) {
          core.close();
        }
      }
      Thread.sleep(1000);
    }
    
    // small safety net for any updates that started with state that
    // kept it from sending the update to be buffered -
    // pause for a while to let any outstanding updates finish
    // System.out.println("I saw state:" + state + " sleep for " + pauseFor +
    // " live:" + live);
    Thread.sleep(pauseFor);
    
    // solrcloud_debug
    // try {;
    // LocalSolrQueryRequest r = new LocalSolrQueryRequest(core, new
    // ModifiableSolrParams());
    // CommitUpdateCommand commitCmd = new CommitUpdateCommand(r, false);
    // commitCmd.softCommit = true;
    // core.getUpdateHandler().commit(commitCmd);
    // RefCounted<SolrIndexSearcher> searchHolder =
    // core.getNewestSearcher(false);
    // SolrIndexSearcher searcher = searchHolder.get();
    // try {
    // System.out.println(core.getCoreDescriptor().getCoreContainer().getZkController().getNodeName()
    // + " to replicate "
    // + searcher.search(new MatchAllDocsQuery(), 1).totalHits + " gen:" +
    // core.getDeletionPolicy().getLatestCommit().getGeneration() + " data:" +
    // core.getDataDir());
    // } finally {
    // searchHolder.decref();
    // }
    // } catch (Exception e) {
    //
    // }
    
  }

