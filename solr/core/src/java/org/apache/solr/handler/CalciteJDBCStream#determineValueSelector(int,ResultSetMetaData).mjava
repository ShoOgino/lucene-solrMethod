  @Override
  protected ResultSetValueSelector determineValueSelector(int columnIdx, ResultSetMetaData metadata)
      throws SQLException {
    ResultSetValueSelector valueSelector = super.determineValueSelector(columnIdx, metadata);
    if (valueSelector == null) {
      final int columnNumber = columnIdx + 1;
      final String columnName = metadata.getColumnLabel(columnNumber);
      final String className = metadata.getColumnClassName(columnNumber);
      if (Array.class.getName().equals(className)) {
        valueSelector = new ResultSetValueSelector() {
          @Override
          public Object selectValue(ResultSet resultSet) throws SQLException {
            Object o = resultSet.getObject(columnNumber);
            if (resultSet.wasNull()) {
              return null;
            }
            if (o instanceof Array) {
              Array array = (Array) o;
              return array.getArray();
            } else {
              return o;
            }
          }

          @Override
          public String getColumnName() {
            return columnName;
          }
        };
      }
    }
    return valueSelector;
  }

