  /**
   * Creates an instance of StatsValues which supports values from a field of the given FieldType
   *
   * @param sf SchemaField for the field whose statistics will be created by the resulting StatsValues
   * @return Instance of StatsValues that will create statistics from values from a field of the given type
   */
  public static StatsValues createStatsValues(SchemaField sf, boolean calcDistinct) {
    // TODO: allow for custom field types
    FieldType fieldType = sf.getType();
    if (TrieDateField.class.isInstance(fieldType)) {
      return new DateStatsValues(sf, calcDistinct);
    } else if (TrieField.class.isInstance(fieldType)) {
      return new NumericStatsValues(sf, calcDistinct);
    } else if (StrField.class.isInstance(fieldType)) {
      return new StringStatsValues(sf, calcDistinct);
    } else if (sf.getType().getClass().equals(EnumField.class)) {
      return new EnumStatsValues(sf, calcDistinct);
    } else {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Field type " + fieldType + " is not currently supported");
    }
  }

