  @Override
  protected Map<String, Table> getTableMap() {
    String zk = this.properties.getProperty("zk");
    try(CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zk), Optional.empty()).withSocketTimeout(30000).withConnectionTimeout(15000).build()) {
      cloudSolrClient.connect();
      ZkStateReader zkStateReader = cloudSolrClient.getZkStateReader();
      ClusterState clusterState = zkStateReader.getClusterState();

      final ImmutableMap.Builder<String, Table> builder = ImmutableMap.builder();

      for (String collection : clusterState.getCollectionsMap().keySet()) {
        builder.put(collection, new SolrTable(this, collection));
      }

      Aliases aliases = zkStateReader.getAliases();
      for (String alias : aliases.getCollectionAliasListMap().keySet()) {
        builder.put(alias, new SolrTable(this, alias));
      }

      return builder.build();
    } catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

