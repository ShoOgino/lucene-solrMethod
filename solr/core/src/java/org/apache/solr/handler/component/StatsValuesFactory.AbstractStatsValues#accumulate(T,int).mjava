    public void accumulate(T value, int count) {
      assert null != value : "Can't accumulate null";

      if (computeCount) {
        this.count += count;
      }
      if (computeCalcDistinct) {
        distinctValues.add(value);
        countDistinct = distinctValues.size();
      }
      if (computeMinOrMax) {
        updateMinMax(value, value);
      }
      if (computeCardinality) {
        if (null == hasher) {
          assert value instanceof Number : "pre-hashed value support only works with numeric longs";
          hll.addRaw(((Number)value).longValue());
        } else {
          hll.addRaw(hash(value));
        }
      }
      updateTypeSpecificStats(value, count);
    }

