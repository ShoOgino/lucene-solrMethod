  // Just get a document with the term in it, the first one will do!
  // Is there a better way to do this? Shouldn't actually be very costly
  // to do it this way.
  private static StoredDocument getFirstLiveDoc(AtomicReader reader, String fieldName, Terms terms) throws IOException {
    DocsEnum docsEnum = null;
    TermsEnum termsEnum = terms.iterator(null);
    BytesRef text;
    // Deal with the chance that the first bunch of terms are in deleted documents. Is there a better way?
    for (int idx = 0; idx < 1000 && docsEnum == null; ++idx) {
      text = termsEnum.next();
      if (text == null) { // Ran off the end of the terms enum without finding any live docs with that field in them.
        return null;
      }
      Term term = new Term(fieldName, text);
      docsEnum = reader.termDocsEnum(reader.getLiveDocs(),
          term.field(),
          new BytesRef(term.text()),
          false);
      if (docsEnum != null) {
        int docId;
        if ((docId = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {
          return reader.document(docId);
        }
      }
    }
    return null;
  }

