  /**
   *   This is called when splitByPrefix is used.
   *   The overseer called us to get recommended splits taking into
   *   account actual document distribution over the hash space.
   */
  private void handleGetRanges(CoreAdminHandler.CallInfo it, String coreName) throws Exception {

    SolrCore parentCore = it.handler.coreContainer.getCore(coreName);
    if (parentCore == null) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Unknown core " + coreName);
    }

    RefCounted<SolrIndexSearcher> searcherHolder = parentCore.getRealtimeSearcher();

    try {
      if (!it.handler.coreContainer.isZooKeeperAware()) {
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Shard splitByPrefix requires SolrCloud mode.");
      } else {
        SolrIndexSearcher searcher = searcherHolder.get();

        String routeFieldName = null;
        String prefixField = "id_prefix";

        ClusterState clusterState = it.handler.coreContainer.getZkController().getClusterState();
        String collectionName = parentCore.getCoreDescriptor().getCloudDescriptor().getCollectionName();
        DocCollection collection = clusterState.getCollection(collectionName);
        String sliceName = parentCore.getCoreDescriptor().getCloudDescriptor().getShardId();
        Slice slice = collection.getSlice(sliceName);
        DocRouter router = collection.getRouter() != null ? collection.getRouter() : DocRouter.DEFAULT;
        DocRouter.Range currentRange = slice.getRange();

        Object routerObj = collection.get(DOC_ROUTER); // for back-compat with Solr 4.4
        if (routerObj instanceof Map) {
          @SuppressWarnings({"rawtypes"})
          Map routerProps = (Map) routerObj;
          routeFieldName = (String) routerProps.get("field");
        }
        if (routeFieldName == null) {
          routeFieldName = searcher.getSchema().getUniqueKeyField().getName();
        }

        Collection<RangeCount> counts = getHashHistogram(searcher, prefixField, router, collection);

        if (counts.size() == 0) {
          // How to determine if we should look at the id field to figure out the prefix buckets?
          // There may legitimately be no indexed terms in id_prefix if no ids have a prefix yet.
          // For now, avoid using splitByPrefix unless you are actually using prefixes.
          counts = getHashHistogramFromId(searcher, searcher.getSchema().getUniqueKeyField().getName(), router, collection);
        }

        Collection<DocRouter.Range> splits = getSplits(counts, currentRange);
        String splitString = toSplitString(splits);

        if (splitString == null) {
          return;
        }

        it.rsp.add(CoreAdminParams.RANGES, splitString);
      }
    } finally {
      if (searcherHolder != null) searcherHolder.decref();
      if (parentCore != null) parentCore.close();
    }
  }

