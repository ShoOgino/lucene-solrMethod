  /**
   * Adds refinement requests for the value for each shard that has not already contributed 
   * a count for this value.
   */
  private void processDefiniteCandidateElement(PivotFacet pf, PivotFacetValue value) {
    
    for (int shard = pf.knownShards.nextSetBit(0); 
         0 <= shard; 
         shard = pf.knownShards.nextSetBit(shard+1)) {   
      if ( ! value.shardHasContributed(shard) ) {
        if ( // if we're doing index order, we need to refine anything  
             // (mincount may have excluded from a shard)
            FacetParams.FACET_SORT_INDEX.equals(facetFieldSort)
            || (// 'missing' value isn't affected by limit, needs refined if shard didn't provide
                null == value.getValue() ||
                // if we are doing count order, we need to refine if the limit was hit
                // (if not, the shard doesn't have the value or it would have returned already)
                numberOfValuesContributedByShardWasLimitedByFacetFieldLimit(shard))) {
          pf.addRefinement(shard, value);
        }
      }
    }  
  }

