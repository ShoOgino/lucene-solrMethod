  /**
   * Sorts the collection and recursively sorts the collections assocaited with 
   * any sub-pivots.
   *
   * @see FacetParams#FACET_SORT
   * @see PivotFacetField#sort
   */
  public void sort() {
    
    if (dirty) {
      if (facetFieldSort.equals(FacetParams.FACET_SORT_COUNT)) {
        Collections.sort(this.explicitValues, new PivotFacetCountComparator());
      } else if (facetFieldSort.equals(FacetParams.FACET_SORT_INDEX)) {
        Collections.sort(this.explicitValues, new PivotFacetValueComparator());
      }
      dirty = false;
    }
    
    for (PivotFacetValue value : this.explicitValues)
      if (value.getChildPivot() != null) {
        value.getChildPivot().sort();
      }
   
    if (missingValue != null && missingValue.getChildPivot() != null) {
      missingValue.getChildPivot().sort();
    }
  }

