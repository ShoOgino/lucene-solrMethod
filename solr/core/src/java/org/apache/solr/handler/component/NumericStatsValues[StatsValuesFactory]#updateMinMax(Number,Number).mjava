   /**
   * {@inheritDoc}
   */
  @Override
  protected void updateMinMax(Number min, Number max) {
    if (null == min) {
      assert null == max : "min is null but max isn't ? ==> " + max;
      return; // No-Op
    }

    assert null != max : "max is null but min isn't ? ==> " + min;

    // we always use the double value, because that way the response Object class is 
    // consistent regardless of whether we only have 1 value or many that we min/max
    //
    // TODO: would be nice to have subclasses for each type of Number ... breaks backcompat
    double minD = min.doubleValue();
    double maxD = max.doubleValue();

    this.min = (null == this.min) ? minD : Math.min(this.min.doubleValue(), minD);
    this.max = (null == this.max) ? maxD : Math.max(this.max.doubleValue(), maxD);
  }

