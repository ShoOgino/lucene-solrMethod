    @SuppressWarnings({"unchecked"})
    void invoke(SolrQueryRequest req, SolrQueryResponse rsp, CommandOperation cmd) {
      Object original = null;
      try {
        Object o = null;
        String commandName = null;
        if(paramsCount == 1) {
          if(cmd == null) {
            if(parameterClass != null) {
              try {
                ContentStream stream = req.getContentStreams().iterator().next();
                o = mapper.readValue(stream.getStream(), parameterClass);
              } catch (IOException e) {
                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "invalid payload", e);
              }
            }
          } else {
            commandName = cmd.name;
            original = cmd.getCommandData();
            o = original;
            if (o instanceof Map && parameterClass != null && parameterClass != Map.class) {
              o = mapper.readValue(Utils.toJSONString(o), parameterClass);
            }
          }
          PayloadObj<Object> payloadObj = new PayloadObj<>(commandName, original, o, req, rsp);
          cmd = payloadObj;
          method.invoke(obj, payloadObj);
          checkForErrorInPayload(cmd);
        } else if (paramsCount == 2) {
          method.invoke(obj, req, rsp);
        } else {
          o = cmd.getCommandData();
          if (o instanceof Map && parameterClass != null) {
            o = mapper.readValue(Utils.toJSONString(o), parameterClass);
          }
          if (isWrappedInPayloadObj) {
            PayloadObj<Object> payloadObj = new PayloadObj<>(cmd.name, cmd.getCommandData(), o, req, rsp);
            cmd = payloadObj;
            method.invoke(obj, req, rsp, payloadObj);
          } else {
            method.invoke(obj, req, rsp, o);
          }
          checkForErrorInPayload(cmd);
        }
      } catch (RuntimeException se) {
        log.error("Error executing command  ", se);
        throw se;
      } catch (Throwable e) {
        log.error("Error executing command : ", e);
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
      }

    }

