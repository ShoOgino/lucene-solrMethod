  /**
   * Lookup the collection from the collection string (maybe comma delimited).
   * Also sets {@link #collectionsList} by side-effect.
   * if {@code secondTry} is false then we'll potentially recursively try this all one more time while ensuring
   * the alias and collection info is sync'ed from ZK.
   */
  protected DocCollection resolveDocCollection(String collectionStr) {
    if (!cores.isZooKeeperAware()) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Solr not running in cloud mode ");
    }
    ZkStateReader zkStateReader = cores.getZkController().getZkStateReader();

    Supplier<DocCollection> logic = () -> {
      this.collectionsList = resolveCollectionListOrAlias(collectionStr); // side-effect
      String collectionName = collectionsList.get(0); // first
      //TODO an option to choose another collection in the list if can't find a local replica of the first?

      return zkStateReader.getClusterState().getCollectionOrNull(collectionName);
    };

    DocCollection docCollection = logic.get();
    if (docCollection != null) {
      return docCollection;
    }
    // ensure our view is up to date before trying again
    try {
      zkStateReader.aliasesManager.update();
      zkStateReader.forceUpdateCollection(collectionsList.get(0));
    } catch (Exception e) {
      log.error("Error trying to update state while resolving collection.", e);
      //don't propagate exception on purpose
    }
    return logic.get();
  }

