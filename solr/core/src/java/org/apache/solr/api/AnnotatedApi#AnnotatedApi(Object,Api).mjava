  public AnnotatedApi(Object obj, Api fallback) {
    super(readSpec(obj.getClass()));
    this.fallback = fallback;
    Class<?> klas = obj.getClass();
    if (!Modifier.isPublic(klas.getModifiers())) {
      throw new RuntimeException(obj.getClass().getName() + " is not public");
    }

    endPoint = klas.getAnnotation(EndPoint.class);

    for (Method m : klas.getDeclaredMethods()) {
      Command command = m.getAnnotation(Command.class);
      if (command == null) continue;

      if (commands.containsKey(command.name())) {
        throw new RuntimeException("Duplicate commands " + command.name());
      }
      commands.put(command.name(), new Cmd(command, obj, m));
    }

  }

