    Cmd(String command, Object obj, Method method) {
      this.command = command;
      this.obj = obj;
      try {
        this.method = MethodHandles.publicLookup().unreflect(method);
      } catch (IllegalAccessException e) {
        throw new RuntimeException("Unable to access method, may be not public or accessible ", e);
      }
      Class<?>[] parameterTypes = method.getParameterTypes();
      paramsCount = parameterTypes.length;
      if (parameterTypes.length == 1) {
        readPayloadType(method.getGenericParameterTypes()[0]);
      } else if (parameterTypes.length == 3) {
        if (parameterTypes[0] != SolrQueryRequest.class || parameterTypes[1] != SolrQueryResponse.class) {
          throw new RuntimeException("Invalid params for method " + method);
        }
        Type t = method.getGenericParameterTypes()[2];
        readPayloadType(t);
      }
      if (parameterTypes.length > 3) {
        throw new RuntimeException("Invalid params count for method " + method);
      }
    }

