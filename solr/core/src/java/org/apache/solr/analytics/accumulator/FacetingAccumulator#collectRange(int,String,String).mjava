  /**
   * Given a document, rangeFacet field and range, adds the document to the
   * {@link StatsCollector}s held in the bucket corresponding to the rangeFacet field and range.
   * Called during post processing.
   */
  @Override
  public void collectRange(int doc, String facetField, String range) throws IOException {
    Map<String,StatsCollector[]> map = rangeFacetCollectors.get(facetField);
    StatsCollector[] statsCollectors = map.get(range);
    // If the range has not been seen yet, a StatsCollector array is
    // created and associated with that bucket.
    if( statsCollectors == null ){
      statsCollectors = statsCollectorArraySupplier.get();
      map.put(range,statsCollectors);
      rangeFacetExpressions.get(facetField).put(range,makeExpressions(statsCollectors));
      for (StatsCollector statsCollector : statsCollectors) {
        statsCollector.setNextReader(context);
      }
    }
    for (StatsCollector statsCollector : statsCollectors) {
      statsCollector.collect(doc);
    }
  }

