  @Override
  public void startElement(String uri, String localName, String qName, Attributes atts) throws SAXException {
    currentElementText = "";
    if (inEnvelope) {
      if (inRequest) {
        if (localName.equals(STATISTIC)) {
          // Start a Statistic Request
          inStatistic = true;
        } else if (inFieldFacet) {
          if (localName.equals(SORT_SPECIFICATION)) {
            // Start a Sort Specification
            inSortSpecification = true;
            sortSpecification = new FacetSortSpecification();
          }
        } else if (localName.equals(FIELD_FACET)) {
          // Start a Field Facet Request
          // Get attributes (limit, minCount, showMissing)
          String att = atts.getValue(uri,LIMIT);
          if (att!=null) {
            limit = Integer.parseInt(att);
          } else {
            limit = DEFAULT_FACET_LIMIT;
          }
          att = atts.getValue(uri,MIN_COUNT);
          if (att!=null) {
            minCount = Integer.parseInt(att);
          } else {
            minCount = DEFAULT_FACET_MINCOUNT;
          }
          att = atts.getValue(uri,SHOW_MISSING);
          if (att!=null) {
            showMissing = Boolean.parseBoolean(att);
          } else {
            showMissing = DEFAULT_FACET_FIELD_SHOW_MISSING;
          }
          
          inFieldFacet = true;
        } else if (localName.equals(RANGE_FACET)) {
          // Start a Range Facet Request
          // Get attributes (hardEnd)
          String att = atts.getValue(uri,HARD_END);
          if (att!=null) {
            hardend = Boolean.parseBoolean(att);
          } else {
            hardend = false;
          }
          
          // Initiate Range Facet classes
          gaps = new ArrayList<>();
          includeBoundaries = EnumSet.noneOf(FacetRangeInclude.class);
          otherRanges = EnumSet.noneOf(FacetRangeOther.class);
          inRangeFacet = true;
        } else if (localName.equals(QUERY_FACET)) {
          // Start a Query Facet Request
          queries = new ArrayList<>();
          inQueryFacet = true;
        }
      } else if (localName.equals(ANALYTICS_REQUEST)){
        // Start an Analytics Request
        
        // Renew each list.
        fieldFacetList = new ArrayList<>();
        rangeFacetList = new ArrayList<>();
        queryFacetList = new ArrayList<>();
        expressionList = new ArrayList<>();
        inRequest = true;
      }
    } else if (localName.equals(ANALYTICS_REQUEST_ENVELOPE)){
      //Begin the parsing of the Analytics Requests
      requests = new ArrayList<>();
      inEnvelope = true;
    }
  }

