  /** 
   * Returns a TermsEnum that implements ord, or null if no terms in field.
   * <p>
   *  we build a "private" terms
   *  index internally (WARNING: consumes RAM) and use that
   *  index to implement ord.  This also enables ord on top
   *  of a composite reader.  The returned TermsEnum is
   *  unpositioned.  This returns null if there are no terms.
   * </p>
   *  <p><b>NOTE</b>: you must pass the same reader that was
   *  used when creating this class 
   */
  public TermsEnum getOrdTermsEnum(LeafReader reader) throws IOException {
    // NOTE: see LUCENE-6529 before attempting to optimize this method to
    // return a TermsEnum directly from the reader if it already supports ord().

    assert null != indexedTermsArray;
    
    if (0 == indexedTermsArray.length) {
      return null;
    } else {
      return new OrdWrappedTermsEnum(reader);
    }
  }

