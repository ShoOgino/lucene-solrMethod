  /**
   * Generate a statistics object based on the given measurements for all files monitored by this reporter.
   * 
   * @param totalBytes
   *          The total bytes used
   * @param localBytes
   *          The amount of bytes found on local nodes
   * @param totalCount
   *          The total block count
   * @param localCount
   *          The amount of blocks found on local nodes
   * @return HDFS block locality statistics
   */
  private NamedList<Number> createStatistics(long totalBytes, long localBytes, int totalCount, int localCount) {
    NamedList<Number> statistics = new SimpleOrderedMap<Number>();

    statistics.add(LOCALITY_BYTES_TOTAL, totalBytes);
    statistics.add(LOCALITY_BYTES_LOCAL, localBytes);
    if (localBytes == 0) {
      statistics.add(LOCALITY_BYTES_RATIO, 0);
    } else {
      statistics.add(LOCALITY_BYTES_RATIO, localBytes / (double) totalBytes);
    }
    statistics.add(LOCALITY_BLOCKS_TOTAL, totalCount);
    statistics.add(LOCALITY_BLOCKS_LOCAL, localCount);
    if (localCount == 0) {
      statistics.add(LOCALITY_BLOCKS_RATIO, 0);
    } else {
      statistics.add(LOCALITY_BLOCKS_RATIO, localCount / (double) totalCount);
    }

    return statistics;
  }

