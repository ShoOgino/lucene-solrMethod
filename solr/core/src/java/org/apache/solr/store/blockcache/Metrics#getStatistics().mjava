  public NamedList<Number> getStatistics() {
    NamedList<Number> stats = new SimpleOrderedMap<>(21); // room for one method call before growing

    long now = System.nanoTime();
    long delta = Math.max(now - previous, 1);
    double seconds = delta / 1000000000.0;

    long hits_total = blockCacheHit.get();
    long hits_delta = hits_total - blockCacheHit_last.get();
    blockCacheHit_last.set(hits_total);

    long miss_total = blockCacheMiss.get();
    long miss_delta = miss_total - blockCacheMiss_last.get();
    blockCacheMiss_last.set(miss_total);

    long evict_total = blockCacheEviction.get();
    long evict_delta = evict_total - blockCacheEviction_last.get();
    blockCacheEviction_last.set(evict_total);

    long storeFail_total = blockCacheStoreFail.get();
    long storeFail_delta = storeFail_total - blockCacheStoreFail_last.get();
    blockCacheStoreFail_last.set(storeFail_total);

    long lookups_delta = hits_delta + miss_delta;
    long lookups_total = hits_total + miss_total;

    stats.add("size", blockCacheSize.get());
    stats.add("lookups", lookups_total);
    stats.add("hits", hits_total);
    stats.add("evictions", evict_total);
    stats.add("storeFails", storeFail_total);
    stats.add("hitratio_current", calcHitRatio(lookups_delta, hits_delta));  // hit ratio since the last call
    stats.add("lookups_persec", getPerSecond(lookups_delta, seconds)); // lookups per second since the last call
    stats.add("hits_persec", getPerSecond(hits_delta, seconds));       // hits per second since the last call
    stats.add("evictions_persec", getPerSecond(evict_delta, seconds));  // evictions per second since the last call
    stats.add("storeFails_persec", getPerSecond(storeFail_delta, seconds));  // evictions per second since the last call
    stats.add("time_delta", seconds);  // seconds since last call

    // TODO: these aren't really related to the BlockCache
    stats.add("buffercache.allocations", getPerSecond(shardBuffercacheAllocate.getAndSet(0), seconds));
    stats.add("buffercache.lost", getPerSecond(shardBuffercacheLost.getAndSet(0), seconds));

    previous = now;

    return stats;
  }

