    @Override
    public SolrParams parseParamsAndFillStreams(
        final HttpServletRequest req, ArrayList<ContentStream> streams) throws Exception {
      if (!isMultipart(req)) {
        throw new SolrException( ErrorCode.BAD_REQUEST, "Not multipart content! "+req.getContentType() );
      }
      // Magic way to tell Jetty dynamically we want multi-part processing.  "Request" here is a Jetty class
      req.setAttribute(Request.MULTIPART_CONFIG_ELEMENT, multipartConfigElement);

      MultiMapSolrParams params = parseQueryString( req.getQueryString() );

      // IMPORTANT: the Parts will all have the delete() method called by cleanupMultipartFiles()

      for (Part part : req.getParts()) {
        if (part.getSubmittedFileName() == null) { // thus a form field and not file upload
          // If it's a form field, put it in our parameter map
          String partAsString = org.apache.commons.io.IOUtils.toString(new PartContentStream(part).getReader());
          MultiMapSolrParams.addParam(
              part.getName().trim(),
              partAsString, params.getMap() );
        } else { // file upload
          streams.add(new PartContentStream(part));
        }
      }
      return params;
    }

