  /**
   * Sets HTTP Response cache validator headers appropriately and
   * validates the HTTP Request against these using any conditional
   * request headers.
   *
   * If the request contains conditional headers, and those headers
   * indicate a match with the current known state of the system, this
   * method will return "true" indicating that a 304 Status code can be
   * returned, and no further processing is needed.
   *
   * 
   * @return true if the request contains conditional headers, and those
   *         headers indicate a match with the current known state of the
   *         system -- indicating that a 304 Status code can be returned to
   *         the client, and no further request processing is needed.  
   */
  public static boolean doCacheHeaderValidation(final SolrQueryRequest solrReq,
                                                final HttpServletRequest req,
                                                final Method reqMethod,
                                                final HttpServletResponse resp) {
    
    if (Method.POST==reqMethod || Method.OTHER==reqMethod) {
      return false;
    }
    
    final long lastMod = HttpCacheHeaderUtil.calcLastModified(solrReq);
    final String etag = HttpCacheHeaderUtil.calcEtag(solrReq);
    
    resp.setDateHeader("Last-Modified", lastMod);
    resp.setHeader("ETag", etag);

    if (checkETagValidators(req, resp, reqMethod, etag)) {
      return true;
    }

    if (checkLastModValidators(req, resp, lastMod)) {
      return true;
    }

    return false;
  }

