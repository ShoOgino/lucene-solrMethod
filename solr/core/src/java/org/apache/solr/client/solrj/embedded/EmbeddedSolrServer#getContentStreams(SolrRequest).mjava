  private Set<ContentStream> getContentStreams(SolrRequest request) throws IOException {
    if (request.getMethod() == SolrRequest.METHOD.GET) return null;
    if (request instanceof ContentStreamUpdateRequest) {
      final ContentStreamUpdateRequest csur = (ContentStreamUpdateRequest) request;
      final Collection<ContentStream> cs = csur.getContentStreams();
      if (cs != null) return new HashSet<>(cs);
    }

    final RequestWriter.ContentWriter contentWriter = request.getContentWriter(null);

    String cType;
    final BAOS baos = new BAOS();
    if (contentWriter != null) {
      contentWriter.write(baos);
      cType = contentWriter.getContentType();
    } else {
      final RequestWriter rw = supplier.newRequestWriter();
      cType = rw.getUpdateContentType();
      rw.write(request, baos);
    }

    final byte[] buf = baos.toByteArray();
    if (buf.length > 0) {
      return Collections.singleton(new ContentStreamBase() {

        @Override
        public InputStream getStream() throws IOException {
          return new ByteArrayInputStream(buf);
        }

        @Override
        public String getContentType() {
          return cType;
        }
      });
    }

    return null;
  }

