  // actual main: returns exit code instead of terminating JVM (for easy testing)
  @SuppressForbidden(reason = "System.out required: command line tool")
  protected static int doMain(String[] args) throws IOException, InterruptedException {
    CheckIndex.Options opts;
    try {
      opts = CheckIndex.parseOptions(args);
    } catch (IllegalArgumentException e) {
      System.out.println(e.getMessage());
      return 1;
    }

    if (!CheckIndex.assertsOn()) {
      System.out.println("\nNOTE: testing will be more thorough if you run java with '-ea:org.apache.lucene...', so assertions are enabled");
    }

    if (opts.getDirImpl() != null) {
      System.out.println("\nIgnoring specified -dir-impl, instead using " + HdfsDirectory.class.getSimpleName());
    }

    Path indexPath = new Path(opts.getIndexPath());
    System.out.println("\nOpening index @ " + indexPath + "\n");

    Directory directory;
    try {
      directory = new HdfsDirectory(indexPath, getConf(indexPath));
    } catch (IOException e) {
      System.out.println("ERROR: could not open hdfs directory \"" + indexPath + "\"; exiting");
      e.printStackTrace(System.out);
      return 1;
    }

    try (Directory dir = directory; CheckIndex checker = new CheckIndex(dir)) {
      opts.setOut(System.out);
      return checker.doCheck(opts);
    }
  }

