  @Override
  public void writeMap(String name, MapWriter val) throws IOException {
    // As the size is not known. So, always both startTag and endTag is written
    // irrespective of number of entries in MapWriter
    startTag("lst", name, false);
    incLevel();

    val.writeMap(new MapWriter.EntryWriter() {
      @Override
      public MapWriter.EntryWriter put(CharSequence k, Object v) throws IOException {
        writeVal( null == k ? null : k.toString(), v);
        return this;
      }
    });

    decLevel();
    if (doIndent) {
      indent();
    }
    writer.write("</lst>");
  }

