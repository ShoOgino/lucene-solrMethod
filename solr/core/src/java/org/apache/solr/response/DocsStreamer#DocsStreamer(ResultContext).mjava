  public DocsStreamer(ResultContext rctx) {
    this.rctx = rctx;
    this.docs = rctx.getDocList();
    transformer = rctx.getReturnFields().getTransformer();
    docIterator = this.docs.iterator();
    fnames = rctx.getReturnFields().getLuceneFieldNames();
    onlyPseudoFields = (fnames == null && !rctx.getReturnFields().wantsAllFields() && !rctx.getReturnFields().hasPatternMatching())
        || (fnames != null && fnames.size() == 1 && SolrReturnFields.SCORE.equals(fnames.iterator().next()));

    // add non-stored DV fields that may have been requested
    if (rctx.getReturnFields().wantsAllFields()) {
      // check whether there are no additional fields
      Set<String> fieldNames = rctx.getReturnFields().getLuceneFieldNames(true);
      if (fieldNames == null) {
        dvFieldsToReturn = rctx.getSearcher().getNonStoredDVs(true);
      } else {
        dvFieldsToReturn = new HashSet<>(rctx.getSearcher().getNonStoredDVs(true)); // copy
        // add all requested fields that may be useDocValuesAsStored=false
        for (String fl : fieldNames) {
          if (rctx.getSearcher().getNonStoredDVs(false).contains(fl)) {
            dvFieldsToReturn.add(fl);
          }
        }
      }
    } else {
      if (rctx.getReturnFields().hasPatternMatching()) {
        for (String s : rctx.getSearcher().getNonStoredDVs(true)) {
          if (rctx.getReturnFields().wantsField(s)) {
            if (null == dvFieldsToReturn) {
              dvFieldsToReturn = new HashSet<>();
            }
            dvFieldsToReturn.add(s);
          }
        }
      } else if (fnames != null) {
        dvFieldsToReturn = new HashSet<>(fnames); // copy
        // here we get all non-stored dv fields because even if a user has set
        // useDocValuesAsStored=false in schema, he may have requested a field
        // explicitly using the fl parameter
        dvFieldsToReturn.retainAll(rctx.getSearcher().getNonStoredDVs(false));
      }
    }

    if (transformer != null) transformer.setContext(rctx);
  }

