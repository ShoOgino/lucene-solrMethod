  private static Set<String> calcDocValueFieldsForReturn(SolrDocumentFetcher docFetcher, ReturnFields returnFields) {
    // always return not null
    final Set<String> result = new HashSet<>();
    if (returnFields.wantsAllFields()) {
      result.addAll(docFetcher.getNonStoredDVs(true));
      // check whether there are no additional fields
      Set<String> fieldNames = returnFields.getLuceneFieldNames(true);
      if (fieldNames != null) {
        // add all requested fields that may be useDocValuesAsStored=false
        for (String fl : fieldNames) {
          if (docFetcher.getNonStoredDVs(false).contains(fl)) {
            result.add(fl);
          }
        }
      }
    } else if (returnFields.hasPatternMatching()) {
      for (String s : docFetcher.getNonStoredDVs(true)) {
        if (returnFields.wantsField(s)) {
          result.add(s);
        }
      }
    } else {
      Set<String> fnames = returnFields.getLuceneFieldNames();
      if (fnames != null) {
        result.addAll(fnames);
        // here we get all non-stored dv fields because even if a user has set
        // useDocValuesAsStored=false in schema, he may have requested a field
        // explicitly using the fl parameter
        result.retainAll(docFetcher.getNonStoredDVs(false));
      }
    }
    return result;
  }

