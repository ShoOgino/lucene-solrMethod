  // TODO move to ReturnFields ?  Or SolrDocumentFetcher ?
  public static Set<String> calcDocValueFieldsForReturn(SolrDocumentFetcher docFetcher, ReturnFields returnFields) {
    Set<String> result = null;
    if (returnFields.wantsAllFields()) {
      // check whether there are no additional fields
      Set<String> fieldNames = returnFields.getLuceneFieldNames(true);
      if (fieldNames == null) {
        result = docFetcher.getNonStoredDVs(true);
      } else {
        result = new HashSet<>(docFetcher.getNonStoredDVs(true)); // copy
        // add all requested fields that may be useDocValuesAsStored=false
        for (String fl : fieldNames) {
          if (docFetcher.getNonStoredDVs(false).contains(fl)) {
            result.add(fl);
          }
        }
      }
    } else {
      if (returnFields.hasPatternMatching()) {
        for (String s : docFetcher.getNonStoredDVs(true)) {
          if (returnFields.wantsField(s)) {
            if (null == result) {
              result = new HashSet<>();
            }
            result.add(s);
          }
        }
      } else {
        Set<String> fnames = returnFields.getLuceneFieldNames();
        if (fnames == null) {
          return null;
        }
        result = new HashSet<>(fnames); // copy
        // here we get all non-stored dv fields because even if a user has set
        // useDocValuesAsStored=false in schema, he may have requested a field
        // explicitly using the fl parameter
        result.retainAll(docFetcher.getNonStoredDVs(false));
      }
    }
    if (result != null && result.isEmpty()) {
      return null;
    }
    return result;
  }

