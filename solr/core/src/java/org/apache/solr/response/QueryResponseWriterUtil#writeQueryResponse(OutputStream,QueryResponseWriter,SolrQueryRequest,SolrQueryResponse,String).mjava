  /**
   * Writes the response writer's result to the given output stream.
   * This method inspects the specified writer to determine if it is a 
   * {@link BinaryQueryResponseWriter} or not to delegate to the approprate method.
   * @see BinaryQueryResponseWriter#write(OutputStream,SolrQueryRequest,SolrQueryResponse)
   * @see BinaryQueryResponseWriter#write(Writer,SolrQueryRequest,SolrQueryResponse)
   */
  public static void writeQueryResponse(OutputStream outputStream,
      QueryResponseWriter responseWriter, SolrQueryRequest solrRequest,
      SolrQueryResponse solrResponse, String contentType) throws IOException {
    
    if (responseWriter instanceof BinaryQueryResponseWriter) {
      BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) responseWriter;
      binWriter.write(outputStream, solrRequest, solrResponse);
    } else {
      OutputStream out = new OutputStream() {
        @Override
        public void write(int b) throws IOException {
          outputStream.write(b);
        }
        @Override
        public void flush() throws IOException {
          // We don't flush here, which allows us to flush below
          // and only flush internal buffers, not the response.
          // If we flush the response early, we trigger chunked encoding.
          // See SOLR-8669.
        }
      };
      Writer writer = buildWriter(out, ContentStreamBase.getCharsetFromContentType(contentType));
      responseWriter.write(writer, solrRequest, solrResponse);
      writer.flush();
    }
  }

