    public Object resolve(Object o, JavaBinCodec codec) throws IOException {
      if (o instanceof ResultContext) {
        writeResults((ResultContext) o, codec);
        return null; // null means we completely handled it
      }
      if (o instanceof DocList) {
        ResultContext ctx = new ResultContext();
        ctx.docs = (DocList) o;
        writeResults(ctx, codec);
        return null; // null means we completely handled it
      }
      if( o instanceof StorableField ) {
        if(schema == null) schema = solrQueryRequest.getSchema(); 
        
        StorableField f = (StorableField)o;
        SchemaField sf = schema.getFieldOrNull(f.name());
        try {
          o = getValue(sf, f);
        } 
        catch (Exception e) {
          LOG.warn("Error reading a field : " + o, e);
        }
      }
      if (o instanceof SolrDocument) {
        // Remove any fields that were not requested.
        // This typically happens when distributed search adds 
        // extra fields to an internal request
        SolrDocument doc = (SolrDocument)o;
        Iterator<Map.Entry<String, Object>> i = doc.iterator();
        while ( i.hasNext() ) {
          String fname = i.next().getKey();
          if ( !returnFields.wantsField( fname ) ) {
            i.remove();
          }
        }
        return doc;
      }
      return o;
    }

