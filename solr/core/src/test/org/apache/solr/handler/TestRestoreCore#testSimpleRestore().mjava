  @Test
  public void testSimpleRestore() throws Exception {

    int nDocs = TestReplicationHandlerBackup.indexDocs(masterClient);

    String snapshotName;
    String location;
    String params = "";

    //Use the default backup location or an externally provided location.
    if (random().nextBoolean()) {
      location = createTempDir().toFile().getAbsolutePath();
      params += "&location=" + URLEncoder.encode(location, "UTF-8");
    }

    //named snapshot vs default snapshot name
    if (random().nextBoolean()) {
      snapshotName = TestUtil.randomSimpleString(random(), 1, 5);
      params += "&name=" + snapshotName;
    }

    TestReplicationHandlerBackup.runBackupCommand(masterJetty, ReplicationHandler.CMD_BACKUP, params);

    CheckBackupStatus checkBackupStatus = new CheckBackupStatus((HttpSolrClient) masterClient, null);
    while (!checkBackupStatus.success) {
      checkBackupStatus.fetchStatus();
      Thread.sleep(1000);
    }

    //Modify existing index before we call restore.

    //Delete a few docs
    int numDeletes = TestUtil.nextInt(random(), 1, nDocs);
    for(int i=0; i<numDeletes; i++) {
      masterClient.deleteByQuery("id:" + i);
    }
    masterClient.commit();

    //Add a few more
    int moreAdds = TestUtil.nextInt(random(), 1, 100);
    for (int i=0; i<moreAdds; i++) {
      SolrInputDocument doc = new SolrInputDocument();
      doc.addField("id", i + nDocs);
      doc.addField("name", "name = " + (i + nDocs));
      masterClient.add(doc);
    }
    //Purposely not calling commit once in a while. There can be some docs which are not committed
    if (usually()) {
      masterClient.commit();
    }

    TestReplicationHandlerBackup.runBackupCommand(masterJetty, ReplicationHandler.CMD_RESTORE, params);

    while (!fetchRestoreStatus()) {
      Thread.sleep(1000);
    }

    //See if restore was successful by checking if all the docs are present again
    verifyDocs(nDocs);
  }

