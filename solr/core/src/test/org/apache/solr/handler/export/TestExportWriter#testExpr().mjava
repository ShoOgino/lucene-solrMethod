  @Test
  public void testExpr() throws Exception {
    assertU(delQ("*:*"));
    assertU(commit());
    createLargeIndex();
    SolrQueryRequest req = req("q", "*:*", "qt", "/export", "fl", "id", "sort", "id asc", "expr", "top(n=2,input(),sort=\"id desc\")");
    assertJQ(req,
        "response/numFound==100000",
        "response/docs/[0]/id=='99999'",
        "response/docs/[1]/id=='99998'"
        );
    req = req("q", "*:*", "qt", "/export", "fl", "id,sortabledv_udvas", "sort", "sortabledv_udvas asc", "expr", "unique(input(),over=\"sortabledv_udvas\")");
    String rsp = h.query(req);
    @SuppressWarnings({"unchecked"})
    Map<String, Object> rspMap = mapper.readValue(rsp, HashMap.class);
    @SuppressWarnings({"unchecked"})
    List<Map<String, Object>> docs = (List<Map<String, Object>>) Utils.getObjectByPath(rspMap, false, "/response/docs");
    assertNotNull("missing document results: " + rspMap, docs);
    assertEquals("wrong number of unique docs", 100, docs.size());
    for (int i = 0; i < 99; i++) {
      boolean found = false;
      String si = String.valueOf(i);
      for (int j = 0; j < docs.size(); j++) {
        if (docs.get(j).get("sortabledv_udvas").equals(si)) {
          found = true;
          break;
        }
      }
      assertTrue("missing value " + i + " in results", found);
    }
  }

