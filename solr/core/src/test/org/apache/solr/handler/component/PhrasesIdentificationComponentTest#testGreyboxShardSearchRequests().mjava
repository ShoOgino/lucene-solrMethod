  public void testGreyboxShardSearchRequests() throws Exception {
    final String input = "quick brown fox ran";

    final String phrase_xpath = "//lst[@name='phrases']";
    final String all_phrase_xpath = phrase_xpath + "/arr[@name='_all']";

    // phrases requested, and correct request stage / shard purpose ...
    assertQ(req("q", input,
                "phrases","true",
                ShardParams.IS_SHARD, "true",
                ShardParams.SHARDS_PURPOSE, ""+PhrasesIdentificationComponent.SHARD_PURPOSE)
            
            // this shard request should have caused stats to be returned about all phrases...
            , "10=count("+ all_phrase_xpath +"/lst)"
            // "quick" ...
            , all_phrase_xpath + "/lst[1]/lst[@name='ttf']/long[@name='multigrams_body'][.='1']"
            , all_phrase_xpath + "/lst[1]/lst[@name='ttf']/long[@name='multigrams_title'][.='0']"
            // ...
            // "brown fox"
            , all_phrase_xpath + "/lst[6]/lst[@name='ttf']/long[@name='multigrams_body'][.='3']"
            , all_phrase_xpath + "/lst[6]/lst[@name='ttf']/long[@name='multigrams_title'][.='1']"
            , all_phrase_xpath + "/lst[6]/lst[@name='df']/long[@name='multigrams_body'][.='2']"
            , all_phrase_xpath + "/lst[6]/lst[@name='df']/long[@name='multigrams_title'][.='1']"
            , all_phrase_xpath + "/lst[6]/lst[@name='conj_dc']/long[@name='multigrams_body'][.='2']"
            , all_phrase_xpath + "/lst[6]/lst[@name='conj_dc']/long[@name='multigrams_title'][.='1']"
            
            // but no computed "scores"...
            , "0=count("+phrase_xpath+"//*[@name='score'])"
            );

    // phrases requested, but incorrect request stage / shard purpose ...
    assertQ(req("q", input,
                "phrases","true",
                ShardParams.IS_SHARD, "true",
                ShardParams.SHARDS_PURPOSE, ""+ShardRequest.PURPOSE_GET_FIELDS)
            , "0=count("+ phrase_xpath +"/lst)");
    
    // phrases disabled, regardless of request stage / shard purpose ...
    assertTrue("sanity check failed, stage was modified in code w/o updating test",
               PhrasesIdentificationComponent.SHARD_PURPOSE != ShardRequest.PURPOSE_GET_FIELDS);
    assertQ(req("q", input,
                "phrases","false",
                ShardParams.IS_SHARD, "true",
                ShardParams.SHARDS_PURPOSE, ""+ShardRequest.PURPOSE_GET_FIELDS)
            , "0=count("+ phrase_xpath +"/lst)");
    assertQ(req("q", input,
                "phrases","false",
                ShardParams.IS_SHARD, "true",
                ShardParams.SHARDS_PURPOSE, ""+PhrasesIdentificationComponent.SHARD_PURPOSE)
            , "0=count("+ phrase_xpath +"/lst)");
  }

