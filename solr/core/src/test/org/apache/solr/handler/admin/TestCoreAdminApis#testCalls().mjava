  @SuppressWarnings({"unchecked"})
  public void testCalls() throws Exception {
    Map<String, Object[]> calls = new HashMap<>();
    CoreContainer mockCC = getCoreContainerMock(calls, new HashMap<>());

    ApiBag apiBag;
    try (CoreAdminHandler  coreAdminHandler = new CoreAdminHandler(mockCC)) {
       apiBag = new ApiBag(false);
       for (Api api : coreAdminHandler.getApis()) {
         apiBag.register(api, Collections.EMPTY_MAP);
       }
    }
    TestCollectionAPIs.makeCall(apiBag, "/cores", SolrRequest.METHOD.POST,
        "{create:{name: hello, instanceDir : someDir, schema: 'schema.xml'}}", mockCC);
    Object[] params = calls.get("create");
    assertEquals("hello" ,params[0]);
    assertEquals(fromJSONString("{schema : schema.xml}") ,params[2]);

    TestCollectionAPIs.makeCall(apiBag, "/cores/core1", SolrRequest.METHOD.POST,
        "{swap:{with: core2}}", mockCC);
    params = calls.get("swap");
    assertEquals("core1" ,params[0]);
    assertEquals("core2" ,params[1]);

    TestCollectionAPIs.makeCall(apiBag, "/cores/core1", SolrRequest.METHOD.POST,
        "{rename:{to: core2}}", mockCC);
    params = calls.get("rename");
    assertEquals("core1" ,params[0]);
    assertEquals("core2" ,params[1]);

    TestCollectionAPIs.makeCall(apiBag, "/cores/core1", SolrRequest.METHOD.POST,
        "{unload:{deleteIndex : true}}", mockCC);
    params = calls.get("unload");
    assertEquals("core1" ,params[0]);
    assertEquals(Boolean.TRUE ,params[1]);
  }

