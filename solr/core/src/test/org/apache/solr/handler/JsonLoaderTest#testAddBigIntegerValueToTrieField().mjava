  @Test
  public void testAddBigIntegerValueToTrieField() throws Exception {
    // Adding a BigInteger to a long field should fail
    // BigInteger.longValue() returns only the low-order 64 bits.
    try {
      updateJ(("[{'id':'1','big_integer_tl':12345678901234567890}]").replace('\'', '"'), null);
      fail("A BigInteger value should overflow a long field");
    } catch (SolrException e) {
      if ( ! (e.getCause() instanceof NumberFormatException)) {
        throw e;
      }
    }

    // Adding a BigInteger to an integer field should fail
    // BigInteger.intValue() returns only the low-order 32 bits.
    try {
      updateJ(("[{'id':'1','big_integer_ti':12345678901234567890}]").replace('\'', '"'), null);
      fail("A BigInteger value should overflow an integer field");
    } catch (SolrException e) {
      if ( ! (e.getCause() instanceof NumberFormatException)) {
        throw e;
      }
    }

  }

