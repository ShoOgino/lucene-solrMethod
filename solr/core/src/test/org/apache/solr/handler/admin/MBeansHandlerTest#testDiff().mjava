  @Test
  public void testDiff() throws Exception {
    String xml = h.query(req(
        CommonParams.QT,"/admin/mbeans",
        "stats","true",
        CommonParams.WT,"xml"
    ));
    List<ContentStream> streams = new ArrayList<>();
    streams.add(new ContentStreamBase.StringStream(xml));

    LocalSolrQueryRequest req = lrf.makeRequest(
        CommonParams.QT,"/admin/mbeans",
        "stats","true",
        CommonParams.WT,"xml",
        "diff","true");
    req.setContentStreams(streams);

    xml = h.query(req);
    NamedList<NamedList<NamedList<Object>>> diff = SolrInfoMBeanHandler.fromXML(xml);

    // The stats bean for SolrInfoMBeanHandler
    NamedList stats = (NamedList)diff.get("ADMIN").get("/admin/mbeans").get("stats");

    //System.out.println("stats:"+stats);
    Pattern p = Pattern.compile("Was: (?<was>[0-9]+), Now: (?<now>[0-9]+), Delta: (?<delta>[0-9]+)");
    String response = stats.get("ADMIN./admin/mbeans.requests").toString();
    Matcher m = p.matcher(response);
    if (!m.matches()) {
      fail("Response did not match pattern: " + response);
    }

    assertEquals(1, Integer.parseInt(m.group("delta")));
    int was = Integer.parseInt(m.group("was"));
    int now = Integer.parseInt(m.group("now"));
    assertEquals(1, now - was);

    xml = h.query(req(
        CommonParams.QT,"/admin/mbeans",
        "stats","true",
        "key","org.apache.solr.handler.admin.CollectionsHandler"
    ));
    NamedList<NamedList<NamedList<Object>>> nl = SolrInfoMBeanHandler.fromXML(xml);
    assertNotNull( nl.get("ADMIN").get("org.apache.solr.handler.admin.CollectionsHandler"));
  }

