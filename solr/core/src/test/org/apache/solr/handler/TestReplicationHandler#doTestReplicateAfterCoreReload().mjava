  @Test
  public void doTestReplicateAfterCoreReload() throws Exception {
    int docs = TEST_NIGHTLY ? 200000 : 10;
    
    //stop follower
    followerJetty.stop();


    //change solrconfig having 'replicateAfter startup' option on leader
    leader.copyConfigFile(CONF_DIR + "solrconfig-leader3.xml",
                          "solrconfig.xml");

    leaderJetty.stop();

    leaderJetty = createAndStartJetty(leader);
    leaderClient.close();
    leaderClient = createNewSolrClient(leaderJetty.getLocalPort());

    leaderClient.deleteByQuery("*:*");
    for (int i = 0; i < docs; i++)
      index(leaderClient, "id", i, "name", "name = " + i);

    leaderClient.commit();

    @SuppressWarnings({"rawtypes"})
    NamedList leaderQueryRsp = rQuery(docs, "*:*", leaderClient);
    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get("response");
    assertEquals(docs, leaderQueryResult.getNumFound());
    
    follower.setTestPort(leaderJetty.getLocalPort());
    follower.copyConfigFile(follower.getSolrConfigFile(), "solrconfig.xml");

    //start follower
    followerJetty = createAndStartJetty(follower);
    followerClient.close();
    followerClient = createNewSolrClient(followerJetty.getLocalPort());
    
    //get docs from follower and check if number is equal to leader
    @SuppressWarnings({"rawtypes"})
    NamedList followerQueryRsp = rQuery(docs, "*:*", followerClient);
    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get("response");
    assertEquals(docs, followerQueryResult.getNumFound());
    
    //compare results
    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);
    assertEquals(null, cmp);
    
    Object version = getIndexVersion(leaderClient).get("indexversion");
    
    reloadCore(leaderClient, "collection1");
    
    assertEquals(version, getIndexVersion(leaderClient).get("indexversion"));
    
    index(leaderClient, "id", docs + 10, "name", "name = 1");
    index(leaderClient, "id", docs + 20, "name", "name = 2");

    leaderClient.commit();
    
    @SuppressWarnings({"rawtypes"})
    NamedList resp =  rQuery(docs + 2, "*:*", leaderClient);
    leaderQueryResult = (SolrDocumentList) resp.get("response");
    assertEquals(docs + 2, leaderQueryResult.getNumFound());
    
    //get docs from follower and check if number is equal to leader
    followerQueryRsp = rQuery(docs + 2, "*:*", followerClient);
    followerQueryResult = (SolrDocumentList) followerQueryRsp.get("response");
    assertEquals(docs + 2, followerQueryResult.getNumFound());
    
  }

