  @Test
  public void test() throws Exception {
    MetricsHandler handler = new MetricsHandler(h.getCoreContainer());

    SolrQueryResponse resp = new SolrQueryResponse();
    handler.handleRequestBody(req(CommonParams.QT, "/admin/metrics", CommonParams.WT, "json"), resp);
    NamedList values = resp.getValues();
    assertNotNull(values.get("metrics"));
    values = (NamedList) values.get("metrics");
    System.out.println(values);
    assertNotNull(values.get("solr.jetty"));
    assertNotNull(values.get("solr.jvm"));
    assertNotNull(values.get("solr.http"));
    assertNotNull(values.get("solr.node"));
    NamedList nl = (NamedList) values.get("solr.core.collection1");
    assertNotNull(nl);
    assertNotNull(nl.get("newSearcherErrors")); // counter type
    assertNotNull(((NamedList) nl.get("newSearcherErrors")).get("requests"));
    assertEquals(0L, ((NamedList) nl.get("newSearcherErrors")).get("requests"));
    nl = (NamedList) values.get("solr.node");
    assertNotNull(nl.get("cores.loaded")); // int gauge
    assertEquals(1, ((NamedList) nl.get("cores.loaded")).get("value"));
    assertNotNull(nl.get("QUERYHANDLER./admin/authorization.clientErrors")); // timer type
    assertEquals(5, ((NamedList) nl.get("QUERYHANDLER./admin/authorization.clientErrors")).size());

    resp = new SolrQueryResponse();
    handler.handleRequestBody(req(CommonParams.QT, "/admin/metrics", CommonParams.WT, "json", "group", "jvm,jetty"), resp);
    values = resp.getValues();
    assertNotNull(values.get("metrics"));
    values = (NamedList) values.get("metrics");
    assertEquals(2, values.size());
    assertNotNull(values.get("solr.jetty"));
    assertNotNull(values.get("solr.jvm"));

    resp = new SolrQueryResponse();
    handler.handleRequestBody(req(CommonParams.QT, "/admin/metrics", CommonParams.WT, "json", "group", "jvm,jetty"), resp);
    values = resp.getValues();
    assertNotNull(values.get("metrics"));
    values = (NamedList) values.get("metrics");
    assertEquals(2, values.size());
    assertNotNull(values.get("solr.jetty"));
    assertNotNull(values.get("solr.jvm"));

    resp = new SolrQueryResponse();
    handler.handleRequestBody(req(CommonParams.QT, "/admin/metrics", CommonParams.WT, "json", "group", "jvm", "group", "jetty"), resp);
    values = resp.getValues();
    assertNotNull(values.get("metrics"));
    values = (NamedList) values.get("metrics");
    assertEquals(2, values.size());
    assertNotNull(values.get("solr.jetty"));
    assertNotNull(values.get("solr.jvm"));

    resp = new SolrQueryResponse();
    handler.handleRequestBody(req(CommonParams.QT, "/admin/metrics", CommonParams.WT, "json", "group", "node", "type", "counter"), resp);
    values = resp.getValues();
    assertNotNull(values.get("metrics"));
    values = (NamedList) values.get("metrics");
    assertEquals(1, values.size());
    assertNotNull(values.get("solr.node"));
    assertNull(values.get("QUERYHANDLER./admin/authorization.errors")); // this is a timer node
  }

