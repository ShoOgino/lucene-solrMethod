  @Test
  public void testSQLException() throws Exception {

    new UpdateRequest()
        .add(id, "1", "text_t", "XXXX XXXX", "str_s", "a", "field_i", "7")
        .add(id, "2", "text_t", "XXXX XXXX", "str_s", "b", "field_i", "8")
        .add(id, "3", "text_t", "XXXX XXXX", "str_s", "a", "field_i", "20")
        .add(id, "4", "text_t", "XXXX XXXX", "str_s", "b", "field_i", "11")
        .add(id, "5", "text_t", "XXXX XXXX", "str_s", "c", "field_i", "30")
        .add(id, "6", "text_t", "XXXX XXXX", "str_s", "c", "field_i", "40")
        .add(id, "7", "text_t", "XXXX XXXX", "str_s", "c", "field_i", "50")
        .add(id, "8", "text_t", "XXXX XXXX", "str_s", "c", "field_i", "60")

        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);

    String baseUrl = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+"/"+COLLECTIONORALIAS;

    SolrParams sParams = mapParams(CommonParams.QT, "/sql", "aggregationMode", "map_reduce",
        "stmt", "select id, str_s from collection1 where text_t='XXXX' order by field_iff desc");

    SolrStream solrStream = new SolrStream(baseUrl, sParams);
    Tuple tuple = getTuple(new ExceptionStream(solrStream));
    assert (tuple.EOF);
    assert (tuple.EXCEPTION);
    assert (tuple.getException().contains("Column 'field_iff' not found in any table"));

    sParams = mapParams(CommonParams.QT, "/sql",
        "stmt", "select id, field_iff, str_s from collection1 where text_t='XXXX' order by field_iff desc");

    solrStream = new SolrStream(baseUrl, sParams);
    tuple = getTuple(new ExceptionStream(solrStream));
    assert (tuple.EOF);
    assert (tuple.EXCEPTION);

    assert (tuple.getException().contains("Column 'field_iff' not found in any table"));

    sParams = mapParams(CommonParams.QT, "/sql", "aggregationMode", "map_reduce",
        "stmt",
        "select str_s, count(*), sum(field_iff), min(field_i), max(field_i), cast(avg(1.0 * field_i) as float) from collection1 where text_t='XXXX' group by str_s having ((sum(field_iff) = 19) AND (min(field_i) = 8))");

    solrStream = new SolrStream(baseUrl, sParams);
    tuple = getTuple(new ExceptionStream(solrStream));
    assert (tuple.EOF);
    assert (tuple.EXCEPTION);
    assert (tuple.getException().contains("Column 'field_iff' not found in any table"));

    sParams = mapParams(CommonParams.QT, "/sql", "aggregationMode", "map_reduce",
        "stmt",
        "select str_s, count(*), blah(field_i), min(field_i), max(field_i), cast(avg(1.0 * field_i) as float) from collection1 where text_t='XXXX' group by str_s having ((sum(field_i) = 19) AND (min(field_i) = 8))");

    solrStream = new SolrStream(baseUrl, sParams);
    tuple = getTuple(new ExceptionStream(solrStream));
    assert (tuple.EOF);
    assert (tuple.EXCEPTION);
    assert (tuple.getException().contains("No match found for function signature blah"));
  }

