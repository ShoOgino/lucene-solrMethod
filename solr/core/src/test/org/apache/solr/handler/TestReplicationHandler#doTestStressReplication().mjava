  @Test
  public void doTestStressReplication() throws Exception {
    //change solrconfig on slave
    //this has no entry for pollinginterval
    slave.copyConfigFile(CONF_DIR + "solrconfig-slave1.xml", "solrconfig.xml");
    slaveJetty.stop();
    slaveJetty = createJetty(slave);
    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());
    
    master.copyConfigFile(CONF_DIR + "solrconfig-master3.xml", "solrconfig.xml");
    masterJetty.stop();
    masterJetty = createJetty(master);
    masterClient = createNewSolrServer(masterJetty.getLocalPort());

    masterClient.deleteByQuery("*:*");
    slaveClient.deleteByQuery("*:*");
    slaveClient.commit();
 
    int maxDocs = TEST_NIGHTLY ? 1000 : 200;
    int rounds = TEST_NIGHTLY ? 80 : 10;
    int totalDocs = 0;
    int id = 0;
    for (int x = 0; x < rounds; x++) {
      
      // we randomly trigger a configuration replication
      if (random().nextBoolean()) {
        master.copyConfigFile(CONF_DIR + "schema-replication" + (random().nextInt(2) + 1) + ".xml", "schema.xml");
      }
      
      int docs = random().nextInt(maxDocs);
      for (int i = 0; i < docs; i++) {
        index(masterClient, "id", id++, "name", "name = " + i);
      }
      
      totalDocs += docs;
      masterClient.commit();
      
      NamedList masterQueryRsp = rQuery(totalDocs, "*:*", masterClient);
      SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp
          .get("response");
      assertEquals(totalDocs, masterQueryResult.getNumFound());
      
      // snappull
      pullFromMasterToSlave();
      
      // get docs from slave and check if number is equal to master
      NamedList slaveQueryRsp = rQuery(totalDocs, "*:*", slaveClient);
      SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp
          .get("response");
      assertEquals(totalDocs, slaveQueryResult.getNumFound());
      // compare results
      String cmp = BaseDistributedSearchTestCase.compare(masterQueryResult,
          slaveQueryResult, 0, null);
      assertEquals(null, cmp);
      
      assertVersions(masterClient, slaveClient);
      
    }

    // NOTE: at this point, the slave is not polling any more
    // restore it.
    slave.copyConfigFile(CONF_DIR + "solrconfig-slave.xml", "solrconfig.xml");
    slaveJetty.stop();
    slaveJetty = createJetty(slave);
    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());
  }

