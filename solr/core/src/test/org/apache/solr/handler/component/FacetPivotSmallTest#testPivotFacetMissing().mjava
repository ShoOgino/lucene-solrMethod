  public void testPivotFacetMissing() throws Exception {
    // Test facet.missing=true with diff sorts
    index();
    indexMissing();

    SolrParams missingA = params("q", "*:*",
        "rows", "0",
        "facet", "true",
        "facet.pivot", "place_t,company_t",
        // default facet.sort
        FacetParams.FACET_MISSING, "true");

    final String facetPivotPrefix = "//lst[@name='facet_counts']/lst[@name='facet_pivot']/arr[@name='place_t,company_t']/lst";
    SolrQueryRequest req = req(missingA);
    assertQ(req, facetPivotPrefix + "/arr[@name='pivot'][count(.) > 0]",   // not enough values for pivot
        facetPivotPrefix + "[7]/null[@name='value'][.='']",   // not the missing place value
        facetPivotPrefix + "[7]/int[@name='count'][.=2]",       // wrong missing place count
        facetPivotPrefix + "[7]/arr[@name='pivot'][count(.) > 0]", // not enough sub-pivots for missing place
        facetPivotPrefix + "[7]/arr[@name='pivot']/lst[6]/null[@name='value'][.='']", // not the missing company value
        facetPivotPrefix + "[7]/arr[@name='pivot']/lst[6]/int[@name='count'][.=1]", // wrong missing company count
        facetPivotPrefix + "[7]/arr[@name='pivot']/lst[6][not(arr[@name='pivot'])]" // company shouldn't have sub-pivots
    );

    SolrParams missingB = SolrParams.wrapDefaults(missingA,
        params(FacetParams.FACET_LIMIT, "4",
            "facet.sort", "index"));


    req = req(missingB);
    assertQ(req, facetPivotPrefix + "/arr[@name='pivot'][count(.) > 0]",   // not enough values for pivot
        facetPivotPrefix + "[5]/null[@name='value'][.='']",   // not the missing place value
        facetPivotPrefix + "[5]/int[@name='count'][.=2]",       // wrong missing place count
        facetPivotPrefix + "[5]/arr[@name='pivot'][count(.) > 0]", // not enough sub-pivots for missing place
        facetPivotPrefix + "[5]/arr[@name='pivot']/lst[5]/null[@name='value'][.='']", // not the missing company value
        facetPivotPrefix + "[5]/arr[@name='pivot']/lst[5]/int[@name='count'][.=1]", // wrong missing company count
        facetPivotPrefix + "[5]/arr[@name='pivot']/lst[5][not(arr[@name='pivot'])]" // company shouldn't have sub-pivots
    );
  }

