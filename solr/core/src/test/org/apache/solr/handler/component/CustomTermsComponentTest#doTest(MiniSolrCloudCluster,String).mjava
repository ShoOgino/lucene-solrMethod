  private static void doTest(final MiniSolrCloudCluster cluster, final String collection) throws Exception {

    // add some documents
    final String id = "id";
    final String f1 = "a_t";
    final String f2 = "b_t";
    final String v1 = "bee";
    final String v2 = "buzz";
    {
      new UpdateRequest()
          .add(sdoc(id, 1, f1, v1, f2, v2+" "+v2+" "+v2))
          .add(sdoc(id, 2, f1, v1+" "+v1, f2, v2+" "+v2))
          .add(sdoc(id, 3, f1, v1+" "+v1+" "+v1, f2, v2))
          .commit(cluster.getSolrClient(), collection);
    }

    // search for the documents' terms ...
    final String defaultHandlerName = "/select";

    // search with the default handler ...
    final String shards = findAndCheckTerms(cluster, collection,
        defaultHandlerName,
        null, // ... without specifying shards
        (random().nextBoolean() ? null : f1), v1,
        (random().nextBoolean() ? null : f2), v2,
        null);

    // search with the default handler ...
    findAndCheckTerms(cluster, collection,
        defaultHandlerName,
        shards, // ... with specified shards, but all valid
        (random().nextBoolean() ? null : f1), v1,
        (random().nextBoolean() ? null : f2), v2,
        null);
    
    ignoreException("not on the shards whitelist");
    // this case should fail
    findAndCheckTerms(cluster, collection,
        defaultHandlerName,
        shards + ",http://" + DEAD_HOST_1, // ... with specified shards with one invalid
        (random().nextBoolean() ? null : f1), v1,
        (random().nextBoolean() ? null : f2), v2,
        "No live SolrServers available to handle this request");
    unIgnoreException("not on the shards whitelist");

    // configure a custom handler ...
    final String customHandlerName;
    if (random().nextBoolean()) {
      // ... with a shards whitelist
      customHandlerName = addCustomHandlerWithTermsComponentConfig(cluster, collection, defaultHandlerName, shards);
    } else {
      // ... with a custom terms component that disregards shards whitelist logic
      customHandlerName = addCustomHandlerWithCustomTermsComponent(cluster, collection, defaultHandlerName);
    }

    // search with the custom handler ...
    findAndCheckTerms(cluster, collection,
        customHandlerName,
        shards, // ... with specified shards
        (random().nextBoolean() ? null : f1), v1,
        (random().nextBoolean() ? null : f2), v2,
        null);

  }

