  public void testLogBeforeExecute(Logger logger) {
    Level level = logger.getLevel();
    
    LoggerContext ctx = (LoggerContext) LogManager.getContext(false);
    LoggerConfig config = ctx.getConfiguration().getLoggerConfig(logger.getName());
    config.setLevel(Level.DEBUG);
    config.addAppender(appender, Level.DEBUG, null);
    ctx.updateLoggers();

    try {
      assertQ(req("q", "*:*"));
      Matcher matcher = null;
      boolean foundDebugMsg = false;
      String output = "";
      for (int msgIdx = 0; msgIdx < 100; ++msgIdx) {
        output = writer.toString();
        matcher = Pattern.compile("DEBUG.*q=\\*:\\*.*").matcher(output);
        if (matcher.find()) {
          foundDebugMsg = true;
          break;
        }
        try {
          Thread.sleep(10);
        } catch (InterruptedException ie) {
          ;
        }
      }
      assertTrue("Should have found debug-level message. Found " + output, foundDebugMsg);
      final String group = matcher.group();
      final String msg = "Should not have post query information";
      assertFalse(msg, group.contains("hits"));
      assertFalse(msg, group.contains("status"));
      assertFalse(msg, group.contains("QTime"));
    } finally {
      config.setLevel(level);
      config.removeAppender(appender.getName());
      ctx.updateLoggers();
    }
  }

