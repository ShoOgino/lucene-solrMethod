  public void testLogBeforeExecute(Logger logger) throws InterruptedException {
    Level level = logger.getLevel();

    LoggerContext ctx = (LoggerContext) LogManager.getContext(false);
    LoggerConfig config = ctx.getConfiguration().getLoggerConfig(logger.getName());
    config.setLevel(Level.DEBUG);
    config.addAppender(appender, Level.DEBUG, null);
    ctx.updateLoggers();

    try {
      assertQ(req("q", "*:*"));

      TimeOut timeOut = new TimeOut(10, TimeUnit.SECONDS, TimeSource.NANO_TIME);
      boolean found = false;
      Matcher matcher;
      String pat = "DEBUG.*q=\\*:\\*.*";
      String output = "";
      Pattern pattern = Pattern.compile(pat);
      do {
        output = writer.toString();
        matcher = pattern.matcher(output);
        found = matcher.find();
        if (found) {
          break;
        }
        timeOut.sleep(10);
      } while (timeOut.hasTimedOut() == false);
      assertTrue("Did not find expected pattern: '" + pat + "' in output: '" + output + "'", found);
      final String group = matcher.group();
      final String msg = "Should not have post query information";
      assertFalse(msg, group.contains("hits"));
      assertFalse(msg, group.contains("status"));
      assertFalse(msg, group.contains("QTime"));
    } finally {
      config.setLevel(level);
      config.removeAppender(appender.getName());
      ctx.updateLoggers();
    }
  }

