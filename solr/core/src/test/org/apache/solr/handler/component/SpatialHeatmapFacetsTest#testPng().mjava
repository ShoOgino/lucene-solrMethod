  @Test
  @Repeat(iterations = 3)
  public void testPng() {
    //We test via round-trip randomized data:

    // Make random data
    int columns = random().nextInt(100) + 1;
    int rows = random().nextInt(100) + 1;
    int[] counts = new int[columns * rows];
    for (int i = 0; i < counts.length; i++) {
      final int ri = random().nextInt(10);
      if (ri >= 0 && ri <= 3) {
        counts[i] = ri; // 0 thru 3 will be made common
      } else if (ri > 3) {
        counts[i] = Math.abs(random().nextInt());//lots of other possible values up to max
      }
    }
    // Round-trip
    final byte[] bytes = SpatialHeatmapFacets.asPngBytes(columns, rows, counts, null);
    int[] countsOut = random().nextBoolean() ? new int[columns * rows] : null;
    int base = 0;
    if (countsOut != null) {
      base = 9;
      Arrays.fill(countsOut, base);
    }
    countsOut = SpatialHeatmapFacets.addPngToIntArray(bytes, countsOut);
    // Test equal
    assertEquals(counts.length, countsOut.length);
    for (int i = 0; i < countsOut.length; i++) {
      assertEquals(counts[i], countsOut[i] - base);//back out the base input to prove we added
    }
  }

