  @Test
  public void testElevationReloading() throws Exception {
    try {
      init("schema12.xml");
      String testfile = "data-elevation.xml";
      File configFile = new File(h.getCore().getDataDir(), testfile);
      writeElevationConfigFile(configFile, "aaa", "A");

      QueryElevationComponent comp = (QueryElevationComponent) h.getCore().getSearchComponent("elevate");
      NamedList<String> args = new NamedList<>();
      args.add(QueryElevationComponent.CONFIG_FILE, testfile);
      comp.init(args);
      comp.inform(h.getCore());

      QueryElevationComponent.ElevationProvider elevationProvider;

      try (SolrQueryRequest req = req()) {
        elevationProvider = comp.getElevationProvider(req.getSearcher().getIndexReader(), req.getCore());
        assertTrue(elevationProvider.getElevationForQuery("aaa").elevatedIds.contains(new BytesRef("A")));
        assertNull(elevationProvider.getElevationForQuery("bbb"));
      }

      // now change the file
      writeElevationConfigFile(configFile, "bbb", "B");

      // With no index change, we get the same index reader, so the elevationProviderCache returns the previous ElevationProvider without the change.
      try (SolrQueryRequest req = req()) {
        elevationProvider = comp.getElevationProvider(req.getSearcher().getIndexReader(), req.getCore());
        assertTrue(elevationProvider.getElevationForQuery("aaa").elevatedIds.contains(new BytesRef("A")));
        assertNull(elevationProvider.getElevationForQuery("bbb"));
      }

      // Index a new doc to get a new index reader.
      assertU(adoc("id", "10000"));
      assertU(commit());

      // Check that we effectively reload a new ElevationProvider for a different index reader (so two entries in elevationProviderCache).
      try (SolrQueryRequest req = req()) {
        elevationProvider = comp.getElevationProvider(req.getSearcher().getIndexReader(), req.getCore());
        assertNull(elevationProvider.getElevationForQuery("aaa"));
        assertTrue(elevationProvider.getElevationForQuery("bbb").elevatedIds.contains(new BytesRef("B")));
      }

      // Now change the config file again.
      writeElevationConfigFile(configFile, "ccc", "C");

      // Without index change, but calling a different method that clears the elevationProviderCache, so we should load a new ElevationProvider.
      int elevationRuleNumber = comp.loadElevationConfiguration(h.getCore());
      assertEquals(1, elevationRuleNumber);
      try (SolrQueryRequest req = req()) {
        elevationProvider = comp.getElevationProvider(req.getSearcher().getIndexReader(), req.getCore());
        assertNull(elevationProvider.getElevationForQuery("aaa"));
        assertNull(elevationProvider.getElevationForQuery("bbb"));
        assertTrue(elevationProvider.getElevationForQuery("ccc").elevatedIds.contains(new BytesRef("C")));
      }
    } finally {
      delete();
    }
  }

