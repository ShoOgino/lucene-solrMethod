  @Test
  public void testEmptyBackups() throws Exception {
    final File backupDir = createTempDir().toFile();
    final BackupStatusChecker backupStatus = new BackupStatusChecker(masterClient);
    
    { // initial request w/o any committed docs
      final String backupName = "empty_backup1";
      final GenericSolrRequest req = new GenericSolrRequest
        (SolrRequest.METHOD.GET, "/replication",
         params("command", "backup",
                "location", backupDir.getAbsolutePath(),
                "name", backupName));
      final TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS, TimeSource.NANO_TIME);
      final SimpleSolrResponse rsp = req.process(masterClient);

      final String dirName = backupStatus.waitForBackupSuccess(backupName, timeout);
      assertEquals("Did not get expected dir name for backup, did API change?",
                   "snapshot.empty_backup1", dirName);
      assertTrue(dirName + " doesn't exist in expected location for backup " + backupName,
                 new File(backupDir, dirName).exists());
    }
    
    index(masterClient, "id", "1", "name", "foo");
    
    { // second backup w/uncommited doc
      final String backupName = "empty_backup2";
      final GenericSolrRequest req = new GenericSolrRequest
        (SolrRequest.METHOD.GET, "/replication",
         params("command", "backup",
                "location", backupDir.getAbsolutePath(),
                "name", backupName));
      final TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS, TimeSource.NANO_TIME);
      final SimpleSolrResponse rsp = req.process(masterClient);
      
      final String dirName = backupStatus.waitForBackupSuccess(backupName, timeout);
      assertEquals("Did not get expected dir name for backup, did API change?",
                   "snapshot.empty_backup2", dirName);
      assertTrue(dirName + " doesn't exist in expected location for backup " + backupName,
                 new File(backupDir, dirName).exists());
    }

    // confirm backups really are empty
    for (int i = 1; i <=2; i++) {
      final String name = "snapshot.empty_backup"+i;
      try (Directory dir = new SimpleFSDirectory(new File(backupDir, name).toPath());
           IndexReader reader = DirectoryReader.open(dir)) {
        assertEquals(name + " is not empty", 0, reader.numDocs());
      }
    }
  }

