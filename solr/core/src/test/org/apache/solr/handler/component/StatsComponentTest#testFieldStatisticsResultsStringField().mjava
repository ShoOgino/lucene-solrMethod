  public void testFieldStatisticsResultsStringField() throws Exception {
    String f = "active_s";

    SolrCore core = h.getCore();
    assertU(adoc("id", "1", f, "string1"));
    assertU(adoc("id", "2", f, "string2"));
    assertU(adoc("id", "3", f, "string3"));
    assertU(adoc("id", "4"));
    assertU(commit());

    Map<String, String> args = new HashMap<>();
    args.put(CommonParams.Q, "*:*");
    args.put(StatsParams.STATS, "true");
    args.put(StatsParams.STATS_FIELD, f);
    args.put("f." + f +".stats.calcdistinct","true");
    args.put("indent", "true");

    for (SolrParams baseParams : new SolrParams[] {
        params("stats.field", f, "stats", "true", "f." + f +".stats.calcdistinct","true"),
        params("json.facet", // note: no distinctValues support
            "{min:'min("+f+")',count:'countvals("+f+")',missing:'missing("+f+")',max:'max("+f+")', " +
                " countDistinct:'unique("+f+")'}")
    }) {
      final boolean json = (null != baseParams.get("json.facet"));
      assertQ("test string statistics values", req(baseParams, "q", "*:*", "rows", "0"),
          "//str[@name='min'][.='string1']",
          "//str[@name='max'][.='string3']",
          "//long[@name='count'][.='3']",
          "//long[@name='missing'][.='1']",
          "//long[@name='countDistinct'][.='3']",
          json ? "//*": "count(//arr[@name='distinctValues']/str)=3"); // SOLR-14011
    }

    // string field cardinality
    for (SolrParams baseParams : new SolrParams[] {
        params("stats.field", "{!cardinality=true}"+f, "stats", "true"),
        params("json.facet", "{cardinality:'hll("+f+")'}")
    }) {
      assertQ("test string cardinality",
          req(baseParams, "q", "*:*", "rows", "0"),
          "//long[@name='cardinality'][.='3']"
      );
    }

    String strFunc = "strdist(\"string22\","+ f +",edit)";
    // stats over a string function
    for (SolrParams baseParams : new SolrParams[] {
        params("stats.field", "{!func}"+strFunc, "stats", "true"),
        params("json.facet", // note: no function support for unique
            "{min:'min("+strFunc+")',count:'countvals("+strFunc+")',missing:'missing("+strFunc+")'," +
                "sum:'sum("+ strFunc +")', max:'max("+strFunc+")'}")
    }) {
      final boolean json = (null != baseParams.get("json.facet"));
      assertQ("strdist func stats",
          req(baseParams, "q", "*:*", "rows", "0")
          , "//double[@name='min'][.='0.75']"
          , "//double[@name='max'][.='0.875']"
          , "//double[@name='sum'][.='2.375']"
          , json? "//*": "//long[@name='count'][.='3']" // SOLR-14010
          ,"//long[@name='missing'][.='1']"
      );
    }
  }

