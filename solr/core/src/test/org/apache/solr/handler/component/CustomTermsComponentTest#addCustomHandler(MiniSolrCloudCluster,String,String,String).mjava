  private static String addCustomHandler(final MiniSolrCloudCluster cluster, final String collection,
      final String defaultHandlerName, final String shardsWhitelist) throws Exception {

    // determine custom handler name (the exact name should not matter)
    final String customHandlerName = defaultHandlerName+"_custom"+random().nextInt();

    // determine custom terms component name (the exact name should not matter)
    final String customTermsComponentName = TermsComponent.COMPONENT_NAME+"_custom"+random().nextInt();

    // determine terms component class name and attributes
    final String customTermsComponentClass;
    final String customTermsComponentAttributesJSON;
    if (shardsWhitelist != null) {
      customTermsComponentClass = TermsComponent.class.getName();
      customTermsComponentAttributesJSON =
          "    '"+HttpShardHandlerFactory.INIT_SHARDS_WHITELIST+"' : '"+shardsWhitelist+"',\n";
    } else {
      customTermsComponentClass = CustomTermsComponent.class.getName();
      customTermsComponentAttributesJSON = "";
    }

    // add custom component
    cluster.getSolrClient().request(
        new ConfigRequest(
            "{\n" +
            "  'add-searchcomponent': {\n" +
            customTermsComponentAttributesJSON +
            "    'name': '"+customTermsComponentName+"',\n" +
            "    'class': '"+customTermsComponentClass+"'\n" +
            "  }\n" +
            "}"),
        collection);

    // add custom handler
    cluster.getSolrClient().request(
        new ConfigRequest(
            "{\n" +
            "  'add-requesthandler': {\n" +
            "    'name' : '"+customHandlerName+"',\n" +
            "    'class' : '"+SearchHandler.class.getName()+"',\n" +
            "    'components' : [ '"+QueryComponent.COMPONENT_NAME+"', '"+customTermsComponentName+"' ]\n" +
            "  }\n" +
            "}"),
        collection);

    return customHandlerName;
  }

