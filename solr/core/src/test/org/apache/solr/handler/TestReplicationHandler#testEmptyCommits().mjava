  /**
   * Verify that empty commits and/or commits with openSearcher=false
   * on the leader do not cause subsequent replication problems on the follower
   */
  public void testEmptyCommits() throws Exception {
    clearIndexWithReplication();
    
    // add a doc to leader and commit
    index(leaderClient, "id", "1", "name", "empty1");
    emptyUpdate(leaderClient, "commit", "true");
    // force replication
    pullFromLeaderToFollower();
    // verify doc is on follower
    rQuery(1, "name:empty1", followerClient);
    assertVersions(leaderClient, followerClient);

    // do a completely empty commit on leader and force replication
    emptyUpdate(leaderClient, "commit", "true");
    pullFromLeaderToFollower();

    // add another doc and verify follower gets it
    index(leaderClient, "id", "2", "name", "empty2");
    emptyUpdate(leaderClient, "commit", "true");
    // force replication
    pullFromLeaderToFollower();

    rQuery(1, "name:empty2", followerClient);
    assertVersions(leaderClient, followerClient);

    // add a third doc but don't open a new searcher on leader
    index(leaderClient, "id", "3", "name", "empty3");
    emptyUpdate(leaderClient, "commit", "true", "openSearcher", "false");
    pullFromLeaderToFollower();
    
    // verify follower can search the doc, but leader doesn't
    rQuery(0, "name:empty3", leaderClient);
    rQuery(1, "name:empty3", followerClient);

    // final doc with hard commit, follower and leader both showing all docs
    index(leaderClient, "id", "4", "name", "empty4");
    emptyUpdate(leaderClient, "commit", "true");
    pullFromLeaderToFollower();

    String q = "name:(empty1 empty2 empty3 empty4)";
    rQuery(4, q, leaderClient);
    rQuery(4, q, followerClient);
    assertVersions(leaderClient, followerClient);

  }

