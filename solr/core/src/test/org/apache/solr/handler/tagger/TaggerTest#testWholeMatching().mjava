  /** whole matching, no sub-tags */
  public void testWholeMatching() throws Exception {
    baseParams.set("overlaps", "NO_SUB");
    baseParams.set("fq", "NOT name:(of the)");//test filtering
    indexAndBuild();

    //these match nothing
    assertTags(reqDoc(""));
    assertTags(reqDoc(" ") );
    assertTags(reqDoc("the") );

    //partial on N.London_Business_School matches nothing
    assertTags(reqDoc("school") );
    assertTags(reqDoc("a school") );
    assertTags(reqDoc("school a") );
    assertTags(reqDoc("school City") );

    String doc;

    doc = "school business london";//backwards
    assertTags(reqDoc(doc), tt(doc,"london", 0, N.London));

    doc = "of London Business School";
    assertTags(reqDoc(doc),   //no plain London (sub-tag)
        tt(doc, "London Business School", 0, N.London_Business_School));

    //More interesting
    doc = "City of London Business School";
    assertTags(reqDoc(doc),   //no plain London (sub-tag)
        tt(doc, "City of London", 0, N.City_of_London),
        tt(doc, "London Business School", 0, N.London_Business_School));

    doc = "City of London Business";
    assertTags(reqDoc(doc),   //no plain London (sub-tag) no Business (partial-match)
        tt(doc, "City of London", 0, N.City_of_London));

    doc = "London Business magazine";
    assertTags(reqDoc(doc),  //Just London; L.B.S. fails
        tt(doc, "London", 0, N.London));
  }

