  // simple percentiles test
  public void testPercentiles() throws Exception {
    
    // NOTE: deliberately not in numeric order
    String percentiles = "10.0,99.9,1.0,2.0,20.0,30.0,40.0,50.0,60.0,70.0,80.0,98.0,99.0";
    List <String> percentilesList = StrUtils.splitSmart(percentiles, ',');
    
    // test empty case
    try (SolrQueryRequest query = req("q", "*:*", "stats", "true", "stats.field",
        "{!percentiles='" + percentiles + "'}stat_f")) {
      SolrQueryResponse rsp = h.queryAndResponse(null, query);
      NamedList<Double> pout = extractPercentils(rsp, "stat_f");
      for (int i = 0; i < percentilesList.size(); i++) {
        // ensure exact order, but all values should be null (empty result set)
        assertEquals(percentilesList.get(i), pout.getName(i));
        assertNull(pout.getVal(i));
      }
    }
    
    int id = 0;
    // add trivial docs to test basic percentiles
    for (int i = 0; i < 100; i++) {
      // add the same values multiple times (diff docs)
      for (int j =0; j < 5; j++) {
        assertU(adoc("id", ++id+"", "stat_f", ""+i));
      }
    }

    assertU(commit());

    try (SolrQueryRequest query = req("q", "*:*", "stats", "true",
        "stats.field", "{!percentiles='" + percentiles + "'}stat_f")) {
      SolrQueryResponse rsp = h.queryAndResponse(null, query);
      NamedList<Double> pout = extractPercentils(rsp, "stat_f");
      for (int i = 0; i < percentilesList.size(); i++) { 
        String p = percentilesList.get(i);
        assertEquals(p, pout.getName(i));
        assertEquals(Double.parseDouble(p), pout.getVal(i), 1.0D);
                     
      }
    }
    
    // test request for no percentiles
    try (SolrQueryRequest query = req("q", "*:*", "stats", "true",
        "stats.field", "{!percentiles=''}stat_f")) {
      SolrQueryResponse rsp = h.queryAndResponse(null, query);
      NamedList<Double> pout = extractPercentils(rsp, "stat_f");
      assertNull(pout);
    }

    // non-numeric types don't support percentiles
    assertU(adoc("id", ++id+"", "stat_dt", "1999-05-03T04:55:01Z"));
    assertU(adoc("id", ++id+"", "stat_s", "cow"));
    
    assertU(commit());

    try (SolrQueryRequest query = req("q", "*:*", "stats", "true",
        "stats.field", "{!percentiles='" + percentiles + "'}stat_dt",
        "stats.field", "{!percentiles='" + percentiles + "'}stat_s")) {
      SolrQueryResponse rsp = h.queryAndResponse(null, query);
      assertNull(extractPercentils(rsp, "stat_dt"));
      assertNull(extractPercentils(rsp, "stat_s"));
    }
    
  }

