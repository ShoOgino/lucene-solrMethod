  private static SolrQueryResponse v2ApiInvoke(ApiBag bag, String uri, String method, SolrParams params, InputStream payload) {
    if (params == null) params = new ModifiableSolrParams();
    SolrQueryResponse rsp = new SolrQueryResponse();
    HashMap<String, String> templateVals = new HashMap<>();
    Api[] currentApi = new Api[1];

    SolrQueryRequestBase req = new SolrQueryRequestBase(null, params) {

      @Override
      public Map<String, String> getPathTemplateValues() {
        return templateVals;
      }

      @Override
      protected Map<String, JsonSchemaValidator> getValidators() {
        return currentApi[0] == null?
            Collections.emptyMap():
            currentApi[0].getCommandSchema();
      }

      @Override
      public Iterable<ContentStream> getContentStreams() {
        return Collections.singletonList(new ContentStreamBase() {
          @Override
          public InputStream getStream() throws IOException {
            return payload;
          }
        });

      }
    };
    Api api = bag.lookup(uri, method, templateVals);
    currentApi[0] = api;


    api.call(req, rsp);
    return rsp;

  }

