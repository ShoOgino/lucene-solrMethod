  private void testBasicGroupingFloatDoublePoints() throws Exception {
    try {

      Random random = random();
      int r = random.nextInt(2);
      String[] intOrLong = {"field_f_p", "field_d_p"};
      String[] facetOrMap = {"facet", "map_reduce"};
      String field = intOrLong[r];
      r = random.nextInt(2);
      String mode = facetOrMap[r];

      CloudJettyRunner jetty = this.cloudJettys.get(0);

      del("*:*");

      commit();

      indexr("id", "1", "text", "XXXX XXXX", "str_s", "a", field, "7.0");
      indexr("id", "2", "text", "XXXX XXXX", "str_s", "b", field, "8.0");
      indexr("id", "3", "text", "XXXX XXXX", "str_s", "a", field, "20.0");
      indexr("id", "4", "text", "XXXX XXXX", "str_s", "b", field, "11.0");
      indexr("id", "5", "text", "XXXX XXXX", "str_s", "c", field, "30.0");
      indexr("id", "6", "text", "XXXX XXXX", "str_s", "c", field, "40.0");
      indexr("id", "7", "text", "XXXX XXXX", "str_s", "c", field, "50.0");
      indexr("id", "8", "text", "XXXX XXXX", "str_s", "c", field, "60.0");
      indexr("id", "9", "text", "XXXX XXXY", "str_s", "d", field, "70.0");
      commit();

      SolrParams sParams = mapParams(CommonParams.QT, "/sql", "aggregationMode", mode,
          "stmt", "select str_s, count(*), sum("+field+"), min("+field+"), max("+field+"), avg("+field+") from collection1 where text='XXXX' group by str_s order by sum("+field+") asc limit 2");

      SolrStream solrStream = new SolrStream(jetty.url, sParams);
      List<Tuple> tuples = getTuples(solrStream);

      //Only two results because of the limit.
      assert(tuples.size() == 2);
      Tuple tuple;

      tuple = tuples.get(0);
      assert(tuple.get("str_s").equals("b"));
      assertEquals(tuple.getDouble("EXPR$1"), 2, 0.0); //count(*)
      assertEquals(tuple.getDouble("EXPR$2"), 19, 0.0); //sum(field_i)
      assertEquals(tuple.getDouble("EXPR$3"), 8, 0.0); //min(field_i)
      assertEquals(tuple.getDouble("EXPR$4"), 11, 0.0); //max(field_i)
      assertEquals(tuple.getDouble("EXPR$5"), 9.5, 0.0); //avg(field_i)

      tuple = tuples.get(1);
      assert(tuple.get("str_s").equals("a"));
      assertEquals(tuple.getDouble("EXPR$1"), 2, 0.0); //count(*)
      assertEquals(tuple.getDouble("EXPR$2"), 27, 0.0); //sum(field_i)
      assertEquals(tuple.getDouble("EXPR$3"), 7, 0.0); //min(field_i)
      assertEquals(tuple.getDouble("EXPR$4"), 20, 0.0); //max(field_i)
      assertEquals(tuple.getDouble("EXPR$5"), 13.5, 0.0); //avg(field_i)



    } finally {
      delete();
    }
  }

