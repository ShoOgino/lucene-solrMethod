  private void testSQLException() throws Exception {
    try {

      CloudJettyRunner jetty = this.cloudJettys.get(0);

      del("*:*");

      commit();

      indexDoc(sdoc("id", "1", "text", "XXXX XXXX", "str_s", "a", "field_i", "7"));
      indexDoc(sdoc("id", "2", "text", "XXXX XXXX", "str_s", "b", "field_i", "8"));
      indexDoc(sdoc("id", "3", "text", "XXXX XXXX", "str_s", "a", "field_i", "20"));
      indexDoc(sdoc("id", "4", "text", "XXXX XXXX", "str_s", "b", "field_i", "11"));
      indexDoc(sdoc("id", "5", "text", "XXXX XXXX", "str_s", "c", "field_i", "30"));
      indexDoc(sdoc("id", "6", "text", "XXXX XXXX", "str_s", "c", "field_i", "40"));
      indexDoc(sdoc("id", "7", "text", "XXXX XXXX", "str_s", "c", "field_i", "50"));
      indexDoc(sdoc("id", "8", "text", "XXXX XXXX", "str_s", "c", "field_i", "60"));
      commit();

      SolrParams sParams = mapParams(CommonParams.QT, "/sql", "aggregationMode", "map_reduce",
          "stmt", "select id, str_s from collection1 where text='XXXX' order by field_iff desc");

      SolrStream solrStream = new SolrStream(jetty.url, sParams);
      Tuple tuple = getTuple(new ExceptionStream(solrStream));
      assert(tuple.EOF);
      assert(tuple.EXCEPTION);
      assert(tuple.getException().contains("Column 'field_iff' not found in any table"));

      sParams = mapParams(CommonParams.QT, "/sql",
        "stmt", "select id, field_iff, str_s from collection1 where text='XXXX' order by field_iff desc");

      solrStream = new SolrStream(jetty.url, sParams);
      tuple = getTuple(new ExceptionStream(solrStream));
      assert(tuple.EOF);
      assert(tuple.EXCEPTION);

      assert(tuple.getException().contains("Column 'field_iff' not found in any table"));

      sParams = mapParams(CommonParams.QT, "/sql", "aggregationMode", "map_reduce",
          "stmt", "select str_s, count(*), sum(field_iff), min(field_i), max(field_i), cast(avg(1.0 * field_i) as float) from collection1 where text='XXXX' group by str_s having ((sum(field_iff) = 19) AND (min(field_i) = 8))");

      solrStream = new SolrStream(jetty.url, sParams);
      tuple = getTuple(new ExceptionStream(solrStream));
      assert(tuple.EOF);
      assert(tuple.EXCEPTION);
      assert(tuple.getException().contains("Column 'field_iff' not found in any table"));

      sParams = mapParams(CommonParams.QT, "/sql", "aggregationMode", "map_reduce",
          "stmt", "select str_s, count(*), blah(field_i), min(field_i), max(field_i), cast(avg(1.0 * field_i) as float) from collection1 where text='XXXX' group by str_s having ((sum(field_i) = 19) AND (min(field_i) = 8))");

      solrStream = new SolrStream(jetty.url, sParams);
      tuple = getTuple(new ExceptionStream(solrStream));
      assert(tuple.EOF);
      assert(tuple.EXCEPTION);
      assert(tuple.getException().contains("No match found for function signature blah"));
    } finally {
      delete();
    }
  }

