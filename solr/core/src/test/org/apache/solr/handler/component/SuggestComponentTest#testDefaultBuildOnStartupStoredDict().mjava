  @Test
  public void testDefaultBuildOnStartupStoredDict() throws Exception {
    
    final String suggester = "suggest_doc_default_startup";
    
    // validate that this suggester is storing the lookup
    assertEquals(suggester, 
        h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[7]/str[@name='name']", false));
    assertEquals(suggester, 
        h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[7]/str[@name='storeDir']", false));
    
    // validate that this suggester only builds manually and has not buildOnStartup parameter
    assertEquals("false", 
        h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnCommit']", true));
    assertNull(h.getCore().getSolrConfig().getVal("//searchComponent[@name='suggest']/lst[7]/str[@name='buildOnStartup']", false));
    
    assertQ(req("qt", rh, 
        SuggesterParams.SUGGEST_DICT, suggester,
        SuggesterParams.SUGGEST_Q, "example",
        SuggesterParams.SUGGEST_COUNT, "2"),
        "//lst[@name='suggest']/lst[@name='" + suggester + "']/lst[@name='example']/int[@name='numFound'][.='0']"
        );
    
    // build the suggester manually
    assertQ(req("qt", rh, 
        SuggesterParams.SUGGEST_DICT, suggester,
        SuggesterParams.SUGGEST_BUILD, "true"),
        "//str[@name='command'][.='build']"
        );
    
    assertQ(req("qt", rh, 
        SuggesterParams.SUGGEST_DICT, suggester,
        SuggesterParams.SUGGEST_Q, "example",
        SuggesterParams.SUGGEST_COUNT, "2"),
        "//lst[@name='suggest']/lst[@name='" + suggester + "']/lst[@name='example']/int[@name='numFound'][.='2']"
        );
    
    reloadCore(random().nextBoolean());
    
    // Validate that the suggester was loaded on new/reload core
    assertQ(req("qt", rh, 
        SuggesterParams.SUGGEST_DICT, suggester,
        SuggesterParams.SUGGEST_Q, "example",
        SuggesterParams.SUGGEST_COUNT, "2"),
        "//lst[@name='suggest']/lst[@name='" + suggester + "']/lst[@name='example']/int[@name='numFound'][.='2']"
        );
    
    // add one more doc, this should not be seen after a core reload (not until the suggester is manually rebuilt)
    assertU(adoc("id", "10", "cat", "example data extra ", "price", "40", "weight", "35"));
    assertU((commit()));
    
    reloadCore(random().nextBoolean());
    
    assertQ(req("qt", rh, 
        SuggesterParams.SUGGEST_DICT, suggester,
        SuggesterParams.SUGGEST_Q, "example",
        SuggesterParams.SUGGEST_COUNT, "3"),
        "//lst[@name='suggest']/lst[@name='" + suggester + "']/lst[@name='example']/int[@name='numFound'][.='2']"
        );
    
    // build the suggester manually
    assertQ(req("qt", rh, 
        SuggesterParams.SUGGEST_DICT, suggester,
        SuggesterParams.SUGGEST_BUILD, "true"),
        "//str[@name='command'][.='build']"
        );
    
    assertQ(req("qt", rh, 
        SuggesterParams.SUGGEST_DICT, suggester,
        SuggesterParams.SUGGEST_Q, "example",
        SuggesterParams.SUGGEST_COUNT, "3"),
        "//lst[@name='suggest']/lst[@name='" + suggester + "']/lst[@name='example']/int[@name='numFound'][.='3']"
        );
    
  }

