  @Test
  public void doTestReplicateAfterStartupWithNoActivity() throws Exception {
    useFactory(null);
    try {
      
      // stop follower
      followerJetty.stop();
      
      nDocs--;
      leaderClient.deleteByQuery("*:*");
      
      leaderClient.commit();
      
      // change solrconfig having 'replicateAfter startup' option on leader
      leader.copyConfigFile(CONF_DIR + "solrconfig-leader2.xml",
          "solrconfig.xml");
      
      leaderJetty.stop();
      
      leaderJetty = createAndStartJetty(leader);
      leaderClient.close();
      leaderClient = createNewSolrClient(leaderJetty.getLocalPort());
      
      for (int i = 0; i < nDocs; i++)
        index(leaderClient, "id", i, "name", "name = " + i);
      
      leaderClient.commit();
      
      // now we restart to test what happens with no activity before the follower
      // tries to
      // replicate
      leaderJetty.stop();
      leaderJetty.start();
      
      // leaderClient = createNewSolrClient(leaderJetty.getLocalPort());
      
      @SuppressWarnings({"rawtypes"})
      NamedList leaderQueryRsp = rQuery(nDocs, "*:*", leaderClient);
      SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp
          .get("response");
      assertEquals(nDocs, leaderQueryResult.getNumFound());
      
      follower.setTestPort(leaderJetty.getLocalPort());
      follower.copyConfigFile(follower.getSolrConfigFile(), "solrconfig.xml");
      
      // start follower
      followerJetty = createAndStartJetty(follower);
      followerClient.close();
      followerClient = createNewSolrClient(followerJetty.getLocalPort());
      
      // get docs from follower and check if number is equal to leader
      @SuppressWarnings({"rawtypes"})
      NamedList followerQueryRsp = rQuery(nDocs, "*:*", followerClient);
      SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp
          .get("response");
      assertEquals(nDocs, followerQueryResult.getNumFound());
      
      // compare results
      String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult,
          followerQueryResult, 0, null);
      assertEquals(null, cmp);
      
    } finally {
      resetFactory();
    }
  }

