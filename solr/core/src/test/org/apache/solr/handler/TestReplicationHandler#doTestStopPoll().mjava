  @Test
  public void doTestStopPoll() throws Exception {
    clearIndexWithReplication();

    // Test:
    // setup leader/follower.
    // stop polling on follower, add a doc to leader and verify follower hasn't picked it.
    nDocs--;
    for (int i = 0; i < nDocs; i++)
      index(leaderClient, "id", i, "name", "name = " + i);

    leaderClient.commit();

    @SuppressWarnings({"rawtypes"})
    NamedList leaderQueryRsp = rQuery(nDocs, "*:*", leaderClient);
    SolrDocumentList leaderQueryResult = (SolrDocumentList) leaderQueryRsp.get("response");
    assertEquals(nDocs, numFound(leaderQueryRsp));

    //get docs from follower and check if number is equal to leader
    @SuppressWarnings({"rawtypes"})
    NamedList followerQueryRsp = rQuery(nDocs, "*:*", followerClient);
    SolrDocumentList followerQueryResult = (SolrDocumentList) followerQueryRsp.get("response");
    assertEquals(nDocs, numFound(followerQueryRsp));

    //compare results
    String cmp = BaseDistributedSearchTestCase.compare(leaderQueryResult, followerQueryResult, 0, null);
    assertEquals(null, cmp);

    // start stop polling test
    invokeReplicationCommand(followerJetty.getLocalPort(), "disablepoll");
    
    index(leaderClient, "id", 501, "name", "name = " + 501);
    leaderClient.commit();

    //get docs from leader and check if number is equal to leader
    assertEquals(nDocs+1, numFound(rQuery(nDocs+1, "*:*", leaderClient)));
    
    // NOTE: this test is wierd, we want to verify it DOESNT replicate...
    // for now, add a sleep for this.., but the logic is wierd.
    Thread.sleep(3000);
    
    //get docs from follower and check if number is not equal to leader; polling is disabled
    assertEquals(nDocs, numFound(rQuery(nDocs, "*:*", followerClient)));

    // re-enable replication
    invokeReplicationCommand(followerJetty.getLocalPort(), "enablepoll");

    assertEquals(nDocs+1, numFound(rQuery(nDocs+1, "*:*", followerClient)));
  }

