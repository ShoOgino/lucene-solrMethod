  protected void doTestLastDocInBatchFlag(int numDocsInBatch) throws Exception {
    List<SolrInputDocument> batch = new ArrayList<>(numDocsInBatch);
    for (int d=0; d < numDocsInBatch; d++) {
      SolrInputDocument doc = new SolrInputDocument();
      doc.setField("id", String.valueOf(d));
      batch.add(doc);
    }

    UpdateRequest updateRequest = new UpdateRequest();
    if (batch.size() > 1) {
      updateRequest.add(batch);
    } else {
      updateRequest.add(batch.get(0));
    }

    // client-side SolrJ would do this ...
    ByteArrayOutputStream os = new ByteArrayOutputStream();
    (new JavaBinUpdateRequestCodec()).marshal(updateRequest, os);

    // need to override the processAdd method b/c JavabinLoader calls
    // clear on the addCmd after it is passed on to the handler ... a simple clone will suffice for this test
    BufferingRequestProcessor mockUpdateProcessor = new BufferingRequestProcessor(null) {
      @Override
      public void processAdd(AddUpdateCommand cmd) throws IOException {
        addCommands.add((AddUpdateCommand)cmd.clone());
      }
    };

    SolrQueryRequest req = req();
    (new JavabinLoader()).load(req,
        new SolrQueryResponse(),
        new ContentStreamBase.ByteArrayStream(os.toByteArray(), "test"),
        mockUpdateProcessor);
    req.close();

    assertTrue(mockUpdateProcessor.addCommands.size() == numDocsInBatch);
    for (int i=0; i < numDocsInBatch-1; i++)
      assertFalse(mockUpdateProcessor.addCommands.get(i).isLastDocInBatch); // not last doc in batch

    // last doc should have the flag set
    assertTrue(mockUpdateProcessor.addCommands.get(batch.size()-1).isLastDocInBatch);
  }

