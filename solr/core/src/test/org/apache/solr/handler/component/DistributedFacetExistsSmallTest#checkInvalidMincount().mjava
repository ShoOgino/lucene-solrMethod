  private void checkInvalidMincount() throws SolrServerException, IOException {
    final ModifiableSolrParams params = buildParams();
    if (random().nextBoolean()) {
      params.remove("facet.exists");
      params.set("f."+FLD+".facet.exists","true");
    }
    
    if (random().nextBoolean()) {
      params.set("facet.mincount",  ""+(2+random().nextInt(100)) );
    } else {
      params.set("f."+FLD+".facet.mincount",  ""+(2+random().nextInt(100)) );
    }

    SolrException e = expectThrows(SolrException.class, () -> {
      if (random().nextBoolean()) {
        setDistributedParams(params);
        queryServer(params);
      } else {
        params.set("distrib", "false");
        controlClient.query(params);
      }
    });
    assertEquals(e.code(), ErrorCode.BAD_REQUEST.code);
    assertTrue(e.getMessage().contains("facet.exists"));
    assertTrue(e.getMessage().contains("facet.mincount"));
    assertTrue(e.getMessage().contains(FLD));
  }

