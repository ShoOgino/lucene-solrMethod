  public void testPayload() {
    String json = "{package:pkg1, version: '0.1', files  :[a.jar, b.jar]}";
    Utils.fromJSONString(json);

    ApiBag apiBag = new ApiBag(false);
    List<Api> apis =  apiBag.registerObject(new ApiTest());

    ValidatingJsonMap spec = apis.get(0).getSpec();

    assertEquals("POST", spec._getStr("/methods[0]",null) );
    assertEquals("POST", spec._getStr("/methods[0]",null) );
    assertEquals("/cluster/package", spec._getStr("/url/paths[0]",null) );
    assertEquals("string", spec._getStr("/commands/add/properties/package/type",null) );
    assertEquals("array", spec._getStr("/commands/add/properties/files/type",null) );
    assertEquals("string", spec._getStr("/commands/add/properties/files/items/type",null) );
    assertEquals("string", spec._getStr("/commands/delete/items/type",null) );
    SolrQueryResponse rsp = v2ApiInvoke(apiBag, "/cluster/package", "POST", new ModifiableSolrParams(),
        new ByteArrayInputStream("{add:{package:mypkg, version: '1.0', files : [a.jar, b.jar]}}".getBytes(UTF_8)));


    AddVersion addversion = (AddVersion) rsp.getValues().get("add");
    assertEquals("mypkg", addversion.pkg);
    assertEquals("1.0", addversion.version);
    assertEquals("a.jar", addversion.files.get(0));
    assertEquals("b.jar", addversion.files.get(1));



  }

