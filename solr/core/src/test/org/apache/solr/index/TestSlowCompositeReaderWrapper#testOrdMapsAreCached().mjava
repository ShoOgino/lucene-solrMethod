  public void testOrdMapsAreCached() throws Exception {
    Directory dir = newDirectory();
    RandomIndexWriter w = new RandomIndexWriter(random(), dir);
    Document doc = new Document();
    doc.add(new SortedDocValuesField("sorted", new BytesRef("a")));
    doc.add(new SortedSetDocValuesField("sorted_set", new BytesRef("b")));
    doc.add(new SortedSetDocValuesField("sorted_set", new BytesRef("c")));
    w.addDocument(doc);
    w.getReader().close();
    doc = new Document();
    doc.add(new SortedDocValuesField("sorted", new BytesRef("b")));
    doc.add(new SortedSetDocValuesField("sorted_set", new BytesRef("c")));
    doc.add(new SortedSetDocValuesField("sorted_set", new BytesRef("d")));
    w.addDocument(doc);
    IndexReader reader = w.getReader();
    assertTrue(reader.leaves().size() > 1);
    SlowCompositeReaderWrapper slowWrapper = (SlowCompositeReaderWrapper) SlowCompositeReaderWrapper.wrap(reader);
    assertEquals(0, slowWrapper.cachedOrdMaps.size());
    assertEquals(MultiSortedDocValues.class, slowWrapper.getSortedDocValues("sorted").getClass());
    assertEquals(1, slowWrapper.cachedOrdMaps.size());
    assertEquals(MultiSortedSetDocValues.class, slowWrapper.getSortedSetDocValues("sorted_set").getClass());
    assertEquals(2, slowWrapper.cachedOrdMaps.size());
    reader.close();
    w.close();
    dir.close();
  }

