  public void testIndexAndAddDocValues() throws Exception {
    Random rand = random();
    
    for(int i=0; i < 100; i++) {
      assertU(adoc(ID_FIELD, String.valueOf(i), TEST_FIELD, String.valueOf(i)));
      
      if(rand.nextBoolean()) {
        assertU(commit());
      }
    }
    
    assertU(commit());
    
    // Assert everything has been indexed and there are no docvalues
    withNewRawReader(h, topReader -> {
      assertEquals(100, topReader.numDocs());

      final FieldInfos infos = MultiFields.getMergedFieldInfos(topReader);

      // The global field type should not have docValues yet
      assertEquals(DocValuesType.NONE, infos.fieldInfo(TEST_FIELD).getDocValuesType());
    });
    
    
    addDocValuesTo(h, TEST_FIELD);
    
    
    // Add some more documents with doc values turned on including updating some
    for(int i=90; i < 110; i++) {
      assertU(adoc(ID_FIELD, String.valueOf(i), TEST_FIELD, String.valueOf(i)));
      
      if(rand.nextBoolean()) {
        assertU(commit());
      }
    }
    
    assertU(commit());
    
    withNewRawReader(h, topReader -> {
      assertEquals(110, topReader.numDocs());

      final FieldInfos infos = MultiFields.getMergedFieldInfos(topReader);
      // The global field type should have docValues because a document with dvs was added
      assertEquals(DocValuesType.SORTED, infos.fieldInfo(TEST_FIELD).getDocValuesType());
    });
    
    int optimizeSegments = 1;
    assertU(optimize("maxSegments", String.valueOf(optimizeSegments)));
    
    
    // Assert all docs have the right docvalues
    withNewRawReader(h, topReader -> {
      // Assert merged into one segment 
      assertEquals(110, topReader.numDocs());
      assertEquals(optimizeSegments, topReader.leaves().size());
      

      final FieldInfos infos = MultiFields.getMergedFieldInfos(topReader);
      // The global field type should have docValues because a document with dvs was added
      assertEquals(DocValuesType.SORTED, infos.fieldInfo(TEST_FIELD).getDocValuesType());
      
      
      // Check that all segments have the right docvalues type with the correct value
      // Also check that other fields (e.g. the id field) didn't mistakenly get docvalues added
      for (LeafReaderContext ctx : topReader.leaves()) {
        LeafReader r = ctx.reader();
        SortedDocValues docvalues = r.getSortedDocValues(TEST_FIELD);
        for(int i = 0; i < r.numDocs(); ++i) {
          Document doc = r.document(i);
          String v = doc.getField(TEST_FIELD).stringValue();
          String id = doc.getField(ID_FIELD).stringValue();
          assertEquals(DocValuesType.SORTED, r.getFieldInfos().fieldInfo(TEST_FIELD).getDocValuesType());
          assertEquals(DocValuesType.NONE, r.getFieldInfos().fieldInfo(ID_FIELD).getDocValuesType());
          assertEquals(v, id);
          
          docvalues.nextDoc();
          assertEquals(v, docvalues.binaryValue().utf8ToString());
        }
      }
    });
  }

