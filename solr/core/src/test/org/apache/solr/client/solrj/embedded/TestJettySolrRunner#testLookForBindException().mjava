  @SuppressWarnings("ThrowableNotThrown")
  @Test
  public void testLookForBindException() throws IOException {
    Path solrHome = createTempDir();
    Files.write(solrHome.resolve("solr.xml"), MiniSolrCloudCluster.DEFAULT_CLOUD_SOLR_XML.getBytes(Charset.defaultCharset()));

    JettyConfig config = JettyConfig.builder().build();

    JettySolrRunner jetty = new JettySolrRunner(solrHome.toString(), config);

    Exception result;
    BindException be = new BindException();
    IOException test = new IOException();

    result = jetty.lookForBindException(test);
    assertEquals(result, test);

    test = new IOException();
    result = jetty.lookForBindException(test);
    assertEquals(result, test);

    test = new IOException((Throwable) null);
    result = jetty.lookForBindException(test);
    assertEquals(result, test);

    test = new IOException() {
      @Override
      public synchronized Throwable getCause() {
        return this;
      }
    };
    result = jetty.lookForBindException(test);
    assertEquals(result, test);

    test = new IOException(new RuntimeException());
    result = jetty.lookForBindException(test);
    assertEquals(result, test);

    test = new IOException(new RuntimeException(be));
    result = jetty.lookForBindException(test);
    assertEquals(result, be);

  }

