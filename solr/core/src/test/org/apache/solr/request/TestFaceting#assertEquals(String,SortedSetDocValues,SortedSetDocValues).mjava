  // assert same instance: either same object, or both wrapping same single-valued object
  private void assertEquals(String msg, SortedSetDocValues dv1, SortedSetDocValues dv2) {
    SortedDocValues singleton1 = DocValues.unwrapSingleton(dv1);
    SortedDocValues singleton2 = DocValues.unwrapSingleton(dv2);
    if (singleton1 == null || singleton2 == null) {
      // actually a multi-valued field
      if (dv1 instanceof MultiDocValues.MultiSortedSetDocValues) {
        // if we produced more than one segment, ensure the core ordinal map is the same object
        assertTrue(dv2 instanceof MultiDocValues.MultiSortedSetDocValues);
        assertSame(((MultiDocValues.MultiSortedSetDocValues) dv1).mapping, 
                   ((MultiDocValues.MultiSortedSetDocValues) dv2).mapping);
      } else {
        // otherwise, same atomic instance
        assertSame(dv1, dv2);
      }
    } else {
      // just wrapping a field that is actually single-valued
      if (singleton1 instanceof MultiDocValues.MultiSortedDocValues) {
        // if we produced more than one segment, ensure the core ordinal map is the same object
        assertTrue(singleton2 instanceof MultiDocValues.MultiSortedDocValues);
        assertSame(((MultiDocValues.MultiSortedDocValues) singleton1).mapping, 
                   ((MultiDocValues.MultiSortedDocValues) singleton2).mapping);
      } else {
        // otherwise, same atomic instance
        assertSame(singleton1, singleton2);
      }
    }
  }

