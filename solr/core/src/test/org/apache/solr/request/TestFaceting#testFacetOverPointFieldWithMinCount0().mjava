  @Test
  public void testFacetOverPointFieldWithMinCount0() {
    String field = "f_" + new String[]{"i","l","f","d"}[random().nextInt(4)] + "_p";
    final SolrQueryRequest req = req("q", "id:1.0", 
        FacetParams.FACET, "true", 
        FacetParams.FACET_FIELD, field, 
        FacetParams.FACET_MINCOUNT, "0", 
        FacetParams.FACET_METHOD, FacetParams.FACET_METHOD_fc);
    Exception e = expectThrows(SolrException.class, () -> h.query(req));
    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, ((SolrException)e).code());
    assertTrue(e.getMessage().contains("Cannot use facet.mincount=0 on field " + field + " which is Points-based"));

    String mvField = "f_" + new String[]{"is","ls","fs","ds"}[random().nextInt(4)] + "_p";
    final SolrQueryRequest req2 = req("q", "id:1.0",
        FacetParams.FACET, "true",
        FacetParams.FACET_FIELD, mvField,
        FacetParams.FACET_MINCOUNT, "0",
        FacetParams.FACET_METHOD, FacetParams.FACET_METHOD_fc);
    e = expectThrows(SolrException.class, () -> h.query(req2));
    assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, ((SolrException)e).code());
    assertTrue(e.getMessage().contains("Cannot use facet.mincount=0 on field " + mvField + " which is Points-based"));
  }

