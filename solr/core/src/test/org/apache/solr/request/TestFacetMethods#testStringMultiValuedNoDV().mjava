  @Test
  public void testStringMultiValuedNoDV() {

    for (int props : Arrays.asList(MULTIVALUED ^ UNINVERTIBLE,
                                   MULTIVALUED)) {
      SchemaField field = new SchemaField("field", new StrField(), props, null);
      // default is FC, can't use FCS because of multivalues...
      for (int mincount : Arrays.asList(0, 1)) {
        // behavior should be independent of mincount
        assertEquals(FacetMethod.FC, SimpleFacets.selectFacetMethod(field, null, mincount));
        assertEquals(FacetMethod.ENUM, SimpleFacets.selectFacetMethod(field, FacetMethod.ENUM, mincount));
        assertEquals(FacetMethod.FC, SimpleFacets.selectFacetMethod(field, FacetMethod.FC, mincount));
        assertEquals(FacetMethod.FC, SimpleFacets.selectFacetMethod(field, FacetMethod.FCS, mincount));
      }
      // UIF allowed only if UNINVERTIBLE *AND* mincount > 0
      assertEquals(FacetMethod.FC, SimpleFacets.selectFacetMethod(field, FacetMethod.UIF, 0));
      assertEquals(propsMatch(props, UNINVERTIBLE) ? FacetMethod.UIF : FacetMethod.FC,
                   SimpleFacets.selectFacetMethod(field, FacetMethod.UIF, 1));
    }
  }

