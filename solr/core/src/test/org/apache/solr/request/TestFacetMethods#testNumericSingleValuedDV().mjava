  @Test
  public void testNumericSingleValuedDV() {

    for (int props : Arrays.asList(DOC_VALUES ^ UNINVERTIBLE,
                                   DOC_VALUES)) {
      SchemaField field = new SchemaField("field", new TrieIntField(), props, null);
      // default is FCS, can't use ENUM due to trie-field terms, FC rewrites to FCS for efficiency
      for (int mincount : Arrays.asList(0, 1)) {
        // behavior should be independent of mincount
        assertEquals(FacetMethod.FCS, SimpleFacets.selectFacetMethod(field, null, mincount));
        assertEquals(FacetMethod.FCS, SimpleFacets.selectFacetMethod(field, FacetMethod.ENUM, mincount));
        assertEquals(FacetMethod.FCS, SimpleFacets.selectFacetMethod(field, FacetMethod.FC, mincount));
        assertEquals(FacetMethod.FCS, SimpleFacets.selectFacetMethod(field, FacetMethod.FCS, mincount));
        
        // UIF only allowed if field is UNINVERTIBLE
        assertEquals(propsMatch(props, UNINVERTIBLE) ? FacetMethod.UIF : FacetMethod.FCS,
                     SimpleFacets.selectFacetMethod(field, FacetMethod.UIF, 0));
      }
    }
  }

