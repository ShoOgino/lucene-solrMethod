  @Test
  public void testMultipleSegments() {
    assertU(adoc("id", "1", "test_s_dv", "dog"));
    assertU(adoc("id", "2", "test_s_dv", "cat"));
    assertU(adoc("id", "3", "test_s_dv", "bird"));
    assertU(adoc("id", "4", "test_s_dv", "turtle"));
    assertU(commit());
    assertU(adoc("id", "5", "test_s_dv", "\\goodbye,"));
    assertU(adoc("id", "6", "test_s_dv", ",hello\\"));
    assertU(adoc("id", "7", "test_s_dv", "dog"));
    assertU(commit());
    assertU(adoc("id", "8", "test_s_dv", "dog"));
    assertU(adoc("id", "9", "test_s_dv", "cat"));
    assertU(adoc("id", "10"));
    assertU(commit());
    int i = 11;
    while (getNumberOfReaders() < 2 && i < 20) {
      //try to get more than one segment
      assertU(adoc("id", String.valueOf(i), "test_i_dv", String.valueOf(i)));
      assertU(commit());
      i++;
    }
    if (getNumberOfReaders() < 2) {
      // It is OK if for some seeds we fall into this case (for example, TieredMergePolicy with
      // segmentsPerTier=2). Most of the case we shouldn't and the test should proceed.
      log.warn("Could not generate more than 1 segment for this seed. Will skip the test");
      return;
    }

    assertIntervalQueriesString("test_s_dv");

  }

