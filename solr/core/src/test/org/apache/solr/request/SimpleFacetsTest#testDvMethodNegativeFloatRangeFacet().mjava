  public void testDvMethodNegativeFloatRangeFacet() throws Exception {
    String field = "negative_num_f1_dv";
    assertTrue("Unexpected schema configuration", h.getCore().getLatestSchema().getField(field).hasDocValues());
    assertEquals("Unexpected schema configuration", NumberType.FLOAT, h.getCore().getLatestSchema().getField(field).getType().getNumberType());
    assertFalse("Unexpected schema configuration", h.getCore().getLatestSchema().getField(field).getType().isMultiValued());

    final String[] commonParams = { 
        "q", "*:*", "facet", "true", "facet.range.start", "-2", "facet.range.end", "0", "facet.range.gap", "2"
    };
    final String countAssertion
    = "//lst[@name='facet_counts']/lst[@name='facet_ranges']/lst[@name='%s']/lst[@name='counts']/int[@name='-2.0'][.='1']";

    assertU(adoc("id", "10001", field, "-1.0"));
    assertU(commit());

    assertQ(req(commonParams, "facet.range", field, "facet.range.method", "filter"),
        String.format(Locale.ROOT, countAssertion, field)
        );
    assertQ(req(commonParams, "facet.range", field, "facet.range.method", "dv"),
        String.format(Locale.ROOT, countAssertion, field)
        );
  }

