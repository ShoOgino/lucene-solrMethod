  void doPerf(String writerName, SolrQueryRequest req, int encIter, int decIter) throws Exception {
    SolrQueryResponse rsp = getResponse(req);
    QueryResponseWriter w = h.getCore().getQueryResponseWriter(writerName);


    ByteArrayOutputStream out=null;

    System.gc();
    RTimer timer = new RTimer();
    for (int i=0; i<encIter; i++) {
    if (w instanceof BinaryQueryResponseWriter) {
      BinaryQueryResponseWriter binWriter = (BinaryQueryResponseWriter) w;
      out = new ByteArrayOutputStream();
      binWriter.write(out, req, rsp);
      out.close();
    } else {
      out = new ByteArrayOutputStream();
      // to be fair, from my previous tests, much of the performance will be sucked up
      // by java's UTF-8 encoding/decoding, not the actual writing
      Writer writer = new OutputStreamWriter(out, StandardCharsets.UTF_8);
      w.write(writer, req, rsp);
      writer.close();
    }
    }

    double encodeTime = timer.getTime();

    byte[] arr = out.toByteArray();

    timer = new RTimer();
    writerName = writerName.intern();
    for (int i=0; i<decIter; i++) {
      ResponseParser rp = null;
      if (writerName == "xml") {
        rp = new XMLResponseParser();
      } else if (writerName == "javabin") {
        rp = new BinaryResponseParser();
      } else {
        break;
      }
      ByteArrayInputStream in = new ByteArrayInputStream(arr);
      rp.processResponse(in, "UTF-8");      
    }

    double decodeTime = timer.getTime();

    if (log.isInfoEnabled()) {
      log.info("writer {}, size={}, encodeRate={} decodeRate={}"
          , writerName, out.size(), (encIter * 1000L / encodeTime), (decIter * 1000L / decodeTime));
    }

    req.close();
  }

