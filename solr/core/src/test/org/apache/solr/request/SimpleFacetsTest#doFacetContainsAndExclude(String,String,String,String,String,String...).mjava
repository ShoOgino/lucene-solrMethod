  private void doFacetContainsAndExclude(String f, String g, String termSuffix, String contains, String groupContains, String... params) {
    String indent="on";
    String pre = "//lst[@name='"+f+"']";

    final SolrQueryRequest req = req(params, "q", "id:[* TO *]"
        ,"indent",indent
        ,"facet","true"
        ,"facet.field", f
        ,"facet.mincount","0"
        ,"facet.offset","0"
        ,"facet.limit","100"
        ,"facet.sort","count"
        ,"facet.contains",contains
        ,"facet.excludeTerms","BBB"+termSuffix
    );

    assertQ("test facet.contains with facet.exclude",
        req
        ,"*[count(//lst[@name='facet_fields']/lst/int)=2]"
        ,pre+"/int[1][@name='BB"+termSuffix+"'][.='2']"
        ,pre+"/int[2][@name='B"+termSuffix+"'][.='1']"
    );

    final SolrQueryRequest groupReq = req(params, "q", "id:[* TO *]"
        ,"indent",indent
        ,"facet","true"
        ,"facet.field", f
        ,"facet.mincount","0"
        ,"facet.offset","0"
        ,"facet.limit","100"
        ,"facet.sort","count"
        ,"facet.contains",groupContains
        ,"facet.excludeTerms","AAA"+termSuffix
        ,"group","true"
        ,"group.field",g
        ,"group.facet","true"
    );

    assertQ("test facet.contains with facet.exclude for grouped facets",
        groupReq
        ,"*[count(//lst[@name='facet_fields']/lst/int)=5]"
        ,pre+"/int[1][@name='CCC"+termSuffix+"'][.='3']"
        ,pre+"/int[2][@name='BBB"+termSuffix+"'][.='2']"
        ,pre+"/int[3][@name='B"+termSuffix+"'][.='1']"
        ,pre+"/int[4][@name='BB"+termSuffix+"'][.='1']"
        ,pre+"/int[5][@name='CC"+termSuffix+"'][.='1']"
    );
  }

