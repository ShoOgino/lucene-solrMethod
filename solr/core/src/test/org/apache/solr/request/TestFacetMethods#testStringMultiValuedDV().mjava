  @Test
  public void testStringMultiValuedDV() {

    for (int props : Arrays.asList(MULTIVALUED ^ DOC_VALUES ^ UNINVERTIBLE,
                                   MULTIVALUED ^ DOC_VALUES)) {
      SchemaField field = new SchemaField("field", new StrField(), props, null);
      // default is FC, can't use FCS because of multivalues...
      for (int mincount : Arrays.asList(0, 1)) {
        // behavior should be independent of mincount
        assertEquals(FacetMethod.FC, SimpleFacets.selectFacetMethod(field, null, mincount));
        assertEquals(FacetMethod.ENUM, SimpleFacets.selectFacetMethod(field, FacetMethod.ENUM, mincount));
        assertEquals(FacetMethod.FC, SimpleFacets.selectFacetMethod(field, FacetMethod.FC, mincount));
        assertEquals(FacetMethod.FC, SimpleFacets.selectFacetMethod(field, FacetMethod.FCS, mincount));
        // UIF only allowed if field is UNINVERTIBLE
        assertEquals(propsMatch(props, UNINVERTIBLE) ? FacetMethod.UIF : FacetMethod.FC,
                     SimpleFacets.selectFacetMethod(field, FacetMethod.UIF, mincount));
      }
    }
  }

