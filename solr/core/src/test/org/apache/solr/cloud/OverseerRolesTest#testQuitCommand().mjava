  @Test
  public void testQuitCommand() throws Exception {

    SolrZkClient zk = zkClient();
    byte[] data = zk.getData("/overseer_elect/leader", null, new Stat(), true);
    Map m = (Map) Utils.fromJSON(data);
    String s = (String) m.get("id");
    String leader = LeaderElector.getNodeName(s);
    log.info("Current overseer: {}", leader);
    Overseer.getStateUpdateQueue(zk)
        .offer(Utils.toJSON(new ZkNodeProps(Overseer.QUEUE_OPERATION, OverseerAction.QUIT.toLower(),
                                            "id", s)));
    final TimeOut timeout = new TimeOut(10, TimeUnit.SECONDS);
    String newLeader = null;
    for(;! timeout.hasTimedOut();){
      newLeader = OverseerCollectionConfigSetProcessor.getLeaderNode(zk);
      if (newLeader != null && !newLeader.equals(leader))
        break;
      Thread.sleep(100);
    }
    assertThat("Leader not changed yet", newLeader, not(leader));

    assertTrue("The old leader should have rejoined election",
        OverseerCollectionConfigSetProcessor.getSortedOverseerNodeNames(zk).contains(leader));
  }

