    @Test
    @ShardsFixed(num = 1)
    public void testCreateAndDeleteThenCreateAgain() throws Exception {
        String overseerNode = OverseerCollectionConfigSetProcessor.getLeaderNode(cloudClient.getZkStateReader().getZkClient());
        String notOverseerNode = null;
        for (CloudJettyRunner cloudJetty : cloudJettys) {
            if (!overseerNode.equals(cloudJetty.nodeName)) {
                notOverseerNode = cloudJetty.nodeName;
                break;
            }
        }
        String collectionName = "SimpleCollectionCreateDeleteTest";
        CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, 1, 1)
                .setCreateNodeSet(overseerNode);

        NamedList<Object> request = create.process(cloudClient).getResponse();

        if (request.get("success") != null) {
            assertTrue(cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collectionName, false));

            CollectionAdminRequest.Delete delete = CollectionAdminRequest.deleteCollection(collectionName);
            cloudClient.request(delete);

            assertFalse(cloudClient.getZkStateReader().getZkClient().exists(ZkStateReader.COLLECTIONS_ZKNODE + "/" + collectionName, false));

            // currently, removing a collection does not wait for cores to be unloaded
            TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS, TimeSource.NANO_TIME);
            while (true) {

                if (timeout.hasTimedOut()) {
                    throw new TimeoutException("Timed out waiting for all collections to be fully removed.");
                }

                boolean allContainersEmpty = true;
                for (JettySolrRunner jetty : jettys) {

                    Collection<SolrCore> cores = jetty.getCoreContainer().getCores();
                    for (SolrCore core : cores) {
                        CoreDescriptor cd = core.getCoreDescriptor();
                        if (cd != null) {
                            if (cd.getCloudDescriptor().getCollectionName().equals(collectionName)) {
                                allContainersEmpty = false;
                            }
                        }
                    }
                }
                if (allContainersEmpty) {
                    break;
                }
            }

            // create collection again on a node other than the overseer leader
            create = CollectionAdminRequest.createCollection(collectionName, 1, 1)
                    .setCreateNodeSet(notOverseerNode);
            request = create.process(cloudClient).getResponse();
            assertTrue("Collection creation should not have failed", request.get("success") != null);
        }
    }

