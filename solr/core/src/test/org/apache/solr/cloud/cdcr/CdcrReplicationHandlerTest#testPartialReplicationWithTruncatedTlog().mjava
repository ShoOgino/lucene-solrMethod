  /**
   * Test the scenario where the follower is killed before receiving a commit. This creates a truncated tlog
   * file on the follower node. The replication strategy should detect this truncated file, and fetch the
   * non-truncated file from the leader.
   */
  @Test
  @ShardsFixed(num = 2)
  public void testPartialReplicationWithTruncatedTlog() throws Exception {
    CloudSolrClient client = createCloudClient(SOURCE_COLLECTION);
    List<CloudJettyRunner> followers = this.getShardToFollowerJetty(SOURCE_COLLECTION, SHARD1);

    try {
      for (int i = 0; i < 10; i++) {
        for (int j = i * 20; j < (i * 20) + 20; j++) {
          client.add(getDoc(id, Integer.toString(j)));

          // Stop the follower in the middle of a batch to create a truncated tlog on the follower
          if (j == 45) {
            followers.get(0).jetty.stop();
          }

        }
        commit(SOURCE_COLLECTION);
      }
    } finally {
      client.close();
    }

    assertNumDocs(200, SOURCE_COLLECTION);

    // Restart the follower node to trigger Replication recovery
    this.restartServer(followers.get(0));

    // at this stage, the follower should have replicated the 5 missing tlog files
    this.assertUpdateLogsEquals(SOURCE_COLLECTION, 10);
  }

