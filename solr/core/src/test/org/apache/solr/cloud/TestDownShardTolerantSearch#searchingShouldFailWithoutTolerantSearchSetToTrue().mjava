  @Test
  public void searchingShouldFailWithoutTolerantSearchSetToTrue() throws Exception {

    CollectionAdminRequest.createCollection("tolerant", "conf", 2, 1)
        .process(cluster.getSolrClient());

    UpdateRequest update = new UpdateRequest();
    for (int i = 0; i < 100; i++) {
      update.add("id", Integer.toString(i));
    }
    update.commit(cluster.getSolrClient(), "tolerant");

    QueryResponse response = cluster.getSolrClient().query("tolerant", new SolrQuery("*:*").setRows(1));
    assertThat(response.getStatus(), is(0));
    assertThat(response.getResults().getNumFound(), is(100L));

    cluster.stopJettySolrRunner(0);

    response = cluster.getSolrClient().query("tolerant", new SolrQuery("*:*").setRows(1).setParam(ShardParams.SHARDS_TOLERANT, true));
    assertThat(response.getStatus(), is(0));
    assertTrue(response.getResults().getNumFound() > 0);

    SolrServerException e = expectThrows(SolrServerException.class,
        "Request should have failed because we killed shard1 jetty",
        () -> cluster.getSolrClient().query("tolerant", new SolrQuery("*:*").setRows(1)
            .setParam(ShardParams.SHARDS_TOLERANT, false))
    );
    assertNotNull(e.getCause());
    assertTrue("Error message from server should have the name of the down shard",
        e.getCause().getMessage().contains("shard"));
  }

