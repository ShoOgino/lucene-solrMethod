    /**
     * Factory method for creating a random domain change to use with a facet - may return an 'noop' JoinDomain,
     * but will never return null.
     */
    public static JoinDomain buildRandomDomain() { 

      // use consistent type on both sides of join
      final String[] suffixes = random().nextBoolean() ? STR_FIELD_SUFFIXES : INT_FIELD_SUFFIXES;
      
      final boolean noJoin = random().nextBoolean();

      String from = null;
      String to = null;
      for (;;) {
        if (noJoin) break;
        from = field(suffixes, random().nextInt(MAX_FIELD_NUM));
        to = field(suffixes, random().nextInt(MAX_FIELD_NUM));
        // HACK: joined numeric point fields need docValues.. for now just skip _is fields if we are dealing with points.
        if (Boolean.getBoolean(NUMERIC_POINTS_SYSPROP) && (from.endsWith("_is") || to.endsWith("_is")))
        {
            continue;
        }
        break;
      }

      // keep it simple, only filter on string fields - not point of test
      final String filterField = strfield(random().nextInt(MAX_FIELD_NUM));
      
      final String filter = random().nextBoolean() ? null : filterField+":[* TO *]";
      return new JoinDomain(from, to, filter);
    }

