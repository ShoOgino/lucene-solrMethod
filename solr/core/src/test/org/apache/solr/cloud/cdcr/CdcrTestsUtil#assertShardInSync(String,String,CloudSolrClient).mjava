  protected static boolean assertShardInSync(String collection, String shard, CloudSolrClient client) throws IOException, SolrServerException {
    TimeOut waitTimeOut = new TimeOut(30, TimeUnit.SECONDS, TimeSource.NANO_TIME);
    DocCollection docCollection = client.getZkStateReader().getClusterState().getCollection(collection);
    Slice correctSlice = null;
    for (Slice slice : docCollection.getSlices()) {
      if (shard.equals(slice.getName())) {
        correctSlice = slice;
        break;
      }
    }
    assertNotNull(correctSlice);

    long leaderDocCount;
    try (HttpSolrClient leaderClient = new HttpSolrClient.Builder(correctSlice.getLeader().getCoreUrl()).withHttpClient(client.getHttpClient()).build()) {
      leaderDocCount = leaderClient.query(new SolrQuery("*:*").setParam("distrib", "false")).getResults().getNumFound();
    }

    while (!waitTimeOut.hasTimedOut()) {
      int replicasInSync = 0;
      for (Replica replica : correctSlice.getReplicas()) {
        try (HttpSolrClient leaderClient = new HttpSolrClient.Builder(replica.getCoreUrl()).withHttpClient(client.getHttpClient()).build()) {
          long replicaDocCount = leaderClient.query(new SolrQuery("*:*").setParam("distrib", "false")).getResults().getNumFound();
          if (replicaDocCount == leaderDocCount) replicasInSync++;
        }
      }
      if (replicasInSync == correctSlice.getReplicas().size()) {
        return true;
      }
    }
    return false;
  }

