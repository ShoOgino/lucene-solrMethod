  @Test
  public void testListData() throws Exception {
    assertFalse(stateManager.hasData("/listData/foo"));
    assertFalse(stateManager.hasData("/listData/foo/bar"));
    try {
      stateManager.createData("/listData/foo/bar", new byte[0], CreateMode.PERSISTENT);
      fail("should not succeed");
    } catch (NoSuchElementException e) {
      // expected
    }
    try {
      stateManager.listData("/listData/foo");
      fail("should not succeed");
    } catch (NoSuchElementException e) {
      // expected
    }
    stateManager.makePath("/listData");
    List<String> kids = stateManager.listData("/listData");
    assertEquals(0, kids.size());
    stateManager.makePath("/listData/foo");
    kids = stateManager.listData("/listData");
    assertEquals(1, kids.size());
    assertEquals("foo", kids.get(0));
    stateManager.createData("/listData/foo/bar", new byte[0], CreateMode.PERSISTENT);
    stateManager.createData("/listData/foo/baz", new byte[0], CreateMode.PERSISTENT);
    kids = stateManager.listData("/listData/foo");
    assertEquals(2, kids.size());
    assertTrue(kids.contains("bar"));
    assertTrue(kids.contains("baz"));
    try {
      stateManager.createData("/listData/foo/bar", new byte[0], CreateMode.PERSISTENT);
      fail("should not succeed");
    } catch (AlreadyExistsException e) {
      // expected
    }
  }

