  @Test
  public void testReloadedLeaderStateAfterZkSessionLoss() throws Exception {

    log.info("testReloadedLeaderStateAfterZkSessionLoss initialized OK ... running test logic");

    final String testCollectionName = "c8n_1x1";
    CollectionAdminRequest.createCollection(testCollectionName, "conf", 1, 1)
        .process(cluster.getSolrClient());

    Replica leader
        = cluster.getSolrClient().getZkStateReader().getLeaderRetry(testCollectionName, "shard1", DEFAULT_TIMEOUT);

    long coreStartTime = getCoreStatus(leader).getCoreStartTime().getTime();
    CollectionAdminRequest.reloadCollection(testCollectionName).process(cluster.getSolrClient());

    RetryUtil.retryUntil("Timed out waiting for core to reload", 30, 1000, TimeUnit.MILLISECONDS, () -> {
      long restartTime = 0;
      try {
        restartTime = getCoreStatus(leader).getCoreStartTime().getTime();
      } catch (Exception e) {
        log.warn("Exception getting core start time: ", e);
        return false;
      }
      return restartTime > coreStartTime;
    });

    final int initialStateVersion = getCollectionState(testCollectionName).getZNodeVersion();

    cluster.expireZkSession(cluster.getReplicaJetty(leader));

    waitForState("Timed out waiting for core to re-register as ACTIVE after session expiry", testCollectionName, (n, c) -> {
      log.info("Collection state: {}", c);
      Replica expiredReplica = c.getReplica(leader.getName());
      return expiredReplica.getState() == Replica.State.ACTIVE && c.getZNodeVersion() > initialStateVersion;
    });

    log.info("testReloadedLeaderStateAfterZkSessionLoss succeeded ... shutting down now!");
  }

