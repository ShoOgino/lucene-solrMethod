  @Test
  public void testSetProperties() throws Exception {
    CloudSolrClient solrClient = cluster.getSolrClient();
    String setPropertiesCommand = "{\n" +
        "\t\"set-properties\" : {\n" +
        "\t\t\"pqr\" : \"abc\"\n" +
        "\t}\n" +
        "}";
    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));
    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);
    NamedList<Object> response = solrClient.request(req);
    Map properties = (Map) response.get("properties");
    assertNotNull(properties);
    assertEquals(1, properties.size());
    assertEquals("abc", properties.get("pqr"));

    setPropertiesCommand = "{\n" +
        "\t\"set-properties\" : {\n" +
        "\t\t\"xyz\" : 123\n" +
        "\t}\n" +
        "}";
    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));
    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);
    response = solrClient.request(req);
    properties = (Map) response.get("properties");
    assertNotNull(properties);
    assertEquals(2, properties.size());
    assertEquals("abc", properties.get("pqr"));
    assertEquals(123L, properties.get("xyz"));

    setPropertiesCommand = "{\n" +
        "\t\"set-properties\" : {\n" +
        "\t\t\"xyz\" : 456\n" +
        "\t}\n" +
        "}";
    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));
    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);
    response = solrClient.request(req);
    properties = (Map) response.get("properties");
    assertNotNull(properties);
    assertEquals(2, properties.size());
    assertEquals("abc", properties.get("pqr"));
    assertEquals(456L, properties.get("xyz"));

    setPropertiesCommand = "{\n" +
        "\t\"set-properties\" : {\n" +
        "\t\t\"xyz\" : null\n" +
        "\t}\n" +
        "}";
    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));
    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);
    response = solrClient.request(req);
    properties = (Map) response.get("properties");
    assertNotNull(properties);
    assertEquals(1, properties.size());
    assertEquals("abc", properties.get("pqr"));

    setPropertiesCommand = "{\n" +
        "\t\"set-properties\" : {\n" +
        "\t\t\"" + AutoScalingParams.TRIGGER_SCHEDULE_DELAY_SECONDS + "\" : 5\n" +
        "\t\t\"" + AutoScalingParams.TRIGGER_COOLDOWN_PERIOD_SECONDS + "\" : 10\n" +
        "\t\t\"" + AutoScalingParams.TRIGGER_CORE_POOL_SIZE + "\" : 10\n" +
        "\t\t\"" + AutoScalingParams.ACTION_THROTTLE_PERIOD_SECONDS + "\" : 5\n" +
        "\t}\n" +
        "}";
    solrClient.request(createAutoScalingRequest(SolrRequest.METHOD.POST, setPropertiesCommand));
    req = createAutoScalingRequest(SolrRequest.METHOD.GET, null);
    response = solrClient.request(req);
    properties = (Map) response.get("properties");
    assertNotNull(properties);
    assertEquals(5, properties.size());
    assertEquals("abc", properties.get("pqr"));
    assertEquals(5L, properties.get(AutoScalingParams.TRIGGER_SCHEDULE_DELAY_SECONDS));
    assertEquals(10L, properties.get(AutoScalingParams.TRIGGER_COOLDOWN_PERIOD_SECONDS));
    assertEquals(10L, properties.get(AutoScalingParams.TRIGGER_CORE_POOL_SIZE));
    assertEquals(5L, properties.get(AutoScalingParams.ACTION_THROTTLE_PERIOD_SECONDS));
  }

