  private void testJoins(String toColl, String fromColl, Integer toDocId, boolean isScoresTest)
      throws SolrServerException, IOException {
    // verify the join with fromIndex works
    final String[] scoreModes = {"avg","max","min","total"};
    String joinQ = "{!join " + anyScoreMode(isScoresTest, scoreModes)
                   + "from=join_s fromIndex=" + fromColl + " to=join_s}match_s:c";
    QueryRequest qr = new QueryRequest(params("collection", toColl, "q", joinQ, "fl", "id,get_s,score"));
    QueryResponse rsp = new QueryResponse(cloudClient.request(qr), cloudClient);
    SolrDocumentList hits = rsp.getResults();
    assertTrue("Expected 1 doc", hits.getNumFound() == 1);
    SolrDocument doc = hits.get(0);
    assertEquals(toDocId, doc.getFirstValue("id"));
    assertEquals("b", doc.getFirstValue("get_s"));
    assertScore(isScoresTest, doc);

    //negative test before creating an alias
    checkAbsentFromIndex(fromColl, toColl, isScoresTest, scoreModes);

    // create an alias for the fromIndex and then query through the alias
    String alias = fromColl+"Alias";
    CollectionAdminRequest.CreateAlias request = new CollectionAdminRequest.CreateAlias();
    request.setAliasName(alias);
    request.setAliasedCollections(fromColl);
    request.process(cloudClient);

    joinQ = "{!join " + anyScoreMode(isScoresTest, scoreModes)
            + "from=join_s fromIndex=" + alias + " to=join_s}match_s:c";
    qr = new QueryRequest(params("collection", toColl, "q", joinQ, "fl", "id,get_s,score"));
    rsp = new QueryResponse(cloudClient.request(qr), cloudClient);
    hits = rsp.getResults();
    assertTrue("Expected 1 doc", hits.getNumFound() == 1);
    doc = hits.get(0);
    assertEquals(toDocId, doc.getFirstValue("id"));
    assertEquals("b", doc.getFirstValue("get_s"));
    assertScore(isScoresTest, doc);

    //negative test after creating an alias
    checkAbsentFromIndex(fromColl, toColl, isScoresTest, scoreModes);

    // verify join doesn't work if no match in the "from" index
    joinQ = "{!join " + (anyScoreMode(isScoresTest, scoreModes))
            + "from=join_s fromIndex=" + fromColl + " to=join_s}match_s:d";
    qr = new QueryRequest(params("collection", toColl, "q", joinQ, "fl", "id,get_s,score"));
    rsp = new QueryResponse(cloudClient.request(qr), cloudClient);
    hits = rsp.getResults();
    assertTrue("Expected no hits", hits.getNumFound() == 0);
    assertScore(isScoresTest, doc);
  }

