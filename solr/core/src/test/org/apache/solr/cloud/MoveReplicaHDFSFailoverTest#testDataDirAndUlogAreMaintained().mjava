  @Test
  public void testDataDirAndUlogAreMaintained() throws Exception {
    String coll = "movereplicatest_coll2";
    CollectionAdminRequest.createCollection(coll, "conf1", 1, 1)
        .setCreateNodeSet("")
        .process(cluster.getSolrClient());
    String hdfsUri = HdfsTestUtil.getURI(dfsCluster);
    String dataDir = hdfsUri + "/dummyFolder/dataDir";
    String ulogDir = hdfsUri + "/dummyFolder2/ulogDir";
    CollectionAdminResponse res = CollectionAdminRequest
        .addReplicaToShard(coll, "shard1")
        .setDataDir(dataDir)
        .setUlogDir(ulogDir)
        .setNode(cluster.getJettySolrRunner(0).getNodeName())
        .process(cluster.getSolrClient());

    ulogDir += "/tlog";
    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();
    assertTrue(ClusterStateUtil.waitForAllActiveAndLiveReplicas(zkStateReader, 120000));

    DocCollection docCollection = zkStateReader.getClusterState().getCollection(coll);
    Replica replica = docCollection.getReplicas().iterator().next();
    assertTrue(replica.getStr("ulogDir"), replica.getStr("ulogDir").equals(ulogDir) || replica.getStr("ulogDir").equals(ulogDir+'/'));
    assertTrue(replica.getStr("dataDir"),replica.getStr("dataDir").equals(dataDir) || replica.getStr("dataDir").equals(dataDir+'/'));

    new CollectionAdminRequest.MoveReplica(coll, replica.getName(), cluster.getJettySolrRunner(1).getNodeName())
        .process(cluster.getSolrClient());
    assertTrue(ClusterStateUtil.waitForAllActiveAndLiveReplicas(zkStateReader, 120000));
    docCollection = zkStateReader.getClusterState().getCollection(coll);
    assertEquals(1, docCollection.getSlice("shard1").getReplicas().size());
    Replica newReplica = docCollection.getReplicas().iterator().next();
    assertEquals(newReplica.getNodeName(), cluster.getJettySolrRunner(1).getNodeName());
    assertTrue(newReplica.getStr("ulogDir"), newReplica.getStr("ulogDir").equals(ulogDir) || newReplica.getStr("ulogDir").equals(ulogDir+'/'));
    assertTrue(newReplica.getStr("dataDir"),newReplica.getStr("dataDir").equals(dataDir) || newReplica.getStr("dataDir").equals(dataDir+'/'));

    assertEquals(replica.getName(), newReplica.getName());
    assertEquals(replica.getCoreName(), newReplica.getCoreName());
    assertFalse(replica.getNodeName().equals(newReplica.getNodeName()));
    final int numDocs = 100;
    addDocs(coll, numDocs);  // indexed but not committed

    cluster.getJettySolrRunner(1).stop();
    Thread.sleep(5000);
    new CollectionAdminRequest.MoveReplica(coll, newReplica.getName(), cluster.getJettySolrRunner(0).getNodeName())
        .process(cluster.getSolrClient());
    assertTrue(ClusterStateUtil.waitForAllActiveAndLiveReplicas(zkStateReader, 120000));

    // assert that the old core will be removed on startup
    cluster.getJettySolrRunner(1).start();
    assertTrue(ClusterStateUtil.waitForAllActiveAndLiveReplicas(zkStateReader, 120000));
    docCollection = zkStateReader.getClusterState().getCollection(coll);
    assertEquals(1, docCollection.getReplicas().size());
    newReplica = docCollection.getReplicas().iterator().next();
    assertEquals(newReplica.getNodeName(), cluster.getJettySolrRunner(0).getNodeName());
    assertTrue(newReplica.getStr("ulogDir"), newReplica.getStr("ulogDir").equals(ulogDir) || newReplica.getStr("ulogDir").equals(ulogDir+'/'));
    assertTrue(newReplica.getStr("dataDir"),newReplica.getStr("dataDir").equals(dataDir) || newReplica.getStr("dataDir").equals(dataDir+'/'));

    assertEquals(0, cluster.getJettySolrRunner(1).getCoreContainer().getCores().size());

    cluster.getSolrClient().commit(coll);
    assertEquals(numDocs, cluster.getSolrClient().query(coll, new SolrQuery("*:*")).getResults().getNumFound());
    CollectionAdminRequest.deleteCollection(coll).process(cluster.getSolrClient());
  }

