  @Test
  public void testDeleteUsedPolicy() throws Exception {
    CloudSolrClient solrClient = cluster.getSolrClient();
    // add multiple policies
    String setPolicyCommand = "{'set-policy': {" +
        "    'nodelete':[" +
        "      {'nodeRole':'overseer', 'replica':0}]}}";
    solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, setPolicyCommand));
    CollectionAdminRequest.createCollection("COLL1", "conf", 1, 1)
        .setPolicy("nodelete")
        .process(cluster.getSolrClient());
    String removePolicyCommand = "{remove-policy : nodelete}";
    AutoScalingRequest.create(SolrRequest.METHOD.POST, removePolicyCommand);
    try {
      solrClient.request(AutoScalingRequest.create(SolrRequest.METHOD.POST, removePolicyCommand));
      fail("should have failed");
    } catch (HttpSolrClient.RemoteExecutionException e) {
      assertTrue(String.valueOf(getObjectByPath(e.getMetaData(), true, "error/details[0]/errorMessages[0]"))
          .contains("is being used by collection"));
    } catch (Exception e) {
      fail("Only RemoteExecutionException expected");
    }
    solrClient.request(CollectionAdminRequest.deleteCollection("COLL1"));
  }

