  // Ensure that total docs found is the expected number.
  private void waitForDocCount(long expectedNumFound, long waitMillis, String failureMessage)
      throws Exception {
    AtomicLong total = new AtomicLong(-1);
    try {
      getCommonCloudSolrClient().getZkStateReader().waitForState(DEFAULT_COLLECTION, waitMillis, TimeUnit.MILLISECONDS, (n, c) -> {
        long docTotal;
        try {
          docTotal = checkSlicesSameCounts(c);
        } catch (SolrServerException | IOException e) {
          throw new RuntimeException(e);
        }
        total.set(docTotal);
        if (docTotal == expectedNumFound) {
          return true;
        }
        return false;
      });
    } catch (TimeoutException | InterruptedException e) {
     
    }
    // We could fail here if we broke out of the above because we exceeded the time allowed.
    assertEquals(failureMessage, expectedNumFound, total.get());

    // This should be redundant, but it caught a test error after all.
    for (SolrClient client : clients) {
      assertEquals(failureMessage, expectedNumFound, client.query(new SolrQuery("*:*")).getResults().getNumFound());
    }
  }

