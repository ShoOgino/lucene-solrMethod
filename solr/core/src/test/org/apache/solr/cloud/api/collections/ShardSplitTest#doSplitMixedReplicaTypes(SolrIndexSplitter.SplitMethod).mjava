  private void doSplitMixedReplicaTypes(SolrIndexSplitter.SplitMethod splitMethod) throws Exception {
    waitForThingsToLevelOut(15, TimeUnit.SECONDS);
    String collectionName = "testSplitMixedReplicaTypes_" + splitMethod.toLower();
    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName, "conf1", 1, 2, 0, 2); // TODO tlog replicas disabled right now.
    create.setMaxShardsPerNode(5); // some high number so we can create replicas without hindrance
    create.process(cloudClient);
    
    cloudClient.waitForState(collectionName, 30, TimeUnit.SECONDS, SolrCloudTestCase.activeClusterShape(1, 4));
    
    waitForRecoveriesToFinish(collectionName, false);

    for (int i = 0; i < 100; i++) {
      cloudClient.add(collectionName, getDoc("id", "id-" + i, "foo_s", "bar " + i));
    }
    cloudClient.commit(collectionName);

    CollectionAdminRequest.SplitShard splitShard = CollectionAdminRequest.splitShard(collectionName);
    splitShard.setShardName(SHARD1);
    splitShard.setSplitMethod(splitMethod.toLower());
    CollectionAdminResponse rsp = splitShard.process(cloudClient);
    waitForThingsToLevelOut(30, TimeUnit.SECONDS);
   
    cloudClient.waitForState(collectionName, 30, TimeUnit.SECONDS, SolrCloudTestCase.activeClusterShape(2, 12));

    cloudClient.getZkStateReader().forceUpdateCollection(collectionName);
    ClusterState clusterState = cloudClient.getZkStateReader().getClusterState();
    DocCollection coll = clusterState.getCollection(collectionName);
    log.info("coll: {}", coll);

    // verify the original shard
    verifyShard(coll, SHARD1, Slice.State.INACTIVE, 2, 0, 2);
    // verify new sub-shards
    verifyShard(coll, SHARD1_0, Slice.State.ACTIVE, 2, 0, 2);
    verifyShard(coll, SHARD1_1, Slice.State.ACTIVE, 2, 0, 2);
  }

