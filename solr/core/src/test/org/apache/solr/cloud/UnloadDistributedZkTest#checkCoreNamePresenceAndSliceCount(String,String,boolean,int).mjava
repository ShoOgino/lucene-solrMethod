  private void checkCoreNamePresenceAndSliceCount(String collectionName, String coreName,
      boolean shouldBePresent, int expectedSliceCount) throws Exception {
    final TimeOut timeout = new TimeOut(45, TimeUnit.SECONDS, TimeSource.NANO_TIME);
    Boolean isPresent = null; // null meaning "don't know"
    while (null == isPresent || shouldBePresent != isPresent) {
      final DocCollection docCollection = getCommonCloudSolrClient().getZkStateReader().getClusterState().getCollectionOrNull(collectionName);
      final Collection<Slice> slices = (docCollection != null) ? docCollection.getSlices() : Collections.emptyList();
      if (timeout.hasTimedOut()) {
        printLayout();
        fail("checkCoreNamePresenceAndSliceCount failed:"
            +" collection="+collectionName+" CoreName="+coreName
            +" shouldBePresent="+shouldBePresent+" isPresent="+isPresent
            +" expectedSliceCount="+expectedSliceCount+" actualSliceCount="+slices.size());
      }
      if (expectedSliceCount == slices.size()) {
        isPresent = false;
        for (Slice slice : slices) {
          for (Replica replica : slice.getReplicas()) {
            if (coreName.equals(replica.get("core"))) {
              isPresent = true;
            }
          }
        }
      }
      Thread.sleep(1000);
    }
  }

