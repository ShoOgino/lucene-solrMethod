  @Test
  public void testOverseerRole() throws Exception {

    List<String> l = OverseerCollectionConfigSetProcessor.getSortedOverseerNodeNames(zkClient()) ;

    log.info("All nodes {}", l);
    String currentLeader = OverseerCollectionConfigSetProcessor.getLeaderNode(zkClient());
    log.info("Current leader {} ", currentLeader);
    l.remove(currentLeader);

    Collections.shuffle(l, random());
    String overseerDesignate = l.get(0);
    log.info("overseerDesignate {}", overseerDesignate);

    CollectionAdminRequest.addRole(overseerDesignate, "overseer").process(cluster.getSolrClient());

    TimeOut timeout = new TimeOut(15, TimeUnit.SECONDS);

    boolean leaderchanged = false;
    for (;!timeout.hasTimedOut();) {
      if (overseerDesignate.equals(OverseerCollectionConfigSetProcessor.getLeaderNode(zkClient()))) {
        log.info("overseer designate is the new overseer");
        leaderchanged =true;
        break;
      }
      Thread.sleep(100);
    }
    assertTrue("could not set the new overseer . expected "+
        overseerDesignate + " current order : " +
        getSortedOverseerNodeNames(zkClient()) +
        " ldr :"+ OverseerCollectionConfigSetProcessor.getLeaderNode(zkClient()) ,leaderchanged);

    //add another node as overseer
    l.remove(overseerDesignate);
    Collections.shuffle(l, random());

    String anotherOverseer = l.get(0);
    log.info("Adding another overseer designate {}", anotherOverseer);
    CollectionAdminRequest.addRole(anotherOverseer, "overseer").process(cluster.getSolrClient());

    String currentOverseer = getLeaderNode(zkClient());

    log.info("Current Overseer {}", currentOverseer);

    String hostPort = currentOverseer.substring(0, currentOverseer.indexOf('_'));

    StringBuilder sb = new StringBuilder();
    log.info("hostPort : {}", hostPort);

    JettySolrRunner leaderJetty = null;

    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {
      String s = jetty.getBaseUrl().toString();
      log.info("jetTy {}",s);
      sb.append(s).append(" , ");
      if (s.contains(hostPort)) {
        leaderJetty = jetty;
        break;
      }
    }

    assertNotNull("Could not find a jetty2 kill",  leaderJetty);

    log.info("leader node {}", leaderJetty.getBaseUrl());
    log.info("current election Queue",
        OverseerCollectionConfigSetProcessor.getSortedElectionNodes(zkClient(), "/overseer_elect/election"));
    ChaosMonkey.stop(leaderJetty);
    timeout = new TimeOut(10, TimeUnit.SECONDS);
    leaderchanged = false;
    for (; !timeout.hasTimedOut(); ) {
      currentOverseer = getLeaderNode(zkClient());
      if (anotherOverseer.equals(currentOverseer)) {
        leaderchanged = true;
        break;
      }
      Thread.sleep(100);
    }
    assertTrue("New overseer designate has not become the overseer, expected : " + anotherOverseer + "actual : " + getLeaderNode(zkClient()), leaderchanged);
  }

