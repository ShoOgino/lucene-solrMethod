  public void testLeaderAndMixedReplicas(boolean leaderInOldMode) throws Exception {
    // in case of new leader and mixed old replica and new replica, new leader can still put all of them into recovery
    // step1 : setup collection
    String collection = "testMixedReplicas-"+leaderInOldMode;
    CollectionAdminRequest.createCollection(collection, 1, 2)
        .setCreateNodeSet("")
        .process(cluster.getSolrClient());
    Properties oldLir = new Properties();
    oldLir.setProperty("lirVersion", "old");

    if (leaderInOldMode) {
      CollectionAdminRequest
          .addReplicaToShard(collection, "shard1")
          .setProperties(oldLir)
          .setNode(cluster.getJettySolrRunner(0).getNodeName())
          .process(cluster.getSolrClient());
    } else {
      CollectionAdminRequest
          .addReplicaToShard(collection, "shard1")
          .setNode(cluster.getJettySolrRunner(0).getNodeName())
          .process(cluster.getSolrClient());
    }

    waitForState("Timeout waiting for shard1 become active", collection, clusterShape(1, 1));

    CollectionAdminRequest
        .addReplicaToShard(collection, "shard1")
        .setProperties(oldLir)
        .setNode(cluster.getJettySolrRunner(1).getNodeName())
        .process(cluster.getSolrClient());

    CollectionAdminRequest
        .addReplicaToShard(collection, "shard1")
        .setNode(cluster.getJettySolrRunner(2).getNodeName())
        .process(cluster.getSolrClient());
    waitForState("Timeout waiting for shard1 become active", collection, clusterShape(1, 3));

    Slice shard1 = getCollectionState(collection).getSlice("shard1");
    Replica replicaInOldMode = shard1.getReplicas(x -> x != shard1.getLeader()).get(0);
    Replica replicaInNewMode = shard1.getReplicas(x -> x != shard1.getLeader()).get(1);
    Replica leader = shard1.getLeader();

    assertEquals(leaderInOldMode, runInOldLIRMode(collection, "shard1", leader));
    if (!runInOldLIRMode(collection, "shard1", replicaInOldMode)) {
      Replica temp = replicaInOldMode;
      replicaInOldMode = replicaInNewMode;
      replicaInNewMode = temp;
    }
    assertTrue(runInOldLIRMode(collection, "shard1", replicaInOldMode));
    assertFalse(runInOldLIRMode(collection, "shard1", replicaInNewMode));

    addDocs(collection, 2, 0);

    // step2 : introduce network partition then add doc, replicas should be put into recovery
    getProxyForReplica(replicaInOldMode).close();
    getProxyForReplica(replicaInNewMode).close();
    getProxyForReplica(leader).close();

    JettySolrRunner leaderJetty = getJettyForReplica(leader);
    addDoc(collection, 2, leaderJetty);

    Replica finalReplicaInOldMode = replicaInOldMode;
    waitForState("Replica " + replicaInOldMode.getName() + " is not put as DOWN", collection,
        (liveNodes, collectionState) ->
            collectionState.getSlice("shard1").getReplica(finalReplicaInOldMode.getName()).getState() == Replica.State.DOWN);
    Replica finalReplicaInNewMode = replicaInNewMode;
    waitForState("Replica " + finalReplicaInNewMode.getName() + " is not put as DOWN", collection,
        (liveNodes, collectionState) ->
            collectionState.getSlice("shard1").getReplica(finalReplicaInNewMode.getName()).getState() == Replica.State.DOWN);

    // wait a little bit
    Thread.sleep(500);
    getProxyForReplica(replicaInOldMode).reopen();
    getProxyForReplica(replicaInNewMode).reopen();
    getProxyForReplica(leader).reopen();

    waitForState("Timeout waiting for recovering", collection, clusterShape(1, 3));
    assertDocsExistInAllReplicas(Arrays.asList(replicaInNewMode, replicaInOldMode), collection, 0, 2);

    addDocs(collection, 3, 3);

    // ensure that, leader should not register other replica's term
    try (ZkShardTerms zkShardTerms = new ZkShardTerms(collection, "shard1", cluster.getZkClient())) {
      assertFalse(zkShardTerms.getTerms().containsKey(replicaInOldMode.getName()));
    }

    // step3 : upgrade the replica running in old mode to the new mode
    getProxyForReplica(leader).close();
    getProxyForReplica(replicaInOldMode).close();
    addDoc(collection, 6, leaderJetty);
    JettySolrRunner oldJetty = getJettyForReplica(replicaInOldMode);
    oldJetty.stop();
    waitForState("Node did not leave", collection, (liveNodes, collectionState)
        -> liveNodes.size() == 2);
    upgrade(oldJetty);

    oldJetty.start();
    getProxyForReplica(leader).reopen();
    getProxyForReplica(replicaInOldMode).reopen();

    waitForState("Timeout waiting for recovering", collection, clusterShape(1, 3));
    assertDocsExistInAllReplicas(Arrays.asList(replicaInNewMode, replicaInOldMode), collection, 0, 6);

    CollectionAdminRequest.deleteCollection(collection).process(cluster.getSolrClient());
  }

