  @Test
  public void test() throws Exception {
    cluster.waitForAllNodes(5);
    String coll = "utilizenodecoll";
    CloudSolrClient cloudClient = cluster.getSolrClient();
    
    log.info("Creating Collection...");
    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(coll, "conf1", 2, 2)
        .setMaxShardsPerNode(2);
    cloudClient.request(create);

    log.info("Spinning up additional jettyX...");
    JettySolrRunner jettyX = cluster.startJettySolrRunner();
    cluster.waitForAllNodes(30);

    assertNoReplicas("jettyX should not yet be utilized: ", coll, jettyX);

    log.info("Sending UTILIZE command for jettyX ({})", jettyX.getNodeName());
    cloudClient.request(new CollectionAdminRequest.UtilizeNode(jettyX.getNodeName()));

    // TODO: aparently we can't assert this? ...
    //
    // assertSomeReplicas("jettyX should now be utilized: ", coll, jettyX);
    //
    // ... it appears from the docs that unless there are policy violations,
    // this can be ignored unless jettyX has less "load" then other jetty instances?
    //
    // if the above is true, that means that this test is incredibly weak...
    // unless we know jettyX has at least one replica, then all the subsequent testing of the
    // port blacklist & additional UTILIZE command for jettyY are a waste of time.
    //
    // should we skip spinning up a *new* jettyX, and instead just pick an existing jetty?

    log.info("jettyX replicas prior to being blacklisted: {}", getReplicaList(coll, jettyX));
    
    String setClusterPolicyCommand = "{" +
      " 'set-cluster-policy': [" +
      "    {'port':" + jettyX.getLocalPort() +
      "     , 'replica':0}" +
      "  ]" +
      "}";
    log.info("Setting new policy to blacklist jettyX ({}) port={}",
             jettyX.getNodeName(), jettyX.getLocalPort());
    SolrRequest req = AutoScalingRequest.create(SolrRequest.METHOD.POST, setClusterPolicyCommand);
    NamedList<Object> response = cloudClient.request(req);
    assertEquals(req + " => " + response,
                 "success", response.get("result").toString());

    log.info("Spinning up additional jettyY...");
    JettySolrRunner jettyY = cluster.startJettySolrRunner();
    cluster.waitForAllNodes(30);
    
    assertNoReplicas("jettyY should not yet be utilized: ", coll, jettyY);

    log.info("jettyX replicas prior to utilizing jettyY: {}", getReplicaList(coll, jettyX));
    log.info("Sending UTILIZE command for jettyY ({})", jettyY.getNodeName());
    cloudClient.request(new CollectionAdminRequest.UtilizeNode(jettyY.getNodeName()));

    assertSomeReplicas("jettyY should now be utilized: ", coll, jettyY);
  }

