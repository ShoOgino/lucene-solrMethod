  @Test
  @BadApple(bugUrl="https://issues.apache.org/jira/browse/SOLR-12028")
  public void test() throws Exception {
    cluster.waitForAllNodes(5000);
    int REPLICATION = 2;
    String coll = "utilizenodecoll";
    CloudSolrClient cloudClient = cluster.getSolrClient();
    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(coll, "conf1", 2, REPLICATION);
    cloudClient.request(create);

    JettySolrRunner runner = cluster.startJettySolrRunner();
    cluster.waitForAllNodes(30);


    cloudClient.request(new CollectionAdminRequest.UtilizeNode(runner.getNodeName()));


    assertTrue(getReplicaCount(cluster.getSolrClient().getClusterStateProvider().getClusterState().getCollection(coll), runner.getNodeName()) > 0);

    String setClusterPolicyCommand = "{" +
        " 'set-cluster-policy': [" +
        "      {'port':" + runner.getLocalPort() +
        ", 'replica':0}" +
        "    ]" +
        "}";

    SolrRequest req = createAutoScalingRequest(SolrRequest.METHOD.POST, setClusterPolicyCommand);
    cloudClient.request(req);
    NamedList<Object> response = cloudClient.request(req);
    assertEquals(response.get("result").toString(), "success");

    JettySolrRunner runner2 = cluster.startJettySolrRunner();
    cluster.waitForAllNodes(30);

    cloudClient.request(new CollectionAdminRequest.UtilizeNode(runner2.getNodeName()));
    assertTrue("no replica should be present in  "+runner.getNodeName(),getReplicaCount(cluster.getSolrClient().getClusterStateProvider().getClusterState().getCollection(coll), runner.getNodeName()) == 0);

    assertTrue(getReplicaCount(cluster.getSolrClient().getClusterStateProvider().getClusterState().getCollection(coll), runner2.getNodeName()) > 0);

  }

