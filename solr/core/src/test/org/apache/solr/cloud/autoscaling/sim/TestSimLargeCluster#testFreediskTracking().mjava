  @Test
  public void testFreediskTracking() throws Exception {
    int NUM_DOCS = 100000;
    String collectionName = "testFreeDisk";
    SolrClient solrClient = cluster.simGetSolrClient();
    CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection(collectionName,
        "conf",2, 2);
    create.process(solrClient);

    CloudUtil.waitForState(cluster, "Timed out waiting for replicas of new collection to be active",
        collectionName, CloudUtil.clusterShape(2, 2, false, true));
    ClusterState clusterState = cluster.getClusterStateProvider().getClusterState();
    DocCollection coll = clusterState.getCollection(collectionName);
    Set<String> nodes = coll.getReplicas().stream()
        .map(r -> r.getNodeName())
        .collect(Collectors.toSet());
    Map<String, Number> initialFreedisk = getFreeDiskPerNode(nodes);

    // test small updates
    for (int i = 0; i < NUM_DOCS; i++) {
      SolrInputDocument doc = new SolrInputDocument("id", "id-" + i);
      solrClient.add(collectionName, doc);
    }
    Map<String, Number> updatedFreedisk = getFreeDiskPerNode(nodes);
    double delta = getDeltaFreeDiskBytes(initialFreedisk, updatedFreedisk);
    // 2 replicas - twice as much delta
    assertEquals(SimClusterStateProvider.DEFAULT_DOC_SIZE_BYTES * NUM_DOCS * 2, delta, delta * 0.1);

    // test small deletes - delete half of docs
    for (int i = 0; i < NUM_DOCS / 2; i++) {
      solrClient.deleteById(collectionName, "id-" + i);
    }
    Map<String, Number> updatedFreedisk1 = getFreeDiskPerNode(nodes);
    double delta1 = getDeltaFreeDiskBytes(initialFreedisk, updatedFreedisk1);
    // 2 replicas but half the docs
    assertEquals(SimClusterStateProvider.DEFAULT_DOC_SIZE_BYTES * NUM_DOCS * 2 / 2, delta1, delta1 * 0.1);

    // test bulk delete
    solrClient.deleteByQuery(collectionName, "*:*");
    Map<String, Number> updatedFreedisk2 = getFreeDiskPerNode(nodes);
    double delta2 = getDeltaFreeDiskBytes(initialFreedisk, updatedFreedisk2);
    // 0 docs - initial freedisk
    if (log.isInfoEnabled()) {
      log.info(cluster.dumpClusterState(true));
    }
    assertEquals(0.0, delta2, delta2 * 0.1);

    // test bulk update
    UpdateRequest ureq = new UpdateRequest();
    ureq.setDocIterator(new FakeDocIterator(0, NUM_DOCS));
    ureq.process(solrClient, collectionName);
    Map<String, Number> updatedFreedisk3 = getFreeDiskPerNode(nodes);
    double delta3 = getDeltaFreeDiskBytes(initialFreedisk, updatedFreedisk3);
    assertEquals(SimClusterStateProvider.DEFAULT_DOC_SIZE_BYTES * NUM_DOCS * 2, delta3, delta3 * 0.1);
  }

