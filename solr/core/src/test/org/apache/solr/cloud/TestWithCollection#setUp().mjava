  @Override
  public void setUp() throws Exception {
    super.setUp();
    if (zkClient().exists(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH, true))  {
      zkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH, "{}".getBytes(StandardCharsets.UTF_8), true);
    }
    ClusterState clusterState = cluster.getSolrClient().getZkStateReader().getClusterState();
    for (Map.Entry<String, ClusterState.CollectionRef> entry : clusterState.getCollectionStates().entrySet()) {
      if (entry.getKey().contains("_xyz"))  {
        try {
          CollectionAdminRequest.deleteCollection(entry.getKey()).process(cluster.getSolrClient());
        } catch (Exception e) {
          log.error("Exception while deleting collection: " + entry.getKey());
        }
      }
    }
    cluster.deleteAllCollections();
    cluster.getSolrClient().setDefaultCollection(null);

    cloudManager = cluster.getJettySolrRunner(0).getCoreContainer().getZkController().getSolrCloudManager();
    deleteChildrenRecursively(ZkStateReader.SOLR_AUTOSCALING_EVENTS_PATH);
    deleteChildrenRecursively(ZkStateReader.SOLR_AUTOSCALING_TRIGGER_STATE_PATH);
    deleteChildrenRecursively(ZkStateReader.SOLR_AUTOSCALING_NODE_LOST_PATH);
    deleteChildrenRecursively(ZkStateReader.SOLR_AUTOSCALING_NODE_ADDED_PATH);
    LATCH = new CountDownLatch(1);

    int jettys = cluster.getJettySolrRunners().size();
    if (jettys < NUM_JETTIES) {
      for (int i = jettys; i < NUM_JETTIES; i++) {
        cluster.startJettySolrRunner();
      }
    } else  {
      for (int i = jettys; i > NUM_JETTIES; i--) {
        cluster.stopJettySolrRunner(i - 1);
      }
    }
  }

