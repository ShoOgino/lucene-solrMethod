  @BeforeClass
  public static void setupClusters() throws Exception {

    numClouds = random().nextInt(4); //  0..3
    final String[] clusterIds = new String[numClouds];
    for (int ii=0; ii<numClouds; ++ii) {
      clusterIds[ii] = "cloud"+(ii+1);
    }

    numCollectionsPerCloud = random().nextInt(3); //  0..2
    final String[] collections = new String[numCollectionsPerCloud];
    for (int ii=0; ii<numCollectionsPerCloud; ++ii) {
      collections[ii] = "collection"+(ii+1);
    }

    numShards = 1+random().nextInt(2);
    numReplicas = 1+random().nextInt(2);
    nodesPerCluster = numShards*numReplicas;

    doSetupClusters(
        clusterIds,
        new DefaultClusterCreateFunction() {
          @Override
          protected int nodesPerCluster(String clusterId) {
            return nodesPerCluster;
          }
        },
        new DefaultClusterInitFunction(numShards, numReplicas) {
          @Override
          public void accept(String clusterId, MiniSolrCloudCluster cluster) {
            for (final String collection : collections) {
              if (random().nextBoolean()) {
                doAccept(collection, cluster); // same collection name in different clouds
              } else {
                doAccept(collection+"_in_"+clusterId, cluster); // globally unique collection name
              }
            }
          }
        });
  }

