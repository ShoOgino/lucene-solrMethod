  @BeforeClass
  private static void createMiniSolrCloudCluster() throws Exception {
    
    // multi replicas should not matter...
    final int repFactor = usually() ? 1 : 2;
    // ... but we definitely want to test multiple shards
    final int numShards = TestUtil.nextInt(random(), 1, (usually() ? 2 :3));
    final int numNodes = (numShards * repFactor);
   
    final String configName = DEBUG_LABEL + "_config-set";
    final Path configDir = Paths.get(TEST_HOME(), "collection1", "conf");
    
    configureCluster(numNodes).addConfig(configName, configDir).configure();
    
    Map<String, String> collectionProperties = new LinkedHashMap<>();
    collectionProperties.put("config", "solrconfig-phrases-identification.xml");
    collectionProperties.put("schema", "schema-phrases-identification.xml");
    CollectionAdminRequest.createCollection(COLLECTION_NAME, configName, numShards, repFactor)
        .setProperties(collectionProperties)
        .process(cluster.getSolrClient());

    CLOUD_CLIENT = cluster.getSolrClient();
    CLOUD_CLIENT.setDefaultCollection(COLLECTION_NAME);

    waitForRecoveriesToFinish(CLOUD_CLIENT);

    for (JettySolrRunner jetty : cluster.getJettySolrRunners()) {
      CLIENTS.add(getHttpSolrClient(jetty.getBaseUrl() + "/" + COLLECTION_NAME + "/"));
    }

    // index some docs...
    CLOUD_CLIENT.add
      (sdoc("id", "42",
            "title","Tale of the Brown Fox: was he lazy?",
            "body", "No. The quick brown fox was a very brown fox who liked to get into trouble."));
    CLOUD_CLIENT.add
      (sdoc("id", "43",
            "title","A fable in two acts",
            "body", "The brOwn fOx jumped. The lazy dog did not"));
    CLOUD_CLIENT.add
      (sdoc("id", "44",
            "title","Why the LazY dog was lazy",
            "body", "News flash: Lazy Dog was not actually lazy, it just seemd so compared to Fox"));
    CLOUD_CLIENT.add
      (sdoc("id", "45",
            "title","Why Are We Lazy?",
            "body", "Because we are. that's why"));
    CLOUD_CLIENT.commit();
  }

