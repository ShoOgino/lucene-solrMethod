  /**
   * Test that basic autoAddReplicaLogic kicks in when a node is lost 
   */
  @Test
  public void testSimple() throws Exception {
    final String COLLECTION = "test_simple";
    final ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();
    final JettySolrRunner jetty1 = cluster.getJettySolrRunner(1);
    final JettySolrRunner jetty2 = cluster.getJettySolrRunner(2);
    if (log.isInfoEnabled()) {
      log.info("Creating {} using jetty1:{}/{} and jetty2:{}/{}", COLLECTION,
          jetty1.getNodeName(), jetty1.getLocalPort(),
          jetty2.getNodeName(), jetty2.getLocalPort());
    }
             
    CollectionAdminRequest.createCollection(COLLECTION, "conf", 2, 2)
      .setCreateNodeSet(jetty1.getNodeName()+","+jetty2.getNodeName())
      .setAutoAddReplicas(true)
      .process(cluster.getSolrClient());
    
    cluster.waitForActiveCollection(COLLECTION, 2, 4);
    
    // start the tests
    JettySolrRunner lostJetty = random().nextBoolean() ? jetty1 : jetty2;
    String lostNodeName = lostJetty.getNodeName();
    List<Replica> replacedHdfsReplicas = getReplacedSharedFsReplicas(COLLECTION, zkStateReader, lostNodeName);
    if (log.isInfoEnabled()) {
      log.info("Stopping random node: {} / {}", lostNodeName, lostJetty.getLocalPort());
    }
    lostJetty.stop();
    
    cluster.waitForJettyToStop(lostJetty);
    waitForNodeLeave(lostNodeName);
    
    waitForState(COLLECTION + "=(2,4) w/o down replicas",
                 COLLECTION, clusterShapeNoDownReplicas(2,4), 90, TimeUnit.SECONDS);
                 
    checkSharedFsReplicasMovedCorrectly(replacedHdfsReplicas, zkStateReader, COLLECTION);

    if (log.isInfoEnabled()) {
      log.info("Re-starting (same) random node: {} / {}", lostNodeName, lostJetty.getLocalPort());
    }
    lostJetty.start();
    
    waitForNodeLive(lostJetty);
    
    assertTrue("Timeout waiting for all live and active",
               ClusterStateUtil.waitForAllActiveAndLiveReplicas(zkStateReader, 90000));

  }

