  // Fail if we the replicas with the preferredLeader property are _not_ also the leaders.
  private void checkPreferredsAreLeaders() throws InterruptedException, KeeperException {
    // Make sure that the shard unique are where you expect.
    TimeOut timeout = new TimeOut(timeoutMs, TimeUnit.MILLISECONDS, TimeSource.NANO_TIME);

    while (timeout.hasTimedOut() == false) {
      if (checkPreferredsAreLeaders(false)) {
        // Ok, all preferreds are leaders. Just for Let's also get the election queue and guarantee that every
        // live replica is in the queue and none are repeated.
        checkElectionQueues();
        return;
      }
      TimeUnit.MILLISECONDS.sleep(100);
    }

    log.error("Leaders are not all preferres {}", cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(COLLECTION_NAME));
    // Show the errors
    checkPreferredsAreLeaders(true);
  }

