  @Test
  public void testCustomCollectionsAPI() throws Exception {

    final String collection = "implicitcoll";
    int replicationFactor = TestUtil.nextInt(random(), 0, 3) + 2;
    int numShards = 3;
    int maxShardsPerNode = (((numShards + 1) * replicationFactor) / NODE_COUNT) + 1;

    CollectionAdminRequest.createCollectionWithImplicitRouter(collection, "conf", "a,b,c", replicationFactor)
        .setMaxShardsPerNode(maxShardsPerNode)
        .process(cluster.getSolrClient());

    DocCollection coll = getCollectionState(collection);
    assertEquals("implicit", ((Map) coll.get(DOC_ROUTER)).get("name"));
    assertNotNull(coll.getStr(REPLICATION_FACTOR));
    assertNotNull(coll.getStr(MAX_SHARDS_PER_NODE));
    assertNull("A shard of a Collection configured with implicit router must have null range",
        coll.getSlice("a").getRange());

    new UpdateRequest()
        .add("id", "6")
        .add("id", "7")
        .add("id", "8")
        .withRoute("a")
        .commit(cluster.getSolrClient(), collection);

    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery("*:*")).getResults().getNumFound());
    assertEquals(0, cluster.getSolrClient().query(collection, new SolrQuery("*:*").setParam(_ROUTE_, "b")).getResults().getNumFound());
    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery("*:*").setParam(_ROUTE_, "a")).getResults().getNumFound());

    cluster.getSolrClient().deleteByQuery(collection, "*:*");
    cluster.getSolrClient().commit(collection, true, true);
    assertEquals(0, cluster.getSolrClient().query(collection, new SolrQuery("*:*")).getResults().getNumFound());

    new UpdateRequest()
        .add("id", "9")
        .add("id", "10")
        .add("id", "11")
        .withRoute("c")
        .commit(cluster.getSolrClient(), collection);

    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery("*:*")).getResults().getNumFound());
    assertEquals(0, cluster.getSolrClient().query(collection, new SolrQuery("*:*").setParam(_ROUTE_, "a")).getResults().getNumFound());
    assertEquals(3, cluster.getSolrClient().query(collection, new SolrQuery("*:*").setParam(_ROUTE_, "c")).getResults().getNumFound());

    //Testing CREATESHARD
    CollectionAdminRequest.createShard(collection, "x")
        .process(cluster.getSolrClient());
    waitForState("Expected shard 'x' to be active", collection, (n, c) -> {
      if (c.getSlice("x") == null)
        return false;
      for (Replica r : c.getSlice("x")) {
        if (r.getState() != Replica.State.ACTIVE)
          return false;
      }
      return true;
    });

    new UpdateRequest()
        .add("id", "66", _ROUTE_, "x")
        .commit(cluster.getSolrClient(), collection);
    // TODO - the local state is cached and causes the request to fail with 'unknown shard'
    // assertEquals(1, cluster.getSolrClient().query(collection, new SolrQuery("*:*").setParam(_ROUTE_, "x")).getResults().getNumFound());

  }

