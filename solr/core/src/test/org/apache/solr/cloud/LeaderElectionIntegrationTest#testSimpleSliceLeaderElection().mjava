  @Test
  public void testSimpleSliceLeaderElection() throws Exception {

    //printLayout(zkServer.getZkAddress());
    for (int i = 0; i < 4; i++) {
      // who is the leader?
      String leader = getLeader();
      
      Set<Integer> shard1Ports = shardPorts.get("shard1");
      
      int leaderPort = getLeaderPort(leader);
      assertTrue(shard1Ports.toString(), shard1Ports.contains(leaderPort));
      
      shard1Ports.remove(leaderPort);
      
      // kill the leader
      if (VERBOSE) System.out.println("Killing " + leaderPort);
      containerMap.get(leaderPort).shutdown();
      
      //printLayout(zkServer.getZkAddress());
      
      // poll until leader change is visible
      for (int j = 0; j < 90; j++) {
        String currentLeader = getLeader();
        if(!leader.equals(currentLeader)) {
          break;
        }
        Thread.sleep(500);
      }
      
      leader = getLeader();
      int newLeaderPort = getLeaderPort(leader);
      int retry = 0;
      while (leaderPort == newLeaderPort) {
        if (retry++ == 20) {
          break;
        }
        Thread.sleep(1000);
      }
      
      if (leaderPort == newLeaderPort) {
        fail("We didn't find a new leader! " + leaderPort + " was shutdown, but it's still showing as the leader");
      }
      
      assertTrue("Could not find leader " + newLeaderPort + " in " + shard1Ports, shard1Ports.contains(newLeaderPort));
    }
    

  }

