  /**
   * Given a set of (potentially nested) term facets, and a base query string, asserts that 
   * the actual counts returned when executing that query with those facets match the expected results
   * of filtering on the equivilent facet terms+domain
   */
  private void assertFacetCountsAreCorrect(Map<String,TermFacet> expected,
                                           final String query) throws SolrServerException, IOException {

    final SolrParams baseParams = params("q", query, "rows","0");
    final SolrParams facetParams = params("json.facet", ""+TermFacet.toJSONFacetParamValue(expected));
    final SolrParams initParams = SolrParams.wrapAppended(facetParams, baseParams);
    
    log.info("Doing full run: {}", initParams);
    
    NamedList topResponse = null;
    try {
      topResponse = getRandClient(random()).request(new QueryRequest(initParams));
      assertNotNull(initParams + " is null response?", topResponse);
    } catch (Exception e) {
      throw new RuntimeException("init query failed: " + initParams + ": " + 
                                 e.getMessage(), e);
    }
    try {
      final NamedList facetResponse = (NamedList) topResponse.get("facets");
      assertNotNull("null facet results?", facetResponse);
      assertFacetCountsAreCorrect(expected, baseParams, facetResponse);
    } catch (AssertionError e) {
      throw new AssertionError(initParams + " ===> " + topResponse + " --> " + e.getMessage(), e);
    } finally {
      log.info("Ending full run"); 
    }
  }

