  private void createNewCollection(final String collection) throws InterruptedException {
    try {
      assertEquals(0, CollectionAdminRequest
          .createCollection(collection, "conf1", 2, 1)
          .setCreateNodeSet("")
          .process(cloudClient).getStatus());
    } catch (Exception e) {
      e.printStackTrace();
      //fails
    }
    final List<SolrClient> collectionClients = new ArrayList<>();
    otherCollectionClients.put(collection, collectionClients);
    int unique = 0 ;
    for (final JettySolrRunner runner : jettys) {
      unique++;
      final int frozeUnique = unique;
      Callable call = () -> {

        try {
          assertTrue(CollectionAdminRequest
              .addReplicaToShard(collection, "shard"+ ((frozeUnique%2)+1))
              .setNode(runner.getNodeName())
              .process(cloudClient).isSuccess());
        } catch (Exception e) {
          e.printStackTrace();
          //fails
        }
        return null;
      };
     
      collectionClients.add(createNewSolrClient(collection, runner.getBaseUrl().toString()));
      pending.add(completionService.submit(call));
      while (pending != null && pending.size() > 0) {
        
        Future<Object> future = completionService.take();
        if (future == null) return;
        pending.remove(future);
      }
    }
  }

