  /**
   * Adds one randomly generated document with the specified docId, asserting success, and returns 
   * the document added
   */
  private SolrInputDocument addRandomDocument(final int docId) throws IOException, SolrServerException {
    final SolrClient client = getRandClient(random());

    final SolrInputDocument doc = sdoc("id", "" + docId,
                                       "aaa_i", random().nextInt(),
                                       "bbb_i", random().nextInt(),
                                       //
                                       "ccc_s", TestUtil.randomSimpleString(random()),
                                       "ddd_s", TestUtil.randomSimpleString(random()),
                                       "eee_s", TestUtil.randomSimpleString(random()),
                                       "fff_s", TestUtil.randomSimpleString(random()),
                                       "ggg_s", TestUtil.randomSimpleString(random()),
                                       "hhh_s", TestUtil.randomSimpleString(random()),
                                       //
                                       "geo_1_srpt", GeoTransformerValidator.getValueForIndexing(random()),
                                       "geo_2_srpt", GeoTransformerValidator.getValueForIndexing(random()),
                                       // for testing prefix globbing
                                       "axx_i", random().nextInt(),
                                       "ayy_i", random().nextInt(),
                                       "azz_s", TestUtil.randomSimpleString(random()));
    
    log.info("ADD: {} = {}", docId, doc);
    assertEquals(0, client.add(doc).getStatus());
    return doc;
  }

