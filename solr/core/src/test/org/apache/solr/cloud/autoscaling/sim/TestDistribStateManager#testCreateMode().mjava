  @Test
  public void testCreateMode() throws Exception {
    stateManager.makePath("/createMode");
    stateManager.createData("/createMode/persistent", firstData, CreateMode.PERSISTENT);
    stateManager.createData("/createMode/persistent_seq", firstData, CreateMode.PERSISTENT);
    for (int i = 0; i < 10; i++) {
      stateManager.createData("/createMode/persistent_seq/data", firstData, CreateMode.PERSISTENT_SEQUENTIAL);
    }
    // check what happens with gaps
    stateManager.createData("/createMode/persistent_seq/data", firstData, CreateMode.PERSISTENT_SEQUENTIAL);
    stateManager.removeData("/createMode/persistent_seq/data" + String.format(Locale.ROOT, "%010d", 10), -1);
    stateManager.createData("/createMode/persistent_seq/data", firstData, CreateMode.PERSISTENT_SEQUENTIAL);

    stateManager.createData("/createMode/ephemeral", firstData, CreateMode.EPHEMERAL);
    stateManager.createData("/createMode/ephemeral_seq", firstData, CreateMode.PERSISTENT);
    for (int i = 0; i < 10; i++) {
      stateManager.createData("/createMode/ephemeral_seq/data", firstData, CreateMode.EPHEMERAL_SEQUENTIAL);
    }
    assertTrue(stateManager.hasData("/createMode"));
    assertTrue(stateManager.hasData("/createMode/persistent"));
    assertTrue(stateManager.hasData("/createMode/ephemeral"));
    List<String> kids = stateManager.listData("/createMode/persistent_seq");
    assertEquals(11, kids.size());
    kids = stateManager.listData("/createMode/ephemeral_seq");
    assertEquals(10, kids.size());
    for (int i = 0; i < 10; i++) {
      assertTrue(stateManager.hasData("/createMode/persistent_seq/data" + String.format(Locale.ROOT, "%010d", i)));
    }
    assertFalse(stateManager.hasData("/createMode/persistent_seq/data" + String.format(Locale.ROOT, "%010d", 10)));
    assertTrue(stateManager.hasData("/createMode/persistent_seq/data" + String.format(Locale.ROOT, "%010d", 11)));

    for (int i = 0; i < 10; i++) {
      assertTrue(stateManager.hasData("/createMode/ephemeral_seq/data" + String.format(Locale.ROOT, "%010d", i)));
    }
    // check that ephemeral nodes disappear on disconnect
    reInit();
    assertTrue(stateManager.hasData("/createMode/persistent"));
    for (int i = 0; i < 10; i++) {
      assertTrue(stateManager.hasData("/createMode/persistent_seq/data" + String.format(Locale.ROOT, "%010d", i)));
    }
    assertTrue(stateManager.hasData("/createMode/persistent_seq/data" + String.format(Locale.ROOT, "%010d", 11)));

    assertFalse(stateManager.hasData("/createMode/ephemeral"));
    assertTrue(stateManager.hasData("/createMode/ephemeral_seq"));
    kids = stateManager.listData("/createMode/ephemeral_seq");
    assertEquals(0, kids.size());
  }

