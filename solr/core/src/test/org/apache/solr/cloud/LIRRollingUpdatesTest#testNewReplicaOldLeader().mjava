  @Test
  @BadApple(bugUrl="https://issues.apache.org/jira/browse/SOLR-12028") // 21-May-2018
  public void testNewReplicaOldLeader() throws Exception {

    String collection = "testNewReplicaOldLeader";
    CollectionAdminRequest.createCollection(collection, 1, 2)
        .setCreateNodeSet("")
        .process(cluster.getSolrClient());
    Properties oldLir = new Properties();
    oldLir.setProperty("lirVersion", "old");

    CollectionAdminRequest
        .addReplicaToShard(collection, "shard1")
        .setProperties(oldLir)
        .setNode(cluster.getJettySolrRunner(0).getNodeName())
        .process(cluster.getSolrClient());

    CollectionAdminRequest
        .addReplicaToShard(collection, "shard1")
        .setProperties(oldLir)
        .setNode(cluster.getJettySolrRunner(1).getNodeName())
        .process(cluster.getSolrClient());
    waitForState("Time waiting for 1x2 collection", collection, clusterShape(1, 2));

    addDocs(collection, 2, 0);

    Slice shard1 = getCollectionState(collection).getSlice("shard1");
    //introduce network partition between leader & replica
    Replica notLeader = shard1.getReplicas(x -> x != shard1.getLeader()).get(0);
    assertTrue(runInOldLIRMode(collection, "shard1", notLeader));
    getProxyForReplica(notLeader).close();
    getProxyForReplica(shard1.getLeader()).close();

    addDoc(collection, 2, getJettyForReplica(shard1.getLeader()));
    waitForState("Replica " + notLeader.getName() + " is not put as DOWN", collection,
        (liveNodes, collectionState) ->
            collectionState.getSlice("shard1").getReplica(notLeader.getName()).getState() == Replica.State.DOWN);
    getProxyForReplica(shard1.getLeader()).reopen();
    getProxyForReplica(notLeader).reopen();
    // make sure that, when new replica works with old leader, it still can recovery normally
    waitForState("Timeout waiting for recovering", collection, clusterShape(1, 2));
    assertDocsExistInAllReplicas(Collections.singletonList(notLeader), collection, 0, 2);

    // make sure that, when new replica restart during LIR, it still can recovery normally (by looking at LIR node)
    getProxyForReplica(notLeader).close();
    getProxyForReplica(shard1.getLeader()).close();

    addDoc(collection, 3, getJettyForReplica(shard1.getLeader()));
    waitForState("Replica " + notLeader.getName() + " is not put as DOWN", collection,
        (liveNodes, collectionState) ->
            collectionState.getSlice("shard1").getReplica(notLeader.getName()).getState() == Replica.State.DOWN);

    JettySolrRunner notLeaderJetty = getJettyForReplica(notLeader);
    notLeaderJetty.stop();
    waitForState("Node did not leave", collection, (liveNodes, collectionState) -> liveNodes.size() == 2);
    upgrade(notLeaderJetty);
    notLeaderJetty.start();

    getProxyForReplica(shard1.getLeader()).reopen();
    getProxyForReplica(notLeader).reopen();
    waitForState("Timeout waiting for recovering", collection, clusterShape(1, 2));
    assertFalse(runInOldLIRMode(collection, "shard1", notLeader));
    assertDocsExistInAllReplicas(Collections.singletonList(notLeader), collection, 0, 3);

    CollectionAdminRequest.deleteCollection(collection).process(cluster.getSolrClient());
  }

