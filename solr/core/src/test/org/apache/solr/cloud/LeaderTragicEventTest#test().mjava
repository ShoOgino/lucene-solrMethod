  @Test
  public void test() throws Exception {
    final String collection = "collection1";
    cluster.getSolrClient().setDefaultCollection(collection);
    CollectionAdminRequest
        .createCollection(collection, "config", 1, 2)
        .process(cluster.getSolrClient());
    cluster.waitForActiveCollection(collection, 1, 2);
    try {
      List<String> addedIds = new ArrayList<>();
      Replica oldLeader = corruptLeader(collection, addedIds);

      waitForState("Timeout waiting for new replica become leader", collection, (liveNodes, collectionState) -> {
        Slice slice = collectionState.getSlice("shard1");

        if (slice.getReplicas().size() != 2) return false;
        if (slice.getLeader() == null) return false;
        if (slice.getLeader().getName().equals(oldLeader.getName())) return false;

        return true;
      });
      ClusterStateUtil.waitForAllActiveAndLiveReplicas(cluster.getSolrClient().getZkStateReader(), collection, 120000);
      Slice shard = getCollectionState(collection).getSlice("shard1");
      assertNotSame(shard.getLeader().getNodeName(), oldLeader.getNodeName());
      assertEquals(getNonLeader(shard).getNodeName(), oldLeader.getNodeName());

      for (String id : addedIds) {
        assertNotNull(cluster.getSolrClient().getById(collection,id));
      }
      if (log.isInfoEnabled()) {
        log.info("The test success oldLeader:{} currentState:{}", oldLeader, getCollectionState(collection));
      }

    } finally {
      CollectionAdminRequest.deleteCollection(collection).process(cluster.getSolrClient());
    }
  }

