  @Test
  public void test() throws Exception {
    CollectionAdminRequest
        .createCollection(COLLECTION, "config", 1, 2)
        .process(cluster.getSolrClient());
    ClusterStateUtil.waitForAllActiveAndLiveReplicas(cluster.getSolrClient().getZkStateReader(), COLLECTION, 120000);

    List<String> addedIds = new ArrayList<>();
    Replica oldLeader = corruptLeader(addedIds);

    waitForState("Timeout waiting for new replica become leader", COLLECTION, (liveNodes, collectionState) -> {
      Slice slice = collectionState.getSlice("shard1");

      if (slice.getReplicas().size() != 2) return false;
      if (slice.getLeader().getName().equals(oldLeader.getName())) return false;

      return true;
    });
    ClusterStateUtil.waitForAllActiveAndLiveReplicas(cluster.getSolrClient().getZkStateReader(), COLLECTION, 120000);
    Slice shard = getCollectionState(COLLECTION).getSlice("shard1");
    assertNotSame(shard.getLeader().getNodeName(), oldLeader.getNodeName());
    assertEquals(getNonLeader(shard).getNodeName(), oldLeader.getNodeName());

    for (String id : addedIds) {
      assertNotNull(cluster.getSolrClient().getById(COLLECTION,id));
    }
    log.info("The test success oldLeader:{} currentState:{}", oldLeader, getCollectionState(COLLECTION));

    CollectionAdminRequest.deleteCollection(COLLECTION).process(cluster.getSolrClient());
  }

