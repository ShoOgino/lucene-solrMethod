  @Test
  public void testWhitebox() throws Exception {
    
    try (Trap catchIds = catchTrace(
        new CheckMethodName("doProcessSearchByIds"), () -> {})) {
      assertPartialResults(params("q", "{!cache=false}name:a*", "sort", "query($q,1) asc"),
          () -> assertTrue(catchIds.hasCaught()));
    } catch (AssertionError ae) {
      Trap.dumpLastStackTraces(log);
      throw ae;
    }

    // the point is to catch sort_values (fsv) timeout, between search and facet
    // I haven't find a way to encourage fsv to read index
    try (Trap catchFSV = catchTrace(
        new CheckMethodName("doFieldSortValues"), () -> {})) {
      assertPartialResults(params("q", "{!cache=false}name:a*", "sort", "query($q,1) asc"),
          () -> assertTrue(catchFSV.hasCaught()));
    } catch (AssertionError ae) {
      Trap.dumpLastStackTraces(log);
      throw ae;
    }
    
    try (Trap catchClass = catchClass(
        QueryComponent.class.getSimpleName(), () -> {  })) {
      assertPartialResults(params("q", "{!cache=false}name:a*"),
          ()->assertTrue(catchClass.hasCaught()));
    }catch(AssertionError ae) {
      Trap.dumpLastStackTraces(log);
      throw ae;
    }
    try(Trap catchClass = catchClass(FacetComponent.class.getSimpleName())){
      assertPartialResults(params("q", "{!cache=false}name:a*", "facet","true", "facet.method", "enum", 
          "facet.field", "id"),
          ()->assertTrue(catchClass.hasCaught()));
    }catch(AssertionError ae) {
      Trap.dumpLastStackTraces(log);
      throw ae;
    }

    try (Trap catchClass = catchClass(FacetModule.class.getSimpleName())) {
      assertPartialResults(params("q", "{!cache=false}name:a*", "json.facet", "{ ids: {"
          + " type: range, field : num, start : 0, end : 100, gap : 10 }}"),
          () -> assertTrue(catchClass.hasCaught()));
    } catch (AssertionError ae) {
      Trap.dumpLastStackTraces(log);
      throw ae;
    }
  }

