  @Test
  public void testCheckIfDiffIsLegal() throws Exception {
    Set<String> addFails = null;
    Set<String> deleteFails = null;
    SolrDocumentList a = getDocList("2", "3");
    SolrDocumentList b = getDocList("1");
    boolean legal = CloudInspectUtil.checkIfDiffIsLegal(a, b, "control", "cloud", addFails,
        deleteFails);
    
    assertFalse(legal);
    
    // ################################
    
    addFails = new HashSet<String>();
    deleteFails = new HashSet<String>();
    
    a = getDocList("2", "3", "4");
    b = getDocList("2", "3");
    addFails.add("4");
    
    legal = CloudInspectUtil.checkIfDiffIsLegal(a, b, "control", "cloud", addFails,
        deleteFails);
    
    assertTrue(legal);
    
    // ################################
    
    addFails = new HashSet<String>();
    deleteFails = new HashSet<String>();
    
    a = getDocList("2", "3", "4");
    b = getDocList("2", "3", "5");
    addFails.add("4");
    deleteFails.add("5");
    
    legal = CloudInspectUtil.checkIfDiffIsLegal(a, b, "control", "cloud", addFails,
        deleteFails);
    
    assertTrue(legal);
    
    // ################################
    
    addFails = new HashSet<String>();
    deleteFails = new HashSet<String>();
    
    a = getDocList("2", "3", "4");
    b = getDocList("2", "3", "5");
    addFails.add("4");
    deleteFails.add("6");
    
    legal = CloudInspectUtil.checkIfDiffIsLegal(a, b, "control", "cloud", addFails,
        deleteFails);
    
    assertFalse(legal);
    
    // ################################
    
    final HashSet<String> addFailsExpectEx = new HashSet<String>();
    final HashSet<String> deleteFailsExpectEx = new HashSet<String>();
    
    final SolrDocumentList aExpectEx = getDocList("2", "3", "4");
    final SolrDocumentList bExpectEx = getDocList("2", "3", "4");

    expectThrows(IllegalArgumentException.class, "Expected exception because lists have no diff",
        () -> CloudInspectUtil.checkIfDiffIsLegal(aExpectEx, bExpectEx,
            "control", "cloud", addFailsExpectEx, deleteFailsExpectEx));
  }

