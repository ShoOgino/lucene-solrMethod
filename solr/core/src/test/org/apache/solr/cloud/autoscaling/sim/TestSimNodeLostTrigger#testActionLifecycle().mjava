  public void testActionLifecycle() throws Exception {
    Map<String, Object> props = createTriggerProps(0);
    @SuppressWarnings({"unchecked"})
    List<Map<String, String>> actions = (List<Map<String, String>>) props.get("actions");
    Map<String, String> action = new HashMap<>(2);
    action.put("name", "testActionInit");
    action.put("class", AssertInitTriggerAction.class.getName());
    actions.add(action);
    try (NodeLostTrigger trigger = new NodeLostTrigger("node_added_trigger")) {
      trigger.configure(cluster.getLoader(), cluster, props);
      assertEquals(true, actionConstructorCalled.get());
      assertEquals(false, actionInitCalled.get());
      assertEquals(false, actionCloseCalled.get());
      trigger.init();
      assertEquals(true, actionInitCalled.get());
      assertEquals(false, actionCloseCalled.get());
    }
    assertEquals(true, actionCloseCalled.get());
  }

