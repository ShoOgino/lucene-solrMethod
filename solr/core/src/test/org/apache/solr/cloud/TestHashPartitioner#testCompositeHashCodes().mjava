  public void testCompositeHashCodes() throws Exception {
    DocRouter router = DocRouter.getDocRouter(CompositeIdRouter.NAME);
    assertTrue(router instanceof CompositeIdRouter);
    router = DocRouter.DEFAULT;
    assertTrue(router instanceof CompositeIdRouter);

    DocCollection coll = createCollection(4, router);
    doNormalIdHashing(coll);

    // ensure that the shard hashed to is only dependent on the first part of the compound key
    doId(coll, "b!foo", "shard1");
    doId(coll, "c!bar", "shard2");
    doId(coll, "d!baz", "shard3");
    doId(coll, "e!qux", "shard4");

    // syntax to specify bits.  Anything over 2 should give the same results as above (since only top 2 bits
    // affect our 4 slice collection).
    doId(coll, "b/2!foo", "shard1");
    doId(coll, "c/2!bar", "shard2");
    doId(coll, "d/2!baz", "shard3");
    doId(coll, "e/2!qux", "shard4");

    doId(coll, "b/32!foo", "shard1");
    doId(coll, "c/32!bar", "shard2");
    doId(coll, "d/32!baz", "shard3");
    doId(coll, "e/32!qux", "shard4");
  }

