  private static final void waitForAndDiffTimestamps(final String label,
                                                     final long minExpectedDelta,
                                                     final TimeUnit minExpectedDeltaUnit,
                                                     final BlockingQueue<Long> timestamps) {
    try {
      log.info("{}: Waiting for 2 timestamps to be recorded", label);
      Long firstTs = timestamps.poll(minExpectedDelta * 3, minExpectedDeltaUnit);
      assertNotNull(label + ": Couldn't get first timestampe after max allowed polling", firstTs);
      Long secondTs = timestamps.poll(minExpectedDelta * 3, minExpectedDeltaUnit);
      assertNotNull(label + ": Couldn't get second timestampe after max allowed polling", secondTs);
      
      final long deltaInNanos = secondTs - firstTs;
      final long minExpectedDeltaInNanos = minExpectedDeltaUnit.toNanos(minExpectedDelta);
      assertTrue(label + ": Delta between timestamps ("+secondTs+"ns - "+firstTs+"ns = "+deltaInNanos+"ns) is not " +
                 "at least as much as min expected delay: " + minExpectedDeltaInNanos + "ns",
                 deltaInNanos >= minExpectedDeltaInNanos);
    } catch (InterruptedException e) {
      log.error("{}: interupted", label, e);
      fail(label + ": interupted:" + e.toString());
    }
  }

