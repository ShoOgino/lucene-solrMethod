  public static void teardownClass(MiniDFSCluster dfsCluster) throws Exception {
    HdfsUtil.TEST_CONF = null;

    if (badTlogOutStream != null) {
      IOUtils.closeQuietly(badTlogOutStream);
      badTlogOutStream = null;
    }

    if (badTlogOutStreamFs != null) {
      IOUtils.closeQuietly(badTlogOutStreamFs);
      badTlogOutStreamFs = null;
    }

    try {
      try {
        SolrTestCaseJ4.resetFactory();
      } catch (Exception e) {
        log.error("Exception trying to reset solr.directoryFactory", e);
      }
      if (dfsCluster != null) {
        synchronized (TIMERS_LOCK) {
          if (timers != null) {
            Timer timer = timers.remove(dfsCluster);
            if (timer != null) {
              timer.cancel();
            }
            if (timers.isEmpty()) {
              timers = null;
            }
          }
        }
        try {
          dfsCluster.shutdown(true);
        } catch (Error e) {
          // Added in SOLR-7134
          // Rarely, this can fail to either a NullPointerException
          // or a class not found exception. The later may fixable
          // by adding test dependencies.
          log.warn("Exception shutting down dfsCluster", e);
        }
      }
    } finally {
      System.clearProperty("test.build.data");
      System.clearProperty("test.cache.data");

      System.clearProperty("socketTimeout");

      System.clearProperty("tests.hdfs.numdatanodes");

      System.clearProperty("solr.lock.type");

      // Clear "solr.hdfs." system properties
      Enumeration<?> propertyNames = System.getProperties().propertyNames();
      while(propertyNames.hasMoreElements()) {
        String propertyName = String.valueOf(propertyNames.nextElement());
        if(propertyName.startsWith("solr.hdfs.")) {
          System.clearProperty(propertyName);
        }
      }
    }
  }

