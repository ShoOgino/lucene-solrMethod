  /**
   * Check resilience of replication with delete by query executed on targets
   */
  @Test
  public void testResilienceWithDeleteByQueryOnTarget() throws Exception {
    createCollections();

    // Start CDCR
    CdcrTestsUtil.cdcrRestart(sourceSolrClient);

    CdcrTestsUtil.indexRandomDocs(50, sourceSolrClient);

    assertEquals(50, CdcrTestsUtil.waitForClusterToSync
        (sourceSolrClient.query(new SolrQuery(ALL_Q)).getResults().getNumFound(), targetSolrClient));

    sourceSolrClient.deleteByQuery(ALL_Q, 1);

    assertEquals(0, CdcrTestsUtil.waitForClusterToSync(0, sourceSolrClient));
    assertEquals(0, CdcrTestsUtil.waitForClusterToSync
        (sourceSolrClient.query(new SolrQuery(ALL_Q)).getResults().getNumFound(), targetSolrClient));

    CdcrTestsUtil.indexRandomDocs(51, 101, sourceSolrClient);

    assertEquals(50, CdcrTestsUtil.waitForClusterToSync
        (sourceSolrClient.query(new SolrQuery(ALL_Q)).getResults().getNumFound(), targetSolrClient));

    targetSolrClient.deleteByQuery(ALL_Q, 1);

    assertEquals(50, sourceSolrClient.query(new SolrQuery(ALL_Q)).getResults().getNumFound());
    assertEquals(0, CdcrTestsUtil.waitForClusterToSync(0, targetSolrClient));

    CdcrTestsUtil.indexRandomDocs(102, 152, sourceSolrClient);

    assertEquals(100, sourceSolrClient.query(new SolrQuery(ALL_Q)).getResults().getNumFound());
    assertEquals(50, CdcrTestsUtil.waitForClusterToSync(50, targetSolrClient));

    deleteCollections();
  }

