  @Test
  public void testAutoAddReplicas() throws Exception {
    String collection = "test-collection";
    CollectionAdminRequest
        .createCollection(collection, 1, 1)
        .setAutoAddReplicas(true)
        .process(cluster.getSolrClient());
    byte[] data = zkClient().getData(SOLR_AUTOSCALING_CONF_PATH, null, null, true);
    ZkNodeProps loaded = ZkNodeProps.load(data);
    assertNotNull(loaded.get("triggers"));
    assertEquals("auto add replicas trigger did not created", ((Map)loaded.get("triggers")).size(), 1);

    zkClient().setData(SOLR_AUTOSCALING_CONF_PATH, Utils.toJSON(new ZkNodeProps()), true);
    new CollectionAdminRequest.AsyncCollectionAdminRequest(CollectionParams.CollectionAction.MODIFYCOLLECTION) {
      @Override
      public SolrParams getParams() {
        ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();
        params.set("collection", collection);
        params.set("autoAddReplicas", false);
        return params;
      }
    }.process(cluster.getSolrClient());
    data = zkClient().getData(SOLR_AUTOSCALING_CONF_PATH, null, null, true);
    loaded = ZkNodeProps.load(data);
    assertNull(loaded.get("triggers"));

    new CollectionAdminRequest.AsyncCollectionAdminRequest(CollectionParams.CollectionAction.MODIFYCOLLECTION) {
      @Override
      public SolrParams getParams() {
        ModifiableSolrParams params = (ModifiableSolrParams) super.getParams();
        params.set("collection", collection);
        params.set("autoAddReplicas", true);
        return params;
      }
    }.process(cluster.getSolrClient());
    data = zkClient().getData(SOLR_AUTOSCALING_CONF_PATH, null, null, true);
    loaded = ZkNodeProps.load(data);
    assertNotNull(loaded.get("triggers"));
    assertEquals("auto add replicas trigger did not created", ((Map)loaded.get("triggers")).size(), 1);
  }

