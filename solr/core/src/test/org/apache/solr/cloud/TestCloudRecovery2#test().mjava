  @Test
  public void test() throws Exception {
    JettySolrRunner node1 = cluster.getJettySolrRunner(0);
    JettySolrRunner node2 = cluster.getJettySolrRunner(1);
    try (HttpSolrClient client1 = getHttpSolrClient(node1.getBaseUrl().toString())) {

      node2.stop();
      waitForState("", COLLECTION, (liveNodes, collectionState) -> liveNodes.size() == 1);

      UpdateRequest req = new UpdateRequest();
      for (int i = 0; i < 100; i++) {
        req = req.add("id", i+"", "num", i+"");
      }
      req.commit(client1, COLLECTION);

      node2.start();
      waitForState("", COLLECTION, clusterShape(1, 2));

      try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {
        long numFound = client.query(COLLECTION, new SolrQuery("q","*:*", "distrib", "false")).getResults().getNumFound();
        assertEquals(100, numFound);
      }
      long numFound = client1.query(COLLECTION, new SolrQuery("q","*:*", "distrib", "false")).getResults().getNumFound();
      assertEquals(100, numFound);

      new UpdateRequest().add("id", "1", "num", "10")
          .commit(client1, COLLECTION);

      try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {
        Object v = client.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
        assertEquals("10", v.toString());
      }
      Object v = client1.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
      assertEquals("10", v.toString());

      //
      node2.stop();
      waitForState("", COLLECTION, (liveNodes, collectionState) -> liveNodes.size() == 1);

      new UpdateRequest().add("id", "1", "num", "20")
          .commit(client1, COLLECTION);
      v = client1.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
      assertEquals("20", v.toString());

      node2.start();
      waitForState("", COLLECTION, clusterShape(1, 2));
      try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {
        v = client.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
        assertEquals("20", v.toString());
      }

      node2.stop();
      waitForState("", COLLECTION, (liveNodes, collectionState) -> liveNodes.size() == 1);

      new UpdateRequest().add("id", "1", "num", "30")
          .commit(client1, COLLECTION);
      v = client1.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
      assertEquals("30", v.toString());

      node2.start();
      waitForState("", COLLECTION, clusterShape(1, 2));

      try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {
        v = client.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
        assertEquals("30", v.toString());
      }
      v = client1.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
      assertEquals("30", v.toString());
    }

    node1.stop();
    waitForState("", COLLECTION, (liveNodes, collectionState) -> {
      Replica leader = collectionState.getLeader("shard1");
      return leader != null && leader.getNodeName().equals(node2.getNodeName());
    });

    node1.start();
    waitForState("", COLLECTION, clusterShape(1, 2));
    try (HttpSolrClient client = getHttpSolrClient(node1.getBaseUrl().toString())) {
      Object v = client.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
      assertEquals("30", v.toString());
    }
    try (HttpSolrClient client = getHttpSolrClient(node2.getBaseUrl().toString())) {
      Object v = client.query(COLLECTION, new SolrQuery("q","id:1", "distrib", "false")).getResults().get(0).get("num");
      assertEquals("30", v.toString());
    }

  }

