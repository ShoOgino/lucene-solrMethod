  @Test
  public void testReloadedLeaderStateAfterZkSessionLoss() throws Exception {
    waitForThingsToLevelOut(30000);

    log.info("testReloadedLeaderStateAfterZkSessionLoss initialized OK ... running test logic");

    String testCollectionName = "c8n_1x1";
    String shardId = "shard1";
    createCollectionRetry(testCollectionName, 1, 1, 1);
    cloudClient.setDefaultCollection(testCollectionName);

    Replica leader = getShardLeader(testCollectionName, shardId, 30 /* timeout secs */);

    // reload collection and wait to see the core report it has been reloaded
    boolean wasReloaded = reloadCollection(leader, testCollectionName);
    assertTrue("Collection '"+testCollectionName+"' failed to reload within a reasonable amount of time!",
        wasReloaded);

    // cause session loss
    chaosMonkey.expireSession(getJettyOnPort(getReplicaPort(leader)));

    // TODO: have to wait a while for the node to get marked down after ZK session loss
    // but tests shouldn't be so timing dependent!
    Thread.sleep(15000);

    // wait up to 15 seconds to see the replica in the active state
    String replicaState = null;
    int timeoutSecs = 15;
    long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeoutSecs, TimeUnit.SECONDS);
    while (System.nanoTime() < timeout) {
      // state of leader should be active after session loss recovery - see SOLR-7338
      cloudClient.getZkStateReader().forceUpdateCollection(testCollectionName);
      ClusterState cs = cloudClient.getZkStateReader().getClusterState();
      Slice slice = cs.getSlice(testCollectionName, shardId);
      replicaState = slice.getReplica(leader.getName()).getStr(ZkStateReader.STATE_PROP);
      if ("active".equals(replicaState))
        break;

      Thread.sleep(1000);
    }
    assertEquals("Leader state should be active after recovering from ZK session loss, but after " +
        timeoutSecs + " seconds, it is " + replicaState, "active", replicaState);

    // try to clean up
    try {
      new CollectionAdminRequest.Delete()
              .setCollectionName(testCollectionName).process(cloudClient);
    } catch (Exception e) {
      // don't fail the test
      log.warn("Could not delete collection {} after test completed", testCollectionName);
    }

    log.info("testReloadedLeaderStateAfterZkSessionLoss succeeded ... shutting down now!");
  }

