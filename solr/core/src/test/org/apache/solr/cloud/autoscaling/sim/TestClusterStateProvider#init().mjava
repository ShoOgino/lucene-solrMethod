  private static void init() throws Exception {
    SolrCloudManager realManager = cluster.getJettySolrRunner(cluster.getJettySolrRunners().size() - 1).getCoreContainer()
        .getZkController().getSolrCloudManager();
    liveNodes = realManager.getClusterStateProvider().getLiveNodes();
    clusterProperties = realManager.getClusterStateProvider().getClusterProperties();
    autoScalingConfig = realManager.getDistribStateManager().getAutoScalingConfig();
    replicas = new HashMap<>();
    nodeValues = new HashMap<>();
    liveNodes.forEach(n -> {
      replicas.put(n, realManager.getNodeStateProvider().getReplicaInfo(n, Collections.emptySet()));
      nodeValues.put(n, realManager.getNodeStateProvider().getNodeValues(n, ImplicitSnitch.tags));
    });
    realState = realManager.getClusterStateProvider().getClusterState();

    if (simulated) {
      // initialize simulated provider
      SimCloudManager simCloudManager = new SimCloudManager(TimeSource.get("simTime:10"));
      simCloudManager.getSimClusterStateProvider().simSetClusterProperties(clusterProperties);
      simCloudManager.getSimDistribStateManager().simSetAutoScalingConfig(autoScalingConfig);
      nodeValues.forEach((n, values) -> {
        simCloudManager.getSimNodeStateProvider().simSetNodeValues(n, values);
      });
      simCloudManager.getSimClusterStateProvider().simSetClusterState(realState);
      ClusterState simState = simCloudManager.getClusterStateProvider().getClusterState();
      assertClusterStateEquals(realState, simState);
      cloudManager = simCloudManager;
    } else {
      cloudManager = realManager;
    }
  }

