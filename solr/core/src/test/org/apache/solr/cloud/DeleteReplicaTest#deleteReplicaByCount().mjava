  @Test
  @ShardsFixed(num = 4)
  public void deleteReplicaByCount() throws Exception {
    String collectionName = "deleteByCount";
    try (CloudSolrClient client = createCloudClient(null)) {
      createCollection(collectionName, 1, 3, 5);

      waitForRecoveriesToFinish(collectionName, false);

      DocCollection testcoll = getCommonCloudSolrClient().getZkStateReader()
              .getClusterState().getCollection(collectionName);
      Collection<Slice> slices = testcoll.getActiveSlices();
      assertEquals(slices.size(), 1);
      for (Slice individualShard:  slices) {
        assertEquals(individualShard.getReplicas().size(),3);
      }


      try {
        // Should not be able to delete 2 replicas (non leader ones for a given shard
        tryRemoveReplicaByCountAndShard(collectionName, client, 2, "shard1");
        testcoll = getCommonCloudSolrClient().getZkStateReader()
                .getClusterState().getCollection(collectionName);
        slices = testcoll.getActiveSlices();
        assertEquals(slices.size(), 1);
        for (Slice individualShard:  slices) {
          assertEquals(individualShard.getReplicas().size(),1);
        }

      } catch (SolrException se) {
        fail("Should have been able to remove the replica successfully");
      }

    }
  }

