  @Test
  public void testCreateLargeSimCollections() throws Exception {
    SolrClient solrClient = cluster.simGetSolrClient();

    final int numCollections = atLeast(5);
    for (int i = 0; i < numCollections; i++) {
      // wide and shallow, or deep and narrow...
      final int numShards = TestUtil.nextInt(random(), 5, 20);
      final int nReps = TestUtil.nextInt(random(), 2, 25 - numShards);
      final int tReps = TestUtil.nextInt(random(), 2, 25 - numShards);
      final int pReps = TestUtil.nextInt(random(), 2, 25 - numShards);
      final int repsPerShard = (nReps + tReps + pReps);
      final int totalCores = repsPerShard * numShards;
      final String name = "large_sim_collection" + i;
      
      final CollectionAdminRequest.Create create = CollectionAdminRequest.createCollection
        (name, "conf", numShards, nReps, tReps, pReps);
      create.setAutoAddReplicas(false);
      
      log.info("CREATE: {}", create);
      create.process(solrClient);

      // Since our current goal is to try and find situations where cores are just flat out missing
      // no matter how long we wait, let's be excessive and generous in our timeout.
      // (REMINDER: this uses the cluster's timesource, and ADDREPLICA has a hardcoded delay of 500ms)
      CloudUtil.waitForState(cluster, name, 2 * totalCores, TimeUnit.SECONDS,
          CloudUtil.clusterShape(numShards, repsPerShard, false, true));
      
      final CollectionAdminRequest.Delete delete = CollectionAdminRequest.deleteCollection(name);
      log.info("DELETE: {}", delete);
      delete.process(solrClient);
    }
  }

