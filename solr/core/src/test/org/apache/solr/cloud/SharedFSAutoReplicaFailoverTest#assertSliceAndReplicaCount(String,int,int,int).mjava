  private void assertSliceAndReplicaCount(String collection, int numSlices, int numReplicas, int timeOutInMs) throws InterruptedException {
    TimeOut timeOut = new TimeOut(timeOutInMs, TimeUnit.MILLISECONDS);
    while (!timeOut.hasTimedOut()) {
      ClusterState clusterState = cloudClient.getZkStateReader().getClusterState();
      Collection<Slice> slices = clusterState.getCollection(collection).getActiveSlices();
      if (slices.size() == numSlices) {
        boolean isMatch = true;
        for (Slice slice : slices) {
          int count = 0;
          for (Replica replica : slice.getReplicas()) {
            if (replica.getState() == Replica.State.ACTIVE && clusterState.liveNodesContain(replica.getNodeName())) {
              count++;
            }
          }
          if (count < numReplicas) {
            isMatch = false;
          }
        }
        if (isMatch) return;
      }
      Thread.sleep(200);
    }
    fail("Expected numSlices=" + numSlices + " numReplicas=" + numReplicas + " but found " + cloudClient.getZkStateReader().getClusterState().getCollection(collection) + " with /live_nodes: " + cloudClient.getZkStateReader().getClusterState().getLiveNodes());
  }

