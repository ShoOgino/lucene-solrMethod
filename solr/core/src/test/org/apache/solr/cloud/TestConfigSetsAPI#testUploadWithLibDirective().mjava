  @Test
  @Ignore // enable this back when the sleep is removed from protectConfigsHandler() call
  public void testUploadWithLibDirective() throws Exception {
    // Authorization off
    unprotectConfigsHandler();
    final String untrustedSuffix = "-untrusted";
    uploadConfigSetWithAssertions("with-lib-directive", untrustedSuffix, null, null);
    // try to create a collection with the uploaded configset
    Throwable thrown = expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> {
      createCollection("newcollection3", "with-lib-directive" + untrustedSuffix,
          1, 1, solrCluster.getSolrClient());
    });

    assertThat(thrown.getMessage(), containsString("Underlying core creation failed"));

    // Authorization on
    final String trustedSuffix = "-trusted";
    protectConfigsHandler();
    uploadConfigSetWithAssertions("with-lib-directive", trustedSuffix, "solr", "SolrRocks");
    // try to create a collection with the uploaded configset
    CollectionAdminResponse resp = createCollection("newcollection3", "with-lib-directive" + trustedSuffix,
        1, 1, solrCluster.getSolrClient());
    
    SolrInputDocument doc = sdoc("id", "4055", "subject", "Solr");
    solrCluster.getSolrClient().add("newcollection3", doc);
    solrCluster.getSolrClient().commit("newcollection3");
    assertEquals("4055", solrCluster.getSolrClient().query("newcollection3",
        params("q", "*:*")).getResults().get(0).get("id"));
  }

