  @SuppressWarnings({"unchecked"})
  private static void assertNodeStateProvider(SolrCloudManager oneMgr, SolrCloudManager twoMgr, String... ignorableNodeValues) throws Exception {
    NodeStateProvider one = oneMgr.getNodeStateProvider();
    NodeStateProvider two = twoMgr.getNodeStateProvider();
    for (String node : oneMgr.getClusterStateProvider().getLiveNodes()) {
      Map<String, Object> oneVals = one.getNodeValues(node, SimUtils.COMMON_NODE_TAGS);
      Map<String, Object> twoVals = two.getNodeValues(node, SimUtils.COMMON_NODE_TAGS);
      oneVals = new TreeMap<>(Utils.getDeepCopy(oneVals, 10, false, true));
      twoVals = new TreeMap<>(Utils.getDeepCopy(twoVals, 10, false, true));
      if (ignorableNodeValues != null) {
        for (String key : ignorableNodeValues) {
          oneVals.remove(key);
          twoVals.remove(key);
        }
      }
      assertEquals(Utils.toJSONString(oneVals), Utils.toJSONString(twoVals));
      Map<String, Map<String, List<Replica>>> oneInfos = one.getReplicaInfo(node, SimUtils.COMMON_REPLICA_TAGS);
      Map<String, Map<String, List<Replica>>> twoInfos = two.getReplicaInfo(node, SimUtils.COMMON_REPLICA_TAGS);
      assertEquals("collections on node" + node, oneInfos.keySet(), twoInfos.keySet());
      oneInfos.forEach((coll, oneShards) -> {
        Map<String, List<Replica>> twoShards = twoInfos.get(coll);
        assertEquals("shards on node " + node, oneShards.keySet(), twoShards.keySet());
        oneShards.forEach((shard, oneReplicas) -> {
          List<Replica> twoReplicas = twoShards.get(shard);
          assertEquals("num replicas on node " + node, oneReplicas.size(), twoReplicas.size());
          Map<String, Replica> oneMap = oneReplicas.stream()
              .collect(Collectors.toMap(Replica::getName, Function.identity()));
          Map<String, Replica> twoMap = twoReplicas.stream()
              .collect(Collectors.toMap(Replica::getName, Function.identity()));
          assertEquals("replica coreNodeNames on node " + node, oneMap.keySet(), twoMap.keySet());
          oneMap.forEach((coreNode, oneReplica) -> {
            Replica twoReplica = twoMap.get(coreNode);
            SimSolrCloudTestCase.assertReplicaInfoEquals(oneReplica, twoReplica);
          });
        });
      });
    }
  }

