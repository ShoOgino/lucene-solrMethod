  private void uploadConfigSetWithAssertions(String configSetName, String suffix, String username) throws Exception {
    SolrZkClient zkClient = new SolrZkClient(cluster.getZkServer().getZkAddress(),
        AbstractZkTestCase.TIMEOUT, 45000, null);
    try {
      long statusCode = uploadConfigSet(configSetName, suffix, username, zkClient);
      assertEquals(0l, statusCode);

      assertTrue("managed-schema file should have been uploaded",
          zkClient.exists("/configs/"+configSetName+suffix+"/managed-schema", true));
      assertTrue("managed-schema file contents on zookeeper are not exactly same as that of the file uploaded in config",
          Arrays.equals(zkClient.getData("/configs/"+configSetName+suffix+"/managed-schema", null, null, true),
              readFile("solr/configsets/upload/"+configSetName+"/managed-schema")));

      assertTrue("solrconfig.xml file should have been uploaded",
          zkClient.exists("/configs/"+configSetName+suffix+"/solrconfig.xml", true));
      byte data[] = zkClient.getData("/configs/"+configSetName+suffix, null, null, true);
      //assertEquals("{\"trusted\": false}", new String(data, StandardCharsets.UTF_8));
      assertTrue("solrconfig.xml file contents on zookeeper are not exactly same as that of the file uploaded in config",
          Arrays.equals(zkClient.getData("/configs/"+configSetName+suffix+"/solrconfig.xml", null, null, true),
              readFile("solr/configsets/upload/"+configSetName+"/solrconfig.xml")));
    } finally {
      zkClient.close();
    }
  }

