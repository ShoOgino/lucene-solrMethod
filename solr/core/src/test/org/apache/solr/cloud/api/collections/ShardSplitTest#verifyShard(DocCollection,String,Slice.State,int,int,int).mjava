  private void verifyShard(DocCollection coll, String shard, Slice.State expectedState, int numNrt, int numTlog, int numPull) throws Exception {
    Slice s = coll.getSlice(shard);
    assertEquals("unexpected shard state", expectedState, s.getState());
    AtomicInteger actualNrt = new AtomicInteger();
    AtomicInteger actualTlog = new AtomicInteger();
    AtomicInteger actualPull = new AtomicInteger();
    s.getReplicas().forEach(r -> {
      switch (r.getType()) {
        case NRT: actualNrt.incrementAndGet(); break;
        case TLOG: actualTlog.incrementAndGet(); break;
        case PULL: actualPull.incrementAndGet(); break;
      }
    });
    assertEquals("actual NRT", numNrt, actualNrt.get());
    assertEquals("actual TLOG", numTlog, actualTlog.get());
    assertEquals("actual PULL", numPull, actualPull.get());
  }

