  @Test
  public void testWatcher() throws KeeperException, InterruptedException, IOException {
    final ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();
    CollectionProperties collectionProps = new CollectionProperties(zkClient());

    // Add a watcher to collection props
    final Watcher watcher = new Watcher();
    zkStateReader.registerCollectionPropsWatcher(collectionName, watcher);
    assertEquals(0, watcher.waitForTrigger(TEST_NIGHTLY?2000:200));

    // Trigger a new znode event
    collectionProps.setCollectionProperty(collectionName, "property", "value1");
    assertEquals(1, watcher.waitForTrigger());
    assertEquals("value1", watcher.getProps().get("property"));

    // Trigger a value change event
    collectionProps.setCollectionProperty(collectionName, "property", "value2");
    watcher.waitForTrigger();
    assertEquals("value2", watcher.getProps().get("property"));

    // Delete the properties znode
    zkStateReader.getZkClient().delete("/collections/" + collectionName + "/collectionprops.json", -1, true);
    assertEquals(1, watcher.waitForTrigger());
    assertTrue(watcher.getProps().isEmpty());

    // Remove watcher and make sure that the watcher is not triggered
    zkStateReader.removeCollectionPropsWatcher(collectionName, watcher);
    collectionProps.setCollectionProperty(collectionName, "property", "value1");
    assertEquals("ZK watcher was triggered after it was removed for collection " + collectionName, 0, watcher.waitForTrigger());
  }

