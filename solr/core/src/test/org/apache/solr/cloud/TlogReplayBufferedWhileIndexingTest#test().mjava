  @Test
  public void test() throws Exception {
    handle.clear();
    handle.put("timestamp", SKIPVAL);
    
    waitForRecoveriesToFinish(false);
    
    int numThreads = 3;
    
    threads = new ArrayList<>(numThreads);
    
    ArrayList<JettySolrRunner> allJetty = new ArrayList<>();
    allJetty.addAll(jettys);
    allJetty.remove(shardToLeaderJetty.get("shard1").jetty);
    assert allJetty.size() == 1 : allJetty.size();
    allJetty.get(0).stop();
    
    StoppableIndexingThread indexThread;
    for (int i = 0; i < numThreads; i++) {
      boolean pauseBetweenUpdates = random().nextBoolean();
      int batchSize = random().nextInt(4) + 1;
      indexThread = new StoppableIndexingThread(controlClient, cloudClient, Integer.toString(i), true, 900, batchSize, pauseBetweenUpdates);
      threads.add(indexThread);
      indexThread.start();
    }

    Thread.sleep(2000);
    
    allJetty.get(0).start();
    
    Thread.sleep(45000);
  
    waitForThingsToLevelOut(600); // we can insert random update delays, so this can take a while, especially when beasting this test
    
    Thread.sleep(2000);
    
    waitForRecoveriesToFinish(DEFAULT_COLLECTION, cloudClient.getZkStateReader(), false, true);
    
    for (StoppableIndexingThread thread : threads) {
      thread.safeStop();
    }
    
    waitForThingsToLevelOut(30);

    checkShardConsistency(false, false);

  }

