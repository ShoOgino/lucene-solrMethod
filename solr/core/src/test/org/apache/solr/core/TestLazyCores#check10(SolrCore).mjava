  private void check10(SolrCore core) {

    // DEBUGGING ONLY since I can't get this to fail locally (Erick Erickson)
    // Wondering if this is the problem with multiple searchers being opened on load, in which case
    // looping for a bit should help.
    boolean failIt = false;
    try {
      for (int idx = 0; idx < 10; ++idx) {
        LocalSolrQueryRequest lsrg = makeReq(core, "q", "*:*", "wt", "xml");
        String resp = h.query(lsrg);
        if (resp.contains("numFound=\"10\"")) {
          if (failIt) {
            fail("***********EOE found 10 docs after failing to find 10 docs the first time, Implicates SOLR-11035 ???");
          }
          break;
        }
        failIt = true;
        System.out.println("********EOE AT LEAST ONE LOOP FAILED TO FIND 10 DOCS. resp: " + resp);
        Thread.sleep(1000);
      }
      if (failIt) {
        System.out.println("********EOE Test failed, what happens if we add a doc now? Will there be 11 docs? ");
        addLazy(core, "id", "1000EOE");
        SolrQueryRequest req = makeReq(core);
        CommitUpdateCommand cmtCmd = new CommitUpdateCommand(req, false);
        core.getUpdateHandler().commit(cmtCmd);
        assertQ("test closing core without committing after adding 11th document",
            makeReq(core, "q", "*:*")
            , "//result[@numFound='11']"
        );
        fail("*************EOE added 11th doc and then found 11! Implicates SOLR-11035 ??? ");
      }
    } catch (Exception e) {
      fail(e.getMessage());
    }
    // Just get a simple search to work!
    assertQ("test closing core without committing",
        makeReq(core, "q", "*:*")
        , "//result[@numFound='10']"
    );
  }

