    /**
     * Given a solrconfig.xml file name, a schema file name, a solr home directory, 
     * and an expected errString, asserts that initializing a core with these 
     * files causes an error matching the specified errString ot be thrown.
     */
  protected final void assertConfigs(final String solrconfigFile,
                                     final String schemaFile,
                                     final String solrHome,
                                     final String errString) 
    throws Exception {

    ignoreException(Pattern.quote(errString));
    try {
      if (null == solrHome) {
        initCore( solrconfigFile, schemaFile );
      } else {
        initCore( solrconfigFile, schemaFile, solrHome );
      }
    } catch (Exception e) {
      for (Throwable t = e; t != null; t = t.getCause()) {
        // short circuit out if we found what we expected
        if (t.getMessage() != null && -1 != t.getMessage().indexOf(errString)) return;
      }

      // otherwise, rethrow it, possibly completley unrelated
      throw new SolrException
        (ErrorCode.SERVER_ERROR, 
         "Unexpected error, expected error matching: " + errString, e);
    } finally {
      deleteCore();
      resetExceptionIgnores();
    }
    fail("Did not encounter any exception from: " + solrconfigFile + " using " + schemaFile);
  }

