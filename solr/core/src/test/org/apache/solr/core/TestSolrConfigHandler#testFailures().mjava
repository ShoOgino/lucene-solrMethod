  public void testFailures() throws Exception {
    String payload = "{ not-a-real-command: { param1: value1, param2: value2 } }";
    runConfigCommandExpectFailure(restTestHarness, "/config", payload, "Unknown operation 'not-a-real-command'");

    payload = "{ set-property: { update.autoCreateFields: false } }";
    runConfigCommandExpectFailure(restTestHarness, "/config", payload, "'update.autoCreateFields' is not an editable property");
    
    payload = "{ set-property: { updateHandler.autoCommit.maxDocs: false } }";
    runConfigCommandExpectFailure(restTestHarness, "/config", payload, "Property updateHandler.autoCommit.maxDocs must be of Integer type");

    payload = "{ unset-property: not-an-editable-property }";
    runConfigCommandExpectFailure(restTestHarness, "/config", payload, "'[not-an-editable-property]' is not an editable property");

    for (String component : new String[] {
        "requesthandler", "searchcomponent", "initparams", "queryresponsewriter", "queryparser",
        "valuesourceparser", "transformer", "updateprocessor", "queryconverter", "listener", "runtimelib"}) {
      for (String operation : new String[] { "add", "update" }) {
        payload = "{ " + operation + "-" + component + ": { param1: value1 } }";
        runConfigCommandExpectFailure(restTestHarness, "/config", payload, "'name' is a required field");
      }
      payload = "{ delete-" + component + ": not-a-real-component-name }";
      runConfigCommandExpectFailure(restTestHarness, "/config", payload, "NO such ");
    }
  }

