  @Test
  public void testGetDataHome() throws Exception {
    NodeConfig config = loadNodeConfig("/solr/solr-solrDataHome.xml");
    CoreContainer cc = new CoreContainer(config);
    Properties cp = cc.getContainerProperties();
    RAMDirectoryFactory rdf = new RAMDirectoryFactory();
    rdf.initCoreContainer(cc);
    rdf.init(new NamedList());

    // No solr.data.home property set. Absolute instanceDir
    assertDataHome("/tmp/inst1/data", "/tmp/inst1", rdf, cc);

    // Simulate solr.data.home set in solrconfig.xml <directoryFactory> tag
    NamedList args = new NamedList();
    args.add("solr.data.home", "/solrdata/");
    rdf.init(args);
    assertDataHome("/solrdata/inst_dir/data", "inst_dir", rdf, cc);
    
    // solr.data.home set with System property, and relative path
    System.setProperty("solr.data.home", "solrdata");
    config = loadNodeConfig("/solr/solr-solrDataHome.xml");
    cc = new CoreContainer(config);
    rdf = new RAMDirectoryFactory();
    rdf.initCoreContainer(cc);
    rdf.init(new NamedList());
    assertDataHome(solrHome.resolve("solrdata/inst_dir/data").toAbsolutePath().toString(), "inst_dir", rdf, cc);
    // Test parsing last component of instanceDir, and using custom dataDir
    assertDataHome(solrHome.resolve("solrdata/myinst/mydata").toAbsolutePath().toString(), "/path/to/myinst", rdf, cc, "dataDir", "mydata");
    // solr.data.home set but also solrDataHome set in solr.xml, which should override the former
    System.setProperty("test.solr.data.home", "/foo");
    config = loadNodeConfig("/solr/solr-solrDataHome.xml");
    cc = new CoreContainer(config);
    rdf = new RAMDirectoryFactory();
    rdf.initCoreContainer(cc);
    rdf.init(new NamedList());
    assertDataHome("/foo/inst_dir/data", "inst_dir", rdf, cc);
  }

