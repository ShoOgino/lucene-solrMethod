  @Test
  public void testRepositoryConfig() {
    PluginInfo[] plugins = new PluginInfo[2];

    {
      Map<String, Object> attrs = new HashMap<>();
      attrs.put(CoreAdminParams.NAME, "repo1");
      attrs.put(FieldType.CLASS_NAME, LocalFileSystemRepository.class.getName());
      attrs.put("default" , "true");
      attrs.put("location", "/tmp");
      plugins[0] = new PluginInfo("repository", attrs);
    }
    {
      Map<String, Object> attrs = new HashMap<>();
      attrs.put(CoreAdminParams.NAME, "boom");
      attrs.put(FieldType.CLASS_NAME, HdfsBackupRepository.class.getName());
      attrs.put("location", "/tmp");
      plugins[1] = new PluginInfo("repository", attrs);
    }
    Collections.shuffle(Arrays.asList(plugins), random());

    BackupRepositoryFactory f = new BackupRepositoryFactory(plugins);

    {
      BackupRepository repo = f.newInstance(loader);

      assertTrue(repo instanceof LocalFileSystemRepository);
      assertEquals("/tmp", repo.getConfigProperty("location"));
    }

    {
      BackupRepository repo = f.newInstance(loader, "repo1");

      assertTrue(repo instanceof LocalFileSystemRepository);
      assertEquals("/tmp", repo.getConfigProperty("location"));
    }
    
    {
      try {
        BackupRepository repo = f.newInstance(loader, "boom");
        fail();
      } catch (Exception e) {
      }
    }
  }

