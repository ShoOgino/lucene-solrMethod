  @Test
  public void testNoCores() throws IOException, ParserConfigurationException, SAXException {
    //create solrHome
    File solrHomeDirectory = createTempDir().toFile();
    
    boolean oldSolrXml = random().nextBoolean();
    
    SetUpHome(solrHomeDirectory, oldSolrXml ? EMPTY_SOLR_XML : EMPTY_SOLR_XML2);
    CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());
    cores.load();
    try {
      //assert zero cores
      assertEquals("There should not be cores", 0, cores.getCores().size());
      
      FileUtils.copyDirectory(new File(SolrTestCaseJ4.TEST_HOME(), "collection1"), solrHomeDirectory);
      //add a new core
      CoreDescriptor coreDescriptor = new CoreDescriptor(cores, "core1", solrHomeDirectory.getAbsolutePath());
      SolrCore newCore = cores.create(coreDescriptor);

      //assert one registered core

      assertEquals("There core registered", 1, cores.getCores().size());

      if (oldSolrXml) {
        assertXmlFile(new File(solrHomeDirectory, "solr.xml"),
            "/solr/cores[@transientCacheSize='32']");
      }

      cores.unload("core1");
      //assert cero cores
      assertEquals("There should not be cores", 0, cores.getCores().size());
      
      // try and remove a core that does not exist
      try {
        cores.unload("non_existent_core");
        fail("Should have thrown an exception when unloading a non-existent core");
      }
      catch (SolrException e) {
        assertThat(e.getMessage(), containsString("Cannot unload non-existent core [non_existent_core]"));
      }

    } finally {
      cores.shutdown();
    }

  }

