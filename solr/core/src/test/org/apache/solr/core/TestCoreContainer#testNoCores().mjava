  @Test
  public void testNoCores() throws Exception {

    CoreContainer cores = init(CONFIGSETS_SOLR_XML);

    try {
      //assert zero cores
      assertEquals("There should not be cores", 0, cores.getCores().size());
      
      //add a new core
      CoreDescriptor coreDescriptor = new CoreDescriptor(cores, "core1", "collection1", CoreDescriptor.CORE_CONFIGSET, "minimal");
      SolrCore newCore = cores.create(coreDescriptor);

      //assert one registered core

      assertEquals("There core registered", 1, cores.getCores().size());

      cores.unload("core1");
      //assert cero cores
      assertEquals("There should not be cores", 0, cores.getCores().size());
      
      // try and remove a core that does not exist
      try {
        cores.unload("non_existent_core");
        fail("Should have thrown an exception when unloading a non-existent core");
      }
      catch (SolrException e) {
        assertThat(e.getMessage(), containsString("Cannot unload non-existent core [non_existent_core]"));
      }

      // try and remove a null core
      try {
        cores.unload(null);
        fail("Should have thrown an exception when unloading a null core");
      }
      catch (Exception e) {
        if (!(e instanceof SolrException)) {
          fail("Should not have thrown SolrException but got " + e);
        }
        assertThat(e.getMessage(), containsString("Cannot unload non-existent core [null]"));
      }

    } finally {
      cores.shutdown();
    }

  }

