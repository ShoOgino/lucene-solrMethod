  public void testProperty() throws Exception {
    RestTestHarness harness = restTestHarness;
    MapWriter confMap = getRespMap("/config", harness);
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/luke"), null));
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/system"), null));
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/mbeans"), null));
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/plugins"), null));
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/threads"), null));
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/properties"), null));
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/logging"), null));
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/file"), null));
    assertNotNull(confMap._get(asList("config", "requestHandler", "/admin/ping"), null));

    String payload = "{\n" +
        " 'set-property' : { 'updateHandler.autoCommit.maxDocs':100, 'updateHandler.autoCommit.maxTime':10 , 'requestDispatcher.requestParsers.addHttpRequestToContext':true} \n" +
        " }";
    runConfigCommand(harness, "/config", payload);

    MapWriter m = getRespMap("/config/overlay", harness);
    MapWriter props =null;
    assertEquals("100", m._getStr("overlay/props/updateHandler/autoCommit/maxDocs", null));
    assertEquals("10", m._getStr("overlay/props/updateHandler/autoCommit/maxTime",null));

    m =  getRespMap("/config/updateHandler", harness);
    assertNotNull(m._get("config/updateHandler/commitWithin/softCommit",null));
    assertNotNull(m._get("config/updateHandler/autoCommit/maxDocs",null));
    assertNotNull(m._get("config/updateHandler/autoCommit/maxTime",null));

    m =  getRespMap("/config", harness);
    assertNotNull(m);

    assertEquals("100", m._getStr("config/updateHandler/autoCommit/maxDocs",null));
    assertEquals("10", m._getStr("config/updateHandler/autoCommit/maxTime",null));
    assertEquals("true", m._getStr("config/requestDispatcher/requestParsers/addHttpRequestToContext",null));
    payload = "{\n" +
        " 'unset-property' :  'updateHandler.autoCommit.maxDocs'} \n" +
        " }";
    runConfigCommand(harness, "/config", payload);

    m =  getRespMap("/config/overlay", harness);
    assertNull(m._get("overlay/props/updateHandler/autoCommit/maxDocs",null));
    assertEquals("10", m._getStr("overlay/props/updateHandler/autoCommit/maxTime",null));
  }

