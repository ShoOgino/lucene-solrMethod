  @Test
  public void testPropFilePersistence() throws Exception {
    setMeUp();

    // Test that an existing core.properties file is _not_ deleted if the core fails to load.
    Properties badProps = makeCoreProperties("corep1", false, true);
    badProps.setProperty(CoreDescriptor.CORE_SCHEMA, "not-there.xml");

    addCoreWithProps("corep1", badProps);
    // Sanity check that a core did get loaded
    addCoreWithProps("corep2", makeCoreProperties("corep2", false, true));

    Path coreP1PropFile = Paths.get(solrHomeDirectory.toString(), "corep1", "core.properties");
    assertTrue("Core.properties file should exist for before core load failure core corep1",
        Files.exists(coreP1PropFile));

    CoreContainer cc = init();
    try {
      try {
        cc.getCore("corep1");
        fail("Should have thrown exception");
      } catch (SolrCoreInitializationException scie) {
        assertTrue(scie.getMessage().contains("init failure"));
      }
      try (SolrCore sc = cc.getCore("corep2")) {
        assertNotNull("Core corep2 should be loaded", sc);
      }
      assertTrue("Core.properties file should still exist for core corep1", Files.exists(coreP1PropFile));

      // Creating a core successfully should create a core.properties file
      Path corePropFile = Paths.get(solrHomeDirectory.toString(), "corep3", "core.properties");
      assertFalse("Should not be a properties file yet", Files.exists(corePropFile));
      cc.create("corep3", ImmutableMap.of("configSet", "minimal"));
      assertTrue("Should be a properties file for newly created core", Files.exists(corePropFile));

      // Failing to create a core should _not_ leave a core.properties file hanging around.
      corePropFile = Paths.get(solrHomeDirectory.toString(), "corep4", "core.properties");
      assertFalse("Should not be a properties file yet for corep4", Files.exists(corePropFile));

      try {
        cc.create("corep4", ImmutableMap.of(
            CoreDescriptor.CORE_NAME, "corep4",
            CoreDescriptor.CORE_SCHEMA, "not-there.xml",
            CoreDescriptor.CORE_CONFIG, "solrconfig-minimal.xml",
            CoreDescriptor.CORE_TRANSIENT, "false",
            CoreDescriptor.CORE_LOADONSTARTUP, "true"));
        fail("Should have thrown exception getting core ");
      } catch (SolrException se) {
        assertTrue(se.getMessage().contains("Can't find resource"));
      }
      assertFalse("Failed corep4 should not have left a core.properties file around", Files.exists(corePropFile));

      // Finally, just for yucks, let's determine that a this create path also leaves a prop file.

      corePropFile = Paths.get(solrHomeDirectory.toString(), "corep5", "core.properties");
      assertFalse("Should not be a properties file yet for corep5", Files.exists(corePropFile));

      cc.create("corep5", ImmutableMap.of("configSet", "minimal"));
      
      assertTrue("corep5 should have left a core.properties file on disk", Files.exists(corePropFile));

    } finally {
      cc.shutdown();
    }
  }

