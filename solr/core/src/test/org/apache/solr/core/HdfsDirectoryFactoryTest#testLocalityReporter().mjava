  @Test
  public void testLocalityReporter() throws Exception {
    Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);
    conf.set("dfs.permissions.enabled", "false");

    Random r = random();
    try(HdfsDirectoryFactory factory = new HdfsDirectoryFactory()) {
      SolrMetricManager metricManager = new SolrMetricManager();
      String registry = TestUtil.randomSimpleString(r, 2, 10);
      String scope = TestUtil.randomSimpleString(r, 2, 10);
      Map<String, String> props = new HashMap<String, String>();
      props.put(HdfsDirectoryFactory.HDFS_HOME, HdfsTestUtil.getURI(dfsCluster) + "/solr");
      props.put(HdfsDirectoryFactory.BLOCKCACHE_ENABLED, "false");
      props.put(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_ENABLE, "false");
      props.put(HdfsDirectoryFactory.LOCALITYMETRICS_ENABLED, "true");
      factory.init(new NamedList<>(props));
      factory.initializeMetrics(metricManager, registry, "foo", scope);

      // get the metrics map for the locality bean
      MetricsMap metrics = (MetricsMap) ((SolrMetricManager.GaugeWrapper) metricManager.registry(registry).getMetrics().get("OTHER." + scope + ".hdfsLocality")).getGauge();
      // We haven't done anything, so there should be no data
      Map<String, Object> statistics = metrics.getValue();
      assertEquals("Saw bytes that were not written: " + statistics.get(HdfsLocalityReporter.LOCALITY_BYTES_TOTAL), 0l,
          statistics.get(HdfsLocalityReporter.LOCALITY_BYTES_TOTAL));
      assertEquals(
          "Counted bytes as local when none written: " + statistics.get(HdfsLocalityReporter.LOCALITY_BYTES_RATIO), 0,
          statistics.get(HdfsLocalityReporter.LOCALITY_BYTES_RATIO));

      // create a directory and a file
      String path = HdfsTestUtil.getURI(dfsCluster) + "/solr3/";
      try (Directory dir = factory.create(path, NoLockFactory.INSTANCE, DirContext.DEFAULT)) {
        try (IndexOutput writer = dir.createOutput("output", null)) {
          writer.writeLong(42L);
        }

        final long long_bytes = Long.SIZE / Byte.SIZE;

        // no locality because hostname not set
        factory.setHost("bogus");
        statistics = metrics.getValue();
        assertEquals("Wrong number of total bytes counted: " + statistics.get(HdfsLocalityReporter.LOCALITY_BYTES_TOTAL),
            long_bytes, statistics.get(HdfsLocalityReporter.LOCALITY_BYTES_TOTAL));
        assertEquals("Wrong number of total blocks counted: " + statistics.get(HdfsLocalityReporter.LOCALITY_BLOCKS_TOTAL),
            1, statistics.get(HdfsLocalityReporter.LOCALITY_BLOCKS_TOTAL));
        assertEquals(
            "Counted block as local when bad hostname set: " + statistics.get(HdfsLocalityReporter.LOCALITY_BLOCKS_LOCAL),
            0, statistics.get(HdfsLocalityReporter.LOCALITY_BLOCKS_LOCAL));

        // set hostname and check again
        factory.setHost("127.0.0.1");
        statistics = metrics.getValue();
        assertEquals(
            "Did not count block as local after setting hostname: "
                + statistics.get(HdfsLocalityReporter.LOCALITY_BYTES_LOCAL),
            long_bytes, statistics.get(HdfsLocalityReporter.LOCALITY_BYTES_LOCAL));
      }
    }
  }

