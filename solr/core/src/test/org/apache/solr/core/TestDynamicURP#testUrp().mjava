  @Test
  public void testUrp() throws Exception {

    ByteBuffer jar = getFileContent("runtimecode/runtimeurp.jar.bin");

    String blobName = "urptest";
    TestBlobHandler.postAndCheck(cluster.getSolrClient(), cluster.getRandomJetty(random()).getBaseUrl().toString(),
        blobName, jar, 1);

    new V2Request.Builder("/c/" + COLLECTION + "/config")
        .withPayload(singletonMap("add-runtimelib", (MapWriter) ew1 -> ew1
            .put("name", blobName)
            .put("version", "1")))
        .withMethod(POST)
        .build()
        .process(cluster.getSolrClient());
    TestSolrConfigHandler.testForResponseElement(null,
        cluster.getRandomJetty(random()).getBaseUrl().toString(),
        "/"+COLLECTION+"/config/overlay",
        cluster.getSolrClient(),
        Arrays.asList("overlay", "runtimeLib", blobName, "version")
        ,"1",10);

    SolrInputDocument doc = new SolrInputDocument();
    doc.addField("id", "123");
    doc.addField("name_s", "Test URP");
    new UpdateRequest()
        .add(doc)
        .commit(cluster.getSolrClient(), COLLECTION);
    QueryResponse result = cluster.getSolrClient().query(COLLECTION, new SolrQuery("id:123"));
    assertEquals(1, result.getResults().getNumFound());
    Object time_s = result.getResults().get(0).getFirstValue("time_s");
    assertNotNull(time_s);



  }

