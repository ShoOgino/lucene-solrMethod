  public void testDynamicLoadingUrl() throws Exception {
    setupRestTestHarnesses();
    Pair<Server, Integer> pair = runHttpServer(ImmutableMap.of("/jar1.jar", getFileContent("runtimecode/runtimelibs.jar.bin")));
    Integer port = pair.second();

    try {
      String payload = "{\n" +
          "'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:" + port + "/jar1.jar'" +
          "  'sha512':'e01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}" +
          "}";
      RestTestHarness client = randomRestTestHarness();
      TestSolrConfigHandler.runConfigCommandExpectFailure(client, "/config", payload, "Invalid jar");


      payload = "{\n" +
          "'add-runtimelib' : { 'name' : 'urljar', url : 'http://localhost:" + port + "/jar1.jar'" +
          "  'sha512':'d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420'}" +
          "}";
      client = randomRestTestHarness();
      TestSolrConfigHandler.runConfigCommand(client, "/config", payload);
      TestSolrConfigHandler.testForResponseElement(client,
          null,
          "/config/overlay",
          null,
          Arrays.asList("overlay", "runtimeLib", "urljar", "sha512"),
          "d01b51de67ae1680a84a813983b1de3b592fc32f1a22b662fc9057da5953abd1b72476388ba342cad21671cd0b805503c78ab9075ff2f3951fdf75fa16981420", 10);

      payload = "{\n" +
          "'create-requesthandler' : { 'name' : '/runtime', 'class': 'org.apache.solr.core.RuntimeLibReqHandler', 'runtimeLib' : true}" +
          "}";
      client = randomRestTestHarness();
      TestSolrConfigHandler.runConfigCommand(client, "/config", payload);

      TestSolrConfigHandler.testForResponseElement(client,
          null,
          "/config/overlay",
          null,
          Arrays.asList("overlay", "requestHandler", "/runtime", "class"),
          "org.apache.solr.core.RuntimeLibReqHandler", 10);

      Map result = TestSolrConfigHandler.testForResponseElement(client,
          null,
          "/runtime",
          null,
          Arrays.asList("class"),
          "org.apache.solr.core.RuntimeLibReqHandler", 10);
      compareValues(result, MemClassLoader.class.getName(), asList("loader"));
    } finally {
      pair.first().stop();

    }


  }

