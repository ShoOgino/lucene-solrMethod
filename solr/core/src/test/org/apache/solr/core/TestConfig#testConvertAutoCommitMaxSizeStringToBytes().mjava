  @Test
  public void testConvertAutoCommitMaxSizeStringToBytes() {

    // Valid values
    Assert.assertEquals(300, SolrConfig.convertHeapOptionStyleConfigStringToBytes("300"));
    Assert.assertEquals(307200, SolrConfig.convertHeapOptionStyleConfigStringToBytes("300k"));
    Assert.assertEquals(307200, SolrConfig.convertHeapOptionStyleConfigStringToBytes("300K"));
    Assert.assertEquals(314572800, SolrConfig.convertHeapOptionStyleConfigStringToBytes("300m"));
    Assert.assertEquals(314572800, SolrConfig.convertHeapOptionStyleConfigStringToBytes("300M"));
    Assert.assertEquals(322122547200L, SolrConfig.convertHeapOptionStyleConfigStringToBytes("300g"));
    Assert.assertEquals(322122547200L, SolrConfig.convertHeapOptionStyleConfigStringToBytes("300G"));
    Assert.assertEquals(-1, SolrConfig.convertHeapOptionStyleConfigStringToBytes(""));

    // Invalid values
    RuntimeException thrown = expectThrows(RuntimeException.class, () -> {
      SolrConfig.convertHeapOptionStyleConfigStringToBytes("3jbk32k"); // valid suffix but non-numeric prefix
    });
    assertTrue(thrown.getMessage().contains("Invalid"));

    thrown = expectThrows(RuntimeException.class, () -> {
      SolrConfig.convertHeapOptionStyleConfigStringToBytes("300x"); // valid prefix but invalid suffix
    });
    assertTrue(thrown.getMessage().contains("Invalid"));
  }

