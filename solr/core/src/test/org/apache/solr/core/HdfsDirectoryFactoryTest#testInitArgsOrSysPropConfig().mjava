  @Test
  @SuppressWarnings({"try"})
  public void testInitArgsOrSysPropConfig() throws Exception {
    try(HdfsDirectoryFactory hdfsFactory = new HdfsDirectoryFactory()) {
      // test sys prop config
      System.setProperty(HdfsDirectoryFactory.HDFS_HOME, HdfsTestUtil.getURI(dfsCluster) + "/solr1");
      hdfsFactory.init(new NamedList<>());
      String dataHome = hdfsFactory.getDataHome(new MockCoreDescriptor());

      assertTrue(dataHome.endsWith("/solr1/mock/data"));

      System.clearProperty(HdfsDirectoryFactory.HDFS_HOME);

      // test init args config
      NamedList<Object> nl = new NamedList<>();
      nl.add(HdfsDirectoryFactory.HDFS_HOME, HdfsTestUtil.getURI(dfsCluster) + "/solr2");
      hdfsFactory.init(nl);
      dataHome = hdfsFactory.getDataHome(new MockCoreDescriptor());

      assertTrue(dataHome.endsWith("/solr2/mock/data"));

      // test sys prop and init args config - init args wins
      System.setProperty(HdfsDirectoryFactory.HDFS_HOME, HdfsTestUtil.getURI(dfsCluster) + "/solr1");
      hdfsFactory.init(nl);
      dataHome = hdfsFactory.getDataHome(new MockCoreDescriptor());

      assertTrue(dataHome.endsWith("/solr2/mock/data"));

      System.clearProperty(HdfsDirectoryFactory.HDFS_HOME);

      // set conf dir by sys prop
      Path confDir = createTempDir();

      System.setProperty(HdfsDirectoryFactory.CONFIG_DIRECTORY, confDir.toString());

      try (Directory dir = hdfsFactory
          .create(HdfsTestUtil.getURI(dfsCluster) + "/solr", NoLockFactory.INSTANCE, DirContext.DEFAULT)) {
        assertEquals(confDir.toString(), hdfsFactory.getConfDir());
      }

      // check bool and int getConf impls
      nl = new NamedList<>();
      nl.add(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB, 4);
      System.setProperty(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB, "3");
      nl.add(HdfsDirectoryFactory.BLOCKCACHE_ENABLED, true);
      System.setProperty(HdfsDirectoryFactory.BLOCKCACHE_ENABLED, "false");

      hdfsFactory.init(nl);

      assertEquals(4, hdfsFactory.getConfig(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB, 0));
      assertTrue(hdfsFactory.getConfig(HdfsDirectoryFactory.BLOCKCACHE_ENABLED, false));

      nl = new NamedList<>();
      hdfsFactory.init(nl);
      System.setProperty(HdfsDirectoryFactory.BLOCKCACHE_ENABLED, "true");

      assertEquals(3, hdfsFactory.getConfig(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB, 0));
      assertTrue(hdfsFactory.getConfig(HdfsDirectoryFactory.BLOCKCACHE_ENABLED, false));

      System.clearProperty(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB);
      System.clearProperty(HdfsDirectoryFactory.BLOCKCACHE_ENABLED);

      assertEquals(0, hdfsFactory.getConfig(HdfsDirectoryFactory.NRTCACHINGDIRECTORY_MAXMERGESIZEMB, 0));
      assertFalse(hdfsFactory.getConfig(HdfsDirectoryFactory.BLOCKCACHE_ENABLED, false));
    }
  }

