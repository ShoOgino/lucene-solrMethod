  @Test
  public void testCleanupOldIndexDirectories() throws Exception {
    try (HdfsDirectoryFactory hdfsFactory = new HdfsDirectoryFactory()) {
      System.setProperty(HdfsDirectoryFactory.HDFS_HOME, HdfsTestUtil.getURI(dfsCluster) + "/solr1");
      hdfsFactory.init(new NamedList<>());
      String dataHome = hdfsFactory.getDataHome(new MockCoreDescriptor());
      assertTrue(dataHome.endsWith("/solr1/mock/data"));
      System.clearProperty(HdfsDirectoryFactory.HDFS_HOME);

      try(FileSystem hdfs = FileSystem.get(HdfsTestUtil.getClientConfiguration(dfsCluster))) {
        org.apache.hadoop.fs.Path dataHomePath = new org.apache.hadoop.fs.Path(dataHome);
        org.apache.hadoop.fs.Path currentIndexDirPath = new org.apache.hadoop.fs.Path(dataHomePath, "index");
        assertFalse(checkHdfsDirectory(hdfs,currentIndexDirPath));
        hdfs.mkdirs(currentIndexDirPath);
        assertTrue(checkHdfsDirectory(hdfs, currentIndexDirPath));

        String timestamp1 = new SimpleDateFormat(SnapShooter.DATE_FMT, Locale.ROOT).format(new Date());
        org.apache.hadoop.fs.Path oldIndexDirPath = new org.apache.hadoop.fs.Path(dataHomePath, "index." + timestamp1);
        assertFalse(checkHdfsDirectory(hdfs,oldIndexDirPath));
        hdfs.mkdirs(oldIndexDirPath);
        assertTrue(checkHdfsDirectory(hdfs, oldIndexDirPath));

        hdfsFactory.cleanupOldIndexDirectories(dataHomePath.toString(), currentIndexDirPath.toString(), false);

        assertTrue(checkHdfsDirectory(hdfs, currentIndexDirPath));
        assertFalse(checkHdfsDirectory(hdfs, oldIndexDirPath));
      }
    }
  }

