  public void testRandomQueryKeyEquality() {


    final int minIters = atLeast(100 * 1000);
    final Query base = new FlatHashTermQuery("base");
    
    // ensure we cover both code paths at least once
    boolean didEquals = false;
    boolean didNotEquals = false;
    int iter = 1;
    while (iter <= minIters || (! didEquals ) || (! didNotEquals ) ) {
      iter++;
      int[] numsA = smallArrayOfRandomNumbers();
      int[] numsB = smallArrayOfRandomNumbers();
      QueryResultKey aa = new QueryResultKey(base, buildFiltersFromNumbers(numsA), null, 0);
      QueryResultKey bb = new QueryResultKey(base, buildFiltersFromNumbers(numsB), null, 0);
      // now that we have our keys, sort the numbers so we know what to expect
      Arrays.sort(numsA);
      Arrays.sort(numsB);
      if (Arrays.equals(numsA, numsB)) {
        didEquals = true;
        assertKeyEquals(aa, bb);
      } else {
        didNotEquals = true;
        assertKeyNotEquals(aa, bb);
      }
    }
    assert minIters <= iter;
  }

