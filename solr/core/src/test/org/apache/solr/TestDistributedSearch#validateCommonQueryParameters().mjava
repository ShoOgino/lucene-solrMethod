  private void validateCommonQueryParameters() throws Exception {
    ignoreException("parameter cannot be negative");

    SolrException e1 = expectThrows(SolrException.class, () -> {
      SolrQuery query = new SolrQuery();
      query.setParam("start", "non_numeric_value").setQuery("*");
      QueryResponse resp = query(query);
    });
    assertEquals(ErrorCode.BAD_REQUEST.code, e1.code());

    SolrException e2 = expectThrows(SolrException.class, () -> {
      SolrQuery query = new SolrQuery();
      query.setStart(-1).setQuery("*");
      QueryResponse resp = query(query);
    });
    assertEquals(ErrorCode.BAD_REQUEST.code, e2.code());

    SolrException e3 = expectThrows(SolrException.class, () -> {
      SolrQuery query = new SolrQuery();
      query.setRows(-1).setStart(0).setQuery("*");
      QueryResponse resp = query(query);
    });
    assertEquals(ErrorCode.BAD_REQUEST.code, e3.code());

    SolrException e4 = expectThrows(SolrException.class, () -> {
      SolrQuery query = new SolrQuery();
      query.setParam("rows", "non_numeric_value").setQuery("*");
      QueryResponse resp = query(query);
    });
    assertEquals(ErrorCode.BAD_REQUEST.code, e4.code());

    resetExceptionIgnores();
  }

