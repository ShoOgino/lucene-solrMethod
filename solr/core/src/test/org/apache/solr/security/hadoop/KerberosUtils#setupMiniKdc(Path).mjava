  /**
   * This method sets up Hadoop mini-kdc along with relevant Kerberos configuration files
   * (e.g. jaas.conf) as well as system properties.
   *
   * @param baseDir The directory path which should be used by the Hadoop mini-kdc
   * @return An instance of {@link KerberosTestServices}
   * @throws Exception in case of errors.
   */
  static KerberosTestServices setupMiniKdc(Path baseDir) throws Exception {
    System.setProperty("solr.jaas.debug", "true");
    Path kdcDir = baseDir.resolve("minikdc");
    String solrClientPrincipal = "solr";
    File keytabFile = kdcDir.resolve("keytabs").toFile();
    KerberosTestServices tmp = KerberosTestServices.builder()
            .withKdc(kdcDir.toFile())
            .withJaasConfiguration(solrClientPrincipal, keytabFile, "SolrClient")
            .build();
    String solrServerPrincipal = "HTTP/127.0.0.1";
    tmp.start();
    tmp.getKdc().createPrincipal(keytabFile, solrServerPrincipal, solrClientPrincipal);

    String appName = "SolrClient";
    String jaas = appName + " {\n"
            + " com.sun.security.auth.module.Krb5LoginModule required\n"
            + " useKeyTab=true\n"
            + " keyTab=\"" + keytabFile.getAbsolutePath() + "\"\n"
            + " storeKey=true\n"
            + " useTicketCache=false\n"
            + " doNotPrompt=true\n"
            + " debug=true\n"
            + " principal=\"" + solrClientPrincipal + "\";\n"
            + "};";

    Path jaasFile = kdcDir.resolve("jaas-client.conf");
    Files.writeString(jaasFile, jaas);
    System.setProperty("java.security.auth.login.config", jaasFile.toString());
    System.setProperty("solr.kerberos.jaas.appname", appName);

    System.setProperty("solr.kerberos.principal", solrServerPrincipal);
    System.setProperty("solr.kerberos.keytab", keytabFile.getAbsolutePath());
    // Extracts 127.0.0.1 from HTTP/127.0.0.1@EXAMPLE.COM
    System.setProperty("solr.kerberos.name.rules", "RULE:[1:$1@$0](.*EXAMPLE.COM)s/@.*//"
            + "\nRULE:[2:$2@$0](.*EXAMPLE.COM)s/@.*//"
            + "\nDEFAULT"
    );

    return tmp;
  }

