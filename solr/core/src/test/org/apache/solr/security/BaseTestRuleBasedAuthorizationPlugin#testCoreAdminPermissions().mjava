  @Test
  public void testCoreAdminPermissions() {
    addPermission("core-admin-edit", "su");
    addPermission("core-admin-read", "user");
    setUserRole("cio", "su");
    addPermission("all", "su");

    checkRules(Map.of("resource", "/admin/cores",
        "requestType", RequestType.ADMIN,
        "handler", new CoreAdminHandler(null),
        "params", new MapSolrParams(singletonMap("action", "CREATE")))
        , PROMPT_FOR_CREDENTIALS);

    checkRules(Map.of("resource", "/admin/cores",
        "userPrincipal", "joe",
        "requestType", RequestType.ADMIN,
        "handler", new CoreAdminHandler(null),
        "params", new MapSolrParams(singletonMap("action", "CREATE")))
        , FORBIDDEN);

    checkRules(Map.of("resource", "/admin/cores",
        "userPrincipal", "joe",
        "requestType", RequestType.ADMIN,
        "handler", new CoreAdminHandler(null),
        "params", new MapSolrParams(singletonMap("action", "STATUS")))
        , STATUS_OK);

    checkRules(Map.of("resource", "/admin/cores",
        "userPrincipal", "cio",
        "requestType", RequestType.ADMIN,
        "handler", new CoreAdminHandler(null),
        "params", new MapSolrParams(singletonMap("action", "CREATE")))
        ,STATUS_OK);
  }

