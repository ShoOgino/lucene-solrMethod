  /**
   * Test HttpSolrServer's delegation token support
   */
  @Test
  public void testDelegationTokenSolrClient() throws Exception {
    // Get token
    String token = getDelegationToken(null, USER_1, primarySolrClient);
    assertNotNull(token);

    SolrRequest request = getAdminRequest(new ModifiableSolrParams());

    // test without token
    HttpSolrClient ss =
        new HttpSolrClient.Builder(primarySolrClient.getBaseURL().toString())
            .withResponseParser(primarySolrClient.getParser())
            .build();
    try {
      doSolrRequest(ss, request, ErrorCode.UNAUTHORIZED.code);
    } finally {
      ss.close();
    }

    ss = new HttpSolrClient.Builder(primarySolrClient.getBaseURL().toString())
        .withKerberosDelegationToken(token)
        .withResponseParser(primarySolrClient.getParser())
        .build();
    try {
      // test with token via property
      doSolrRequest(ss, request, HttpStatus.SC_OK);

      // test with param -- should throw an exception
      ModifiableSolrParams tokenParam = new ModifiableSolrParams();
      tokenParam.set("delegation", "invalidToken");
      try {
        doSolrRequest(ss, getAdminRequest(tokenParam), ErrorCode.FORBIDDEN.code);
        Assert.fail("Expected exception");
      } catch (IllegalArgumentException ex) {}
    } finally {
      ss.close();
    }
  }

