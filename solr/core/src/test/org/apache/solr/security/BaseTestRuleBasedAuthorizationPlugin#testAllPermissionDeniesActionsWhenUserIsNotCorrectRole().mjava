  /*
   * RuleBasedAuthorizationPlugin handles requests differently based on whether the underlying handler implements
   * PermissionNameProvider or not.  If this test fails because UpdateRequestHandler stops implementing
   * PermissionNameProvider, or PropertiesRequestHandler starts to, then just change the handlers used here.
   */
  @Test
  public void testAllPermissionDeniesActionsWhenUserIsNotCorrectRole() {
    SolrRequestHandler handler = new UpdateRequestHandler();
    assertThat(handler, new IsInstanceOf(PermissionNameProvider.class));
    setUserRole("dev", "dev");
    setUserRole("admin", "admin");
    addPermission("all", "admin");
    checkRules(Map.of("resource", "/update",
        "userPrincipal", "dev",
        "requestType", RequestType.UNKNOWN,
        "collectionRequests", "go",
        "handler", new UpdateRequestHandler(),
        "params", new MapSolrParams(singletonMap("key", "VAL2")))
        , FORBIDDEN);

    handler = new PropertiesRequestHandler();
    assertThat(handler, new IsNot<>(new IsInstanceOf(PermissionNameProvider.class)));
    checkRules(Map.of("resource", "/admin/info/properties",
        "userPrincipal", "dev",
        "requestType", RequestType.UNKNOWN,
        "collectionRequests", "go",
        "handler", handler,
        "params", new MapSolrParams(emptyMap()))
        , FORBIDDEN);
  }

