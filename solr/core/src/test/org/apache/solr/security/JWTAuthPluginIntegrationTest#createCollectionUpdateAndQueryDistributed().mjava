  @Test
  public void createCollectionUpdateAndQueryDistributed() throws Exception {
    // Admin request will use PKI inter-node auth from Overseer, and succeed
    createCollection(COLLECTION);
    
    // Now update three documents
    assertAuthMetricsMinimums(1, 1, 0, 0, 0, 0);
    assertPkiAuthMetricsMinimums(4, 4, 0, 0, 0, 0);
    Pair<String,Integer> result = post(baseUrl + "/" + COLLECTION + "/update?commit=true", "[{\"id\" : \"1\"}, {\"id\": \"2\"}, {\"id\": \"3\"}]", jwtTestToken);
    assertEquals(Integer.valueOf(200), result.second());
    assertAuthMetricsMinimums(3, 3, 0, 0, 0, 0);
    assertPkiAuthMetricsMinimums(5, 5, 0, 0, 0, 0);
    
    // First a non distributed query
    result = get(baseUrl + "/" + COLLECTION + "/query?q=*:*&distrib=false", jwtTestToken);
    assertEquals(Integer.valueOf(200), result.second());
    assertAuthMetricsMinimums(4, 4, 0, 0, 0, 0);

    // Now do a distributed query, using JWTAuth for inter-node
    result = get(baseUrl + "/" + COLLECTION + "/query?q=*:*", jwtTestToken);
    assertEquals(Integer.valueOf(200), result.second());
    assertAuthMetricsMinimums(9, 9, 0, 0, 0, 0);
    
    // Delete
    assertEquals(200, get(baseUrl + "/admin/collections?action=DELETE&name=" + COLLECTION, jwtTestToken).second().intValue());
    assertAuthMetricsMinimums(10, 10, 0, 0, 0, 0);
    assertPkiAuthMetricsMinimums(7, 7, 0, 0, 0, 0);
  }

