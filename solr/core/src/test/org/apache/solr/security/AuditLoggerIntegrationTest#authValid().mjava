  @Test
  public void authValid() throws Exception {
    setupCluster(false, null, true);
    final CloudSolrClient client = testHarness.get().cluster.getSolrClient();
    final CallbackReceiver receiver = testHarness.get().receiver;

    { // valid READ requests: #1 with, and #2 without, (valid) Authentication
      final CollectionAdminRequest.List req = new CollectionAdminRequest.List();

      // we don't block unknown users for READ, so this should succeed
      client.request(req);

      // Authenticated user (w/valid password) should also succeed
      req.setBasicAuthCredentials("solr", SOLR_PASS);
      client.request(req);

      final List<AuditEvent> events = receiver.waitForAuditEvents(2);
      assertAuditEvent(events.get(0), COMPLETED, "/admin/collections", ADMIN, null, 200, "action", "LIST");
      assertAuditEvent(events.get(1), COMPLETED, "/admin/collections", ADMIN, "solr", 200, "action", "LIST");
    }

    { // valid CREATE request: Authenticated admin user should be allowed to CREATE collection
      final Create req = CollectionAdminRequest.createCollection("test_create", 1, 1);
      req.setBasicAuthCredentials("solr", SOLR_PASS);
      client.request(req);

      // collection createion leads to AuditEvent's for the core as well...
      final List<AuditEvent> events = receiver.waitForAuditEvents(2);
      assertAuditEvent(events.get(0), COMPLETED, "/admin/cores", ADMIN, null, 200, "action", "CREATE");
      assertAuditEvent(events.get(1), COMPLETED, "/admin/collections", ADMIN, null, 200, "action", "CREATE");
    }
  }

