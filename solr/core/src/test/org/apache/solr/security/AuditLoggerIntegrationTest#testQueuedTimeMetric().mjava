  @Test
  public void testQueuedTimeMetric() throws Exception {
    final Semaphore gate = new Semaphore(0);
    CallbackAuditLoggerPlugin.BLOCKING_SEMAPHORES.put("testQueuedTimeMetric_semaphore", gate);
    setupCluster(true, "testQueuedTimeMetric_semaphore", false);

    // NOTE: gate is empty, we don't allow any of the events to be logged yet
    runThreeTestAdminCommands();

    // Don't assume anything about the system clock,
    // Thread.sleep is not a garunteed minimum for a predictible elapsed time...
    final long start = System.nanoTime();
    Thread.sleep(100);
    final long end = System.nanoTime();
    gate.release(3);

    assertThreeTestAdminEvents();
    assertAuditMetricsMinimums(testHarness.get().cluster, CallbackAuditLoggerPlugin.class.getSimpleName(), 3, 0);
    ArrayList<MetricRegistry> registries = getMetricsReigstries(testHarness.get().cluster);
    Timer timer = ((Timer) registries.get(0).getMetrics().get("SECURITY./auditlogging.CallbackAuditLoggerPlugin.queuedTime"));
    double meanTimeOnQueue = timer.getSnapshot().getMean();
    double meanTimeExpected = (start - end) / 3.0D;
    assertTrue("Expecting mean time on queue > "+meanTimeExpected+", got " + meanTimeOnQueue,
               meanTimeOnQueue > meanTimeExpected);
  }

