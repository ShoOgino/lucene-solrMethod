  public void testParseDateFieldNotInSchema() throws Exception {
    IndexSchema schema = h.getCore().getLatestSchema();
    assertNull(schema.getFieldOrNull("not_in_schema"));
    String dateString = "2010-11-12T13:14:15.168Z";
    DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime();
    DateTime dateTime = dateTimeFormatter.parseDateTime(dateString);

    SolrInputDocument d = processAdd("parse-date-no-run-processor",
                                     doc(f("id", "18"), f("not_in_schema", dateString)));
    assertNotNull(d);
    assertTrue(d.getFieldValue("not_in_schema") instanceof Date);
    assertEquals(dateTime.getMillis(), ((Date)d.getFieldValue("not_in_schema")).getTime());
    
    d = processAdd("parse-date-no-run-processor", 
                   doc(f("id", "36"), f("not_in_schema", "not a date", dateString)));
    assertNotNull(d);
    for (Object val : d.getFieldValues("not_in_schema")) {
      // check that nothing was mutated, since not all field values are parseable as dates 
      assertTrue(val instanceof String);
    }

    d = processAdd("parse-date-no-run-processor",
        doc(f("id", "72"), f("not_in_schema", dateString, "not a date")));
    assertNotNull(d);
    for (Object val : d.getFieldValues("not_in_schema")) {
      // check again that nothing was mutated, but with a valid date first this time 
      assertTrue(val instanceof String);
    }
  }

