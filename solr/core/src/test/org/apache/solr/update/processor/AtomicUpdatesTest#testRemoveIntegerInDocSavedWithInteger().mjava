  @Test
  public void testRemoveIntegerInDocSavedWithInteger() throws Exception {
    SolrInputDocument doc;

    doc = new SolrInputDocument();
    doc.setField("id", "1001");
    doc.setField("intRemove", new Integer[]{111, 222, 333, 333, 444});
    
    assertU(adoc(doc));

    doc = new SolrInputDocument();
    doc.setField("id", "1002");
    doc.setField("intRemove", new Integer[]{111, 222, 222, 333, 444});
    assertU(adoc(doc));


    doc = new SolrInputDocument();
    doc.setField("id", "1020");
    doc.setField("intRemove", new Integer[]{111, 333, 444});
    assertU(adoc(doc));

    doc = new SolrInputDocument();
    doc.setField("id", "1021");
    doc.setField("intRemove", new Integer[]{111, 222, 444});
    assertU(adoc(doc));

    assertU(commit());

    assertQ(req("q", "intRemove:[* TO *]", "indent", "true"), "//result[@numFound = '4']");
    assertQ(req("q", "intRemove:222", "indent", "true"), "//result[@numFound = '3']");
    assertQ(req("q", "intRemove:333", "indent", "true"), "//result[@numFound = '3']");


    doc = new SolrInputDocument();
    doc.setField("id", "1001");
    List<Long> removeList = new ArrayList<Long>();
    removeList.add(222L);
    removeList.add(333L);
    doc.setField("intRemove", ImmutableMap.of("remove", removeList)); //behavior when hitting Solr through ZK
    assertU(adoc(doc));
    assertU(commit());

    assertQ(req("q", "intRemove:[* TO *]", "indent", "true"), "//result[@numFound = '4']");
    assertQ(req("q", "intRemove:222", "indent", "true"), "//result[@numFound = '2']");
    assertQ(req("q", "intRemove:333", "indent", "true"), "//result[@numFound = '3']"); // remove only removed first occurrence

    doc = new SolrInputDocument();
    doc.setField("id", "1021");
    removeList = new ArrayList<Long>();
    removeList.add(222L);
    removeList.add(333L);
    doc.setField("intRemove", ImmutableMap.of("remove", removeList)); //behavior when hitting Solr through ZK
    assertU(adoc(doc));
    assertU(commit());

    assertQ(req("q", "intRemove:[* TO *]", "indent", "true"), "//result[@numFound = '4']");
    assertQ(req("q", "intRemove:222", "indent", "true"), "//result[@numFound = '1']");

    doc = new SolrInputDocument();
    doc.setField("id", "1001");
    doc.setField("intRemove", ImmutableMap.of("remove", 111)); //behavior when hitting Solr directly

    assertU(adoc(doc));
    assertU(commit());

    assertQ(req("q", "intRemove:[* TO *]", "indent", "true"), "//result[@numFound = '4']");
    assertQ(req("q", "intRemove:111", "indent", "true"), "//result[@numFound = '3']");
  }

