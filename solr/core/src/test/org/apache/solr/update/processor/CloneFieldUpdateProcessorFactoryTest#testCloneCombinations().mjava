  public void testCloneCombinations() throws Exception {

    SolrInputDocument d;

    // maxChars
    d = processAdd("clone-max-chars",
                   doc(f("id", "1111"),
                       f("field1", "text")));
    assertNotNull(d);
    assertEquals("text", d.getFieldValue("field1"));
    assertEquals("tex", d.getFieldValue("toField"));

    // move
    d = processAdd("clone-move",
                   doc(f("id", "1111"),
                       f("field1", "text")));
    assertNotNull(d);
    assertEquals("text", d.getFieldValue("toField"));
    assertFalse(d.containsKey("field1"));

    // replace
    d = processAdd("clone-replace",
                   doc(f("id", "1111"),
                       f("toField", "IGNORED"),
                       f("field1", "text")));
    assertNotNull(d);
    assertEquals("text", d.getFieldValue("field1"));
    assertEquals("text", d.getFieldValue("toField"));

    // append
    d = processAdd("clone-append",
                   doc(f("id", "1111"),
                       f("toField", "aaa"),
                       f("field1", "bbb"),
                       f("field2", "ccc")));
    assertNotNull(d);
    assertEquals("bbb", d.getFieldValue("field1"));
    assertEquals("ccc", d.getFieldValue("field2"));
    assertEquals("aaa; bbb; ccc", d.getFieldValue("toField"));

    // first value
    d = processAdd("clone-first",
                   doc(f("id", "1111"),
                       f("field0", "aaa"),
                       f("field1", "bbb"),
                       f("field2", "ccc")));
    assertNotNull(d);
    assertEquals("aaa", d.getFieldValue("toField"));
  }

