  private void testStuckUpdates() throws Exception {
    TestInjection.directUpdateLatch = new CountDownLatch(1);
    List<Node> nodes = new ArrayList<>();
    ModifiableSolrParams params;
    try (SolrCmdDistributor cmdDistrib = new SolrCmdDistributor(updateShardHandler)) {
      for (int i = 0; i < 3; i++) {
        nodes.clear();
        for (SolrClient c : clients) {
          if (random().nextBoolean()) {
            continue;
          }
          HttpSolrClient httpClient = (HttpSolrClient) c;
          ZkNodeProps nodeProps = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,
              httpClient.getBaseURL(), ZkStateReader.CORE_NAME_PROP, "");
          StdNode node = new StdNode(new ZkCoreNodeProps(nodeProps));
          nodes.add(node);
        }
        AddUpdateCommand c = new AddUpdateCommand(null);
        c.solrDoc = sdoc("id", id.incrementAndGet());
        if (nodes.size() > 0) {
          params = new ModifiableSolrParams();
          cmdDistrib.distribAdd(c, nodes, params, false);
        }
      }
      cmdDistrib.blockAndDoRetries();
    } catch (IOException e) {
      assertTrue(e.toString(), e.toString().contains("processing has stalled"));
    } finally {
      TestInjection.directUpdateLatch.countDown();
    }
  }

