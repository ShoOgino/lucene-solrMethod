  @Test
  public void testMergeChildDoc() throws Exception {
    SolrInputDocument newChildDoc = sdoc("id", "3", "cat_ss", "child");
    SolrInputDocument addedDoc = sdoc("id", "1",
        "cat_ss", Collections.singletonMap("add", "bbb"),
        "child", Collections.singletonMap("add", sdocs(newChildDoc)));

    SolrInputDocument dummyBlock = sdoc("id", "1",
        "cat_ss", new ArrayList<>(Arrays.asList("aaa", "ccc")),
        "_root_", "1", "child", new ArrayList<>(sdocs(addedDoc)));
    dummyBlock.removeField(VERSION);

    SolrInputDocument preMergeDoc = new SolrInputDocument(dummyBlock);
    AtomicUpdateDocumentMerger docMerger = new AtomicUpdateDocumentMerger(req());
    docMerger.merge(addedDoc, dummyBlock);
    assertEquals("merged document should have the same id", preMergeDoc.getFieldValue("id"), dummyBlock.getFieldValue("id"));
    assertDocContainsSubset(preMergeDoc, dummyBlock);
    assertDocContainsSubset(addedDoc, dummyBlock);
    assertDocContainsSubset(newChildDoc, (SolrInputDocument) ((List) dummyBlock.getFieldValues("child")).get(1));
    assertEquals(dummyBlock.getFieldValue("id"), dummyBlock.getFieldValue("id"));
  }

