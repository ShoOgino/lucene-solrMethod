  private void runTestForField(final String fieldName, final Object[] values, final String[] queries,
      final Optional<Function<Object,Object>> valueConverter)
      throws SolrServerException, IOException {

    final Function<Object,Object> vc = valueConverter.orElse(o -> o);

    getSolrClient().add(Arrays.asList(
        sdoc("id", "20000", fieldName, Arrays.asList(values[0], values[1], values[2])),
        sdoc("id", "20001", fieldName, Arrays.asList(values[1], values[2], values[3]))));
    getSolrClient().commit(true, true);

    if (queries != null) {
      assertQR(fieldName, queries[0], 1);
      assertQR(fieldName, queries[1], 2);
      assertQR(fieldName, queries[2], 2);
      assertQR(fieldName, queries[3], 1);
    }

    Collection<Object> fieldValues = getSolrClient().getById("20000").getFieldValues(fieldName);
    assertEquals(3, fieldValues.size());
    assertThat(fieldValues, hasItems(vc.apply(values[0]), vc.apply(values[1]), vc.apply(values[2])));
    assertThat(fieldValues, not(hasItems(vc.apply(values[3]))));
    fieldValues = getSolrClient().getById("20001").getFieldValues(fieldName);
    assertEquals(3, fieldValues.size());
    assertThat(fieldValues, hasItems(vc.apply(values[1]), vc.apply(values[2]), vc.apply(values[3])));
    assertThat(fieldValues, not(hasItems(vc.apply(values[0]))));

    getSolrClient().add(sdoc("id", "20000", fieldName, ImmutableMap.of("remove",
        Lists.newArrayList(values[0]))));
    getSolrClient().commit(true, true);

    if (queries != null) {
      assertQR(fieldName, queries[0], 0);
      assertQR(fieldName, queries[1], 2);
      assertQR(fieldName, queries[2], 2);
      assertQR(fieldName, queries[3], 1);
    }

    fieldValues = getSolrClient().getById("20000").getFieldValues(fieldName);
    assertEquals(2, fieldValues.size());
    assertThat(fieldValues, hasItems(vc.apply(values[1]), vc.apply(values[2])));
    assertThat(fieldValues, not(hasItems(vc.apply(values[0]), vc.apply(values[3]))));
    fieldValues = getSolrClient().getById("20001").getFieldValues(fieldName);
    assertEquals(3, fieldValues.size());
    assertThat(fieldValues, hasItems(vc.apply(values[1]), vc.apply(values[2]), vc.apply(values[3])));
    assertThat(fieldValues, not(hasItems(vc.apply(values[0]))));

    getSolrClient().add(sdoc("id", "20001", fieldName, ImmutableMap.of("remove",
        Lists.newArrayList(values[0], values[1], values[2]))));
    getSolrClient().commit(true, true);

    if (queries != null) {
      assertQR(fieldName, queries[0], 0);
      assertQR(fieldName, queries[1], 1);
      assertQR(fieldName, queries[2], 1);
      assertQR(fieldName, queries[3], 1);
    }

    fieldValues = getSolrClient().getById("20000").getFieldValues(fieldName);
    assertEquals(2, fieldValues.size());
    assertThat(fieldValues, hasItems(vc.apply(values[1]), vc.apply(values[2])));
    assertThat(fieldValues, not(hasItems(vc.apply(values[0]), vc.apply(values[3]))));
    fieldValues = getSolrClient().getById("20001").getFieldValues(fieldName);
    assertEquals(1, fieldValues.size());
    assertThat(fieldValues, hasItems(vc.apply(values[3])));
    assertThat(fieldValues, not(hasItems(vc.apply(values[0]), vc.apply(values[1]), vc.apply(values[2]))));

    getSolrClient().add(Arrays.asList(sdoc("id", "20000", fieldName, ImmutableMap.of("add",
        Lists.newArrayList(values[0]), "remove", Lists.newArrayList(values[1], values[2]))),
        sdoc("id", "20001", fieldName,
            ImmutableMap.of("add", Lists.newArrayList(values[0]), "remove", Lists.newArrayList(values[3])))));
    getSolrClient().commit(true, true);

    if (queries != null) {
      assertQR(fieldName, queries[0], 2);
      assertQR(fieldName, queries[1], 0);
      assertQR(fieldName, queries[2], 0);
      assertQR(fieldName, queries[3], 0);
    }

    fieldValues = getSolrClient().getById("20000").getFieldValues(fieldName);
    assertEquals(1, fieldValues.size());
    assertThat(fieldValues, hasItems(vc.apply(values[0])));
    assertThat(fieldValues, not(hasItems(vc.apply(values[1]), vc.apply(values[2]), vc.apply(values[3]))));
    fieldValues = getSolrClient().getById("20001").getFieldValues(fieldName);
    assertEquals(1, fieldValues.size());
    assertThat(fieldValues, hasItems(vc.apply(values[0])));
    assertThat(fieldValues, not(hasItems(vc.apply(values[1]), vc.apply(values[2]), vc.apply(values[3]))));

    getSolrClient().add(Arrays.asList(sdoc("id", "20000", fieldName, ImmutableMap.of("set",
        Lists.newArrayList(values[0], values[1], values[2], values[3]))), sdoc("id", "20001", fieldName,
            ImmutableMap.of("set",
                Lists.newArrayList(values[0], values[1], values[2], values[3])))));
    getSolrClient().commit(true, true);

    if (queries != null) {
      assertQR(fieldName, queries[0], 2);
      assertQR(fieldName, queries[1], 2);
      assertQR(fieldName, queries[2], 2);
      assertQR(fieldName, queries[3], 2);
    }

    fieldValues = getSolrClient().getById("20000").getFieldValues(fieldName);
    assertEquals(4, fieldValues.size());
    assertThat(fieldValues,
        hasItems(vc.apply(values[0]), vc.apply(values[1]), vc.apply(values[2]), vc.apply(values[3])));
    fieldValues = getSolrClient().getById("20001").getFieldValues(fieldName);
    assertEquals(4, fieldValues.size());
    assertThat(fieldValues,
        hasItems(vc.apply(values[0]), vc.apply(values[1]), vc.apply(values[2]), vc.apply(values[3])));
  }

