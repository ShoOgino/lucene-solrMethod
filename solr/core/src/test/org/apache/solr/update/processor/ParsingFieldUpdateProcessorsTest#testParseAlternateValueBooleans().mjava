  public void testParseAlternateValueBooleans() throws Exception {
    IndexSchema schema = h.getCore().getLatestSchema();
    assertNotNull(schema.getFieldOrNull("boolean1_b")); // should match dynamic field "*_b"
    assertNotNull(schema.getFieldOrNull("boolean2_b")); // should match dynamic field "*_b"
    assertNotNull(schema.getFieldOrNull("boolean3_b")); // should match dynamic field "*_b"
    assertNotNull(schema.getFieldOrNull("boolean4_b")); // should match dynamic field "*_b"
    assertNotNull(schema.getFieldOrNull("boolean5_b")); // should match dynamic field "*_b"
    assertNull(schema.getFieldOrNull("not_in_schema"));
    boolean[] values      = { true, true, true, false, false, false };
    String[] stringValues = { "on", "yes", "True", "Off", "no", "FALSE" };
    String[] fieldNames   = { "boolean1_b", "boolean2_b", "boolean3_b", "boolean4_b", "boolean5_b", "not_in_schema" };
    SolrInputDocument d = doc(f("id", "55"));
    for (int i = 0 ; i < values.length ; ++i) {
      d.addField(fieldNames[i], stringValues[i]);
    }
    d = processAdd("parse-boolean-alternate-values-no-run-processor", d);
    assertNotNull(d);

    for (int i = 0 ; i < values.length ; ++i) {
      assertThat(d.getFieldValue(fieldNames[i]), IS_BOOLEAN);
      assertEquals(values[i], d.getFieldValue(fieldNames[i]));
    }
  }

