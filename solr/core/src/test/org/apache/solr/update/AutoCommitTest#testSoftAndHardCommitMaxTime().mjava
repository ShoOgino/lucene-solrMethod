  public void testSoftAndHardCommitMaxTime() throws Exception {
    SolrCore core = h.getCore();
    NewSearcherListener softTrigger = new NewSearcherListener(TriggerOn.Soft);  
    NewSearcherListener hardTrigger = new NewSearcherListener(TriggerOn.Hard); 
    core.registerNewSearcherListener(softTrigger);
    core.registerNewSearcherListener(hardTrigger);
    DirectUpdateHandler2 updater = (DirectUpdateHandler2) core.getUpdateHandler();
    
    updater.registerSoftCommitCallback(softTrigger);
    updater.registerCommitCallback(hardTrigger);
    
    CommitTracker hardTracker = updater.commitTracker;
    CommitTracker softTracker = updater.softCommitTracker;
    
    // too low of a number can cause a slow host to commit before the test code checks that it
    // isn't there... causing a failure at "shouldn't find any"
    softTracker.setTimeUpperBound(500);
    softTracker.setDocsUpperBound(-1);
    hardTracker.setTimeUpperBound(1200);
    hardTracker.setDocsUpperBound(-1);
    // updater.commitCallbacks.add(trigger);
    
    XmlUpdateRequestHandler handler = new XmlUpdateRequestHandler();
    handler.init( null );
    
    MapSolrParams params = new MapSolrParams( new HashMap<String, String>() );
    
    // Add a single document
    SolrQueryResponse rsp = new SolrQueryResponse();
    SolrQueryRequestBase req = new SolrQueryRequestBase( core, params ) {};
    req.setContentStreams( toContentStreams(
      adoc("id", "529", "field_t", "what's inside?", "subject", "info"), null ) );

    handler.handleRequest( req, rsp );

    // Check if it is in the index
    assertQ("shouldn't find any", req("id:529") ,"//result[@numFound=0]" );

    // Wait longer than the autocommit time
    assertTrue(softTrigger.waitForNewSearcher(30000));
    softTrigger.reset();
    req.setContentStreams( toContentStreams(
      adoc("id", "530", "field_t", "what's inside?", "subject", "info"), null ) );
    handler.handleRequest( req, rsp );
      
    // Now make sure we can find it
    assertQ("should find one", req("id:529") ,"//result[@numFound=1]" );
    // But not this one
    assertQ("should find none", req("id:530") ,"//result[@numFound=0]" );
    
    // Delete the document
    assertU( delI("529") );
    assertQ("deleted, but should still be there", req("id:529") ,"//result[@numFound=1]" );
    
    // Wait longer than the autocommit time
    assertTrue(softTrigger.waitForNewSearcher(30000));
    softTrigger.reset();

    
    req.setContentStreams( toContentStreams(
      adoc("id", "550", "field_t", "what's inside?", "subject", "info"), null ) );
    handler.handleRequest( req, rsp );
    int totalCommits = softTracker.getCommitCount() + hardTracker.getCommitCount();
    assertTrue("expected:>=2 but got " + totalCommits, totalCommits >= 2);
    assertQ("deleted and time has passed", req("id:529") ,"//result[@numFound=0]" );
    
    // now make the call 2 times really fast and make sure id:500
    // is not visible right away
    req.setContentStreams( toContentStreams(
        adoc("id", "500" ), null ) );
    for( int i=0;i<2; i++ ) {
      handler.handleRequest( req, rsp );
    }
    assertQ("should not be there yet", req("id:500") ,"//result[@numFound=0]" );
    
    // Wait longer than the autocommit time
    assertTrue(softTrigger.waitForNewSearcher(30000));
    softTrigger.reset();
    
    req.setContentStreams( toContentStreams(
      adoc("id", "531", "field_t", "what's inside?", "subject", "info"), null ) );
    handler.handleRequest( req, rsp );
    
    // depending on timing, you might see 2 or 3 soft commits
    int softCommitCnt = softTracker.getCommitCount();
    assertTrue("commit cnt:" + softCommitCnt, softCommitCnt == 2
        || softCommitCnt == 3);
    
    // depending on timing, you might see 1 or 2 hard commits
    assertTrue(hardTrigger.waitForNewSearcher(30000));
    hardTrigger.reset();
    
    int hardCommitCnt = hardTracker.getCommitCount();
    assertTrue("commit cnt:" + hardCommitCnt, hardCommitCnt == 1
        || hardCommitCnt == 2);
    
    assertTrue(softTrigger.waitForNewSearcher(30000));
    softTrigger.reset();
    
    assertQ("now it should", req("id:500") ,"//result[@numFound=1]" );
    assertQ("but not this", req("id:531") ,"//result[@numFound=1]" );
  }

