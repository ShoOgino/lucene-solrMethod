  @Test
  public void testOnlyPartialUpdatesBetweenCommits() throws Exception {
    // Full updates
    long version1 = addAndGetVersion(sdoc("id", "1", "title_s", "first", "val1_i_dvo", "1", "val2_l_dvo", "1"), params());
    long version2 = addAndGetVersion(sdoc("id", "2", "title_s", "second", "val1_i_dvo", "2", "val2_l_dvo", "2"), params());
    long version3 = addAndGetVersion(sdoc("id", "3", "title_s", "third", "val1_i_dvo", "3", "val2_l_dvo", "3"), params());
    assertU(commit("softCommit", "false"));

    assertQ(req("q", "*:*", "fl", "*,[docid]"), "//*[@numFound='3']");

    int docid1 = getDocId("1");
    int docid2 = getDocId("2");
    int docid3 = getDocId("3");

    int numPartialUpdates = 1 + random().nextInt(5000);
    for (int i=0; i<numPartialUpdates; i++) {
      version1 = addAndAssertVersion(version1, "id", "1", "val1_i_dvo", map("set", i));
      version2 = addAndAssertVersion(version2, "id", "2", "val1_i_dvo", map("inc", 1));
      version3 = addAndAssertVersion(version3, "id", "3", "val1_i_dvo", map("set", i));

      version1 = addAndAssertVersion(version1, "id", "1", "val2_l_dvo", map("set", i));
      version2 = addAndAssertVersion(version2, "id", "2", "val2_l_dvo", map("inc", 1));
      version3 = addAndAssertVersion(version3, "id", "3", "val2_l_dvo", map("set", i));
    }
    assertU(commit("softCommit", "true"));

    assertQ(req("q", "*:*", "sort", "id asc", "fl", "*,[docid]"),
        "//*[@numFound='3']",
        "//result/doc[1]/int[@name='val1_i_dvo'][.='"+(numPartialUpdates-1)+"']",
        "//result/doc[2]/int[@name='val1_i_dvo'][.='"+(numPartialUpdates+2)+"']",
        "//result/doc[3]/int[@name='val1_i_dvo'][.='"+(numPartialUpdates-1)+"']",
        "//result/doc[1]/long[@name='val2_l_dvo'][.='"+(numPartialUpdates-1)+"']",
        "//result/doc[2]/long[@name='val2_l_dvo'][.='"+(numPartialUpdates+2)+"']",
        "//result/doc[3]/long[@name='val2_l_dvo'][.='"+(numPartialUpdates-1)+"']",
        "//result/doc[1]/int[@name='[docid]'][.='"+docid1+"']",
        "//result/doc[2]/int[@name='[docid]'][.='"+docid2+"']",
        "//result/doc[3]/int[@name='[docid]'][.='"+docid3+"']",
        "//result/doc[1]/long[@name='_version_'][.='" + version1 + "']",
        "//result/doc[2]/long[@name='_version_'][.='" + version2 + "']",
        "//result/doc[3]/long[@name='_version_'][.='" + version3 + "']"
        );
  }

