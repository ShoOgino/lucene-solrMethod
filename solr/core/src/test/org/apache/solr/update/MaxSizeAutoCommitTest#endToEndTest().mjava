  @Test
  @Repeat(iterations = 5)
  @LuceneTestCase.BadApple(bugUrl="https://issues.apache.org/jira/browse/SOLR-12028") // 12-Jun-2018
  public void endToEndTest() throws Exception {
    int maxFileSizeBound = 5000;
    // Set max size bound
    hardCommitTracker.setTLogFileSizeUpperBound(maxFileSizeBound);

    // Giving a 10% buffer for the max size bound
    int maxFileSizeBoundWithBuffer = (int) (maxFileSizeBound * 1.1);

    SolrQueryRequest selectQuery = req("*:*");
    List<Integer> docCounts = new ArrayList<>();

    int numDocs = 1000;
    int batchSize = 20;
    int numBatches = numDocs / batchSize;
    for (int batchCounter = 0; batchCounter < numBatches; batchCounter++) {
      SolrQueryResponse updateResp = new SolrQueryResponse();
      int docStartId = batchSize * batchCounter;

      // Send batch add doc request
      updateRequestHandler.handleRequest(constructBatchAddDocRequest(docStartId, batchSize), updateResp);

      // The sleep is to allow existing commits to finish before querying/submitting more documents
      waitForCommit(200);

      // Check tlog file sizes
      getTlogFileSizes(tlogDirPath, maxFileSizeBoundWithBuffer);

      // See how many documents are currently visible. This should increase as more commits occur.
      docCounts.add(queryCore(selectQuery));
    }

    // One final commit, after which all documents should be visible
    CommitUpdateCommand commitUpdateCommand = new CommitUpdateCommand(req(), false);
    updateHandler.commit(commitUpdateCommand);
    waitForCommit(200);
    docCounts.add(queryCore(selectQuery));

    // Evaluate the document counts
    checkNumFoundDocuments(docCounts, numDocs);
  }

