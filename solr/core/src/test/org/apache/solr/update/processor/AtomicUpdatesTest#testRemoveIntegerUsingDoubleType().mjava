  @Test
  public void testRemoveIntegerUsingDoubleType() throws Exception {
    SolrInputDocument doc;

    doc = new SolrInputDocument();
    doc.setField("id", "1001");
    doc.setField("intRemove", new String[]{"11111111", "22222222", "33333333", "33333333", "44444444"});
    assertU(adoc(doc));

    doc = new SolrInputDocument();
    doc.setField("id", "1002");
    doc.setField("intRemove", new String[]{"11111111", "22222222", "22222222", "33333333", "44444444"});
    assertU(adoc(doc));

    doc = new SolrInputDocument();
    doc.setField("id", "1020");
    doc.setField("intRemove", new String[]{"11111111", "33333333", "44444444"});
    assertU(adoc(doc));

    doc = new SolrInputDocument();
    doc.setField("id", "1021");
    doc.setField("intRemove", new String[]{"11111111", "22222222", "44444444"});
    assertU(adoc(doc));

    assertU(commit());

    assertQ(req("q", "intRemove:[* TO *]", "indent", "true"), "//result[@numFound = '4']");
    assertQ(req("q", "intRemove:22222222", "indent", "true"), "//result[@numFound = '3']");


    doc = new SolrInputDocument();
    doc.setField("id", "1001");
    List<Double> removeList = new ArrayList<Double>();
    removeList.add(22222222D);
    removeList.add(33333333D);
    doc.setField("intRemove", ImmutableMap.of("remove", removeList)); //behavior when hitting Solr through ZK
    assertU(adoc(doc));
    assertU(commit());

    assertQ(req("q", "intRemove:[* TO *]", "indent", "true"), "//result[@numFound = '4']");
    assertQ(req("q", "intRemove:22222222", "indent", "true"), "//result[@numFound = '2']");

    doc = new SolrInputDocument();
    doc.setField("id", "1021");
    removeList = new ArrayList<Double>();
    removeList.add(22222222D);
    removeList.add(33333333D);
    doc.setField("intRemove", ImmutableMap.of("remove", removeList)); //behavior when hitting Solr through ZK
    assertU(adoc(doc));
    assertU(commit());

    assertQ(req("q", "intRemove:[* TO *]", "indent", "true"), "//result[@numFound = '4']");
    assertQ(req("q", "intRemove:22222222", "indent", "true"), "//result[@numFound = '1']");

    doc = new SolrInputDocument();
    doc.setField("id", "1001");
    doc.setField("intRemove", ImmutableMap.of("remove", 11111111D)); //behavior when hitting Solr directly

    assertU(adoc(doc));
    assertU(commit());

    assertQ(req("q", "intRemove:[* TO *]", "indent", "true"), "//result[@numFound = '4']");
    assertQ(req("q", "intRemove:11111111", "indent", "true"), "//result[@numFound = '3']");
  }

