  @Test
  public void testDeletes() throws Exception {
    int maxFileSizeBound = 1000;

    // Set max size bound
    hardCommitTracker.setTLogFileSizeUpperBound(maxFileSizeBound);

    // Add docs
    int numDocsToAdd = 500;
    SolrQueryResponse updateResp = new SolrQueryResponse();
    updateRequestHandler.handleRequest(constructBatchAddDocRequest(0, numDocsToAdd), updateResp);
    waitForCommit(1000);

    // Get the current commit info
    int commitCountPreDeletes = hardCommitTracker.getCommitCount();

    // Delete all documents - should trigger a commit
    updateRequestHandler.handleRequest(constructBatchDeleteDocRequest(0, numDocsToAdd), updateResp);

    // The long sleep is to allow for the expected triggered commit to finish
    waitForCommit(1000);

    // Verify commit information
    Assert.assertTrue("At least one commit should have occurred",
        hardCommitTracker.getCommitCount() > commitCountPreDeletes);
    long tlogSizePostDeletes = updateHandler.getUpdateLog().getCurrentLogSizeFromStream();
    Assert.assertTrue("Current tlog size is larger than the max bound", tlogSizePostDeletes < maxFileSizeBound);
  }

