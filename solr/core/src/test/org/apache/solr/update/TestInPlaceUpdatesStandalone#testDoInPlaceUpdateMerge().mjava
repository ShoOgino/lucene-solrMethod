  @Test
  /**
   *  Test the @see {@link AtomicUpdateDocumentMerger#doInPlaceUpdateMerge(AddUpdateCommand,Set<String>)} 
   *  method is working fine
   */
  public void testDoInPlaceUpdateMerge() throws Exception {
    long version1 = addAndGetVersion(sdoc("id", "1", "title_s", "first"), null);
    long version2 = addAndGetVersion(sdoc("id", "2", "title_s", "second"), null);
    long version3 = addAndGetVersion(sdoc("id", "3", "title_s", "third"), null);
    assertU(commit("softCommit", "false"));
    assertQ(req("q", "*:*"), "//*[@numFound='3']");

    // Adding a few in-place updates
    version1 = addAndAssertVersion(version1, "id", "1", "inplace_updatable_float", map("set", 200));

    // Test the AUDM.doInPlaceUpdateMerge() method is working fine
    try (SolrQueryRequest req = req()) {
      AddUpdateCommand cmd = buildAddUpdateCommand(req, sdoc("id", "1", "_version_", 42L,
                                                             "inplace_updatable_float", map("inc", 10)));
      AtomicUpdateDocumentMerger docMerger = new AtomicUpdateDocumentMerger(req);
      assertTrue(docMerger.doInPlaceUpdateMerge(cmd, AtomicUpdateDocumentMerger.computeInPlaceUpdatableFields(cmd)));
      assertEquals(42L, cmd.getSolrInputDocument().getFieldValue("_version_"));
      assertEquals(42L, cmd.getSolrInputDocument().getFieldValue("_version_"));
      assertEquals(210f, cmd.getSolrInputDocument().getFieldValue("inplace_updatable_float"));
      // in-place merged doc shouldn't have non-inplace fields from the index/tlog
      assertFalse(cmd.getSolrInputDocument().containsKey("title_s"));
      assertEquals(version1, cmd.prevVersion);
    }
    
    // do a commit, and the same results should be repeated
    assertU(commit("softCommit", "false"));

    // Test the AUDM.doInPlaceUpdateMerge() method is working fine
    try (SolrQueryRequest req = req()) {
      AddUpdateCommand cmd = buildAddUpdateCommand(req, sdoc("id", "1", "_version_", 42L,
                                                             "inplace_updatable_float", map("inc", 10)));
      AtomicUpdateDocumentMerger docMerger = new AtomicUpdateDocumentMerger(req);
      assertTrue(docMerger.doInPlaceUpdateMerge(cmd, AtomicUpdateDocumentMerger.computeInPlaceUpdatableFields(cmd)));
      assertEquals(42L, cmd.getSolrInputDocument().getFieldValue("_version_"));
      assertEquals(42L, cmd.getSolrInputDocument().getFieldValue("_version_"));
      assertEquals(210f, cmd.getSolrInputDocument().getFieldValue("inplace_updatable_float"));
      // in-place merged doc shouldn't have non-inplace fields from the index/tlog
      assertFalse(cmd.getSolrInputDocument().containsKey("title_s")); 
      assertEquals(version1, cmd.prevVersion);
    }
  }

