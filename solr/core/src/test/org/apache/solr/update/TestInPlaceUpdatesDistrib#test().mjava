  @Test
  @ShardsFixed(num = 3)
  @SuppressWarnings("unchecked")
  public void test() throws Exception {
    waitForRecoveriesToFinish(true);
    mapReplicasToClients();
    
    // sanity check no one broke the assumptions we make about our schema
    checkExpectedSchemaField(map("name", "inplace_updatable_int",
        "type","int",
        "stored",Boolean.FALSE,
        "indexed",Boolean.FALSE,
        "docValues",Boolean.TRUE));
    checkExpectedSchemaField(map("name", "inplace_updatable_float",
        "type","float",
        "stored",Boolean.FALSE,
        "indexed",Boolean.FALSE,
        "docValues",Boolean.TRUE));
    checkExpectedSchemaField(map("name", "_version_",
        "type","long",
        "stored",Boolean.FALSE,
        "indexed",Boolean.FALSE,
        "docValues",Boolean.TRUE));

    // Do the tests now:
    docValuesUpdateTest();
    ensureRtgWorksWithPartialUpdatesTest();
    outOfOrderUpdatesIndividualReplicaTest();
    delayedReorderingFetchesMissingUpdateFromLeaderTest();
    updatingDVsInAVeryOldSegment();
    updateExistingThenNonExistentDoc();

    // TODO Should we combine all/some of these into a single test, so as to cut down on execution time?
    reorderedDBQIndividualReplicaTest();
    reorderedDeletesTest();
    reorderedDBQsSimpleTest();
    reorderedDBQsResurrectionTest();
    reorderedDBQsUsingUpdatedValueFromADroppedUpdate();
  }

