  public void testParseDoubleNonRootLocale() throws Exception {
    {
      final NumberFormat sanityCheck = NumberFormat.getInstance(new Locale("fr","FR"));
      sanityCheck.setParseIntegerOnly(false);
      sanityCheck.setRoundingMode(RoundingMode.CEILING);
      assumeThat("Your JVM appears to have NumberFormat parse bugs using U+00A0 in the fr_FR Locale",
                 sanityCheck.parse("10 898"), new IsNot(new IsEqual(10L)));
    }
    IndexSchema schema = h.getCore().getLatestSchema();
    assertNotNull(schema.getFieldOrNull("double_d")); // should match dynamic field "*_d"
    assertNull(schema.getFieldOrNull("not_in_schema"));
    double value = 10898.83491;
    String doubleString1 = "10898,83491";
    String doubleString2 = "10 898,83491"; // no-break space: U+00A0
    SolrInputDocument d = processAdd("parse-double-french-no-run-processor",
                                     doc(f("id", "140"), f("double_d", doubleString1), 
                                         f("not_in_schema", doubleString2)));
    assertNotNull(d);
    assertThat(d.getFieldValue("double_d"), IS_DOUBLE);
    assertEquals(value, (Double)d.getFieldValue("double_d"), EPSILON);
    assertThat(d.getFieldValue("not_in_schema"), IS_DOUBLE);
    assertEquals(value, (Double)d.getFieldValue("not_in_schema"), EPSILON);
  }

