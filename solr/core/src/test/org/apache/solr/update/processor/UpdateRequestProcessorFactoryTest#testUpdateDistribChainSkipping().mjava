  public void testUpdateDistribChainSkipping() throws Exception {
    SolrCore core = h.getCore();
    for (final String name : Arrays.asList("distrib-chain-explicit",
                                           "distrib-chain-implicit",
                                           "distrib-chain-noop")) {

      UpdateRequestProcessor proc;
      UpdateRequestProcessorChain chain = core.getUpdateProcessingChain(name);
      assertNotNull(name, chain);

      // either explicitly, or because of injection
      assertEquals(name + " chain length", 5,
                   chain.getFactories().length);

      // Custom comes first in all three of our chains
      proc = chain.createProcessor(req(), new SolrQueryResponse());
      assertTrue(name + " first processor isn't a CustomUpdateRequestProcessor: " 
                 + proc.getClass().getName(),
                 proc instanceof CustomUpdateRequestProcessor);

      // varies depending on chain, but definitely shouldn't be Custom
      proc = chain.createProcessor(req(DISTRIB_UPDATE_PARAM, "non_blank_value"),
                                   new SolrQueryResponse());
      assertFalse(name + " post distrib proc should not be a CustomUpdateRequestProcessor: " 
                 + proc.getClass().getName(),
                 proc instanceof CustomUpdateRequestProcessor);

      int n=0;
      boolean foundLog = false;
      for (;;) {
        n++;
        if (proc instanceof LogUpdateProcessor) {
          foundLog = true;
        }
        proc = proc.next;
        if (proc == null) break;
      }

      assertTrue( n < chain.getFactories().length );   // some processors should have been dropped
      assertTrue( foundLog );  // make sure the marker interface was successful in keeping the log processor

    }

  }

