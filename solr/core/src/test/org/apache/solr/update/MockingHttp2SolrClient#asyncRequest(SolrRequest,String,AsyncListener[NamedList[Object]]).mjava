  @Override
  public Cancellable asyncRequest(@SuppressWarnings({"rawtypes"}) SolrRequest request,
                                  String collection, AsyncListener<NamedList<Object>> asyncListener) {
    if (request instanceof UpdateRequest) {
      UpdateRequest ur = (UpdateRequest) request;
      // won't throw exception if request is DBQ
      if (ur.getDeleteQuery() != null && !ur.getDeleteQuery().isEmpty()) {
        return super.asyncRequest(request, collection, asyncListener);
      }
    }

    if (exp != null) {
      if (oneExpPerReq) {
        if (reqGotException.contains(request)) {
          return super.asyncRequest(request, collection, asyncListener);
        }
        else
          reqGotException.add(request);
      }

      Exception e = exception();
      if (e instanceof IOException) {
        if (LuceneTestCase.random().nextBoolean()) {
          e = new SolrServerException(e);
        }
      }
      asyncListener.onFailure(e);
    }

    return super.asyncRequest(request, collection, asyncListener);
  }

