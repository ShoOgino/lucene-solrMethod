  @Slow
  @Test
  public void test() throws Exception {
    String configName = getSaferTestName();
    createConfigSet(configName);

    // Start with one collection manually created (and use higher numShards & replicas than we'll use for others)
    //  This tests we may pre-create the collection and it's acceptable.
    final String colVogon = getAlias() + "__CRA__" + SHIPS[0];

    // we expect changes ensuring a legal collection name.
    final String colHoG = getAlias() + "__CRA__" + noSpaces(SHIPS[1]);
    final String colStunt = getAlias() + "__CRA__" + noSpaces(SHIPS[2]);
    final String colArk = getAlias() + "__CRA__" + noDashes(SHIPS[3]);
    final String colBistro = getAlias() + "__CRA__" + noDollar(SHIPS[4]);

    List<String> retrievedConfigSetNames = new ConfigSetAdminRequest.List().process(solrClient).getConfigSets();
    List<String> expectedConfigSetNames = Arrays.asList("_default", configName);

    // config sets leak between tests so we can't be any more specific than this on the next 2 asserts
    assertTrue("We expect at least 2 configSets",
        retrievedConfigSetNames.size() >= expectedConfigSetNames.size());
    assertTrue("ConfigNames should include :" + expectedConfigSetNames, retrievedConfigSetNames.containsAll(expectedConfigSetNames));

    CollectionAdminRequest.createCategoryRoutedAlias(getAlias(), categoryField, 20,
        CollectionAdminRequest.createCollection("_unused_", configName, 1, 1))
        .process(solrClient);

    // now we index a document
    addDocsAndCommit(true, newDoc(SHIPS[0]));

    String uninitialized = getAlias() + "__CRA__" + CategoryRoutedAlias.UNINITIALIZED;

    // important to test that we don't try to delete the temp collection on the first document. If we did so
    // we would be at risk of out of order execution of the deletion/creation which would leave a window
    // of time where there were no collections in the alias. That would likely break all manner of other
    // parts of solr.
    assertInvariants(colVogon, uninitialized);

    addDocsAndCommit(true,
        newDoc(SHIPS[1]),
        newDoc(SHIPS[2]),
        newDoc(SHIPS[3]),
        newDoc(SHIPS[4]));

    // NOW the temp collection should be gone!
    assertInvariants(colVogon, colHoG, colStunt, colArk, colBistro);

    // make sure we fail if we have no value to route on.
    testFailedDocument(newDoc(null), "Route value is null");
    testFailedDocument(newDoc("foo__CRA__bar"), "7 character sequence __CRA__");
    testFailedDocument(newDoc("f贸贸CRA贸贸bar"), "7 character sequence __CRA__");

  }

