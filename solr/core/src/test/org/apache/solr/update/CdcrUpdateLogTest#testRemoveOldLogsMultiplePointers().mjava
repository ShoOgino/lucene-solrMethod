  /**
   * Check that the removal of old logs is taking into consideration
   * multiple log pointers. Check also that the removal takes into consideration the
   * numRecordsToKeep limit, even if the log pointers are ahead.
   */
  @Test
  public void testRemoveOldLogsMultiplePointers() throws Exception {
    this.clearCore();

    UpdateLog ulog = h.getCore().getUpdateHandler().getUpdateLog();
    File logDir = new File(h.getCore().getUpdateHandler().getUpdateLog().getLogDir());
    CdcrUpdateLog.CdcrLogReader reader1 = ((CdcrUpdateLog) ulog).newLogReader();
    CdcrUpdateLog.CdcrLogReader reader2 = ((CdcrUpdateLog) ulog).newLogReader();

    int start = 0;

    LinkedList<Long> versions = new LinkedList<>();
    addDocs(10, start, versions);
    start += 10;
    assertU(commit());

    addDocs(10, start, versions);
    start += 10;
    assertU(commit());

    addDocs(105, start, versions);
    start += 105;
    assertU(commit());

    // the previous two tlogs should not be removed
    assertEquals(3, ulog.getLogList(logDir).length);

    // move the first pointer past the first tlog
    for (int i = 0; i <= 11; i++) { // 10 adds + 1 commit
      assertNotNull(reader1.next());
    }

    addDocs(10, start, versions);
    start += 10;
    assertU(commit());

    // the first tlog should not be removed
    assertEquals(4, ulog.getLogList(logDir).length);

    // move the second pointer past the first tlog
    for (int i = 0; i <= 11; i++) { // 10 adds + 1 commit
      assertNotNull(reader2.next());
    }

    addDocs(10, start, versions);
    start += 10;
    assertU(commit());

    // the first tlog should be removed
    assertEquals(4, ulog.getLogList(logDir).length);

    // exhaust the readers
    while (reader1.next() != null) {
    }
    while (reader2.next() != null) {
    }

    // the readers should point to the new tlog
    // now add enough documents to trigger the numRecordsToKeep limit

    addDocs(80, start, versions);
    start += 80;
    assertU(commit());

    // the update log should kept the last 3 tlogs, which sum up to 100 records
    assertEquals(3, ulog.getLogList(logDir).length);
  }

