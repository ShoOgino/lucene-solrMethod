  public void testParseDateFormats() throws Exception {
    String[] formatExamples = { 
        "2010-01-15T00:00:00.000Z",
        "2010-01-15T00:00:00,000Z",
        "2010-01-15T00:00:00.000",
        "2010-01-15T00:00:00,000",
        "2010-01-15T00:00:00Z",
        "2010-01-15T00:00:00",
        "2010-01-15T00:00Z",
        "2010-01-15T00:00",
        "2010-01-15 00:00:00.000Z",
        "2010-01-15 00:00:00,000Z",
        "2010-01-15 00:00:00.000",
        "2010-01-15 00:00:00,000",
        "2010-01-15 00:00:00Z",
        "2010-01-15 00:00:00",
        "2010-01-15 00:00Z",
        "2010-01-15 00:00",
        "2010-01-15 12:00 AM",
        "2010-01-15 12:00AM",
        "2010-01-15",
        "Fri Jan 15 00:00:00 +0000 2010",
        "Fri Jan 15 00:00:00 2010 +00:00",
        "Fri Jan 15 00:00:00 2010",
        "Fri, 15 Jan 2010 00:00:00 +00:00",
        "Friday, 15-Jan-10 00:00:00 +00:00",
        "Friday, January 15, 2010",
        "January 15, 2010",
        "Jan. 15, 2010"
    };

    IndexSchema schema = h.getCore().getLatestSchema();
    assertNotNull(schema.getFieldOrNull("dateUTC_dt")); // should match "*_dt" dynamic field

    Instant expectedInstant = Instant.parse(formatExamples[0]);

    for (int i = 0 ; i < formatExamples.length ; ++i) {
      String dateString = formatExamples[i];
      String id = "95" + i;
      SolrInputDocument d = processAdd("parse-date-UTC-defaultTimeZone-no-run-processor", 
                                       doc(f("id", id), f("dateUTC_dt", dateString)));
      assertNotNull(d);
      assertTrue("index: " + i + " date '" + dateString + "' is not mutated to a Date",
          d.getFieldValue("dateUTC_dt") instanceof Date);
      assertEquals("date '" + dateString + "' mismatched milliseconds",
          expectedInstant, ((Date)d.getFieldValue("dateUTC_dt")).toInstant());
    }
  }

