  public void testCloneField() throws Exception {

    SolrInputDocument d = null;

    // regardless of chain, all of these should be equivilent
    for (String chain : Arrays.asList("clone-single", "clone-multi", 
                                      "clone-array","clone-selector" )) {

      // simple clone
      d = processAdd(chain,       
                     doc(f("id", "1111"),
                         f("source0_s", "NOT COPIED"),
                         f("source1_s", "123456789", "", 42, "abcd")));
      assertNotNull(chain, d);
      assertEquals(chain,
                   Arrays.asList("123456789", "", 42, "abcd"), 
                   d.getFieldValues("source1_s"));
      assertEquals(chain,
                   Arrays.asList("123456789", "", 42, "abcd"), 
                   d.getFieldValues("dest_s"));

      // append to existing values, preserve boost
      d = processAdd(chain,       
                     doc(f("id", "1111"),
                         field("dest_s", 2.3f, "orig1", "orig2"),
                         f("source0_s", "NOT COPIED"),
                         f("source1_s", "123456789", "", 42, "abcd")));
      assertNotNull(chain, d);
      assertEquals(chain,
                   Arrays.asList("123456789", "", 42, "abcd"), 
                   d.getFieldValues("source1_s"));
      assertEquals(chain,
                   Arrays.asList("orig1", "orig2", "123456789", "", 42, "abcd"),
                   d.getFieldValues("dest_s"));
      assertEquals(chain + ": dest boost changed", 
                   2.3f, d.getField("dest_s").getBoost(), 0.0f);
    }

    // should be equivilent for any chain matching source1_s and source2_s
    for (String chain : Arrays.asList("clone-multi",
                                      "clone-array","clone-selector" )) {

      // simple clone
      d = processAdd(chain,       
                     doc(f("id", "1111"),
                         f("source0_s", "NOT COPIED"),
                         f("source1_s", "123456789", "", 42, "abcd"),
                         f("source2_s", "xxx", 999)));
      assertNotNull(chain, d);
      assertEquals(chain,
                   Arrays.asList("123456789", "", 42, "abcd"), 
                   d.getFieldValues("source1_s"));
      assertEquals(chain,
                   Arrays.asList("xxx", 999),
                   d.getFieldValues("source2_s"));
      assertEquals(chain,
                   Arrays.asList("123456789", "", 42, "abcd", "xxx", 999), 
                   d.getFieldValues("dest_s"));

      // append to existing values, preserve boost
      d = processAdd(chain,       
                     doc(f("id", "1111"),
                         field("dest_s", 2.3f, "orig1", "orig2"),
                         f("source0_s", "NOT COPIED"),
                         f("source1_s", "123456789", "", 42, "abcd"),
                         f("source2_s", "xxx", 999)));
      assertNotNull(chain, d);
      assertEquals(chain,
                   Arrays.asList("123456789", "", 42, "abcd"), 
                   d.getFieldValues("source1_s"));
      assertEquals(chain,
                   Arrays.asList("xxx", 999),
                   d.getFieldValues("source2_s"));
      assertEquals(chain,
                   Arrays.asList("orig1", "orig2", 
                                 "123456789", "", 42, "abcd",
                                 "xxx", 999),
                   d.getFieldValues("dest_s"));
      assertEquals(chain + ": dest boost changed", 
                   2.3f, d.getField("dest_s").getBoost(), 0.0f);
    }
  }

