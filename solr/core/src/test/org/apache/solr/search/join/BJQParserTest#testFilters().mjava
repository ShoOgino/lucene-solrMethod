  @Test
  public void testFilters() {
    assertQ(
        req("q", "{!filters param=$child.fq v=$gchq}",
            "child.fq", "childparent_s:e",
            "child.fq", "child_s:l",
            "gchq", "child_s:[* TO *]"), elChild);

    assertQ(
        req("q", "{!filters param=$child.fq excludeTags=firstTag v=$gchq}",
            "child.fq", "{!tag=zeroTag,firstTag}childparent_s:e",
            "child.fq", "{!tag=secondTag}child_s:l",
            "gchq", "child_s:[* TO *]"), "//*[@numFound='6']");

    assertQ(
        req("q", "{!filters param=$child.fq excludeTags=secondTag v=$gchq}",
            "child.fq", "{!tag=firstTag}childparent_s:e",
            "child.fq", "{!tag=secondTag}child_s:l",
            "gchq", "child_s:[* TO *]"), "//*[@numFound='3']");

    assertQ(req("q",
             random().nextBoolean() ? "{!filters param=$child.fq excludeTags=firstTag,secondTag v=$gchq}" :
               random().nextBoolean() ? "{!filters param=$thereAreNoLikeThese v=$gchq}" :
                 "{!filters v=$gchq}" ,
            "child.fq", "{!tag=firstTag}childparent_s:e",
            "child.fq", "{!tag=secondTag}child_s:l",
            "gchq", "child_s:[* TO *]"), "//*[@numFound='18']");
    
    assertQEx("expecting exception on weird param",
        req("q", "{!filters v=$gchq param=}\"" ,
            "gchq", "child_s:[* TO *]"
       ),ErrorCode.BAD_REQUEST);
    
    assertQ( // omit main query
        req("q", "{!filters param=$child.fq}",
            "child.fq", "{!tag=firstTag}childparent_s:(e f)",
            "child.fq", "{!tag=secondTag}child_s:l"), "//*[@numFound='2']");
    
    assertQ( // all excluded, matching all 
        req("q", "{!filters param=$child.fq excludeTags=firstTag,secondTag}",
            "child.fq", "{!tag=firstTag}childparent_s:(e f)",
            "child.fq", "{!tag=secondTag}child_s:l"), "//*[@numFound='42']");
    
    assertQ(req("q", // excluding top level
            "{!filters param=$child.fq excludeTags=bot,top v=$gchq}" ,
       "child.fq", "{!tag=secondTag}child_s:l", // 6 ls remains
       "gchq", "{!tag=top}childparent_s:e"), "//*[@numFound='6']");
    
    assertQ(req("q", // top and filter are excluded, got zero result, but is it right? 
        "{!filters excludeTags=bot,secondTag,top v=$gchq}" ,
         "child.fq", "{!tag=secondTag}child_s:l",
         "gchq", "{!tag=top}childparent_s:e"), "//*[@numFound='42']");
  }

