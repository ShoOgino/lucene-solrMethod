  /** Tests a single doc with a few explicit values, as well as testing exists with and w/o values */
  protected void testSimpleValues(final String fieldname, final Class clazz, final Comparable... vals) {

    assert 0 < vals.length;
    
    Comparable min = vals[0];
    Comparable max = vals[0];
    
    final String type = clazz.getName();
    final SolrInputDocument doc1 = sdoc("id", "1");
    for (Comparable v : vals) {
      doc1.addField(fieldname, v);
      if (0 < min.compareTo(v)) {
        min = v;
      }
      if (0 > max.compareTo(v)) {
        max = v;
      }
    }
    assertU(adoc(doc1));
    assertU(adoc(sdoc("id", "2"))); // fieldname doesn't exist
    assertU(commit());
    
    assertQ(fieldname,
            req("q","id:1",
                "fl","exists_val_min:exists(field("+fieldname+",min))",
                "fl","exists_val_max:exists(field("+fieldname+",max))",
                "fl","val_min:field("+fieldname+",min)",
                "fl","val_max:field("+fieldname+",max)")
            ,"//*[@numFound='1']"
            ,"//bool[@name='exists_val_min']='true'"
            ,"//bool[@name='exists_val_max']='true'"
            ,"//"+type+"[@name='val_min']='"+min+"'"
            ,"//"+type+"[@name='val_max']='"+max+"'"
            );

    assertQ(fieldname,
            req("q","id:2",
                "fl","exists_val_min:exists(field("+fieldname+",min))",
                "fl","exists_val_max:exists(field("+fieldname+",max))",
                "fl","val_min:field("+fieldname+",min)",
                "fl","val_max:field("+fieldname+",max)")
            ,"//*[@numFound='1']"
            ,"//bool[@name='exists_val_min']='false'"
            ,"//bool[@name='exists_val_max']='false'"
            ,"count(//"+type+"[@name='val_min'])=0"
            ,"count(//"+type+"[@name='val_max'])=0"
            );
  }

