  public void testDocsWithNaNInField() throws Exception {
    assertEquals("someone changed the test setup of HAS_NAN_FIELDS, w/o updating the sanity check",
        12, HAS_NAN_FIELDS.size());
    for (String f : HAS_NAN_FIELDS) {
      // for all of these fields, field:* should NOT be equivalent to field:[* TO *]
      assertJQ(req("q", f + ":*")
          , "/response/numFound==1"
          , "/response/docs/[0]/id=='999'"
      );
      assertJQ(req("q", f + ":[* TO *]")
          , "/response/numFound==0"
      );
      assertJQ(req("q", f + ":[-Infinity TO Infinity]")
          , "/response/numFound==0"
      );
      for (String q : Arrays.asList( f + ":*", f + ":[* TO *]", f + ":[-Infinity TO Infinity]" )) {
        // the same syntaxes should be valid even if no doc has the field...
        assertJQ(req("q", "bogus___" + q)
            , "/response/numFound==0"
        );

      }
    }
  }

