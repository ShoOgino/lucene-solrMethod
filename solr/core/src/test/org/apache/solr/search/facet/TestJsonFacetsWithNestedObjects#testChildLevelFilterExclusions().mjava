  /**
   * Child level facet exclusions
   */
  @Test
  public void testChildLevelFilterExclusions() throws Exception {
    final Client client = Client.localClient();
    ModifiableSolrParams p = params("rows","10");
    client.testJQ(params(p, "q", "{!parent filters=$child.fq which=type_s:book v=$childquery}"
        , "childquery", "comment_t:*"
        , "child.fq", "{!tag=author}author_s:yonik"
        , "child.fq", "{!tag=stars}stars_i:(5 3)"
        , "fl", "id", "fl" , "title_t"
        , "json.facet", "{" +
            "  comments_for_author: {" +
            "    type:query," +
            //note: author filter is excluded
            "    q:\"{!filters param=$child.fq excludeTags=author v=$childquery}\"," +
            "    domain: { blockChildren : \"type_s:book\", excludeTags:author }," +
            "    facet:{" +
            "      authors:{" +
            "        type:terms," +
            "        field:author_s," +
            "        facet: {" +
            "           in_books: \"unique(_root_)\" }}}}," +
            "  comments_for_stars: {" +
            "    type:query," +
            //note: stars_i filter is excluded
            "    q:\"{!filters param=$child.fq excludeTags=stars v=$childquery}\"," +
            "    domain: { blockChildren : \"type_s:book\" }," +
            "    facet:{" +
            "      stars:{" +
            "        type:terms," +
            "        field:stars_i," +
            "        facet: {" +
            "           in_books: \"unique(_root_)\" }}}}}" )

        , "response=={numFound:2,start:0,'numFoundExact':true,docs:[" +
            "      {id:book1," +
            "        title_t:\"The Way of Kings\"}," +
            "      {id:book2," +
            "        title_t:\"Snow Crash\"}]}"
        , "facets=={ count:2," +
            "comments_for_author:{" +
            "  count:3," +
            "  authors:{" +
            "    buckets:[ {val:yonik,  count:2, in_books:2}," +
            "              {val:dan,    count:1, in_books:1} ]}}," +
            "comments_for_stars:{" +
            "  count:2," +
            "  stars:{" +
            "    buckets:[ {val:5, count:2, in_books:2} ]}}}"
    );
  }

