  /*
  * SOLR-14073
  * The double collapse causes a look ahead in the second collapse to a segment that was not visited by
  * the by finally method of the first collapse. This specific test is meant to confirm that any feature
  * that causes searches to not visit each segment (such as early query termination) doesn't break collapse.
  */
  private void testDoubleCollapse(String group, String hint) {
    String[] doc = {"id","1", "term_s", "YYYY", group, "1", "test_i", "5", "test_l", "10", "test_f", "2000"};
    assertU(adoc(doc));
    assertU(commit());
    String[] doc1 = {"id","2", "term_s","YYYY", group, "2", "test_i", "50", "test_l", "100", "test_f", "200"};
    assertU(adoc(doc1));



    String[] doc2 = {"id","3", "term_s", "YYYY", "test_i", "5000", "test_l", "100", "test_f", "200"};
    assertU(adoc(doc2));
    assertU(commit());
    String[] doc3 = {"id","4", "term_s", "YYYY", "test_i", "500", "test_l", "1000", "test_f", "2000"};
    assertU(adoc(doc3));


    String[] doc4 = {"id","5", "term_s", "YYYN", group, "2", "test_i", "4", "test_l", "10", "test_f", "2000"};
    assertU(adoc(doc4));
    assertU(commit());
    String[] doc5 = {"id","6", "term_s","YYYY", group, "2", "test_i", "10", "test_l", "100", "test_f", "200"};
    assertU(adoc(doc5));
    assertU(commit());

    String[] doc6 = {"id","7", "term_s", "YYYY", group, "1", "test_i", "8", "test_l", "50", "test_f", "300"};
    assertU(adoc(doc6));
    assertU(commit());

    ModifiableSolrParams params = new ModifiableSolrParams();
    params.add("q", "id:(1 2 5)");
    params.add("fq", "{!collapse cost=200 field=term_s "+hint+"}");
    params.add("fq", "{!collapse cost=400 field="+group+""+hint+"}");

    params.add("defType", "edismax");
    params.add("bf", "field(test_i)");
    assertQ(req(params, "indent", "on"), "*[count(//doc)=1]",
        "//result/doc[1]/str[@name='id'][.='2']"
    );

    params = new ModifiableSolrParams();
    params.add("q", "id:(1 2 5)");
    params.add("fq", "{!collapse cost=200 max=test_i field=term_s "+hint+"}");
    params.add("fq", "{!collapse cost=400 max=test_i field="+group+""+hint+"}");

    params.add("defType", "edismax");
    params.add("bf", "field(test_i)");
    assertQ(req(params, "indent", "on"), "*[count(//doc)=1]",
        "//result/doc[1]/str[@name='id'][.='2']"
    );
  }

