  @Test
  public void testManyClauses_Solr() throws Exception {
    final String a = "1 a 2 b 3 c 10 d 11 12 "; // 10 terms
    
    // this should exceed our solrconfig.xml level (solr specific) maxBooleanClauses limit
    // even though it's not long enough to trip the Lucene level (global) limit
    final String too_long = "id:(" + a + a + a + a + a + ")";

    final String expectedMsg = "Too many clauses";
    ignoreException(expectedMsg);
    SolrException e = expectThrows(SolrException.class, "expected SolrException",
                                   () -> assertJQ(req("q", too_long), "/response/numFound==6"));
    assertThat(e.getMessage(), containsString(expectedMsg));
    
    // but should still work as a filter query since TermsQuery can be used...
    assertJQ(req("q","*:*", "fq", too_long)
             ,"/response/numFound==6");
    assertJQ(req("q","*:*", "fq", too_long, "sow", "false")
             ,"/response/numFound==6");
    assertJQ(req("q","*:*", "fq", too_long, "sow", "true")
             ,"/response/numFound==6");
  }

