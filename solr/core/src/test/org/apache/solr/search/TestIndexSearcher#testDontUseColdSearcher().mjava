  public void testDontUseColdSearcher() throws Exception {
    MockSearchComponent.registerFirstSearcherListener = false;
    MockSearchComponent.registerNewSearcherListener = false;
    MockSearchComponent.registerSlowSearcherListener = true;
    final AtomicBoolean querySucceeded = new AtomicBoolean(false);
    SlowSearcherListener.numberOfTimesCalled = new AtomicInteger(0);
    SlowSearcherListener.latch = new CountDownLatch(1);
    
    CoreContainer cores = h.getCoreContainer();
    CoreDescriptor cd = h.getCore().getCoreDescriptor();
    final SolrCore newCore;
    boolean coreCreated = false;
    try {
      CoreDescriptor newCd = new CoreDescriptor(cores, "core1", cd.getInstanceDir(), "config", "solrconfig-searcher-listeners1.xml");
      // Create a new core, this should call all the firstSearcherListeners
      newCore = cores.create(newCd);
      coreCreated = true;
      
      //validate that the new core was created with the correct solrconfig
      assertNotNull(newCore.getSearchComponent("mock"));
      assertEquals(MockSearchComponent.class, newCore.getSearchComponent("mock").getClass());
      assertFalse(newCore.getSolrConfig().useColdSearcher);
      
      Thread t = new Thread() {
        public void run() {
          try {
            doQuery(newCore);
            querySucceeded.set(true);
          } catch (Exception e) {
            throw new RuntimeException(e);
          }
        };
      };
      t.start();
      
      if (System.getProperty(SYSPROP_NIGHTLY) != null) {
        // even if we wait here, the SearcherListener should not finish
        Thread.sleep(500);
      }
      // validate that the searcher warmer didn't finish yet. 
      assertEquals(0, SlowSearcherListener.numberOfTimesCalled.get());
      assertFalse("Query should be waiting for warming to finish", querySucceeded.get());
      
      // Let warmer finish 
      SlowSearcherListener.latch.countDown();
      
      // Validate that the query eventually succeeds
      for (int i = 0; i <= 1000; i++) {
        if (querySucceeded.get()) {
          break;
        }
        if (i == 1000) {
          fail("Query didn't succeed after 10 secoonds");
        }
        Thread.sleep(10);
      }
      
    } finally {
      
      if (coreCreated) {
        cores.unload("core1");
      }
    }
  }

