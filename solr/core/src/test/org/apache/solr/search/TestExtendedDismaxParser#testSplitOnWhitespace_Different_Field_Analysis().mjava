  public void testSplitOnWhitespace_Different_Field_Analysis() throws Exception {
    // When the *structure* of produced queries is different in each field, 
    // sow=true produces boolean-of-dismax query structure,
    // and sow=false produces dismax-of-boolean query structure.
    assertQ(req("qf", "text_sw title",
        "q", "olive the other",
        "defType", "edismax",
        "sow", "true",
        "debugQuery", "true"),
        "//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((text_sw:oliv | title:olive))')]",
        "//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((title:the))')]",
        "//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((text_sw:other | title:other))')]"
    );
    assertQ(req("qf", "text_sw title",
        "q", "olive the other",
        "defType", "edismax",
        "sow", "false",
        "debugQuery", "true"),
        "//str[@name='parsedquery'][contains(.,'+DisjunctionMaxQuery(((text_sw:oliv text_sw:other) | (title:olive title:the title:other)))')]"
    );

    // When field's analysis produce different query structures, mm processing is always done on the boolean query.
    // sow=true produces (boolean-of-dismax)~<mm> query structure,
    // and sow=false produces dismax-of-(boolean)~<mm> query structure.
    assertQ(req("qf", "text_sw title",
        "q", "olive the other",
        "defType", "edismax",
        "sow", "true",
        "mm", "100%",
        "debugQuery", "true"),
        "//str[@name='parsedquery'][contains(.,'+(DisjunctionMaxQuery((text_sw:oliv | title:olive)) DisjunctionMaxQuery((title:the)) DisjunctionMaxQuery((text_sw:other | title:other)))~3')]"
    );
    assertQ(req("qf", "text_sw title",
        "q", "olive the other",
        "defType", "edismax",
        "sow", "false",
        "mm", "100%",
        "debugQuery", "true"),
        "//str[@name='parsedquery'][contains(.,'+DisjunctionMaxQuery((((text_sw:oliv text_sw:other)~2) | ((title:olive title:the title:other)~3)))')]"
    );


    // When the *structure* of produced queries is the same in each field, 
    // sow=false/true produce the same boolean-of-dismax query structure 
    for (String sow : Arrays.asList("true", "false")) {
      assertQ(req("qf", "text_sw title",
          "q", "olive blah other",
          "defType", "edismax",
          "sow", sow,
          "debugQuery", "true"),
          "//str[@name='parsedquery'][contains(.,'"
              + "+(DisjunctionMaxQuery((text_sw:oliv | title:olive))"
              + " DisjunctionMaxQuery((text_sw:blah | title:blah))"
              + " DisjunctionMaxQuery((text_sw:other | title:other)))')]"
      );
    }
  }

