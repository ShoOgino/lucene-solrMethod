  /**
   * Sanity check that our method of varying the <code>method</code> param
   * works and can be verified by inspecting the debug output of basic requests.
   */
  public void testWhiteboxSanityMethodProcessorDebug() throws Exception {
    // NOTE: json.facet debugging output can be wonky, particularly when dealing with cloud
    // so for these queries we keep it simple:
    // - only one "top" facet per request
    // - no refinement
    // even with those constraints in place, a single facet can (may/sometimes?) produce multiple debug
    // blocks - aparently due to shard merging? So...
    // - only inspect the "first" debug NamedList in the results
    //
    
    // simple individual facet that sorts on an skg stat...
    final TermFacet f = new TermFacet(soloStrField(9), 10, 0, "skg desc", null);
    final Map<String,TermFacet> facets = new LinkedHashMap<>();
    facets.put("str", f);
    
    final SolrParams facetParams = params("rows","0",
                                          "debug","true", // SOLR-14451
                                          // *:* is the only "safe" query for this test,
                                          // to ensure we always have at least one bucket for every facet
                                          // so we can be confident in getting the debug we expect...
                                          "q", "*:*",
                                          "fore", multiStrField(7)+":11",
                                          "back", "*:*",
                                          "json.facet", Facet.toJSONFacetParamValue(facets));
    
    { // dv 
      final SolrParams params = SolrParams.wrapDefaults(params("method_val", "dv"),
                                                        facetParams);
      final NamedList<Object> debug = getFacetDebug(params);
      assertEquals(FacetFieldProcessorByArrayDV.class.getSimpleName(), debug.get("processor"));
    }
    { // dvhash
      final SolrParams params = SolrParams.wrapDefaults(params("method_val", "dvhash"),
                                                        facetParams);
      final NamedList<Object> debug = getFacetDebug(params);
      assertEquals(FacetFieldProcessorByHashDV.class.getSimpleName(), debug.get("processor"));
    }
  }

