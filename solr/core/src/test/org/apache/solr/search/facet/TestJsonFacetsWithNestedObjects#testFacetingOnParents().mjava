  /**
   * Example from http://yonik.com/solr-nested-objects/
   * The main query gives us a document list of reviews by author_s:yonik
   * If we want to facet on the book genre (cat_s field) then we need to
   * switch the domain from the children (type_s:reviews) to the parents (type_s:books).
   *
   * And we get a facet over the books which yonik reviewed
   *
   * Note that regardless of which direction we are mapping
   * (parents to children or children to parents),
   * we provide a query that defines the complete set of parents in the index.
   * In these examples, the parent filter is “type_s:book”.
   */
  @Test
  public void testFacetingOnParents() throws Exception {
    final Client client = Client.localClient();
    ModifiableSolrParams p = params("rows","10");
    client.testJQ(params(p, "q", "author_s:yonik", "fl", "id", "fl" , "comment_t"
        , "json.facet", "{" +
            "  genres: {" +
            "    type:terms," +
            "    field:cat_s," +
            "    domain: { blockParent : \"type_s:book\" }" +
            "  }" +
            "}"
        )
        , "response=={numFound:2,start:0,'numFoundExact':true,docs:[" +
            "      {id:book1_c1," +
            "        comment_t:\"A great start to what looks like an epic series!\"}," +
            "      {id:book2_c1," +
            "        comment_t:\"Ahead of its time... I wonder if it helped inspire The Matrix?\"}]}"
        , "facets=={ count:2," +
            "genres:{buckets:[ {val:fantasy, count:1}," +
            "                  {val:sci-fi,  count:1}]}}"
    );
  }

