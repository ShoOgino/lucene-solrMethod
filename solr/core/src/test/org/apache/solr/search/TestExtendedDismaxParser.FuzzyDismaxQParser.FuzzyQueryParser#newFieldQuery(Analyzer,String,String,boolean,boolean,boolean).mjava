      /** 
       * Handle multi-term queries by repacking boolean queries with frequently misspelled term
       * queries rewritten as fuzzy queries.
       **/
      @Override
      protected Query newFieldQuery(Analyzer analyzer, String field, String queryText,
                                    boolean quoted, boolean fieldAutoGenPhraseQueries, boolean fieldEnableGraphQueries)
          throws SyntaxError {
        Query q = super.newFieldQuery
            (analyzer, field, queryText, quoted, fieldAutoGenPhraseQueries, fieldEnableGraphQueries);
        if (q instanceof BooleanQuery) {
          boolean rewrittenSubQ = false; // dirty flag: rebuild the repacked query?
          BooleanQuery.Builder builder = newBooleanQuery();
          for (BooleanClause clause : ((BooleanQuery)q).clauses()) {
            Query subQ = clause.getQuery();
            if (subQ instanceof TermQuery) {
              Term subTerm = ((TermQuery)subQ).getTerm(); 
              if (frequentlyMisspelledWords.contains(subTerm.text())) {
                rewrittenSubQ = true;
                Query fuzzySubQ = newFuzzyQuery(subTerm, MIN_SIMILARITY, getFuzzyPrefixLength());
                clause = newBooleanClause(fuzzySubQ, clause.getOccur());
              } 
            } 
            builder.add(clause);
          }
          if (rewrittenSubQ) {
            builder.setMinimumNumberShouldMatch(((BooleanQuery)q).getMinimumNumberShouldMatch());
            q = builder.build();
          }
        }
        return q;
      }

