  @Test
  public void testPhrase() {
    // "text" field's type has WordDelimiterGraphFilter (WDGFF) and autoGeneratePhraseQueries=true
    // should generate a phrase of "now cow" and match only one doc
    assertQ(req("q", "text:now-cow", "indent", "true", "sow","true")
        , "//*[@numFound='1']"
    );
    // When sow=false, autoGeneratePhraseQueries=true only works when a graph is produced
    // (i.e. overlapping terms, e.g. if WDGFF's preserveOriginal=1 or concatenateWords=1).
    // The WDGFF config on the "text" field doesn't produce a graph, so the generated query
    // is not a phrase query.  As a result, docs can match that don't match phrase query "now cow"
    assertQ(req("q", "text:now-cow", "indent", "true", "sow","false")
        , "//*[@numFound='2']"
    );
    assertQ(req("q", "text:now-cow", "indent", "true") // default sow=false
        , "//*[@numFound='2']"
    );
    
    // "text_np" field's type has WDGFF and (default) autoGeneratePhraseQueries=false
    // should generate a query of (now OR cow) and match both docs
    assertQ(req("q", "text_np:now-cow", "indent", "true")
        , "//*[@numFound='2']"
    );
  }

