  public void testDomainFilterExclusionsInFilters() throws Exception {
    final Client client = Client.localClient();
    ModifiableSolrParams p = params("rows","10");
    client.testJQ(params(p, "q", "{!parent tag=top filters=$child.fq which=type_s:book v=$childquery}"
        , "childquery", "comment_t:*"
        , "child.fq", "{!tag=author}author_s:dan"
        , "child.fq", "{!tag=stars}stars_i:4"
        , "fq", "{!tag=top}title_t:Snow\\ Crash"
        , "fl", "id", "fl" , "title_t"
        , "json.facet", "{" +
            "  comments_for_author: {" +
            "    domain: { excludeTags:\"top\"," + // 1. throwing current parent docset,  
            "             filter:[\"{!filters param=$child.fq " + // compute children docset from scratch
            "                       excludeTags=author v=$childquery}\"]"// 3. filter children with exclusions 
            + "            }," +
            "    type:terms," +
            "    field:author_s," +
            "    facet: {" +
            "           in_books: \"unique(_root_)\" }"+//}}," +
            "  }" +
            //note: stars_i filter is excluded
            "  ,comments_for_stars: {" +
            "    domain: { excludeTags:top, " +
            "          filter:\"{!filters param=$child.fq  excludeTags=stars v=$childquery}\" }," +
            "    type:terms," +
            "    field:stars_i," +
            "    facet: {" +
            "           in_books: \"unique(_root_)\" }}"+
            
            "  ,comments_for_stars_parent_filter: {" +
            "    domain: { excludeTags:top, " +
            "          filter:[\"{!filters param=$child.fq  excludeTags=stars v=$childquery}\","
            + "                \"{!child of=type_s:book filters=$fq}type_s:book\"] }," +
            "    type:terms," +
            "    field:stars_i," +
            "    facet: {" +
            "           in_books: \"unique(_root_)\" }}"+
        "}" )

        , "response=={numFound:0,start:0,'numFoundExact':true,docs:[]}"
        , "facets=={ count:0," +
            "comments_for_author:{" +
            "    buckets:[ {val:mary,    count:1, in_books:1} ]}," +
            "comments_for_stars:{" +
            "    buckets:[ {val:2, count:1, in_books:1}," +
            "              {val:3, count:1, in_books:1} ]}," +
            "comments_for_stars_parent_filter:{" +
            "    buckets:[ {val:2, count:1, in_books:1}" +
            "               ]}}"
    );
  }

