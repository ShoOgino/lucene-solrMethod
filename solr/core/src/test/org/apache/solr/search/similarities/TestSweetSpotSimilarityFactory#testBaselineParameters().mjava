  /** baseline with parameters */
  public void testBaselineParameters() throws Exception {
    SweetSpotSimilarity sim = getSimilarity("text_baseline", 
                                            SweetSpotSimilarity.class);
    
    ClassicSimilarity d = new ClassicSimilarity();

    // constant up to 6
    for (int i = 1; i <=6; i++) {
      assertEquals("tf i="+i, 1.5F, sim.tf(i), 0.0F);
    }
    // less then default sim above 6
    for (int i = 6; i <=1000; i++) {
      assertTrue("tf: i="+i+" : s="+sim.tf(i)+
                 " < d="+d.tf(i),
                 sim.tf(i) < d.tf(i));
    }

    // norms: plateau from 3-5
    assertEquals("norm 1 == 7", 
                 computeNorm(sim, 1), computeNorm(sim, 7),  0.0F);
    assertEquals("norm 2 == 6",  
                 computeNorm(sim, 1), computeNorm(sim, 7),  0.0F);
    assertEquals("norm 3",  1.00F, computeNorm(sim, 3),  0.0F);
    assertEquals("norm 4",  1.00F, computeNorm(sim, 4),  0.0F);
    assertEquals("norm 5",  1.00F, computeNorm(sim, 5),  0.0F);
    assertTrue("norm 6 too high: " + computeNorm(sim, 6),
               computeNorm(sim, 6) < 1.0F);
    assertTrue("norm 7 higher then norm 6", 
               computeNorm(sim, 7) < computeNorm(sim, 6));
    assertEquals("norm 20", 0.25F, computeNorm(sim, 20), 0.0F);
  }

