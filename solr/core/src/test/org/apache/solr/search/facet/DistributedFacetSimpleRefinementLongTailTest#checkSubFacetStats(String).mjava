  private void checkSubFacetStats(String extraJson) throws Exception {
    String commonJson = "type: terms, " + extraJson;
    NamedList<NamedList> all_facets = (NamedList) queryServer
      ( params( "q", "*:*", "shards", getShardsString(), "rows" , "0", "json.facet",
                "{ foo : { " + commonJson + " field: foo_s, facet: { " +
                ALL_STATS_JSON + " bar: { " + commonJson + " field: bar_s, facet: { " + ALL_STATS_JSON + "} } } } }"
      ) ).getResponse().get("facets");
    
    assertNotNull(all_facets);

    List<NamedList> foo_buckets = (List) ((NamedList)all_facets.get("foo")).get("buckets");

    NamedList aaa0_Bucket = foo_buckets.get(0);
    assertEquals(ALL_STATS.size() + 3, aaa0_Bucket.size()); // val,count,facet
    assertEquals("aaa0", aaa0_Bucket.get("val"));
    assertEquals(300L, aaa0_Bucket.get("count"));
    assertEquals(-99L, aaa0_Bucket.get("min"));
    assertEquals(693L, aaa0_Bucket.get("max"));
    // assertEquals(300L, aaa0_Bucket.get("num_values")); // TODO: SOLR-11695
    // assertEquals(0L, aaa0_Bucket.get("missing")); // TODO: SOLR-11695
    assertEquals(34650.0D, aaa0_Bucket.get("sum"));
    assertEquals(115.5D, (double) aaa0_Bucket.get("avg"), 0.1E-7);
    assertEquals(1.674585E7D, (double) aaa0_Bucket.get("sumsq"), 0.1E-7);
    // assertEquals(206.4493184076D, (double) aaa0_Bucket.get("stddev"), 0.1E-7); // TODO: SOLR-11725
    assertEquals(206.1049489944D, (double) aaa0_Bucket.get("stddev"), 0.1E-7); // json.facet is using the "uncorrected stddev"

    NamedList tail_Bucket = foo_buckets.get(5);
    assertEquals(ALL_STATS.size() + 3, tail_Bucket.size()); // val,count,facet
    assertEquals("tail", tail_Bucket.get("val"));
    assertEquals(135L, tail_Bucket.get("count"));
    assertEquals(0L, tail_Bucket.get("min"));
    assertEquals(44L, tail_Bucket.get("max"));
    // assertEquals(90L, tail_Bucket.get("num_values")); // TODO: SOLR-11695
    // assertEquals(45L, tail_Bucket.get("missing")); // TODO: SOLR-11695
    assertEquals(1980.0D, tail_Bucket.get("sum"));
    assertEquals(22.0D, (double) tail_Bucket.get("avg"), 0.1E-7);
    assertEquals(58740.0D, (double) tail_Bucket.get("sumsq"), 0.1E-7);
    // assertEquals(13.0599310011D, (double) tail_Bucket.get("stddev"), 0.1E-7); // TODO: SOLR-11725
    assertEquals(12.9871731592D, (double) tail_Bucket.get("stddev"), 0.1E-7); // json.facet is using the "uncorrected stddev"

    List<NamedList> tail_bar_buckets = (List) ((NamedList)tail_Bucket.get("bar")).get("buckets");
   
    NamedList tailB_Bucket = tail_bar_buckets.get(0);
    assertEquals(ALL_STATS.size() + 2, tailB_Bucket.size()); // val,count ... NO SUB FACETS
    assertEquals("tailB", tailB_Bucket.get("val"));
    assertEquals(17L, tailB_Bucket.get("count"));
    assertEquals(35L, tailB_Bucket.get("min"));
    assertEquals(40L, tailB_Bucket.get("max"));
    // assertEquals(12L, tailB_Bucket.get("num_values")); // TODO: SOLR-11695
    // assertEquals(5L, tailB_Bucket.get("missing")); // TODO: SOLR-11695
    assertEquals(450.0D, tailB_Bucket.get("sum"));
    assertEquals(37.5D, (double) tailB_Bucket.get("avg"), 0.1E-7);
    assertEquals(16910.0D, (double) tailB_Bucket.get("sumsq"), 0.1E-7);
    // assertEquals(1.78376517D, (double) tailB_Bucket.get("stddev"), 0.1E-7); // TODO: SOLR-11725
    assertEquals(1.70782513D, (double) tailB_Bucket.get("stddev"), 0.1E-7); // json.facet is using the "uncorrected stddev"
  }

