  @Test
  public void testNestedQuery() {

    assertU(adoc("id", "doc_1", "min_hash_string", "HASH1", "min_hash_string", "HASH2", "min_hash_string", "HASH3"));
    assertU(adoc("id", "doc_2", "min_hash_string", "HASH1", "min_hash_string", "HASH2", "min_hash_string", "HASH4"));
    assertU(commit());

    String gQuery = "*:*";
    SolrQueryRequest qr = createRequest(gQuery);
    assertQ(qr, "//*[@numFound='2']",
        "//result/doc[1]/str[@name='id'][.='doc_1']",
        "//result/doc[1]/float[@name='score'][.=1.0]",
        "//result/doc[2]/str[@name='id'][.='doc_2']",
        "//result/doc[2]/float[@name='score'][.=1.0]");

    gQuery = "*:* AND _query_:{!minhash field=\"min_hash_string\" sep=\",\"}HASH3";
    qr = createRequest(gQuery);
    assertQ(qr, "//*[@numFound='1']",
        "//result/doc[1]/str[@name='id'][.='doc_1']",
        "//result/doc[1]/float[@name='score'][.=2.0]");

    gQuery = "*:* AND _query_:{!minhash field=\"min_hash_string\" sep=\",\" sep=\"0.9\" tp=\"0.9\"}HASH3";
    qr = createRequest(gQuery);
    assertQ(qr, "//*[@numFound='1']",
        "//result/doc[1]/str[@name='id'][.='doc_1']",
        "//result/doc[1]/float[@name='score'][.=2.0]");

    gQuery = "*:* AND _query_:{!minhash field=\"min_hash_string\" sep=\",\" sep=\"0.1\" tp=\"0.1\"}HASH3";
    qr = createRequest(gQuery);
    assertQ(qr, "//*[@numFound='1']",
        "//result/doc[1]/str[@name='id'][.='doc_1']",
        "//result/doc[1]/float[@name='score'][.=2.0]");

  }

