  public void testOperatorsAndMultiWordSynonyms() throws Exception {
    // The "syn" field has synonyms loaded from synonyms.txt

    assertJQ(req("df", "syn", "q", "wifi", "sow", "true") // retrieve the single document containing literal "wifi"
        , "/response/numFound==1"
        , "/response/docs/[0]/id=='20'"
    );
    assertJQ(req("df", "syn", "q", "wi fi", "sow", "false") // trigger the "wi fi => wifi" synonym
        , "/response/numFound==1"
        , "/response/docs/[0]/id=='20'"
    );

    assertJQ(req("df", "syn", "q", "+wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "-wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "!wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi* fi", "sow", "false")    // matches because wi* matches wifi
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "w? fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi~1 fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi^2 fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi^=2 fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi +fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi -fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi !fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi*", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi?", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi~1", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi^2", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi^=2", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "syn:wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi syn:fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "NOT wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi NOT fi", "sow", "false")
        , "/response/numFound==0"
    );

    assertJQ(req("df", "syn", "q", "wi fi AND ATM", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "ATM AND wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi && ATM", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "ATM && wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "(wi fi) AND ATM", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "ATM AND (wi fi)", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "(wi fi) && ATM", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "ATM && (wi fi)", "sow", "false")
        , "/response/numFound==1"
    );

    assertJQ(req("df", "syn", "q", "wi fi OR NotThereAtAll", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "NotThereAtAll OR wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi || NotThereAtAll", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "NotThereAtAll || wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "(wi fi) OR NotThereAtAll", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "NotThereAtAll OR (wi fi)", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "(wi fi) || NotThereAtAll", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "NotThereAtAll || (wi fi)", "sow", "false")
        , "/response/numFound==1"
    );

    assertJQ(req("df", "syn", "q", "\"wi\" fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi \"fi\"", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "(wi) fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi (fi)", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "/wi/ fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi /fi/", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "(wi fi)", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "+(wi fi)", "sow", "false")
        , "/response/numFound==1"
    );

    @SuppressWarnings({"rawtypes"})
    Map all = (Map) Utils.fromJSONString(h.query(req("q", "*:*", "rows", "0", "wt", "json")));
    int totalDocs = Integer.parseInt(((Map)all.get("response")).get("numFound").toString());
    int allDocsExceptOne = totalDocs - 1;

    assertJQ(req("df", "syn", "q", "-(wi fi)", "sow", "false")
        , "/response/numFound==" + allDocsExceptOne  // one doc contains "wifi" in the syn field
    );
    assertJQ(req("df", "syn", "q", "!(wi fi)", "sow", "false")
        , "/response/numFound==" + allDocsExceptOne  // one doc contains "wifi" in the syn field
    );
    assertJQ(req("df", "syn", "q", "NOT (wi fi)", "sow", "false")
        , "/response/numFound==" + allDocsExceptOne  // one doc contains "wifi" in the syn field
    );
    assertJQ(req("df", "syn", "q", "(wi fi)^2", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "(wi fi)^=2", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "syn:(wi fi)", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "+ATM wi fi", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "-ATM wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "-NotThereAtAll wi fi", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "!ATM wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "!NotThereAtAll wi fi", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "NOT ATM wi fi", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "NOT NotThereAtAll wi fi", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "AT* wi fi", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "AT? wi fi", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "\"ATM\" wi fi", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "wi fi +ATM", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "wi fi -ATM", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi -NotThereAtAll", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "wi fi !ATM", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi !NotThereAtAll", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "wi fi NOT ATM", "sow", "false")
        , "/response/numFound==0"
    );
    assertJQ(req("df", "syn", "q", "wi fi NOT NotThereAtAll", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "wi fi AT*", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "wi fi AT?", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "wi fi \"ATM\"", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "\"wi fi\"~2", "sow", "false")
        , "/response/numFound==1"
    );
    assertJQ(req("df", "syn", "q", "syn:\"wi fi\"", "sow", "false")
        , "/response/numFound==1"
    );
  }

