  @Test
  public void testEmptyCollection() throws Exception {
    // group_s is docValues=false and group_dv_s is docValues=true
    String group = (random().nextBoolean() ? "group_s" : "group_s_dv");

    // min-or-max is for CollapsingScoreCollector vs. CollapsingFieldValueCollector
    String optional_min_or_max = (random().nextBoolean() ? "" : (random().nextBoolean() ? "min=field(test_i)" : "max=field(test_i)"));
    
    ModifiableSolrParams params = new ModifiableSolrParams();
    params.add("q", "*:*");
    params.add("fq", "{!collapse field="+group+" "+optional_min_or_max+"}");
    assertQ(req(params), "*[count(//doc)=0]");

    // if a field is uninvertible=false, it should behave the same as a field that is indexed=false
    // this is currently ok on fields that don't exist on any docs in the index
    for (String f : Arrays.asList("not_indexed_sS", "indexed_s_not_uninvert")) {
      for (String hint : Arrays.asList("", " hint=top_fc")) {
        SolrException e = expectThrows(SolrException.class,
            () -> h.query(req("q", "*:*", "fq", "{!collapse field="+f + hint +"}")));
        assertEquals(SolrException.ErrorCode.BAD_REQUEST.code, e.code());
        assertTrue("unexpected Message: " + e.getMessage(),
            e.getMessage().contains("Collapsing field '" + f + "' " +
                "should be either docValues enabled or indexed with uninvertible enabled"));
      }
    }
  }

