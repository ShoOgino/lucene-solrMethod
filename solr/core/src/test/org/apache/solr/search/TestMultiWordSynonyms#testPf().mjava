  @Test
  public void testPf() throws Exception {
    // test phrase fields including pf2 pf3 and phrase slop
    // same as edismax test, but "bar" is synonym for "tropical cyclone" here
    assertU(adoc("id", "10", "text", "foo bar a b c", "boost_d", "1.0"));
    assertU(adoc("id", "11", "text", "foo a bar b c", "boost_d", "2.0"));
    assertU(adoc("id", "12", "text", "foo a b bar c", "boost_d", "3.0"));
    assertU(adoc("id", "13", "text", "foo a b c bar", "boost_d", "4.0"));
    assertU(commit());

    assertQ("default order assumption wrong",
        req("q", "foo bar",
            "qf", "text",
            "bf", "boost_d",
            "fl", "score,*",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='13']",
        "//doc[2]/str[@name='id'][.='12']",
        "//doc[3]/str[@name='id'][.='11']",
        "//doc[4]/str[@name='id'][.='10']");

    assertQ("default order assumption wrong",
        req("q", "foo tropical cyclone",
            "qf", "text",
            "bf", "boost_d",
            "fl", "score,*",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='13']",
        "//doc[2]/str[@name='id'][.='12']",
        "//doc[3]/str[@name='id'][.='11']",
        "//doc[4]/str[@name='id'][.='10']");

    assertQ("pf not working",
        req("q", "foo bar",
            "qf", "text",
            "pf", "text^10",
            "fl", "score,*",
            "bf", "boost_d",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='10']");

    assertQ("pf not working",
        req("q", "foo tropical cyclone",
            "qf", "text",
            "pf", "text^10",
            "fl", "score,*",
            "bf", "boost_d",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='10']");

    assertQ("pf2 not working",
        req("q", "foo bar",
            "qf", "text",
            "pf2", "text^10",
            "fl", "score,*",
            "bf", "boost_d",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='10']");

    assertQ("pf3 not working",
        req("q", "a b bar",
            "qf", "text",
            "pf3", "text^10",
            "fl", "score,*",
            "bf", "boost_d",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='12']");

    assertQ("pf3 not working",
        req("q", "a b tropical cyclone",
            "qf", "text",
            "pf3", "text^10",
            "fl", "score,*",
            "bf", "boost_d",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='12']");

    assertQ("ps not working for pf2",
        req("q", "bar foo",
            "qf", "text",
            "pf2", "text^10",
            "ps", "2",
            "fl", "score,*",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='10']");

    assertQ("ps not working for pf2",
        req("q", "tropical cyclone foo",
            "qf", "text",
            "pf2", "text^10",
            "ps", "2",
            "fl", "score,*",
            "defType", "edismax"),
        "//doc[1]/str[@name='id'][.='10']");
  }

