  @BeforeClass
  public static void initManagedSchemaCore() throws Exception {
    // This testing approach means no schema file or per-test temp solr-home!
    System.setProperty("managed.schema.mutable", "true");
    System.setProperty("managed.schema.resourceName", "schema-one-field-no-dynamic-field-unique-key.xml");
    System.setProperty("enable.update.log", "false");
    System.setProperty("documentCache.enabled", "true");
    System.setProperty("enableLazyFieldLoading", "true");

    initCore("solrconfig-managed-schema.xml", "ignoredSchemaName?");

    // TODO SOLR-10229 will make this easier
    boolean PERSIST_FALSE = false; // don't write to test resource dir
    IndexSchema schema = h.getCore().getLatestSchema();
    schema = schema.addFieldTypes(Collections.singletonList(
        schema.newFieldType("textType", "solr.TextField", // redundant; TODO improve api
            map("name", "textType",   "class", "solr.TextField",
                "analyzer", map("class", "org.apache.lucene.analysis.standard.StandardAnalyzer")))),
        PERSIST_FALSE);
    schema = schema.addFields(Arrays.asList(
        schema.newField(LAZY_FIELD, "textType", map()),
        schema.newField(BIG_FIELD, "textType", map("large", true))),
        Collections.emptyMap(),
        PERSIST_FALSE);

    h.getCore().setLatestSchema(schema);
  }

