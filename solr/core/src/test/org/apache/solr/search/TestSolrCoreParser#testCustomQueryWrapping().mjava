  // test custom queries being wrapped in a Query or SpanQuery
  public void testCustomQueryWrapping() throws IOException, ParserException {
    final boolean span = random().nextBoolean();
    // the custom queries
    final String fieldName = "contents";
    final String[] randomTerms = new String[] {"bumble", "honey", "solitary"};
    final String randomQuery = composeChooseOneWordQueryXml(fieldName, randomTerms);
    final String apacheLuceneSolr = "<ApacheLuceneSolr fieldName='"+fieldName+"'/>";
    // the wrapping query
    final String parentQuery = (span ? "SpanOr" : "BooleanQuery");
    final String subQueryPrefix = (span ? "" : "<Clause occurs='must'>");
    final String subQuerySuffix = (span ? "" : "</Clause>");
    final String xml = "<"+parentQuery+">"
        + subQueryPrefix+randomQuery+subQuerySuffix
        + subQueryPrefix+apacheLuceneSolr+subQuerySuffix
        + "</"+parentQuery+">";
    // the test
    final Query query = parseXmlString(xml);
    if (span) {
      assertTrue(unwrapSpanBoostQuery(query) instanceof SpanOrQuery);
      final SpanOrQuery soq = (SpanOrQuery)unwrapSpanBoostQuery(query);
      assertEquals(2, soq.getClauses().length);
      checkChooseOneWordQuery(span, soq.getClauses()[0], fieldName, randomTerms);
      checkApacheLuceneSolr(soq.getClauses()[1], fieldName);
    } else {
      assertTrue(query instanceof BooleanQuery);
      final BooleanQuery bq = (BooleanQuery)query;
      assertEquals(2, bq.clauses().size());
      checkChooseOneWordQuery(span, bq.clauses().get(0).getQuery(), fieldName, randomTerms);
      checkApacheLuceneSolr(bq.clauses().get(1).getQuery(), fieldName);
    }
  }

