  public void doFilterTest(IndexReader reader) throws IOException {
    ReaderContext topLevelContext = reader.getTopReaderContext();
    OpenBitSet bs = getRandomSet(reader.maxDoc(), rand.nextInt(reader.maxDoc()+1));
    DocSet a = new BitDocSet(bs);
    DocSet b = getIntDocSet(bs);

    Filter fa = a.getTopFilter();
    Filter fb = b.getTopFilter();

    /*** top level filters are no longer supported
    // test top-level
    DocIdSet da = fa.getDocIdSet(topLevelContext);
    DocIdSet db = fb.getDocIdSet(topLevelContext);
    doTestIteratorEqual(da, db);
    ***/

    DocIdSet da;
    DocIdSet db;

    // first test in-sequence sub readers
    for (AtomicReaderContext readerContext : ReaderUtil.leaves(topLevelContext)) {
      da = fa.getDocIdSet(readerContext, null);
      db = fb.getDocIdSet(readerContext, null);
      doTestIteratorEqual(da, db);
    }  

    AtomicReaderContext[] leaves = ReaderUtil.leaves(topLevelContext);
    int nReaders = leaves.length;
    // now test out-of-sequence sub readers
    for (int i=0; i<nReaders; i++) {
      AtomicReaderContext readerContext = leaves[rand.nextInt(nReaders)];
      da = fa.getDocIdSet(readerContext, null);
      db = fb.getDocIdSet(readerContext, null);
      doTestIteratorEqual(da, db);
    }
  }

