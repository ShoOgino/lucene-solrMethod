  private static void doParamRefDslTest(Client client) throws Exception {
    // referencing in dsl                //nestedqp
    client.testJQ( params("json","{query: {query:  {param:'ref1'}}}", "ref1","{!field f=cat_s}A")
        , "response/numFound==2"
    );   
    // referencing json string param
    client.testJQ( params("json", random().nextBoolean()  ? 
            "{query:{query:{param:'ref1'}}}"  // nestedqp
           : "{query: {query: {query:{param:'ref1'}}}}",  // nestedqp, v local param  
          "json",random().nextBoolean() 
              ? "{params:{ref1:'{!field f=cat_s}A'}}" // string param  
              : "{queries:{ref1:{field:{f:cat_s,query:A}}}}" ) // qdsl
        , "response/numFound==2"
    );
    {                                                     // shortest top level ref
      final ModifiableSolrParams params = params("json","{query:{param:'ref1'}}");
      if (random().nextBoolean()) {
        params.add("ref1","cat_s:A"); // either to plain string
      } else {
        params.add("json","{queries:{ref1:{field:{f:cat_s,query:A}}}}");// or to qdsl
      }
      client.testJQ( params, "response/numFound==2");
    }  // ref in bool must
    client.testJQ( params("json","{query:{bool: {must:[{param:fq1},{param:fq2}]}}}",
        "json","{params:{fq1:'cat_s:A', fq2:'where_s:NY'}}", "json.fields", "id")
        , "response/docs==[{id:'1'}]"
    );// referencing dsl&strings from filters objs&array
    client.testJQ( params("json.filter","{param:fq1}","json.filter","{param:fq2}",
        "json", random().nextBoolean() ?
             "{queries:{fq1:{lucene:{query:'cat_s:A'}}, fq2:{lucene:{query:'where_s:NY'}}}}" : 
             "{params:{fq1:'cat_s:A', fq2:'where_s:NY'}}", 
        "json.fields", "id", "q", "*:*")
        , "response/docs==[{id:'1'}]"
    );
  }

