  public void testMultiValuedBucketReHashing() throws Exception {
    Client client = Client.localClient();
    client.deleteByQuery("*:*", null);
    // we want a domain with a small number of documents, and more facet (point) values then docs so
    // that we force dvhash to increase the number of slots via resize...
    // (NOTE: normal resizing won't happen w/o at least 1024 slots, but test static overrides this to '2')
    client.add(sdoc("id", "1",
                    "f_sd", "qqq",
                    "f_ids", "4", "f_ids", "2", "f_ids", "999",
                    "x_ids", "3", "x_ids", "5", "x_ids", "7",
                    "z_ids", "42"), null);
    client.add(sdoc("id", "2",
                    "f_sd", "nnn",
                    "f_ids", "44", "f_ids", "22", "f_ids", "999",
                    "x_ids", "33", "x_ids", "55", "x_ids", "77",
                    "z_ids", "666"), null);
    client.add(sdoc("id", "3",
                    "f_sd", "ggg",
                    "f_ids", "444", "f_ids", "222", "f_ids", "999",
                    "x_ids", "333", "x_ids", "555", "x_ids", "777",
                    "z_ids", "1010101"), null);
    client.commit();

    // faceting on a multivalued point field sorting on a stat...
    assertJQ(req("rows", "0", "q", "id:[1 TO 2]", "json.facet"
                 , "{ f : { type: terms, field: f_ids, limit: 1, sort: 'x desc', "
                 + "        facet: { x : 'sum(x_ids)', z : 'min(z_ids)' } } }")
             , "response/numFound==2"
             , "facets/count==2"
             , "facets/f=={buckets:[{ val:999, count:2, x:180.0, z:42 }]}"
             );
  }

