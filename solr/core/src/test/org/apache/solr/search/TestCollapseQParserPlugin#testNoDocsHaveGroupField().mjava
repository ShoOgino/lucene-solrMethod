  public void testNoDocsHaveGroupField() throws Exception {
    // as unlikely as this test seems, it's important for the possibility that a segment exists w/o
    // any live docs that have DocValues for the group field -- ie: every doc in segment is in null group.
    
    assertU(adoc("id", "1", "group_s", "group1", "test_i", "5", "test_l", "10"));
    assertU(commit());
    assertU(adoc("id", "2", "group_s", "group1", "test_i", "5", "test_l", "1000"));
    assertU(adoc("id", "3", "group_s", "group1", "test_i", "5", "test_l", "1000"));
    assertU(adoc("id", "4", "group_s", "group1", "test_i", "10", "test_l", "100"));
    //
    assertU(adoc("id", "5", "group_s", "group2", "test_i", "5", "test_l", "10", "term_s", "YYYY"));
    assertU(commit());
    assertU(adoc("id", "6", "group_s", "group2", "test_i", "5", "test_l","1000"));
    assertU(adoc("id", "7", "group_s", "group2", "test_i", "5", "test_l","1000", "term_s", "XXXX"));
    assertU(adoc("id", "8", "group_s", "group2", "test_i", "10","test_l", "100"));
    assertU(commit());
    
    // none of these grouping fields are in any doc
    for (String group : new String[] {
        "field=bogus_s", "field=bogus_s_dv",
        "field=bogus_s hint=top_fc", // alternative docvalues codepath w/ hint
        "field=bogus_s_dv hint=top_fc", // alternative docvalues codepath w/ hint
        "field=bogus_i", "field=bogus_tf" }) {
      
      // for any of these selectors, behavior of these checks should be consistent
      for (String selector : new String[] {
          "", " sort='score desc' ",
          " min=test_i ", " max=test_i ", " sort='test_i asc' ",  " sort='test_i desc' ",
          " min=test_f ", " max=test_f ", " sort='test_f asc' ",  " sort='test_f desc' ",
          " sort='group_s asc' ",  " sort='group_s desc' ",
          // fields that don't exist
          " min=bogus_sort_i ", " max=bogus_sort_i ",
          " sort='bogus_sort_i asc' ",  " sort='bogus_sort_i desc' ",
          " sort='bogus_sort_s asc' ",  " sort='bogus_sort_s desc' ",
        }) {
          
          
        ModifiableSolrParams params = null;

        // w/default nullPolicy, no groups found
        params = new ModifiableSolrParams();
        params.add("q", "*:*");
        params.add("sort", "id_i desc");
        params.add("fq", "{!collapse "+group+" "+selector+"}");
        assertQ(req(params), "*[count(//doc)=0]");

        // w/nullPolicy=expand, every doc found
        params = new ModifiableSolrParams();
        params.add("q", "*:*");
        params.add("sort", "id_i desc");
        params.add("fq", "{!collapse field="+group+" nullPolicy=expand "+selector+"}");
        assertQ(req(params)
                , "*[count(//doc)=8]"
                ,"//result/doc[1]/str[@name='id'][.='8']"
                ,"//result/doc[2]/str[@name='id'][.='7']"
                ,"//result/doc[3]/str[@name='id'][.='6']"
                ,"//result/doc[4]/str[@name='id'][.='5']"
                ,"//result/doc[5]/str[@name='id'][.='4']"
                ,"//result/doc[6]/str[@name='id'][.='3']"
                ,"//result/doc[7]/str[@name='id'][.='2']"
                ,"//result/doc[8]/str[@name='id'][.='1']"
                );

        
      }
    }
  }

