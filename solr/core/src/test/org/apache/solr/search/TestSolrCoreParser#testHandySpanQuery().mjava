  // test custom query (HandyQueryBuilder) wrapping a SpanQuery
  public void testHandySpanQuery() throws IOException, ParserException {
    final String lhsXml = "<SpanOr fieldName='contents'>"
        + "<SpanTerm>rain</SpanTerm>"
        + "<SpanTerm>spain</SpanTerm>"
        + "<SpanTerm>plain</SpanTerm>"
        + "</SpanOr>";
    final String rhsXml = "<SpanNear fieldName='contents' slop='2' inOrder='true'>"
        + "<SpanTerm>sunny</SpanTerm>"
        + "<SpanTerm>sky</SpanTerm>"
        + "</SpanNear>";
    final Query query = parseHandyQuery(lhsXml, rhsXml);
    final BooleanQuery bq = (BooleanQuery)query;
    assertEquals(2, bq.clauses().size());
    for (int ii=0; ii<bq.clauses().size(); ++ii) {
      final Query clauseQuery = bq.clauses().get(ii).getQuery();
      switch (ii) {
        case 0:
          assertTrue(unwrapSpanBoostQuery(clauseQuery) instanceof SpanOrQuery);
          break;
        case 1:
          assertTrue(unwrapSpanBoostQuery(clauseQuery) instanceof SpanNearQuery);
          break;
        default:
          fail("unexpected clause index "+ii);
      }
    }
  }

