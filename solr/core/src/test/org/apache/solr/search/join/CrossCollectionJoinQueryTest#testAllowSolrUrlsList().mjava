  @Test
  public void testAllowSolrUrlsList() throws Exception {
    setupIndexes(false);

    // programmatically add the current jetty solr url to the allowSolrUrls property in the solrconfig.xml
    int i = 0;
    for (JettySolrRunner runner : cluster.getJettySolrRunners()) {
      i++;
      System.setProperty("test.ccjoin.solr.url." + i, runner.getBaseUrl().toString());
    }
    try {
      // now we need to re-upload our config , now that we know a valid solr url for the cluster.
      CloudSolrClient client = cluster.getSolrClient();
      ((ZkClientClusterStateProvider) client.getClusterStateProvider()).uploadConfig(configset("ccjoin"), "ccjoin");
      // reload the cores with the updated allowSolrUrls config.
      CollectionAdminRequest.Reload.reloadCollection("products").process(client);
      CollectionAdminRequest.Reload.reloadCollection("parts").process(client);

      final ModifiableSolrParams params = new ModifiableSolrParams();
      //  a bogus solrUrl
      params.add("q", "");
      params.add("rows", "0");

      // we expect an exception because bogus url isn't valid.
      try {
        // This should throw an exception.
        // verify the join plugin definition has the current valid urls and works.
        testCcJoinQuery(String.format(Locale.ROOT,
            "{!join method=crossCollection solrUrl=\"%s\" fromIndex=products from=product_id_i to=product_id_i}size_s:M",
            "http://bogus.example.com:8983/solr"),
            true);
        fail("The query invovling bogus.example.com should not succeed");
      } catch (Exception e) {
        // should get here.
        String message = e.getMessage();
        assertTrue("message was " + message, message.contains("SyntaxError: Solr URL was not in allowSolrUrls list"));
      }

      // verify the join plugin definition has the current valid urls and works.
      testCcJoinQuery(String.format(Locale.ROOT,
          "{!join method=crossCollection solrUrl=\"%s\" fromIndex=products from=product_id_i to=product_id_i}size_s:M",
          getSolrUrl()),
          true);

    } finally {
      for (JettySolrRunner runner : cluster.getJettySolrRunners()) {
        i++;
        System.getProperties().remove("test.ccjoin.solr.url." + i);
      }
    }
  }

