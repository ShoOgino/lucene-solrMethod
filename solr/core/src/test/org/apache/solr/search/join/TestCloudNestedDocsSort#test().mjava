  @Test 
  public void test() throws SolrServerException, IOException {
    final boolean asc = random().nextBoolean();
    final String dir = asc ? "asc": "desc";
    final String parentFilter = "+parentFilter_s:("+matchingParent+" "+anyValsSpaceDelim(2)+")^=0";
    String childFilter = "+childFilter_s:("+matchingChild+" "+anyValsSpaceDelim(4)+")^=0";
    final String fl = "id,type_s,parent_id_s1,val_s1,score,parentFilter_s,childFilter_s,parentTie_s1";
    String sortClause = "val_s1 "+dir+", "+"parent_id_s1 "+ascDesc();
    if(rarely()) {
      sortClause ="parentTie_s1 "+ascDesc()+","+sortClause;
    }
    final SolrQuery q = new SolrQuery("q", "+type_s:child^=0 "+parentFilter+" "+
          childFilter ,
        "sort", sortClause, 
        "rows", ""+maxDocs,
        "fl",fl);

    final QueryResponse children = client.query(q);
    
    final SolrQuery bjq = random().nextBoolean() ? 
         new SolrQuery(// top level bjq
           "q", "{!parent which=type_s:parent}(+type_s:child^=0 "+parentFilter+" "+ childFilter+")",
           "sort", sortClause.replace("val_s1", "childfield(val_s1)"),
           "rows", ""+maxDocs, "fl", fl)
         :
        new SolrQuery(// same bjq as a subordinate clause
           "q", "+type_s:parent "+parentFilter+" +{!v=$parentcaluse}",
           "parentcaluse","{!parent which=type_s:parent v='"+(childFilter).replace("+", "")+"'}",
           "sort", sortClause.replace("val_s1", "childfield(val_s1,$parentcaluse)"),
           "rows", ""+maxDocs, "fl", fl);

    final QueryResponse parents = client.query(bjq);
    
    Set<String> parentIds = new LinkedHashSet<>();
    assertTrue("it can never be empty for sure", parents.getResults().size()>0);
    for(Iterator<SolrDocument> parentIter = parents.getResults().iterator(); parentIter.hasNext();) {
      for (SolrDocument child : children.getResults()) {
        assertEquals("child", child.getFirstValue("type_s"));
        final String parentId = (String) child.getFirstValue("parent_id_s1");
        if( parentIds.add(parentId) ) { // in children the next parent appears, it should be next at parents 
          final SolrDocument parent = parentIter.next();
          assertEquals("parent", parent.getFirstValue("type_s"));
          final String actParentId = ""+ parent.get("id");
          if (!actParentId.equals(parentId)) {
            final String chDump = children.toString().replace("SolrDocument","\nSolrDocument");
            System.out.println("\n\n"+chDump+"\n\n");
            System.out.println("\n\n"+parents.toString().replace("SolrDocument","\nSolrDocument")
                +"\n\n");
          }
          assertEquals(""+child+"\n"+parent,actParentId, parentId);
        }
      }
    }

    
  }

