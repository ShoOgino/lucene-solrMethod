  @BeforeClass
  public static void setupCluster() throws Exception {
    CurrencyFieldTypeTest.assumeCurrencySupport("USD", "EUR", "MXN", "GBP", "JPY", "NOK");
    FIELD = usually() ? "amount_CFT" : "amount";
    
    final int numShards = TestUtil.nextInt(random(),1,5);
    final int numReplicas = 1;
    final int nodeCount = numShards * numReplicas;

    configureCluster(nodeCount)
      .addConfig(CONF, Paths.get(TEST_HOME(), "collection1", "conf"))
      .configure();

    assertEquals(0, (CollectionAdminRequest.createCollection(COLLECTION, CONF, numShards, numReplicas)
                     .setProperties(Collections.singletonMap(CoreAdminParams.CONFIG, "solrconfig-minimal.xml"))
                     .process(cluster.getSolrClient())).getStatus());
    
    cluster.getSolrClient().setDefaultCollection(COLLECTION);
    
    for (int id = 0; id < NUM_DOCS; id++) { // we're indexing each Currency value in 3 docs, each with a diff 'x_s' field value
      // use modulo to pick the values, so we don't add the docs in strict order of either VALUES of STR_VALS
      // (that way if we want ot filter by id later, it's an independent variable)
      final String x = STR_VALS.get(id % STR_VALS.size());
      final String val = VALUES.get(id % VALUES.size());
      assertEquals(0, (new UpdateRequest().add(sdoc("id", "" + id,
                                                    "x_s", x,
                                                    FIELD, val))
                       ).process(cluster.getSolrClient()).getStatus());
      
    }
    assertEquals(0, cluster.getSolrClient().commit().getStatus());
  }

