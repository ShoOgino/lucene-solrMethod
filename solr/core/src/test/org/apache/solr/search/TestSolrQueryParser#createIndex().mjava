  public static void createIndex() {
    String v;
    v = "how now brown cow";
    assertU(adoc("id", "1", "text", v, "text_np", v, "foo_i","11"));
    v = "now cow";
    assertU(adoc("id", "2", "text", v, "text_np", v, "foo_i","12"));
    assertU(adoc("id", "3", "foo_s", "a ' \" \\ {! ) } ( { z"));  // A value filled with special chars

    assertU(adoc("id", "10", "qqq_s", "X"));
    assertU(adoc("id", "11", "www_s", "X"));
    assertU(adoc("id", "12", "eee_s", "X"));
    assertU(adoc("id", "13", "eee_s", "'balance'", "rrr_s", "/leading_slash"));

    assertU(adoc("id", "20", "syn", "wifi ATM"));

    { // make a doc that has a value in *lots* of fields that no other doc has
      SolrInputDocument doc = sdoc("id", "999");
      
      // numbers...
      for (String t : Arrays.asList("i", "l", "f", "d")) { 
        for (String s : Arrays.asList("", "s", "_dv", "s_dv", "_dvo")) {
          final String f = "has_val_" + t + s;
          HAS_VAL_FIELDS.add(f);
          doc.addField(f, "42");
        }
      }
      // boolean...
      HAS_VAL_FIELDS.add("has_val_b");
      doc.addField("has_val_b", "false");
      // dates (and strings/text -- they don't care about the format)...
      for (String s : Arrays.asList("dt", "s", "s1", "t")) {
        final String f = "has_val_" + s;
        HAS_VAL_FIELDS.add(f);
        doc.addField(f, "2019-01-12T00:00:00Z");
      }
      assertU(adoc(doc));
    }
            
    assertU(adoc("id", "30", "shingle23", "A B X D E"));

    assertU(commit());
  }

