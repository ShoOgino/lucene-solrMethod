  public void testUniqueBlock() throws Exception {
    final Client client = Client.localClient();
    ModifiableSolrParams p = params("rows","0");

    // unique block using field and query logic
    client.testJQ(params(p, "q", "{!parent tag=top which=type_s:book v=$childquery}"
        , "childquery", "comment_t:*"
        , "fl", "id", "fl" , "title_t"
        , "root", "_root_"
        , "parentQuery", "type_s:book"
        , "json.facet", "{" +
            "  types: {" +
            "    domain: { blockChildren:\"type_s:book\"" +
            "            }," +
            "    type:terms," +
            "    field:type_s," +
            "    limit:-1," +
            "    facet: {" +
            "           in_books1: \"uniqueBlock(_root_)\"," + // field logic
            "           in_books2: \"uniqueBlock($root)\"," + // field reference logic
            "           via_query1:\"uniqueBlock({!v=type_s:book})\", " + // query logic
            "           via_query2:\"uniqueBlock({!v=$parentQuery})\" ," + // query reference logic
            "           partial_query:\"uniqueBlock({!v=cat_s:fantasy})\" ," + // first doc hit only, never count afterwards
            "           query_no_match:\"uniqueBlock({!v=cat_s:horor})\" }" +
            "  }" +
            "}" )

        , "response=={numFound:2,start:0,docs:[]}"
        , "facets=={ count:2," +
            "types:{" +
            "    buckets:[ {val:review, count:5, in_books1:2, in_books2:2, "
            + "                                  via_query1:2, via_query2:2, "
            + "                                  partial_query:1, query_no_match:0} ]}" +
            "}"
    );
  }

