  @Test
  public void testMultiValued() throws Exception {
    // the response writers used to consult isMultiValued on the field
    // but this doesn't work when you alias a single valued field to
    // a multi valued field (the field value is copied first, then
    // if the type lookup is done again later, we get the wrong thing). SOLR-4036

    // score as psuedo field - precondition checks
    for (String name : new String[] {"score", "val_ss"}) {
      SchemaField sf = h.getCore().getSchema().getFieldOrNull(name);
      assertNotNull("Test depends on a (dynamic) field mtching '"+name+
                    "', schema was changed out from under us!",sf);
      assertTrue("Test depends on a multivalued dynamic field matching '"+name+
                 "', schema was changed out from under us!", sf.multiValued());
    }

    // score as psuedo field
    assertJQ(req("q","*:*", "fq", "id:42", "fl","id,score")
             ,"/response/docs==[{'id':'42','score':1.0}]");
    
    // single value int using alias that matches multivalued dynamic field
    assertJQ(req("q","id:42", "fl","val_ss:val_i, val2_ss:10")
        ,"/response/docs==[{'val2_ss':10,'val_ss':1}]"
    );

    assertJQ(req("qt","/get", "id","42", "fl","val_ss:val_i, val2_ss:10")
        ,"/doc=={'val2_ss':10,'val_ss':1}"
    );

    // also check real-time-get from transaction log
    assertU(adoc("id", "42", "val_i", "1", "ssto", "X", "subject", "aaa"));

    assertJQ(req("qt","/get", "id","42", "fl","val_ss:val_i, val2_ss:10")
        ,"/doc=={'val2_ss':10,'val_ss':1}"
    );

  }

