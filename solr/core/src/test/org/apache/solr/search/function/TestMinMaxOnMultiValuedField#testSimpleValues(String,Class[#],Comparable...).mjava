  /** Tests a single doc with a few explicit values, as well as testing exists with and w/o values */
  @SuppressWarnings({"unchecked"})
  protected void testSimpleValues(final String fieldname, final Class<?> clazz,
                                  @SuppressWarnings({"rawtypes"})final Comparable... vals) {
    clearIndex();
    
    assert 0 < vals.length;
    @SuppressWarnings({"rawtypes"})
    Comparable min = vals[0];
    @SuppressWarnings({"rawtypes"})
    Comparable max = vals[0];
    
    final String type = clazz.getName();
    final SolrInputDocument doc1 = sdoc("id", "1");
    for (@SuppressWarnings({"rawtypes"})Comparable v : vals) {
      doc1.addField(fieldname, v);
      if (0 < min.compareTo(v)) {
        min = v;
      }
      if (0 > max.compareTo(v)) {
        max = v;
      }
    }
    assertU(adoc(doc1));
    assertU(adoc(sdoc("id", "2"))); // fieldname doesn't exist
    assertU(commit());

    // doc with values
    assertQ(fieldname,
            req("q","id:1",
                "fl","exists_val_min:exists(field("+fieldname+",min))",
                "fl","exists_val_max:exists(field("+fieldname+",max))",
                "fl","val_min:field("+fieldname+",min)",
                "fl","val_max:field("+fieldname+",max)")
            ,"//*[@numFound='1']"
            ,"//bool[@name='exists_val_min']='true'"
            ,"//bool[@name='exists_val_max']='true'"
            ,"//"+type+"[@name='val_min']='"+min+"'"
            ,"//"+type+"[@name='val_max']='"+max+"'"
            );

    // doc w/o values
    assertQ(fieldname,
            req("q","id:2",
                "fl","exists_val_min:exists(field("+fieldname+",min))",
                "fl","exists_val_max:exists(field("+fieldname+",max))",
                "fl","val_min:field("+fieldname+",min)",
                "fl","val_max:field("+fieldname+",max)")
            ,"//*[@numFound='1']"
            ,"//bool[@name='exists_val_min']='false'"
            ,"//bool[@name='exists_val_max']='false'"
            ,"count(//"+type+"[@name='val_min'])=0"
            ,"count(//"+type+"[@name='val_max'])=0"
            );

    // sanity check no sort error when there are missing values
    for (String dir : new String[] { "asc", "desc" }) {
      for (String mm : new String[] { "min", "max" }) {
        for (String func : new String[] { "field("+fieldname+","+mm+")",
                                          "def(field("+fieldname+","+mm+"),42)",
                                          "sum(32,field("+fieldname+","+mm+"))"  }) {
          assertQ(fieldname,
                  req("q","*:*", 
                      "fl", "id",
                      "sort", func + " " + dir)
                  ,"//*[@numFound='2']"
                  // no assumptions about order for now, see bug: SOLR-8005
                  ,"//str[@name='id']='1'"
                  ,"//str[@name='id']='2'"
                  );
        }
      }
    }
  }

