  public void testAccountable() throws Exception {
    FastLRUCache<Query, DocSet> sc = new FastLRUCache<>();
    try {
      Map l = new HashMap();
      l.put("size", "100");
      l.put("initialSize", "10");
      l.put("autowarmCount", "25");
      CacheRegenerator cr = new NoOpRegenerator();
      Object o = sc.init(l, null, cr);
      SolrMetricsContext solrMetricsContext = new SolrMetricsContext(metricManager, registry, "foo");
      sc.initializeMetrics(solrMetricsContext, scope);
      sc.setState(SolrCache.State.LIVE);
      long initialBytes = sc.ramBytesUsed();
      WildcardQuery q = new WildcardQuery(new Term("foo", "bar"));
      DocSet docSet = new BitDocSet();
      sc.put(q, docSet);
      long updatedBytes = sc.ramBytesUsed();
      assertTrue(updatedBytes > initialBytes);
      long estimated = initialBytes + q.ramBytesUsed() + docSet.ramBytesUsed() + ConcurrentLRUCache.CacheEntry.BASE_RAM_BYTES_USED
          + RamUsageEstimator.HASHTABLE_RAM_BYTES_PER_ENTRY;
      assertEquals(estimated, updatedBytes);
      sc.clear();
      long clearedBytes = sc.ramBytesUsed();
      assertEquals(initialBytes, clearedBytes);
    } finally {
      sc.close();
    }
  }

