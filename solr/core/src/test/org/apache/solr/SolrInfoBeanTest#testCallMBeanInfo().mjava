  /**
   * Gets a list of everything we can find in the classpath and makes sure it has
   * a name, description, etc...
   */
  public void testCallMBeanInfo() throws Exception {
    List<Class> classes = new ArrayList<>();
    classes.addAll(getClassesForPackage(SearchHandler.class.getPackage().getName()));
    classes.addAll(getClassesForPackage(SearchComponent.class.getPackage().getName()));
    classes.addAll(getClassesForPackage(LukeRequestHandler.class.getPackage().getName()));
    classes.addAll(getClassesForPackage(DefaultSolrHighlighter.class.getPackage().getName()));
    classes.addAll(getClassesForPackage(LRUCache.class.getPackage().getName()));
   // System.out.println(classes);
    
    int checked = 0;
    SolrMetricManager metricManager = h.getCoreContainer().getMetricManager();
    String registry = h.getCore().getCoreMetricManager().getRegistryName();
    SolrMetricsContext solrMetricsContext = new SolrMetricsContext(metricManager, registry, "foo");
    String scope = TestUtil.randomSimpleString(random(), 2, 10);
    for( Class clazz : classes ) {
      if( SolrInfoBean.class.isAssignableFrom( clazz ) ) {
        try {
          SolrInfoBean info = (SolrInfoBean)clazz.getConstructor().newInstance();
          if (info instanceof SolrMetricProducer) {
            ((SolrMetricProducer)info).initializeMetrics(solrMetricsContext, scope);
          }
          
          //System.out.println( info.getClass() );
          assertNotNull( info.getClass().getCanonicalName(), info.getName() );
          assertNotNull( info.getClass().getCanonicalName(), info.getDescription() );
          assertNotNull( info.getClass().getCanonicalName(), info.getCategory() );
          
          if( info instanceof LRUCache ) {
            continue;
          }
          
          assertNotNull( info.toString() );
          checked++;
        }
        catch( ReflectiveOperationException ex ) {
          // expected...
          //System.out.println( "unable to initialize: "+clazz );
        }
      }
    }
    assertTrue( "there are at least 10 SolrInfoBean that should be found in the classpath, found " + checked, checked > 10 );
  }

