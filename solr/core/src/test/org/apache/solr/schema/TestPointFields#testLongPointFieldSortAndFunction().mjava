  @Test
  public void testLongPointFieldSortAndFunction() throws Exception {
    final SortedSet<String> regexToTest = dynFieldRegexesForType(LongPointField.class);
    final String[] vals = new String[]{ String.valueOf(Integer.MIN_VALUE), 
                                        "1", "2", "3", "4", "5", "6", "7", 
                                        String.valueOf(Integer.MAX_VALUE), String.valueOf(Long.MAX_VALUE)};
    
    for (String r : Arrays.asList("*_p_l", "*_p_l_dv", "*_p_l_dv_ns", "*_p_l_ni_dv",
                                  "*_p_l_ni_dv_ns", "*_p_l_ni_ns_dv")) {
      assertTrue(r, regexToTest.remove(r));
      doTestPointFieldSort(r.replace("*","number"), vals);
      // TODO: test some randomly generated (then sorted) arrays (with dups and/or missing values)

      doTestIntPointFunctionQuery(r.replace("*","number"), "long");
    }
    
    for (String r : Arrays.asList("*_p_l_ni", "*_p_l_ni_ns")) {
      assertTrue(r, regexToTest.remove(r));
      doTestPointFieldSortError(r.replace("*","number"), "w/o docValues", "4234");
      doTestPointFieldFunctionQueryError(r.replace("*","number"), "w/o docValues", "4234");
    }
    
    for (String r : Arrays.asList("*_p_l_mv", "*_p_l_ni_mv", "*_p_l_ni_mv_dv", "*_p_l_ni_dv_ns_mv",
                                  "*_p_l_ni_ns_mv", "*_p_l_dv_ns_mv", "*_p_l_mv_dv")) {
      assertTrue(r, regexToTest.remove(r));
      doTestPointFieldSortError(r.replace("*","number"), "multivalued", "4234");
      doTestPointFieldSortError(r.replace("*","number"), "multivalued", "4234", "66666666");
      doTestPointFieldFunctionQueryError(r.replace("*","number"), "multivalued", "4234");
      doTestPointFieldFunctionQueryError(r.replace("*","number"), "multivalued", "4234", "66666666");
    }
    
    assertEquals("Missing types in the test", Collections.<String>emptySet(), regexToTest);

  }

