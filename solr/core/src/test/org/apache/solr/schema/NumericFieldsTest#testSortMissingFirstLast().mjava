  @Test
  public void testSortMissingFirstLast() 
  {
    clearIndex();
    
    assertU(adoc("id", "M1" ));
    assertU(adoc( getDoc( "+4",  4 ) ));
    assertU(adoc( getDoc( "+5",  5 ) ));
    assertU(adoc( getDoc( "-3", -3 ) ));
    assertU(adoc("id", "M2" ));
    assertU(commit());

    // 'normal' sorting.  Missing Values are 0
    String suffix = "";
    for( String t : types ) {
      assertQ( "Sorting Asc: "+t+suffix,
          req("fl", "id", "q", "*:*", "sort", (t+suffix)+" asc" ),
              "//*[@numFound='5']",
              "//result/doc[1]/str[@name='id'][.='-3']",
              "//result/doc[2]/str[@name='id'][.='M1']",
              "//result/doc[3]/str[@name='id'][.='M2']",
              "//result/doc[4]/str[@name='id'][.='+4']",
              "//result/doc[5]/str[@name='id'][.='+5']"
      );
      
      assertQ( "Sorting Desc: "+t+suffix,
          req("fl", "id", "q", "*:*", "sort", (t+suffix)+" desc" ),
              "//*[@numFound='5']",
              "//result/doc[1]/str[@name='id'][.='+5']",
              "//result/doc[2]/str[@name='id'][.='+4']",
              "//result/doc[3]/str[@name='id'][.='M1']",
              "//result/doc[4]/str[@name='id'][.='M2']",
              "//result/doc[5]/str[@name='id'][.='-3']"
      );
    }
    
    
    // sortMissingLast = true 
    suffix = "_last";
    for( String t : types ) {
      assertQ( "Sorting Asc: "+t+suffix,
          req("fl", "id", "q", "*:*", "sort", (t+suffix)+" asc" ),
              "//*[@numFound='5']",
              "//result/doc[1]/str[@name='id'][.='-3']",
              "//result/doc[2]/str[@name='id'][.='+4']",
              "//result/doc[3]/str[@name='id'][.='+5']",
              "//result/doc[4]/str[@name='id'][.='M1']",
              "//result/doc[5]/str[@name='id'][.='M2']"
      );
      
      // This does not match
      assertQ( "Sorting Desc: "+t+suffix,
          req("fl", "id", "q", "*:*", "sort", (t+suffix)+" desc", "indent", "on" ),
              "//*[@numFound='5']",
              "//result/doc[1]/str[@name='id'][.='+5']",
              "//result/doc[2]/str[@name='id'][.='+4']",
              "//result/doc[3]/str[@name='id'][.='-3']",
              "//result/doc[4]/str[@name='id'][.='M1']",
              "//result/doc[5]/str[@name='id'][.='M2']"
      );
    }

    // sortMissingFirst = true 
    suffix = "_first";
    for( String t : types ) {
      assertQ( "Sorting Asc: "+t+suffix,
          req("fl", "id", "q", "*:*", "sort", (t+suffix)+" asc", "indent", "on" ),
              "//*[@numFound='5']",
              "//result/doc[1]/str[@name='id'][.='M1']",
              "//result/doc[2]/str[@name='id'][.='M2']",
              "//result/doc[3]/str[@name='id'][.='-3']",
              "//result/doc[4]/str[@name='id'][.='+4']",
              "//result/doc[5]/str[@name='id'][.='+5']"
      );
      
      // This does not match
      assertQ( "Sorting Desc: "+t+suffix,
          req("fl", "id", "q", "*:*", "sort", (t+suffix)+" desc", "indent", "on" ),
              "//*[@numFound='5']",
              "//result/doc[1]/str[@name='id'][.='M1']",
              "//result/doc[2]/str[@name='id'][.='M2']",
              "//result/doc[3]/str[@name='id'][.='+5']",
              "//result/doc[4]/str[@name='id'][.='+4']",
              "//result/doc[5]/str[@name='id'][.='-3']"
      );
    }
  }

