  public void testRankQParserQuery() throws IOException {
    assertU(adoc(
        "id", "1",
        "str_field", "foo",
        RANK_1, "1",
        RANK_2, "2"
        ));
    assertU(adoc(
        "id", "2",
        "str_field", "foo",
        RANK_1, "2",
        RANK_2, "1"
        ));
    assertU(commit());
    assertQ(req("q", "str_field:foo _query_:{!rank f='" + RANK_1 + "' function='log' scalingFactor='1'}"),
        "//*[@numFound='2']",
        "//result/doc[1]/str[@name='id'][.='2']",
        "//result/doc[2]/str[@name='id'][.='1']");
    
    assertQ(req("q", "str_field:foo _query_:{!rank f='" + RANK_2 + "' function='log' scalingFactor='1'}"),
        "//*[@numFound='2']",
        "//result/doc[1]/str[@name='id'][.='1']",
        "//result/doc[2]/str[@name='id'][.='2']");
    
    assertQ(req("q", "foo",
        "defType", "dismax",
        "qf", "str_field^10",
        "bq", "{!rank f='" + RANK_1 + "' function='log' scalingFactor='1'}"
        ),
        "//*[@numFound='2']",
        "//result/doc[1]/str[@name='id'][.='2']",
        "//result/doc[2]/str[@name='id'][.='1']");
    
    assertQ(req("q", "foo",
        "defType", "dismax",
        "qf", "str_field^10",
        "bq", "{!rank f='" + RANK_2 + "' function='log' scalingFactor='1'}"
        ),
        "//*[@numFound='2']",
        "//result/doc[1]/str[@name='id'][.='1']",
        "//result/doc[2]/str[@name='id'][.='2']");
  }

