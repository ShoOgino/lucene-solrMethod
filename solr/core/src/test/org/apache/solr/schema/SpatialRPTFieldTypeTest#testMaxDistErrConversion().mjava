  public void testMaxDistErrConversion() throws Exception {
    deleteCore();
    File managedSchemaFile = new File(tmpConfDir, "managed-schema");
    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema
    System.setProperty("managed.schema.mutable", "true");
    initCore("solrconfig-managed-schema.xml", "schema-one-field-no-dynamic-field.xml", tmpSolrHome.getPath());
    
    String fieldName = "new_text_field";
    assertNull("Field '" + fieldName + "' is present in the schema",
        h.getCore().getLatestSchema().getFieldOrNull(fieldName));
    
    IndexSchema oldSchema = h.getCore().getLatestSchema();
    
    SpatialRecursivePrefixTreeFieldType rptFieldType = new SpatialRecursivePrefixTreeFieldType();
    Map<String, String> rptMap = new HashMap<String,String>();

    rptFieldType.setTypeName("location_rpt");
    rptMap.put("geo", "true");

    // test km
    rptMap.put("distanceUnits", "kilometers");
    rptMap.put("maxDistErr", "0.001"); // 1 meter
    rptFieldType.init(oldSchema, rptMap);
    assertEquals(11, rptFieldType.grid.getMaxLevels());

    // test miles
    rptMap.put("distanceUnits", "miles");
    rptMap.put("maxDistErr", "0.001");
    rptFieldType.init(oldSchema, rptMap);
    assertEquals(10, rptFieldType.grid.getMaxLevels());

    // test degrees
    rptMap.put("distanceUnits", "degrees");
    rptMap.put("maxDistErr", "0.001");
    rptFieldType.init(oldSchema, rptMap);
    assertEquals(8, rptFieldType.grid.getMaxLevels());
  }

