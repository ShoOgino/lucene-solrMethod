  private void testMultiValuedDatePointFieldsAtomicUpdates(String field, String type) throws Exception {
    String date1 = "1995-01-10T10:59:10Z";
    String date2 = "1995-01-11T10:59:10Z";
    String date3 = "1995-01-12T10:59:10Z";
    assertU(adoc(sdoc("id", "1", field, date1)));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/arr[@name='" + field + "']/" + type + "[.='"+date1+"']",
        "count(//result/doc[1]/arr[@name='" + field + "']/" + type + ")=1");

    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("add", date2))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/arr[@name='" + field + "']/" + type + "[.='"+date1+"']",
        "//result/doc[1]/arr[@name='" + field + "']/" + type + "[.='"+date2+"']",
        "count(//result/doc[1]/arr[@name='" + field + "']/" + type + ")=2");

    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("remove", date1))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/arr[@name='" + field + "']/" + type + "[.='"+date2+"']",
        "count(//result/doc[1]/arr[@name='" + field + "']/" + type + ")=1");

    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("set", ImmutableList.of(date1, date2, date3)))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/arr[@name='" + field + "']/" + type + "[.='"+date1+"']",
        "//result/doc[1]/arr[@name='" + field + "']/" + type + "[.='"+date2+"']",
        "//result/doc[1]/arr[@name='" + field + "']/" + type + "[.='"+date3+"']",
        "count(//result/doc[1]/arr[@name='" + field + "']/" + type + ")=3");

    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("removeregex", ".*"))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "count(//result/doc[1]/arr[@name='" + field + "']/" + type + ")=0");

  }

