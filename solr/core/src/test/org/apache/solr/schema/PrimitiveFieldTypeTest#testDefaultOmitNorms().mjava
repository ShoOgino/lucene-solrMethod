  @SuppressWarnings("deprecation")
  @Test
  public void testDefaultOmitNorms() throws Exception {
    
    final List<Class<? extends FieldType>> types
      = Arrays.asList(TrieDateField.class, DatePointField.class,
                      TrieIntField.class, IntPointField.class,
                      TrieLongField.class, IntPointField.class,
                      TrieFloatField.class, FloatPointField.class,
                      TrieDoubleField.class, DoublePointField.class,
                      StrField.class, BoolField.class,
                      // Non-prims, omitNorms always defaults to false regardless of schema version...
                      TextField.class, BinaryField.class);
    
    // ***********************
    // With schema version 1.4:
    // ***********************
    schema = IndexSchemaFactory.buildIndexSchema(testConfHome + "schema12.xml", config);


    for (Class<? extends FieldType> clazz : types) {
      FieldType ft = clazz.newInstance();
      ft.init(schema, initMap);
      assertFalse(ft.getClass().getName(), ft.hasProperty(FieldType.OMIT_NORMS));
    }
    
    // ***********************
    // With schema version 1.5
    // ***********************
    schema = IndexSchemaFactory.buildIndexSchema(testConfHome + "schema15.xml", config);

    for (Class<? extends FieldType> clazz : types) {
      FieldType ft = clazz.newInstance();
      ft.init(schema, initMap);
      assertEquals(ft.getClass().getName(),
                   ft instanceof PrimitiveFieldType,
                   ft.hasProperty(FieldType.OMIT_NORMS));
    }
    
  }

