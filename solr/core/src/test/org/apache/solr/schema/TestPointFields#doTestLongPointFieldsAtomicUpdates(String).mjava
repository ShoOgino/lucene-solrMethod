  private void doTestLongPointFieldsAtomicUpdates(String field) throws Exception {
    long number1 = random().nextLong();
    long number2;
    BigInteger inc1;
    for ( ; ; ) {
      number2 = random().nextLong();
      inc1 = BigInteger.valueOf(number2).subtract(BigInteger.valueOf(number1));
      if (inc1.abs().compareTo(BigInteger.valueOf(Long.MAX_VALUE)) <= 0) {
        break;
      }
    }
    assertU(adoc(sdoc("id", "1", field, String.valueOf(number1))));
    assertU(commit());

    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("inc", inc1.longValueExact()))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/long[@name='" + field + "'][.='" + number2 + "']");

    long number3 = random().nextLong();
    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("set", number3))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/long[@name='" + field + "'][.='" + number3 + "']");
  }

