  private void doTestPointFieldSort(String field, String dvField, String[] arr) throws Exception {
    assert arr != null && arr.length == 10;
    for (int i = 0; i < arr.length; i++) {
      assertU(adoc("id", String.valueOf(i), dvField, String.valueOf(arr[i]), field, String.valueOf(arr[i])));
    }
    assertU(commit());
    assertTrue(h.getCore().getLatestSchema().getField(dvField).hasDocValues());
    assertTrue(h.getCore().getLatestSchema().getField(dvField).getType() instanceof PointField);
    assertQ(req("q", "*:*", "fl", "id", "sort", dvField + " desc"), 
        "//*[@numFound='10']",
        "//result/doc[1]/str[@name='id'][.='9']",
        "//result/doc[2]/str[@name='id'][.='8']",
        "//result/doc[3]/str[@name='id'][.='7']",
        "//result/doc[10]/str[@name='id'][.='0']");
    
    assertFalse(h.getCore().getLatestSchema().getField(field).hasDocValues());
    assertTrue(h.getCore().getLatestSchema().getField(field).getType() instanceof PointField);
    assertQEx("Expecting Exception", 
        "can not sort on a PointField without doc values: " + field, 
        req("q", "*:*", "fl", "id", "sort", field + " desc"), 
        SolrException.ErrorCode.BAD_REQUEST);
    
    //TODO: sort missing
  }

