  public void testInvalidJson() throws Exception {
    PreAnalyzedField paf = new PreAnalyzedField();
    paf.init(h.getCore().getLatestSchema(), Collections.emptyMap());
    Analyzer preAnalyzer = paf.getIndexAnalyzer();
    for (String s: invalidJson) {
      TokenStream stream = null;
      try {
        stream = preAnalyzer.tokenStream("dummy", s);
        stream.reset(); // exception should be triggered here.
        fail("should fail: '" + s + "'");
      } catch (Exception e) {
        // expected
      } finally {
        if (stream != null) {
          stream.close();
        }
      }
    }
    // make sure the analyzer can now handle properly formatted input
    TokenStream stream = preAnalyzer.tokenStream("dummy", validJson);
    CharTermAttribute termAttr = stream.addAttribute(CharTermAttribute.class);
    stream.reset();
    while (stream.incrementToken()) {
      assertFalse("zero-length token", termAttr.length() == 0);
    }
    stream.end();
    stream.close();
  }

