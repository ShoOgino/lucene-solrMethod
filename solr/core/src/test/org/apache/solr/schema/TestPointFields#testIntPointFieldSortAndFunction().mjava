  @Test
  public void testIntPointFieldSortAndFunction() throws Exception {

    final SortedSet<String> regexToTest = dynFieldRegexesForType(IntPointField.class);
    final String[] sequential = new String[]{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9"};
    
    for (String r : Arrays.asList("*_p_i", "*_p_i_dv", "*_p_i_dv_ns", "*_p_i_ni_dv",
                                  "*_p_i_ni_dv_ns", "*_p_i_ni_ns_dv")) {
      assertTrue(r, regexToTest.remove(r));
      doTestPointFieldSort(r.replace("*","number"), sequential);
      // TODO: test some randomly generated (then sorted) arrays (with dups and/or missing values)

      doTestIntPointFunctionQuery(r.replace("*","number"), "int");
    }
    
    for (String r : Arrays.asList("*_p_i_ni", "*_p_i_ni_ns")) {
      assertTrue(r, regexToTest.remove(r));
      doTestPointFieldSortError(r.replace("*","number"), "w/o docValues", "42");
      doTestPointFieldFunctionQueryError(r.replace("*","number"), "w/o docValues", "42");
    }
    
    for (String r : Arrays.asList("*_p_i_mv", "*_p_i_ni_mv", "*_p_i_ni_mv_dv", "*_p_i_ni_dv_ns_mv",
                                  "*_p_i_ni_ns_mv", "*_p_i_dv_ns_mv", "*_p_i_mv_dv")) {
      assertTrue(r, regexToTest.remove(r));
      doTestPointFieldSortError(r.replace("*","number"), "multivalued", "42");
      doTestPointFieldSortError(r.replace("*","number"), "multivalued", "42", "666");
      doTestPointFieldFunctionQueryError(r.replace("*","number"), "multivalued", "42");
      doTestPointFieldFunctionQueryError(r.replace("*","number"), "multivalued", "42", "666");
   }
    
    assertEquals("Missing types in the test", Collections.<String>emptySet(), regexToTest);
  }

