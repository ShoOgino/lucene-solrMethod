  @Test
  public void test() throws Exception {

    final int threadCount = 5;
    setupRestTestHarnesses();
    Thread[] threads = new Thread[threadCount];
    final List<List> collectErrors = Collections.synchronizedList(new ArrayList<>());

    for (int i = 0 ; i < threadCount ; i++) {
      final int finalI = i;
      threads[i] = new Thread(){
        @Override
        public void run() {
          ArrayList errs = new ArrayList();
          collectErrors.add(errs);
          try {
            invokeBulkAddCall(finalI, errs);
            invokeBulkReplaceCall(finalI, errs);
            invokeBulkDeleteCall(finalI, errs);
          } catch (Exception e) {
            e.printStackTrace();
          }
        }
      };

      threads[i].start();
    }

    for (Thread thread : threads) thread.join();

    boolean success = true;

    for (List e : collectErrors) {
      if (e != null &&  !e.isEmpty()) {
        success = false;
        log.error(e.toString());
      }
    }

    assertTrue(collectErrors.toString(), success);
  }

