  @Test
  public void testCopyFieldSchemaFieldSchemaFieldInt() {
    IllegalArgumentException e = expectThrows(IllegalArgumentException.class, () -> {
      new CopyField(null, new SchemaField("destination", new TextField()), 1000);
    });
    assertTrue(e.getLocalizedMessage().contains("can't be NULL"));

    e = expectThrows(IllegalArgumentException.class, () -> {
      new CopyField(new SchemaField("source", new TextField()), null, 1000);
    });
    assertTrue(e.getLocalizedMessage().contains("can't be NULL"));

    e = expectThrows(IllegalArgumentException.class, () -> {
      new CopyField(null, null, 1000);
    });
    assertTrue(e.getLocalizedMessage().contains("can't be NULL"));

    e = expectThrows(IllegalArgumentException.class, () -> {
      new CopyField(new SchemaField("source", new TextField()),
          new SchemaField("destination", new TextField()), -1000);
    });
    assertTrue(e.getLocalizedMessage().contains("can't have a negative value"));

    new CopyField(new SchemaField("source", new TextField()),
        new SchemaField("destination", new TextField()), CopyField.UNLIMITED);
  }

