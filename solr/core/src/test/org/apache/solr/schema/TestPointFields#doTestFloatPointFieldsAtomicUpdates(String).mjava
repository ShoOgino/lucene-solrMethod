  private void doTestFloatPointFieldsAtomicUpdates(String field) throws Exception {
    float number1 = getRandomFloats(1, false).get(0);
    float number2;
    double inc1;
    for ( ; ; ) {
      number2 = getRandomFloats(1, false).get(0);
      inc1 = (double)number2 - (double)number1;
      if (Math.abs(inc1) < (double)Float.MAX_VALUE) {
        number2 = number1 + (float)inc1;
        break;
      }
    }
    assertU(adoc(sdoc("id", "1", field, String.valueOf(number1))));
    assertU(commit());

    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("inc", (float)inc1))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/float[@name='" + field + "'][.='" + number2 + "']");

    float number3 = getRandomFloats(1, false).get(0);
    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("set", number3))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/float[@name='" + field + "'][.='" + number3 + "']");
  }

