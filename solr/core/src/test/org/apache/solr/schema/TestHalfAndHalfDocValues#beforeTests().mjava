  @BeforeClass
  public static void beforeTests() throws Exception {
    // we need consistent segments that aren't merged because we want to have
    // segments with and without docvalues
    systemSetPropertySolrTestsMergePolicyFactory(NoMergePolicyFactory.class.getName());

    // HACK: Don't use a RandomMergePolicy, but only use the mergePolicyFactory that we've just set
    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICYFACTORY, "true");
    System.setProperty(SYSTEM_PROPERTY_SOLR_TESTS_USEMERGEPOLICY, "false");

    initCore("solrconfig-basic.xml", "schema-docValues.xml");

    // sanity check our schema meets our expectations
    final IndexSchema schema = h.getCore().getLatestSchema();
    for (String f : new String[]{"floatdv", "intdv", "doubledv", "longdv", "datedv", "stringdv", "booldv"}) {
      final SchemaField sf = schema.getField(f);
      assertFalse(f + " is multiValued, test is useless, who changed the schema?",
          sf.multiValued());
      assertFalse(f + " is indexed, test is useless, who changed the schema?",
          sf.indexed());
      assertTrue(f + " has no docValues, test is useless, who changed the schema?",
          sf.hasDocValues());
    }
  }

