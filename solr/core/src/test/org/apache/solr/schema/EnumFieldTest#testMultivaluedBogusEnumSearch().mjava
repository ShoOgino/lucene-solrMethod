  @Test
  public void testMultivaluedBogusEnumSearch() throws Exception {
    assumeFalse("Skipping testing of EnumFieldType without docValues, which is unsupported.",
        System.getProperty("solr.tests.EnumFieldType").equals("solr.EnumFieldType")
            && System.getProperty("solr.tests.numeric.dv").equals("false"));

    clearIndex();

    assertU(adoc("id", "0", MV_FIELD_NAME, "Not Available", MV_FIELD_NAME, "Critical"));
    assertU(adoc("id", "1", MV_FIELD_NAME, "Low", MV_FIELD_NAME, "Not Available"));
    assertU(adoc("id", "2", MV_FIELD_NAME, "Medium", MV_FIELD_NAME, "Low"));
    assertU(adoc("id", "3", MV_FIELD_NAME, "High", MV_FIELD_NAME, "Medium"));
    assertU(adoc("id", "4", MV_FIELD_NAME, "Critical", MV_FIELD_NAME, "High"));

    // two docs w/o values
    for (int i = 8; i <= 9; i++) {
      assertU(adoc("id", "" + i));
    }

    assertU(commit());

    assertQ(req("fl", "" + MV_FIELD_NAME, "q", MV_FIELD_NAME + ":bla"),
        "//*[@numFound='0']");

    assertQ(req("fl", "" + MV_FIELD_NAME, "q", MV_FIELD_NAME + ":7"),
        "//*[@numFound='0']");

    assertQ(req("fl", "" + MV_FIELD_NAME, "q", MV_FIELD_NAME + ":\"-3\""),
        "//*[@numFound='0']");
  }

