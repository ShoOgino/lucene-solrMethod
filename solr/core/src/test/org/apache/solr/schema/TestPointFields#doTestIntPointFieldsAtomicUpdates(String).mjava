  private void doTestIntPointFieldsAtomicUpdates(String field) throws Exception {
    int number1 = random().nextInt();
    int number2;
    long inc1;
    for ( ; ; ) {
      number2 = random().nextInt();
      inc1 = number2 - number1;
      if (Math.abs(inc1) < (long)Integer.MAX_VALUE) {
        break;
      }
    }
    assertU(adoc(sdoc("id", "1", field, String.valueOf(number1))));
    assertU(commit());

    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("inc", (int)inc1))));
    assertU(commit());

    assertQ(req("q", "id:1"),
        "//result/doc[1]/int[@name='" + field + "'][.='" + number2 + "']");

    int number3 = random().nextInt();
    assertU(adoc(sdoc("id", "1", field, ImmutableMap.of("set", number3))));
    assertU(commit());
    
    assertQ(req("q", "id:1"),
        "//result/doc[1]/int[@name='" + field + "'][.='" + number3 + "']");
  }

