  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {
    deleteCore();
    File managedSchemaFile = new File(tmpConfDir, "managed-schema");
    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema
    System.setProperty("managed.schema.mutable", "true");
    initCore("solrconfig-managed-schema.xml", "schema-one-field-no-dynamic-field.xml", tmpSolrHome.getPath());

    String fieldName = "new_text_field";
    assertNull("Field '" + fieldName + "' is present in the schema",
        h.getCore().getLatestSchema().getFieldOrNull(fieldName));
    
    IndexSchema oldSchema = h.getCore().getLatestSchema();

    if (fieldType == null) {
      fieldType = new SpatialRecursivePrefixTreeFieldType();
    }
    Map<String, String> rptMap = new HashMap<String,String>();
    if(distanceUnits!=null)
      rptMap.put("distanceUnits", distanceUnits);
    if(geo!=null)
      rptMap.put("geo", geo);
    if(format!=null) {
      rptMap.put("format", format);
    }
    if (random().nextBoolean()) {
      // use Geo3D sometimes
      rptMap.put("spatialContextFactory", "Geo3D");
    }
    fieldType.init(oldSchema, rptMap);
    fieldType.setTypeName("location_rpt");
    SchemaField newField = new SchemaField("geo", fieldType, SchemaField.STORED | SchemaField.INDEXED | SchemaField.OMIT_NORMS | SchemaField.OMIT_TF_POSITIONS,
            null);
    IndexSchema newSchema = oldSchema.addField(newField);

    h.getCore().setLatestSchema(newSchema);

    assertU(delQ("*:*"));
  }

