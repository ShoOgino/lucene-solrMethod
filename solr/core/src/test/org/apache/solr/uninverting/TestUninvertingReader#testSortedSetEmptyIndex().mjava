  public void testSortedSetEmptyIndex() throws IOException {
    final Directory dir = newDirectory();
    final IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig(null));
    iw.close();
    
    final Map<String,Type> UNINVERT_MAP = new LinkedHashMap<String,Type>();
    for (Type t : EnumSet.allOf(Type.class)) {
      UNINVERT_MAP.put(t.name(), t);
    }

    final DirectoryReader ir = UninvertingReader.wrap(DirectoryReader.open(dir), UNINVERT_MAP);
    TestUtil.checkReader(ir);
    
    final LeafReader composite = SlowCompositeReaderWrapper.wrap(ir);
    TestUtil.checkReader(composite);
    
    for (String f : UNINVERT_MAP.keySet()) { 
      // check the leaves
      // (normally there are none for an empty index, so this is really just future
      // proofing in case that changes for some reason)
      for (LeafReaderContext rc : ir.leaves()) {
        final LeafReader ar = rc.reader();
        assertNull(f + ": Expected no doc values from empty index (leaf)",
                   ar.getSortedSetDocValues(f));
      }
      
      // check the composite
      assertNull(f + ": Expected no doc values from empty index (composite)",
                 composite.getSortedSetDocValues(f));
      
    }

    ir.close();
    dir.close();
  }

