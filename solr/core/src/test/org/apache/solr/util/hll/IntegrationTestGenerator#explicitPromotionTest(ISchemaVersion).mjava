    /**
     * Unions an EMPTY accumulator with EXPLICIT HLLs, each containing a
     * single random value.
     *
     * Format: cumulative union
     * Tests:
     * - EMPTY U EXPLICIT
     * - EXPLICIT U EXPLICIT
     * - EXPLICIT to SPARSE promotion
     * - SPARSE U EXPLICIT
     */
    private static void explicitPromotionTest(final ISchemaVersion schemaVersion) throws IOException {
        final Writer output = openOutput(schemaVersion, "explicit_promotion", TestType.UNION);

        final Random random = new Random(randomLong());

        // the accumulator, starts empty
        final HLL hll = newHLL(HLLType.EMPTY);
        final HLL emptyHLL = newHLL(HLLType.EMPTY);
        cumulativeUnionLine(output, hll, emptyHLL, schemaVersion);

        for(int i=0; i<(EXPLICIT_THRESHOLD+500)/*should be greater than promotion cutoff*/; i++) {
            // make an EXPLICIT set and populate with cardinality 1
            final HLL explicitHLL = newHLL(HLLType.EXPLICIT);
            explicitHLL.addRaw(random.nextLong());

            cumulativeUnionLine(output, hll, explicitHLL, schemaVersion);
        }

        output.flush();
        output.close();
    }

