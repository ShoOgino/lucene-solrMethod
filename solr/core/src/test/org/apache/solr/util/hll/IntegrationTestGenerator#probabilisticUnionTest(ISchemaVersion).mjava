    /**
     * Unions an EMPTY accumulator with FULL HLLs, each having
     * many registers set, twice in a row to verify that the set properties are
     * satisfied.
     *
     * Format: cumulative union
     * Tests:
     * - EMPTY U FULL
     * - FULL U FULL
     */
    private static void probabilisticUnionTest(final ISchemaVersion schemaVersion) throws IOException {
        final FileWriter output = openOutput(schemaVersion, "probabilistic_probabilistic", TestType.UNION);

        final Random random = new Random(randomLong());

        // the accumulator, starts empty
        final HLL hll = newHLL(HLLType.EMPTY);
        final HLL emptyHLL = newHLL(HLLType.EMPTY);
        cumulativeUnionLine(output, hll, emptyHLL, schemaVersion);

        for(int i=0; i<1000/*number of rows to generate*/; i++) {
            // make a FULL set and populate with
            final HLL fullHLL = newHLL(HLLType.FULL);
            final int elementCount = random.nextInt(10000/*arbitrary maximum cardinality*/);
            for(int j=0;j<elementCount;j++) {
                fullHLL.addRaw(random.nextLong());
            }

            cumulativeUnionLine(output, hll, fullHLL, schemaVersion);
        }

        output.flush();
        output.close();
    }

