    /**
     * Cumulatively sets successive registers to:
     *
     *     <code>(registerIndex % REGISTER_MAX_VALUE) + 1</code>
     *
     * by adding specifically constructed values to a SPARSE HLL.
     * Does not induce promotion.
     *
     * Format: cumulative add
     * Tests:
     * - SPARSE addition (predictable)
     */
    private static void sparseStepTest(final ISchemaVersion schemaVersion) throws IOException {
        final Writer output = openOutput(schemaVersion, "sparse_step", TestType.ADD);

        // the accumulator, starts empty sparse probabilistic
        final HLL hll = newHLL(HLLType.SPARSE);
        initLineAdd(output, hll, schemaVersion);

        for(int i=0; i<SPARSE_THRESHOLD; i++) {
            final long rawValue = constructHLLValue(LOG2M, i, ((i % REGISTER_MAX_VALUE) + 1));
            cumulativeAddLine(output, hll, rawValue, schemaVersion);
        }

        output.flush();
        output.close();
    }

