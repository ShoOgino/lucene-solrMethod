  public void testSingleFieldSameAnalyzers() throws Exception {

    clearIndex();

    // using fields with definitions, same tokenizers both at index and query time.

    updateJ("{\"add\":{\"doc\": {\"id\":1,\"letter0\":\"letter\"}},\"commit\":{}}",null);
    updateJ("{\"add\":{\"doc\": {\"id\":3,\"whiteSpace0\":\"whiteSpace in\"}},\"commit\":{}}",null);
    updateJ("{\"add\":{\"doc\": {\"id\":4,\"unicodeWhiteSpace0\":\"unicode in\"}},\"commit\":{}}",null);
    updateJ("{\"add\":{\"doc\": {\"id\":5,\"keyword0\":\"keyword\"}},\"commit\":{}}",null);

    assertU(commit());

    assertQ("Check the total number of docs", req("q","*:*"), "//result[@numFound=4]");

    //Tokens generated for "letter": "let" "ter" "letter" , maxTokenLen=3
    // Anything that matches the first three letters should be found when maxLen=3
    assertQ("Check the total number of docs", req("q","letter0:l"), "//result[@numFound=0]");
    assertQ("Check the total number of docs", req("q","letter0:let"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","letter0:lett"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","letter0:letXYZ"), "//result[@numFound=1]");

    //Tokens generated for "whiteSpace in": "whi" "teS" "pac" "e" "in" "whiteSpace" , maxTokenLen=3
    // Anything that matches the first three letters should be found when maxLen=3
    assertQ("Check the total number of docs", req("q","whiteSpace0:h"), "//result[@numFound=0]");
    assertQ("Check the total number of docs", req("q","whiteSpace0:whi"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","whiteSpace0:teS"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","whiteSpace0:in"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","whiteSpace0:whiteZKY"), "//result[@numFound=1]");

    //Tokens generated for "unicode in": "uni" "cod" "e" "in" "unicode" , maxTokenLen=3
    // Anything that matches the first three letters should be found when maxLen=3
    assertQ("Check the total number of docs", req("q","unicodeWhiteSpace0:u"), "//result[@numFound=0]");
    assertQ("Check the total number of docs", req("q","unicodeWhiteSpace0:uni"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","unicodeWhiteSpace0:cod"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","unicodeWhiteSpace0:e"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","unicodeWhiteSpace0:unicoVBRT"), "//result[@numFound=1]");

    //Tokens generated for "keyword": "keyword" , maxTokenLen=3
    assertQ("Check the total number of docs", req("q","keyword0:keyword"), "//result[@numFound=1]");
    assertQ("Check the total number of docs", req("q","keyword0:key"), "//result[@numFound=0]");

  }

