  public void testFormatter() {
    assertFormat("1995-12-31T23:59:59.999Z", 820454399999l);
    assertFormat("1995-12-31T23:59:59.990Z", 820454399990l);
    assertFormat("1995-12-31T23:59:59.900Z", 820454399900l);
    assertFormat("1995-12-31T23:59:59Z", 820454399000l);

    // just after epoch
    assertFormat("1970-01-01T00:00:00.005Z", 5L);
    assertFormat("1970-01-01T00:00:00Z",     0L);
    assertFormat("1970-01-01T00:00:00.370Z",  370L);
    assertFormat("1970-01-01T00:00:00.900Z",   900L);

    // well after epoch
    assertFormat("1999-12-31T23:59:59.005Z", 946684799005L);
    assertFormat("1999-12-31T23:59:59Z",     946684799000L);
    assertFormat("1999-12-31T23:59:59.370Z",  946684799370L);
    assertFormat("1999-12-31T23:59:59.900Z",   946684799900L);

    // waaaay after epoch  ('+' is required for more than 4 digits in a year)
    assertFormat("+12345-12-31T23:59:59.005Z", 327434918399005L);
    assertFormat("+12345-12-31T23:59:59Z",     327434918399000L);
    assertFormat("+12345-12-31T23:59:59.370Z",  327434918399370L);
    assertFormat("+12345-12-31T23:59:59.900Z",   327434918399900L);

    // well before epoch
    assertFormat("0299-12-31T23:59:59Z",     -52700112001000L);
    assertFormat("0299-12-31T23:59:59.123Z", -52700112000877L);
    assertFormat("0299-12-31T23:59:59.090Z",  -52700112000910L);

    // BC (negative years)
    assertFormat("-12021-12-01T02:02:02Z", Instant.parse("-12021-12-01T02:02:02Z").toEpochMilli());
  }

