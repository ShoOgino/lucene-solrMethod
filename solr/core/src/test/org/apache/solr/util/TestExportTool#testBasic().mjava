  public void testBasic() throws Exception {
    String COLLECTION_NAME = "globalLoaderColl";
    configureCluster(4)
        .addConfig("conf", configset("cloud-dynamic"))
        .configure();

    try {
      CollectionAdminRequest
          .createCollection(COLLECTION_NAME, "conf", 2, 1)
          .setMaxShardsPerNode(100)
          .process(cluster.getSolrClient());
      cluster.waitForActiveCollection(COLLECTION_NAME, 2, 2);

      String tmpFileLoc = new File(cluster.getBaseDir().toFile().getAbsolutePath() +
          File.separator).getPath();

      UpdateRequest ur = new UpdateRequest();
      ur.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);
      int docCount = 1000;

      for (int i = 0; i < docCount; i++) {
        ur.add("id", String.valueOf(i),
            "desc_s", TestUtil.randomSimpleString(random(), 10, 50) ,
            "a_dt", "2019-09-30T05:58:03Z");
      }
      cluster.getSolrClient().request(ur, COLLECTION_NAME);

      QueryResponse qr = cluster.getSolrClient().query(COLLECTION_NAME, new SolrQuery("*:*").setRows(0));
      assertEquals(docCount, qr.getResults().getNumFound());

      String url = cluster.getRandomJetty(random()).getBaseUrl() + "/" + COLLECTION_NAME;


      ExportTool.Info info = new ExportTool.MultiThreadedRunner(url);
      String absolutePath = tmpFileLoc + COLLECTION_NAME + random().nextInt(100000) + ".json";
      info.setOutFormat(absolutePath, "jsonl");
      info.setLimit("200");
      info.fields = "id,desc_s,a_dt";
      info.exportDocs();

      assertJsonDocsCount(info, 200, record -> "2019-09-30T05:58:03Z".equals(record.get("a_dt")));

      info = new ExportTool.MultiThreadedRunner(url);
      absolutePath = tmpFileLoc + COLLECTION_NAME + random().nextInt(100000) + ".json";
      info.setOutFormat(absolutePath, "jsonl");
      info.setLimit("-1");
      info.fields = "id,desc_s";
      info.exportDocs();

      assertJsonDocsCount(info, 1000,null);

      info = new ExportTool.MultiThreadedRunner(url);
      absolutePath = tmpFileLoc + COLLECTION_NAME + random().nextInt(100000) + ".javabin";
      info.setOutFormat(absolutePath, "javabin");
      info.setLimit("200");
      info.fields = "id,desc_s";
      info.exportDocs();

      assertJavabinDocsCount(info, 200);

      info = new ExportTool.MultiThreadedRunner(url);
      absolutePath = tmpFileLoc + COLLECTION_NAME + random().nextInt(100000) + ".javabin";
      info.setOutFormat(absolutePath, "javabin");
      info.setLimit("-1");
      info.fields = "id,desc_s";
      info.exportDocs();
      assertJavabinDocsCount(info, 1000);

    } finally {
      cluster.shutdown();

    }
  }

