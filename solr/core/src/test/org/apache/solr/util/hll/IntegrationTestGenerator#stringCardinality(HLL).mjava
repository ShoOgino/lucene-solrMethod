    /**
     * Returns the algorithm-specific cardinality of the specified {@link HLL}
     * as a {@link String} appropriate for comparison with the algorithm-specific
     * cardinality provided by the PostgreSQL implementation.
     *
     * @param  hll the HLL whose algorithm-specific cardinality is to be printed.
     *         This cannot be <code>null</code>.
     * @return the algorithm-specific cardinality of the instance as a PostgreSQL-
     *         compatible String. This will never be <code>null</code>
     */
    private static String stringCardinality(final HLL hll) {
        switch(hll.getType()) {
            case EMPTY:
                return "0";
            case EXPLICIT:/*promotion has not yet occurred*/
                return Long.toString(hll.cardinality());
            case SPARSE:
                return Double.toString(hll.sparseProbabilisticAlgorithmCardinality());
            case FULL:
                return Double.toString(hll.fullProbabilisticAlgorithmCardinality());
            default:
                throw new RuntimeException("Unknown HLL type " + hll.getType());
        }
    }

