  @Test
  public void testMinShouldMatchBadQueries() {
    Exception e = expectThrows(SolrException.class, () -> calcMSM(2, "1<"));
    assertEquals("Invalid 'mm' spec: '1<'. Expecting values before and after '<'" , e.getMessage());
    e = expectThrows(SolrException.class, () -> calcMSM(2, "1<x"));
    assertEquals("Invalid 'mm' spec. Expecting an integer.", e.getMessage());
    e = expectThrows(SolrException.class, () -> calcMSM(1, "x%"));
    assertEquals("Invalid 'mm' spec. Expecting an integer.", e.getMessage());
    e = expectThrows(SolrException.class, () -> calcMSM(1, "%%"));
    assertEquals("Invalid 'mm' spec. Expecting an integer.", e.getMessage());
    e = expectThrows(SolrException.class, () -> calcMSM(1, "x"));
    assertEquals("Invalid 'mm' spec. Expecting an integer.", e.getMessage());
    
    e = expectThrows(SolrException.class, () -> calcMSM(10, "2<-25% 9<X"));
    assertEquals("Invalid 'mm' spec. Expecting an integer." , e.getMessage());
    e = expectThrows(SolrException.class, () -> calcMSM(10, "2<-25% 9<"));
    assertEquals("Invalid 'mm' spec: '9<'. Expecting values before and after '<'" , e.getMessage());
  }

