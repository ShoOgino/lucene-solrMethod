  public static <T extends Comparable<T>> void test(T n1, T n2, Converter conv) {
    String s1=n1.toString();
    String s2=n2.toString();
    String v1 = conv.toInternal(s1);
    String v2 = conv.toInternal(s2);
    String out1=conv.toExternal(v1);
    String out2=conv.toExternal(v2);

    Assert.assertEquals(conv + " :: n1 :: input!=output", s1, out1);
    Assert.assertEquals(conv + " :: n2 :: input!=output", s2, out2);
    
    int c1 = n1.compareTo(n2);
    int c2 = v1.compareTo(v2);

    Assert.assertFalse( (c1==0 && !(c2==0)) );
//    Assert.assertFalse( c1 < 0 && !(c2<0) );
//    Assert.assertFalse( c1 > 0 && !(c2>0) );
//    
    //    if (c1==0 && !(c2==0) 
//    || c1 < 0 && !(c2<0) 
//    || c1 > 0 && !(c2>0)
//    || !out1.equals(s1) || !out2.equals(s2))
//    {
//      Assert.fail("Comparison error:"+s1+","+s2 + " :: " + conv);
//      System.out.print("v1=");
//      for (int ii=0; ii<v1.length(); ii++) {
//        System.out.print(" " + (int)v1.charAt(ii));
//      }
//      System.out.print("\nv2=");
//      for (int ii=0; ii<v2.length(); ii++) {
//        System.out.print(" " + (int)v2.charAt(ii));
//      }
//      System.out.println("\nout1='"+out1+"', out2='" + out2 + "'");
//    }
  }

