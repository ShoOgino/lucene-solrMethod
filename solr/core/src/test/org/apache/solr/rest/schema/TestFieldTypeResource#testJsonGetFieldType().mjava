  @Test
  public void testJsonGetFieldType() throws Exception {
    final String expectedFloatClass = RANDOMIZED_NUMERIC_FIELDTYPES.get(Float.class);
    final boolean expectedDocValues = Boolean.getBoolean(NUMERIC_DOCVALUES_SYSPROP);
    assertJQ("/schema/fieldtypes/float?indent=on&showDefaults=on",  // assertJQ will add "&wt=json"
             "/fieldType/name=='float'",
             "/fieldType/class=='"+expectedFloatClass+"'",
             "/fieldType/precisionStep=='0'",
             "/fieldType/indexed==true",
             "/fieldType/stored==true",
             "/fieldType/docValues=="+expectedDocValues,
             "/fieldType/termVectors==false",
             "/fieldType/termPositions==false",
             "/fieldType/termOffsets==false",
             "/fieldType/omitNorms==true",
             "/fieldType/omitTermFreqAndPositions==true",
             "/fieldType/omitPositions==false",
             "/fieldType/storeOffsetsWithPositions==false",
             "/fieldType/multiValued==false",
             "/fieldType/tokenized==false");
  }

