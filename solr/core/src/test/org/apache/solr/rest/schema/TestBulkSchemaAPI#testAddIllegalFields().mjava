  public void testAddIllegalFields() throws Exception {
    RestTestHarness harness = restTestHarness;

    // 1. Make sure you can't create a new field with an asterisk in its name
    String newFieldName = "asterisk*";

    String payload = "{\n" +
        "    'add-field' : {\n" +
        "         'name':'" + newFieldName + "',\n" +
        "         'type':'string',\n" +
        "         'stored':true,\n" +
        "         'indexed':true\n" +
        "     }\n" +
        "}";

    String response = harness.post("/schema?wt=json", json(payload));
    Map map = (Map)ObjectBuilder.getVal(new JSONParser(new StringReader(response)));
    assertNotNull(response, map.get("errors"));

    map = getObj(harness, newFieldName, "fields");
    assertNull(newFieldName + " illegal dynamic field should not have been added to schema", map);

    // 2. Make sure you get an error when you try to create a field that already exists
    // Make sure 'wdf_nocase' field exists
    newFieldName = "wdf_nocase";
    Map m = getObj(harness, newFieldName, "fields");
    assertNotNull("'" + newFieldName + "' field does not exist in the schema", m);

    payload = "{\n" +
        "    'add-field' : {\n" +
        "         'name':'" + newFieldName + "',\n" +
        "         'type':'string',\n" +
        "         'stored':true,\n" +
        "         'indexed':true\n" +
        "     }\n" +
        "}";

    response = harness.post("/schema?wt=json", json(payload));
    map = (Map)ObjectBuilder.getVal(new JSONParser(new StringReader(response)));
    assertNotNull(response, map.get("errors"));
  }

