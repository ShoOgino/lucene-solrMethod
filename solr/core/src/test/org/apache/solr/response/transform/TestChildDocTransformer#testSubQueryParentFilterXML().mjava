  private void testSubQueryParentFilterXML() {

    String tests[] = new String[] {
        "//*[@numFound='2']",
        "/response/result/doc[1]/str[@name='id']='1'" ,
        "/response/result/doc[1]/result[@name='children'][@numFound=1]/doc[1]/str[@name='id']='2'" ,
        "/response/result/doc[1]/result[@name='children'][@numFound=1]/doc[1]/str[@name='cat']='childDocument'" ,
        "/response/result/doc[1]/result[@name='children'][@numFound=1]/doc[1]/str[@name='title']='" + titleVals[0] + "'" ,
        "/response/result/doc[2]/str[@name='id']='4'" ,
        "/response/result/doc[2]/result[@name='children'][@numFound=1]/doc[1]/str[@name='id']='5'",
        "/response/result/doc[2]/result[@name='children'][@numFound=1]/doc[1]/str[@name='cat']='childDocument'",
        "/response/result/doc[2]/result[@name='children'][@numFound=1]/doc[1]/str[@name='title']='" + titleVals[1] + "'"};

    assertQ(req(
        "q", "*:*", "fq", "subject:\"parentDocument\" ",
        "fl", "*,children:[subquery]",
        "sort", "id asc",
        "children.q","{!child of=subject:parentDocument}{!terms f=id v=$row.id}",
        "children.fq","cat:childDocument",
        "children.sort","_docid_ asc"
       ), 
            tests);

    assertQ(req("q", "*:*", "fq", "subject:\"parentDocument\" ",
        "fl", "id,children:[subquery]",
        "sort", "id asc",
        "children.q","{!child of=subject:parentDocument}{!terms f=id v=$row.id}",
        "children.fq","cat:childDocument",
        "children.sort","_docid_ asc"), 
            tests);
  }

