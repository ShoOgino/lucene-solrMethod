  private void testChildDoctransformerXML() {
    String test1[] = new String[] {
        "//*[@numFound='1']",
        "/response/result/doc[1]/doc[1]/str[@name='id']='2'" ,
        "/response/result/doc[1]/doc[2]/str[@name='id']='3'" ,
        "/response/result/doc[1]/doc[3]/str[@name='id']='4'" ,
        "/response/result/doc[1]/doc[4]/str[@name='id']='5'" ,
        "/response/result/doc[1]/doc[5]/str[@name='id']='6'" ,
        "/response/result/doc[1]/doc[6]/str[@name='id']='7'"};

    String test2[] = new String[] {
        "//*[@numFound='1']",
        "/response/result/doc[1]/doc[1]/str[@name='id']='2'" ,
        "/response/result/doc[1]/doc[2]/str[@name='id']='4'" ,
        "/response/result/doc[1]/doc[3]/str[@name='id']='6'" };

    String test3[] = new String[] {
        "//*[@numFound='1']",
        "/response/result/doc[1]/doc[1]/str[@name='id']='3'" ,
        "/response/result/doc[1]/doc[2]/str[@name='id']='5'" };



    assertQ(req("q", "*:*", "fq", "subject:\"parentDocument\" ",
        "fl", "*,[child parentFilter=\"subject:parentDocument\"]"), test1);

    assertQ(req("q", "*:*", "fq", "subject:\"parentDocument\" ",
        "fl", "subject,[child parentFilter=\"subject:parentDocument\" childFilter=\"title:foo\"]"), test2);

    assertQ(req("q", "*:*", "fq", "subject:\"parentDocument\" ",
        "fl", "subject,[child parentFilter=\"subject:parentDocument\" childFilter=\"title:bar\" limit=2]"), test3);
  }

