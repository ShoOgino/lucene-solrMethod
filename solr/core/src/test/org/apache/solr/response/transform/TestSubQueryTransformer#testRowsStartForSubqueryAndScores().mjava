  @Test
  public void testRowsStartForSubqueryAndScores() throws Exception {
    
    String johnDeptsIds = h.query(req(new String[]{"q","{!join from=dept_ss_dv to=dept_id_s}name_s:john", 
        "wt","csv",
        "csv.header","false",
        "fl","id",
        "rows",""+deptMultiplier,
        "sort", "id_i desc"
      }));
    
    ArrayList<Object> deptIds = Collections.list(
        new StringTokenizer( johnDeptsIds));
    
    final int a = random().nextInt(deptMultiplier+1);
    final int b = random().nextInt(deptMultiplier+1);
    final int start = Math.min(a, b) ;
    final int toIndex = Math.max(a, b) ;
    List<Object> expectIds = deptIds.subList(start , toIndex);
    ArrayList<String> assertions = new ArrayList<>();
    // count((//result/doc/str[@name='name_s_dv'][.='john']/../result[@name='depts'])[1]/doc/str[@name='id'])
   // random().nextInt(peopleMultiplier);
    assertions.add("count((//result/doc/str[@name='name_s_dv'][.='john']/.."
        + "/result[@name='depts'][@numFound='"+deptMultiplier+"'][@start='"+start+"'])["+
        (random().nextInt(peopleMultiplier)+1)
        +"]/doc/str[@name='id'])=" +(toIndex-start));
    
   // System.out.println(expectIds);
    
    for (int i=0; i< expectIds.size(); i++) {
      // (//result/doc/str[@name='name_s_dv'][.='john']/../result[@name='depts'])[1]/doc[1]/str[@name='id']='15'
      String ithDoc = "(//result/doc/str[@name='name_s_dv'][.='john']/.."
                + "/result[@name='depts'][@numFound='"+deptMultiplier+"'][@start='"+start+"'])["+ 
                (random().nextInt(peopleMultiplier)+1) +
                "]/doc[" +(i+1)+ "]";
      assertions.add(ithDoc+"/str[@name='id'][.='"+expectIds.get(i)+"']");
      // let's test scores right there
      assertions.add(ithDoc+"/float[@name='score'][.='"+expectIds.get(i)+".0']");
      
    }
    
    String[] john = new String[]{"q","name_s:john", "indent","true",
        "fl","name_s_dv,depts:[subquery]",
        "rows","" + (2 * peopleMultiplier),
        "depts.q","+{!term f=dept_id_s v=$row.dept_ss_dv}^=0 _val_:id_i", 
        "depts.fl","id",
        "depts.fl","score",
        "depts.indent","true",
        "depts.rows",""+(toIndex-start),
        "depts.start",""+start};
        
    assertQ(req(john), assertions.toArray(new String[]{}));
  }

