  @Test
  public void testCrossCoreSubQueryTransformer() throws Exception {
  
    assertQ("make sure request is parsed in this core",
        req("q","name_s:john",
            "fl","*,depts:[subquery]",  
            // text is tokenized and can be found, despite there is no substitution magic
                                           "depts.q","{!field f=text_t}These guys"),
                                           "//result/doc/str[@name='name_s_dv'][.='john']/../result[@name='depts']/doc"
        );
    
    assertQ("make sure request is parsed in that core",
        req("q","name_s:john",
            "fl","*,depts:[subquery fromIndex=fromCore]",  
            // text is NOT tokenized and can NOT be found
                                           "depts.q","{!field f=text_t}These guys"),
                                           "count(//result/doc/str[@name='name_s_dv'][.='john']/../result[@name='depts']/doc)=0"
        );

    assertQ("make sure request is parsed in that core",
        req("q","-name_s:dave", "indent", "true",
            "fl","*,depts:[subquery fromIndex=fromCore]",  
            // stored text (text_t is string in minimal configset) can be found as 
                                           "depts.q","{!field f=text_t v=$row.text_t}",
                                           "depts.fl", "dept_id_s" ),
                          "//result/doc/str[@name='name_s_dv'][.='john']/.."
                          + "/result[@name='depts']/doc/str[@name='dept_id_s'][.='Engineering']",
                          "//result/doc/str[@name='name_s_dv'][.='tina']/.."
                          + "/result[@name='depts']/doc/str[@name='dept_id_s'][.='Engineering']",
                          "//result/doc/str[@name='name_s_dv'][.='mark']/.."
                          + "/result[@name='depts']/doc/str[@name='dept_id_s'][.='Marketing']"
        );
  }

