  @Test
  //Commented 14-Oct-2018 @LuceneTestCase.BadApple(bugUrl="https://issues.apache.org/jira/browse/SOLR-12028") // 2-Aug-2018
  public void testJmxReporter() throws Exception {
    CollectionAdminRequest.reloadCollection(COLLECTION).processAndWait(cluster.getSolrClient(), 60);
    CloudSolrClient solrClient = cluster.getSolrClient();
    // index some docs
    for (int i = 0; i < 100; i++) {
      SolrInputDocument doc = new SolrInputDocument();
      doc.addField("id", "id-" + i);
      solrClient.add(COLLECTION, doc);
    }
    solrClient.commit(COLLECTION);
    // make sure searcher is present
    solrClient.query(COLLECTION, params(CommonParams.Q, "*:*"));

    for (JettySolrRunner runner : cluster.getJettySolrRunners()) {
      SolrMetricManager manager = runner.getCoreContainer().getMetricManager();
      for (String registry : manager.registryNames()) {
        Map<String, SolrMetricReporter> reporters = manager.getReporters(registry);
        long jmxReporters = reporters.entrySet().stream().filter(e -> e.getValue() instanceof SolrJmxReporter).count();
        reporters.forEach((k, v) -> {
          if (!(v instanceof SolrJmxReporter)) {
            return;
          }
          if (!((SolrJmxReporter)v).getDomain().startsWith("solr.core")) {
            return;
          }
          if (!((SolrJmxReporter)v).isActive()) {
            return;
          }
          QueryExp exp = Query.eq(Query.attr(JmxMetricsReporter.INSTANCE_TAG), Query.value(Integer.toHexString(v.hashCode())));
          Set<ObjectInstance> beans = mBeanServer.queryMBeans(null, exp);
          if (((SolrJmxReporter) v).isStarted() && beans.isEmpty() && jmxReporters < 2) {
            log.info("DocCollection: " + getCollectionState(COLLECTION));
            fail("JMX reporter " + k + " for registry " + registry + " failed to register any beans!");
          } else {
            Set<String> categories = new HashSet<>();
            beans.forEach(bean -> {
              String cat = bean.getObjectName().getKeyProperty("category");
              if (cat != null) {
                categories.add(cat);
              }
            });
            log.info("Registered categories: " + categories);
            assertTrue("Too few categories: " + categories, categories.size() > 5);
          }
        });
      }
    }
  }

