  @SuppressWarnings("unchecked")
  @Test
  public void medianFacetAscTest() throws Exception { 
    //Int Date
    Collection<Double> intDate = getDoubleList( "median","fieldFacets", "date_dtd", "double", "int");
    ArrayList<Double> intDateTest = calculateNumberStat(intDateTestStart, "median");
    assertEquals(getRawResponse(),intDate,intDateTest);
    //Int String
    Collection<Double> intString = getDoubleList("median","fieldFacets", "string_sd", "double", "int");
    ArrayList<Double> intStringTest = calculateNumberStat(intStringTestStart, "median");
    assertEquals(getRawResponse(),intString,intStringTest);

    //Long Date
    Collection<Double> longDate = getDoubleList("median","fieldFacets", "date_dtd", "double", "long");
    ArrayList<Double> longDateTest = calculateNumberStat(longDateTestStart, "median");
    assertEquals(getRawResponse(),longDate,longDateTest);
    //Long String
    Collection<Double> longString = getDoubleList("median","fieldFacets", "string_sd", "double", "long");
    ArrayList<Double> longStringTest = calculateNumberStat(longStringTestStart, "median");
    assertEquals(getRawResponse(),longString,longStringTest);

    //Float Date
    Collection<Double> floatDate = getDoubleList("median","fieldFacets", "date_dtd", "double", "float");
    ArrayList<Double> floatDateTest = calculateNumberStat(floatDateTestStart, "median");
    assertEquals(getRawResponse(),floatDate,floatDateTest);
    //Float String
    Collection<Double> floatString = getDoubleList("median","fieldFacets", "string_sd", "double", "float");
    ArrayList<Double> floatStringTest = calculateNumberStat(floatStringTestStart, "median");
    assertEquals(getRawResponse(),floatString,floatStringTest);

    //Double Date
    Collection<Double> doubleDate = getDoubleList("median","fieldFacets", "date_dtd", "double", "double");
    ArrayList<Double> doubleDateTest = calculateNumberStat(doubleDateTestStart, "median");
    assertEquals(getRawResponse(),doubleDate,doubleDateTest);
    //Double String
    Collection<Double> doubleString = getDoubleList("median","fieldFacets", "string_sd", "double", "double");
    ArrayList<Double> doubleStringTest = calculateNumberStat(doubleStringTestStart, "median");
    assertEquals(getRawResponse(),doubleString,doubleStringTest);
  }

