  @SuppressWarnings("unchecked")
  @Test
  public void missingTest() throws Exception { 
    //Int Date
    String intDateFacet = getFacetXML(response, "missingn", "fieldFacets", "date_dtd");    
    Collection<Long> intDate = (ArrayList<Long>)xmlToList(intDateFacet, "long", "int");
    setLatestType("int");
    assertEquals(intDateTestMissing,intDate);
    
    //Int String
    String intStringFacet = getFacetXML(response, "missingn", "fieldFacets", "string_sd");      
    Collection<Long> intString = (ArrayList<Long>)xmlToList(intStringFacet, "long", "int");
    assertEquals(intStringTestMissing,intString);

    //Long Date
    String longDateFacet = getFacetXML(response, "missingn", "fieldFacets", "date_dtd");      
    Collection<Long> longDate = (ArrayList<Long>)xmlToList(longDateFacet, "long", "long");
    setLatestType("long");
    assertEquals(longDateTestMissing,longDate);
    
    //Long String
    String longStringFacet = getFacetXML(response, "missingn", "fieldFacets", "string_sd");   
    Collection<Long> longString = (ArrayList<Long>)xmlToList(longStringFacet, "long", "long");
    assertEquals(longStringTestMissing,longString);

    //Float Date
    String floatDateFacet = getFacetXML(response, "missingn", "fieldFacets", "date_dtd");   
    Collection<Long> floatDate = (ArrayList<Long>)xmlToList(floatDateFacet, "long", "float");
    setLatestType("float");
    assertEquals(floatDateTestMissing,floatDate);
    
    //Float String
    String floatStringFacet = getFacetXML(response, "missingn", "fieldFacets", "string_sd");   
    Collection<Long> floatString = (ArrayList<Long>)xmlToList(floatStringFacet, "long", "float");
    assertEquals(floatStringTestMissing,floatString);

    //Double Date
    String doubleDateFacet = getFacetXML(response, "missingn", "fieldFacets", "date_dtd");   
    Collection<Long> doubleDate = (ArrayList<Long>)xmlToList(doubleDateFacet, "long", "double");
    setLatestType("double");
    assertEquals(doubleDateTestMissing,doubleDate);
    
    //Double String
    String doubleStringFacet = getFacetXML(response, "missingn", "fieldFacets", "string_sd");   
    Collection<Long> doubleString = (ArrayList<Long>)xmlToList(doubleStringFacet, "long", "double");
    assertEquals(doubleStringTestMissing,doubleString);

    //Date Int
    String dateIntFacet = getFacetXML(response, "missing", "fieldFacets", "int_id");    
    Collection<Long> dateInt = (ArrayList<Long>)xmlToList(dateIntFacet, "long", "date");
    setLatestType("date");
    assertEquals(dateIntTestMissing,dateInt);
    
    //Date Long
    String dateStringFacet = getFacetXML(response, "missing", "fieldFacets", "long_ld");     
    Collection<Long> dateLong = (ArrayList<Long>)xmlToList(dateStringFacet, "long", "date");
    assertEquals(dateLongTestMissing,dateLong);

    //String Int
    String stringIntFacet = getFacetXML(response, "missing", "fieldFacets", "int_id");   
    Collection<Long> stringInt = (ArrayList<Long>)xmlToList(stringIntFacet, "long", "str");
    setLatestType("string");
    assertEquals(stringIntTestMissing,stringInt);
    
    //String Long
    String stringLongFacet = getFacetXML(response, "missing", "fieldFacets", "long_ld");    
    Collection<Long> stringLong = (ArrayList<Long>)xmlToList(stringLongFacet, "long", "str");
    assertEquals(stringLongTestMissing,stringLong);
  }

