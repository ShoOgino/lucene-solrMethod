  @SuppressWarnings("unchecked")
  @Test
  public void maxTest() throws Exception { 
    //Int Date
    Collection<Integer> intDate = getIntegerList("maxn","fieldFacets", "date_dtd", "int", "int");
    ArrayList<Integer> intDateTest = (ArrayList<Integer>)calculateStat(intDateTestStart, "max");
    assertEquals(getRawResponse(),intDate,intDateTest);
    
    //Int String
    Collection<Integer> intString = getIntegerList("maxn","fieldFacets", "string_sd", "int", "int");
    ArrayList<Integer> intStringTest = (ArrayList<Integer>)calculateStat(intStringTestStart, "max");
    assertEquals(getRawResponse(),intString,intStringTest);

    //Long Date
    Collection<Long> longDate = getLongList("maxn","fieldFacets", "date_dtd", "long", "long");
    ArrayList<Long> longDateTest = (ArrayList<Long>)calculateStat(longDateTestStart, "max");
    assertEquals(getRawResponse(),longDate,longDateTest);
    
    //Long String
    Collection<Long> longString = getLongList("maxn","fieldFacets", "string_sd", "long", "long");
    ArrayList<Long> longStringTest = (ArrayList<Long>)calculateStat(longStringTestStart, "max");
    assertEquals(getRawResponse(),longString,longStringTest);

    //Float Date
    Collection<Float> floatDate = getFloatList("maxn","fieldFacets", "date_dtd", "float", "float");
    ArrayList<Float> floatDateTest = (ArrayList<Float>)calculateStat(floatDateTestStart, "max");
    assertEquals(getRawResponse(),floatDate,floatDateTest);
    
    //Float String
    Collection<Float> floatString = getFloatList("maxn","fieldFacets", "string_sd", "float", "float");
    ArrayList<Float> floatStringTest = (ArrayList<Float>)calculateStat(floatStringTestStart, "max");
    assertEquals(getRawResponse(),floatString,floatStringTest);

    //Double Date
    Collection<Double> doubleDate = getDoubleList("maxn","fieldFacets", "date_dtd", "double", "double");
    ArrayList<Double> doubleDateTest = (ArrayList<Double>)calculateStat(doubleDateTestStart, "max");
    assertEquals(getRawResponse(),doubleDate,doubleDateTest);
    
    //Double String
    Collection<Double> doubleString = getDoubleList("maxn","fieldFacets", "string_sd", "double", "double");
    ArrayList<Double> doubleStringTest = (ArrayList<Double>)calculateStat(doubleStringTestStart, "max");
    assertEquals(getRawResponse(),doubleString,doubleStringTest);
    
    //String Int
    Collection<String> stringInt = getStringList("max","fieldFacets", "int_id", "str", "str");
    ArrayList<String> stringIntTest = (ArrayList<String>)calculateStat(stringIntTestStart, "max");
    assertEquals(getRawResponse(),stringInt,stringIntTest);
    
    //String Long
    Collection<String> stringLong = getStringList("max","fieldFacets", "long_ld", "str", "str");
    ArrayList<String> stringLongTest = (ArrayList<String>)calculateStat(stringLongTestStart, "max");
    assertEquals(getRawResponse(),stringLong,stringLongTest);

    //Date Int
    Collection<String> dateInt = getStringList("max","fieldFacets", "int_id", "date", "date");
    ArrayList<String> dateIntTest = (ArrayList<String>)calculateStat(dateIntTestStart, "max");
    assertEquals(getRawResponse(),dateInt,dateIntTest);
    
    //Date Long
    Collection<String> dateString = getStringList("max","fieldFacets", "long_ld", "date", "date");
    ArrayList<String> dateLongTest = (ArrayList<String>)calculateStat(dateLongTestStart, "max");
    assertEquals(getRawResponse(),dateString,dateLongTest);

  }

