  public void testDuplicateFilters() {
    // Index-time: Filters: truncate:3 & reversestring & truncate:2.  Protected (ignoreCase:true): foobar, jaxfopbuz, golden, compote
    // Query-time: No filters
    assertU(adoc("id", "1",
        "prefix3_rev_prefix2",            "Wuthering FooBar distant goldeN ABC compote",
        "prefix3_rev_prefix2_mixed_IDs",  "Wuthering FooBar distant goldeN ABC compote",
        "prefix3_rev_prefix2_mixed_case", "Wuthering FooBar distant goldeN ABC compote"));
    assertU(commit());

    assertQ(req("prefix3_rev_prefix2:(+tu +FooBar +si +goldeN +CB +compote)")
        , "//result[@numFound=1]"
    );
    assertQ(req("prefix3_rev_prefix2_mixed_IDs:(+tu +FooBar +si +goldeN +CB +compote)")
        , "//result[@numFound=1]"
    );
    assertQ(req("prefix3_rev_prefix2_mixed_case:(+tu +FooBar +si +goldeN +CB +compote)")
        , "//result[@numFound=1]"
    );
  }

