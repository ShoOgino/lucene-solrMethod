    /// loads permissions, owner, and group from `ls -ld`
    @VisibleForTesting
    void loadPermissionInfoByNonNativeIO() {
      IOException e = null;
      try {
        java.nio.file.Path path = Paths.get(getPath().toUri());
        String permission = '-' + PosixFilePermissions.toString(Files.getPosixFilePermissions(path));
        setPermission(FsPermission.valueOf(permission));

        String owner = Files.getOwner(path).getName();
        String group = Files.readAttributes(path, PosixFileAttributes.class, LinkOption.NOFOLLOW_LINKS).group().getName();
        // If on windows domain, token format is DOMAIN\\user and we want to
        // extract only the user name
        // same as to the group name
        if (Shell.WINDOWS) {
          owner = removeDomain(owner);
          group = removeDomain(group);
        }
        setOwner(owner);
        setGroup(group);
      } catch (IOException ioe) {
        e = ioe;
      } finally {
        if (e != null) {
          throw new RuntimeException("Error while running command to get " +
              "file permissions : " +
              StringUtils.stringifyException(e));
        }
      }
    }

