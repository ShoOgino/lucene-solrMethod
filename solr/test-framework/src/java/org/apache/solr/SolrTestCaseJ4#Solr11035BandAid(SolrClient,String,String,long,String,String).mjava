  /**
   * See SOLR-11035. There are various "impossible" failures, I can update some documents successfully then not find
   * them.
   * <p>
   * At least one I've seen (Erick Erickson) cannot be cured by waiting on the client side.
   * <p>
   * This is a horrible hack, but until we fix the underlying cause using it will reduce the noise from tests. Once the
   * root cause of SOLR-11035 is found, this should be removed.
   * <p>
   * I don't mind the extra commits (why do two?) as this should be pretty rare.
   *
   * This test fails 10% - 15% of the time without using this method, especially if you @Ignore all the other
   * tests in that suite.
   *
   * ant test  -Dtestcase=DocValuesNotIndexedTest -Dtests.method=testGroupingDVOnly
   * -Dtests.seed=54688F608E614440 -Dtests.slow=true -Dtests.locale=nl-BE
   * -Dtests.timezone=America/North_Dakota/Beulah -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1
   *
   * This only really works for adding documents. The test at the top of the method will succeed for an update of
   * an existing doc and nothing will be done. If that becomes necessary we should probably create a new method
   * that takes a docID, field and value.
   *
   * @param client - the client that we'll use to send the request
   * @param collection - the target collection we'll add and remove the doc from
   * @param idField - the uniqueKey for this collection. This MUST be a string
   * @param expectedDocCount - numFound for the query
   * @param query - The Solr query to check for expectedDocCount.
   * @param tag - additional information to display on a failure. Often class.method is useful.
   */

  public static void Solr11035BandAid(SolrClient client, String collection, String idField,
                                      long expectedDocCount, String query,
                                      String tag) throws IOException, SolrServerException {

    Solr11035BandAid(client, collection, idField, expectedDocCount, query, tag, false);
  }

