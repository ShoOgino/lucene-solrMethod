  /**
   * @return null if ok else error message
   */
  public static String clearObjectTrackerAndCheckEmpty(int waitSeconds, boolean tryClose) {
    int retries = 0;
    String result;
    do {
      result = ObjectReleaseTracker.checkEmpty();
      if (result == null)
        break;
      try {
        if (retries % 10 == 0) {
          log.info("Waiting for all tracked resources to be released");
          if (retries > 10) {
            TraceFormatting tf = new TraceFormatting(DEFAULT_STACK_FILTERS);
            Map<Thread,StackTraceElement[]> stacksMap = Thread.getAllStackTraces();
            Set<Entry<Thread,StackTraceElement[]>> entries = stacksMap.entrySet();
            for (Entry<Thread,StackTraceElement[]> entry : entries) {
              String stack = tf.formatStackTrace(entry.getValue());
              System.err.println(entry.getKey().getName() + ":\n" + stack);
            }
          }
        }
        TimeUnit.SECONDS.sleep(1);
      } catch (InterruptedException e) { break; }
    }
    while (retries++ < waitSeconds);
    
    
    log.info("------------------------------------------------------- Done waiting for tracked resources to be released");
    
    if (tryClose && result != null && RandomizedContext.current().getTargetClass().isAnnotationPresent(SuppressObjectReleaseTracker.class)) {
      log.warn(
          "Some resources were not closed, shutdown, or released. This has been ignored due to the SuppressObjectReleaseTracker annotation, trying to close them now.");
      ObjectReleaseTracker.tryClose();
    }
    
    ObjectReleaseTracker.clear();
    
    return result;
  }

