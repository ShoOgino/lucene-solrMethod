  @AfterClass
  @SuppressWarnings("unused")
  private static void afterClass() throws Exception {
    try {
      deleteCore();
      resetExceptionIgnores();
      endTrackingSearchers();
      endTrackingZkClients();
      resetFactory();
      coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;
    } finally {
      try {

        if (LEAVE_TEST_TMP_DIR) {
          System.err
              .println("NOTE: per solr.test.leavetmpdir, the test tmp directory will not be removed: "
                  + rootTmpDir.getAbsolutePath());
        } else {
          // TODO: tmp files should already get cleaned up by the test framework, but
          // we still do it here as well, so that we clean up as much as we can, even
          // when a test is the SuppressTempDirCleanUp annotation
          if (rootTmpDir != null && rootTmpDir.exists() && !recurseDelete(rootTmpDir)) {
            String msg = "!!!! WARNING: best effort to remove "
                + rootTmpDir.getAbsolutePath() + " FAILED !!!!!";
            if (LEAVE_TEST_TMP_DIR_ANNOTATION) {
              System.err.println(msg);
            } else {
              // TODO: do we want to fail here with this message? Is the test framework
              // fail that should happen better?
              fail(msg);
            }
          }
        }
      } finally {
        initCoreDataDir = null;
        System.clearProperty("jetty.testMode");
        System.clearProperty("tests.shardhandler.randomSeed");
        System.clearProperty("enable.update.log");
        System.clearProperty("useCompoundFile");
        System.clearProperty("urlScheme");
        
        if (isSSLMode()) {
          HttpClientUtil.setConfigurer(new HttpClientConfigurer());
        }
        // clean up static
        sslConfig = null;
      }
    }
    
    IpTables.unblockAllPorts();
  }

