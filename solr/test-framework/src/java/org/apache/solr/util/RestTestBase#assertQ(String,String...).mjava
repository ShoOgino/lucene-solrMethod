  /** 
   * Validates a query matches some XPath test expressions
   * 
   * @param request a URL path with optional query params, e.g. "/schema/fields?fl=id,_version_" 
   */
  public static void assertQ(String request, String... tests) {
    try {
      int queryStartPos = request.indexOf('?');
      String query;
      String path;
      if (-1 == queryStartPos) {
        query = "";
        path = request;
      } else {
        query = request.substring(queryStartPos + 1);
        path = request.substring(0, queryStartPos);
      }
      query = setParam(query, "wt", "xml");
      request = path + '?' + setParam(query, "indent", "on");

      String response = restTestHarness.query(request);

      // TODO: should the facet handling below be converted to parse the URL?
      /*
      if (req.getParams().getBool("facet", false)) {
        // add a test to ensure that faceting did not throw an exception
        // internally, where it would be added to facet_counts/exception
        String[] allTests = new String[tests.length+1];
        System.arraycopy(tests,0,allTests,1,tests.length);
        allTests[0] = "*[count(//lst[@name='facet_counts']/*[@name='exception'])=0]";
        tests = allTests;
      }
      */

      String results = restTestHarness.validateXPath(response, tests);

      if (null != results) {
        String msg = "REQUEST FAILED: xpath=" + results
            + "\n\txml response was: " + response
            + "\n\trequest was:" + request;

        log.error(msg);
        throw new RuntimeException(msg);
      }

    } catch (XPathExpressionException e1) {
      throw new RuntimeException("XPath is invalid", e1);
    } catch (Exception e2) {
      SolrException.log(log, "REQUEST FAILED: " + request, e2);
      throw new RuntimeException("Exception during query", e2);
    }
  }

