  /**
   * Insures that the given param is included in the query with the given value.
   *
   * <ol>
   *   <li>If the param is already included with the given value, the request is returned unchanged.</li>
   *   <li>If the param is not already included, it is added with the given value.</li>
   *   <li>If the param is already included, but with a different value, the value is replaced with the given value.</li>
   *   <li>If the param is already included multiple times, they are replaced with a single param with given value.</li>
   * </ol>
   *
   * The passed-in valueToSet should NOT be URL encoded, as it will be URL encoded by this method.
   *
   * @param query The query portion of a request URL, e.g. "wt=json&indent=on&fl=id,_version_"
   * @param paramToSet The parameter name to insure the presence of in the returned request 
   * @param valueToSet The parameter value to insure in the returned request
   * @return The query with the given param set to the given value 
   */
  private static String setParam(String query, String paramToSet, String valueToSet) {
    if (null == valueToSet) {
      valueToSet = "";
    }
    try {
      StringBuilder builder = new StringBuilder();
      if (null == query || query.trim().isEmpty()) {
        // empty query -> return "paramToSet=valueToSet"
        builder.append(paramToSet);
        builder.append('=');
        StrUtils.partialURLEncodeVal(builder, valueToSet);
        return builder.toString();
      }
      MultiMapSolrParams requestParams = SolrRequestParsers.parseQueryString(query);
      String[] values = requestParams.getParams(paramToSet);
      if (null == values) {
        // paramToSet isn't present in the request -> append "&paramToSet=valueToSet"
        builder.append(query);
        builder.append('&');
        builder.append(paramToSet);
        builder.append('=');
        StrUtils.partialURLEncodeVal(builder, valueToSet);
        return builder.toString();
      }
      if (1 == values.length && valueToSet.equals(values[0])) {
        // paramToSet=valueToSet is already in the query - just return the query as-is.
        return query;
      }
      // More than one value for paramToSet on the request, or paramToSet's value is not valueToSet
      // -> rebuild the query
      boolean isFirst = true;
      for (Map.Entry<String,String[]> entry : requestParams.getMap().entrySet()) {
        String key = entry.getKey();
        String[] valarr = entry.getValue();

        if ( ! key.equals(paramToSet)) {
          for (String val : valarr) {
            builder.append(isFirst ? "" : '&');
            isFirst = false;
            builder.append(key);
            builder.append('=');
            StrUtils.partialURLEncodeVal(builder, null == val ? "" : val);
          }
        }
      }
      builder.append(isFirst ? "" : '&');
      builder.append(paramToSet);
      builder.append('=');
      StrUtils.partialURLEncodeVal(builder, valueToSet);
      return builder.toString();
    } catch (IOException e) {
      throw new RuntimeException(e);
    }
  }

