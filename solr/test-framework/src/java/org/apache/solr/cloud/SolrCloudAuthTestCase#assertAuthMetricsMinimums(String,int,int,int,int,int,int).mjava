  /**
   * Common test method to be able to check security from any authentication plugin
   * @param prefix the metrics key prefix, currently "SECURITY./authentication." for basic auth and "SECURITY./authentication/pki." for PKI 
   */
  private void assertAuthMetricsMinimums(String prefix, int requests, int authenticated, int passThrough, int failWrongCredentials, int failMissingCredentials, int errors) {
    List<Map<String, Metric>> metrics = new ArrayList<>();
    cluster.getJettySolrRunners().forEach(r -> {
      MetricRegistry registry = r.getCoreContainer().getMetricManager().registry("solr.node");
      assertNotNull(registry);
      metrics.add(registry.getMetrics());
    });

    Map<String,Long> counts = new HashMap<>();
    AUTH_METRICS_KEYS.forEach(k -> {
      counts.put(k, sumCount(prefix, k, metrics));
    });
    
    // check each counter
    assertExpectedMetrics(requests, "requests", counts);
    assertExpectedMetrics(authenticated, "authenticated", counts);
    assertExpectedMetrics(passThrough, "passThrough", counts);
    assertExpectedMetrics(failWrongCredentials, "failWrongCredentials", counts);
    assertExpectedMetrics(failMissingCredentials, "failMissingCredentials", counts);
    assertExpectedMetrics(errors, "errors", counts);
    if (counts.get("requests") > 0) {
      assertTrue("requestTimes count not > 1", counts.get("requestTimes") > 1);
      assertTrue("totalTime not > 0", counts.get("totalTime") > 0);
    }
  }

