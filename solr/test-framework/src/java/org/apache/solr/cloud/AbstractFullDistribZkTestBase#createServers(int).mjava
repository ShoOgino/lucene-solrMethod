  @Override
  protected void createServers(int numServers) throws Exception {

    File controlJettyDir = createTempDir("control").toFile();
    setupJettySolrHome(controlJettyDir);
    controlJetty = createJetty(controlJettyDir, useJettyDataDir ? getDataDir(testDir
        + "/control/data") : null);
    try (SolrClient client = createCloudClient("control_collection")) {
      assertEquals(0, CollectionAdminRequest
          .createCollection("control_collection", "conf1", 1, 1)
          .setCreateNodeSet(controlJetty.getNodeName())
          .process(client).getStatus());
      }
    controlClient = new HttpSolrClient.Builder(controlJetty.getBaseUrl() + "/control_collection").build();
    if (sliceCount <= 0) {
      // for now, just create the cloud client for the control if we don't
      // create the normal cloud client.
      // this can change if more tests need it.
      controlClientCloud = createCloudClient("control_collection");
      controlClientCloud.connect();
      waitForCollection(controlClientCloud.getZkStateReader(),
          "control_collection", 0);
      // NOTE: we are skipping creation of the chaos monkey by returning here
      cloudClient = controlClientCloud; // temporary - some code needs/uses
      // cloudClient
      return;
    }

    initCloud();

    createJettys(numServers);

    int cnt = getTotalReplicas(DEFAULT_COLLECTION);
    if (cnt > 0) {
      waitForCollection(cloudClient.getZkStateReader(), DEFAULT_COLLECTION, sliceCount);
    }

  }

