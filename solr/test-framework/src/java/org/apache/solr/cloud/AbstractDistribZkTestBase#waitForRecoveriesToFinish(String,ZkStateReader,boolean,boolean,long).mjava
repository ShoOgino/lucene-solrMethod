  public static void waitForRecoveriesToFinish(String collection,
      ZkStateReader zkStateReader, boolean verbose, boolean failOnTimeout, long timeoutSeconds)
      throws Exception {
    log.info("Wait for recoveries to finish - collection: " + collection + " failOnTimeout:" + failOnTimeout + " timeout (sec):" + timeoutSeconds);
    try {
      zkStateReader.waitForState(collection, timeoutSeconds, TimeUnit.SECONDS, (liveNodes, docCollection) -> {
        if (docCollection == null)
          return false;
        boolean sawLiveRecovering = false;

        assertNotNull("Could not find collection:" + collection, docCollection);
        Map<String,Slice> slices = docCollection.getSlicesMap();
        assertNotNull("Could not find collection:" + collection, slices);
        for (Map.Entry<String,Slice> entry : slices.entrySet()) {
          Slice slice = entry.getValue();
          if (slice.getState() == Slice.State.CONSTRUCTION) { // similar to replica recovering; pretend its the same
                                                              // thing
            if (verbose) System.out.println("Found a slice in construction state; will wait.");
            sawLiveRecovering = true;
          }
          Map<String,Replica> shards = slice.getReplicasMap();
          for (Map.Entry<String,Replica> shard : shards.entrySet()) {
            if (verbose) System.out.println("replica:" + shard.getValue().getName() + " rstate:"
                + shard.getValue().getStr(ZkStateReader.STATE_PROP)
                + " live:"
                + liveNodes.contains(shard.getValue().getNodeName()));
            final Replica.State state = shard.getValue().getState();
            if ((state == Replica.State.RECOVERING || state == Replica.State.DOWN
                || state == Replica.State.RECOVERY_FAILED)
                && liveNodes.contains(shard.getValue().getStr(ZkStateReader.NODE_NAME_PROP))) {
              return false;
            }
          }
        }
        if (!sawLiveRecovering) {
          if (!sawLiveRecovering) {
            if (verbose) System.out.println("no one is recoverying");
          } else {
            if (verbose) System.out.println("Gave up waiting for recovery to finish..");
            return false;
          }
          return true;
        } else {
          return false;
        }
      });
    } catch (TimeoutException | InterruptedException e) {
      Diagnostics.logThreadDumps("Gave up waiting for recovery to finish.  THREAD DUMP:");
      zkStateReader.getZkClient().printLayoutToStream(System.out);
      fail("There are still nodes recoverying - waited for " + timeoutSeconds + " seconds");
    }

    log.info("Recoveries finished - collection: " + collection);
  }

