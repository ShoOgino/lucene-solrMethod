  /**
   * Creates a JettySolrRunner with a socket proxy sitting infront of the Jetty server,
   * which gives us the ability to simulate network partitions without having to fuss
   * with IPTables.
   */
  public JettySolrRunner createProxiedJetty(File solrHome, String dataDir,
                                     String shardList, String solrConfigOverride, String schemaOverride)
      throws Exception {

    JettyConfig jettyconfig = JettyConfig.builder()
        .setContext(context)
        .stopAtShutdown(false)
        .withServlets(getExtraServlets())
        .withFilters(getExtraRequestFilters())
        .withSSLConfig(sslConfig)
        .build();

    Properties props = new Properties();
    if (solrConfigOverride != null)
      props.setProperty("solrconfig", solrConfigOverride);
    if (schemaOverride != null)
      props.setProperty("schema", schemaOverride);
    if (shardList != null)
      props.setProperty("shards", shardList);
    if (dataDir != null)
      props.setProperty("solr.data.dir", getDataDir(dataDir));
    props.setProperty("coreRootDirectory", solrHome.toPath().resolve("cores").toAbsolutePath().toString());

    JettySolrRunner jetty = new JettySolrRunner(solrHome.getPath(), props, jettyconfig);

    SocketProxy proxy = new SocketProxy(0, sslConfig != null && sslConfig.isSSLMode());
    jetty.setProxyPort(proxy.getListenPort());
    jetty.start();
    proxy.open(jetty.getBaseUrl().toURI());
    proxies.put(proxy.getUrl(), proxy);
    return jetty;
  }

