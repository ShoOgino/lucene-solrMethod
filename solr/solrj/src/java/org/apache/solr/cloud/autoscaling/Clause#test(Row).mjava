  TestStatus test(Row row) {
    AtomicReference<TestStatus> result = new AtomicReference<>(NOT_APPLICABLE);
    if (isPerCollectiontag()) {

      for (Map.Entry<String, Map<String, List<ReplicaInfo>>> colls : row.replicaInfo.entrySet()) {
        if (result.get() == FAIL) break;
        if (!collection.isPass(colls.getKey())) continue;
        int count = 0;
        for (Map.Entry<String, List<ReplicaInfo>> shards : colls.getValue().entrySet()) {
          if (!shard.isPass(shards.getKey()) || result.get() == FAIL) break;
          count += shards.getValue().size();
          if (shard.val.equals(EACH)) testReplicaCount(row, result, count);
          if (EACH.equals(shard.val)) count = 0;
        }
        if (shard.val.equals(ANY)) testReplicaCount(row, result, count);
      }
    } else {
      if (!tag.isPass(row)) result.set(TestStatus.FAIL);
    }
    if (result.get() == FAIL)
      row.violations.add(this);
    return result.get();

  }

