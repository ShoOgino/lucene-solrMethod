  public List<Violation> test(List<Row> allRows) {
    List<Violation> errors = new ArrayList<>();
    if (isPerCollectiontag()) {
      Map<String, Map<String, Map<String, AtomicInteger>>> replicaCount = computeReplicaCounts(allRows);
      for (Map.Entry<String, Map<String, Map<String, AtomicInteger>>> e : replicaCount.entrySet()) {
        if (!collection.isPass(e.getKey())) continue;
        for (Map.Entry<String, Map<String, AtomicInteger>> shardVsCount : e.getValue().entrySet()) {
          if (!shard.isPass(shardVsCount.getKey())) continue;
          for (Map.Entry<String, AtomicInteger> counts : shardVsCount.getValue().entrySet()) {
            if (!replica.isPass(counts.getValue())) {
              errors.add(new Violation(e.getKey(), shardVsCount.getKey(),
                  tag.name.equals("node") ? counts.getKey() : null));
            }
          }
        }
      }
    } else {
      for (Row r : allRows) {
        if (!tag.isPass(r)) {
          errors.add(new Violation(null, null, r.node));
        }
      }
    }
    return errors;

  }

