    Session(ClusterDataProvider dataProvider) {
      this.nodes = new ArrayList<>(dataProvider.getNodes());
      this.dataProvider = dataProvider;
      for (String node : nodes) {
        collections.addAll(dataProvider.getReplicaInfo(node, Collections.emptyList()).keySet());
      }

      expandedClauses = clusterPolicy.stream()
          .filter(clause -> !clause.isPerCollectiontag())
          .collect(Collectors.toList());

      for (String c : collections) {
        addClausesForCollection(dataProvider, c);
      }

      Collections.sort(expandedClauses);
      List<String> p = new ArrayList<>(params);
      p.addAll(expandedClauses.stream().map(clause -> clause.tag.name).distinct().collect(Collectors.toList()));
      paramsOfInterest = new ArrayList<>(p);
      matrix = new ArrayList<>(nodes.size());
      for (String node : nodes) matrix.add(new Row(node, paramsOfInterest, dataProvider));
      applyRules();
    }

