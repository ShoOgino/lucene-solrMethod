  /**
   * The provided httpClient should use a multi-threaded connection manager
   * @deprecated use {@link Builder} instead.  This will soon be a protected
   * method and will only be available for use in implementing subclasses.
   */
  @Deprecated
  public LBHttpSolrClient(HttpClient httpClient, ResponseParser parser, String... solrServerUrl) {
    clientIsInternal = (httpClient == null);
    if (httpClient == null) {
      ModifiableSolrParams params = new ModifiableSolrParams();
      if (solrServerUrl.length > 1) {
        // we prefer retrying another server
        params.set(HttpClientUtil.PROP_USE_RETRY, false);
      } else {
        params.set(HttpClientUtil.PROP_USE_RETRY, true);
      }
      this.httpClient = HttpClientUtil.createClient(params);
    } else {
      this.httpClient = httpClient;
    }
    
    this.parser = parser;
    
    for (String s : solrServerUrl) {
      ServerWrapper wrapper = new ServerWrapper(makeSolrClient(s));
      aliveServers.put(wrapper.getKey(), wrapper);
    }
    updateAliveList();
  }

