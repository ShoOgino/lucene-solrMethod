  @Override
  public Object doWork(Object value) throws IOException{
    if(null == value){
      return null;
    } else if(value instanceof Matrix) {
      Matrix matrix = (Matrix) value;
      double[][] data = matrix.getData();
      double[][] unitData = new double[data.length][];
      for(int i=0; i<data.length; i++) {
        double[] row = data[i];
        ArrayRealVector vector = new ArrayRealVector(row);
        double[] unitRow = vector.unitVector().toArray();
        unitData[i] = unitRow;
      }

      Matrix m = new Matrix(unitData);
      m.setRowLabels(matrix.getRowLabels());
      m.setColumnLabels(matrix.getRowLabels());
      return m;
    } else if(value instanceof List) {
      List<Number> values = (List<Number>)value;
      double[] doubles = new double[values.size()];
      for(int i=0; i<doubles.length; i++) {
       doubles[i] = values.get(i).doubleValue();
      }

      ArrayRealVector vector = new ArrayRealVector(doubles);
      RealVector unitVector = vector.unitVector();
      List<Number> unitList = new ArrayList(doubles.length);
      double[] unitArray = unitVector.toArray();
      for(double d : unitArray) {
        unitList.add(d);
      }

      return unitList;
    } else {
      throw new IOException("The unit function expects either a numeric array or matrix as a parameter");
    }
  }

