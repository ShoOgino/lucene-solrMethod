    private void readMetrics(String solrNode, Set<String> requestedTags, ClientSnitchCtx snitchContext) {
      List<String> metricsNames = null;
      for (String tag : requestedTags) {
        if (tag.startsWith(METRICS_PREFIX)) {
          if (metricsNames == null) metricsNames = new ArrayList<>();
          metricsNames.add(tag);
        }
      }
      if (metricsNames == null) return;
      for (String metricsName : metricsNames) {
        List<String> ss = StrUtils.splitSmart(metricsName, ':');
        if (ss.size() < 3 || ss.size() > 4) {
          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "Invalid metrics name" + metricsName);
        }
        try {
          ModifiableSolrParams params = new ModifiableSolrParams();
          params.add("group", ss.get(1));
          params.add("prefix", ss.get(2));
          if (ss.size() == 4) params.add("property", ss.get(3));
          SimpleSolrResponse rsp = snitchContext.invoke(solrNode, CommonParams.METRICS_PATH, params);
          Object v = Utils.getObjectByPath(rsp.nl, true, ss);
          if (v != null) snitchContext.getTags().put(metricsName, v);
        } catch (Exception e) {
          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "", e);
        }
      }
    }

