  @Override
  public Object doWork(Object first, Object second) throws IOException{
    if(null == first){
      throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - null found for the first value",toExpression(constructingFactory)));
    }
    if(null == second){
      throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - null found for the second value",toExpression(constructingFactory)));
    }

    List<Number> means = (List<Number>)first;
    Matrix covar = (Matrix)second;

    double[] m = new double[means.size()];
    for(int i=0; i< m.length; i++) {
      m[i] = means.get(i).doubleValue();
    }

    return new MultivariateNormalDistribution(m, covar.getData());
  }

