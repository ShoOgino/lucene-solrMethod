  public SchedulerStream(StreamExpression expression, StreamFactory factory) throws IOException {
    // grab all parameters out
    List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression, Expressible.class, TupleStream.class);


    if(2 != streamExpressions.size()){
      throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - expecting a single stream but found %d",expression, streamExpressions.size()));
    }

    TupleStream stream1 = factory.constructStream(streamExpressions.get(0));
    TupleStream stream2 = factory.constructStream(streamExpressions.get(1));

    if(!(stream1 instanceof TopicStream) || !(stream2 instanceof TopicStream)) {
      throw new IOException("The scheduler expects both stream parameters to be topics.");
    }

    init(new PushBackStream(stream1), new PushBackStream(stream2));
  }

