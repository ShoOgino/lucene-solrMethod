    private void readSysProps(String solrNode, Set<String> requestedTags, ClientSnitchCtx snitchContext) {
      List<String> prefixes = null;
      ModifiableSolrParams params;
      List<String> sysProp = null;
      for (String tag : requestedTags) {
        if (!tag.startsWith(SYSPROP)) continue;
        if (sysProp == null) {
          prefixes = new ArrayList<>();
          sysProp = new ArrayList<>();
          prefixes.add("system.properties");
        }
        sysProp.add(tag.substring(SYSPROP.length()));
      }

      if (sysProp == null) return;
      params = new ModifiableSolrParams();
      params.add("prefix", StrUtils.join(prefixes, ','));
      for (String s : sysProp) params.add("property", s);
      try {
        SimpleSolrResponse rsp = snitchContext.invoke(solrNode, CommonParams.METRICS_PATH, params);
        Map m = rsp.nl.asMap(6);
        for (String s : sysProp) {
          Object v = Utils.getObjectByPath(m, true,
              Arrays.asList("metrics", "solr.jvm", "system.properties", s));
          if (v != null) snitchContext.getTags().put("sysprop." + s, v);
        }

      } catch (Exception e) {
        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "", e);

      }
    }

