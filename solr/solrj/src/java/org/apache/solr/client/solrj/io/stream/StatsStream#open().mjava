  public void open() throws IOException {

    String json = getJsonFacetString(metrics);

    ModifiableSolrParams paramsLoc = new ModifiableSolrParams(params);
    paramsLoc.set("json.facet", json);
    paramsLoc.set("rows", "0");

    @SuppressWarnings({"unchecked"})
    Map<String, List<String>> shardsMap = (Map<String, List<String>>)context.get("shards");
    if(shardsMap == null) {
      QueryRequest request = new QueryRequest(paramsLoc, SolrRequest.METHOD.POST);
      cloudSolrClient = cache.getCloudSolrClient(zkHost);
      try {
        @SuppressWarnings({"rawtypes"})
        NamedList response = cloudSolrClient.request(request, collection);
        getTuples(response, metrics);
      } catch (Exception e) {
        throw new IOException(e);
      }
    } else {
      List<String> shards = shardsMap.get(collection);
      HttpSolrClient client = cache.getHttpSolrClient(shards.get(0));

      if(shards.size() > 1) {
        String shardsParam = getShardString(shards);
        paramsLoc.add("shards", shardsParam);
        paramsLoc.add("distrib", "true");
      }

      QueryRequest request = new QueryRequest(paramsLoc, SolrRequest.METHOD.POST);
      try {
        @SuppressWarnings({"rawtypes"})
        NamedList response = client.request(request);
        getTuples(response, metrics);
      } catch (Exception e) {
        throw new IOException(e);
      }
    }
  }

