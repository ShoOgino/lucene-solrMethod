  @Override
  public StreamExpression toExpression(StreamFactory factory) throws IOException {    
    // function name
    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));
    
    // streams
    if(originalStream instanceof Expressible){
      expression.addParameter(((Expressible)originalStream).toExpression(factory));
    }
    else{
      throw new IOException("This UniqueStream contains a non-expressible TupleStream - it cannot be converted to an expression");
    }
    
    // over
    if(originalEqualitor instanceof Expressible){
      expression.addParameter(new StreamExpressionNamedParameter("over",((Expressible)originalEqualitor).toExpression(factory)));
    }
    else{
      throw new IOException("This UniqueStream contains a non-expressible equalitor - it cannot be converted to an expression");
    }
    
    return expression;   
  }

