  public static List<Suggester.SuggestionInfo> getSuggestions(AutoScalingConfig autoScalingConf,
                                                              SolrCloudManager cloudManager, int max) {
    Policy policy = autoScalingConf.getPolicy();
    Suggestion.Ctx ctx = new Suggestion.Ctx();
    ctx.max = max;
    ctx.session = policy.createSession(cloudManager);
    List<Violation> violations = ctx.session.getViolations();
    for (Violation violation : violations) {
      violation.getClause().getThirdTag().varType.getSuggestions(ctx.setViolation(violation));
      ctx.violation = null;
    }

    for (Violation current : ctx.session.getViolations()) {
      for (Violation old : violations) {
        if (current.equals(old)) {
          //could not be resolved
          ctx.suggestions.add(new Suggester.SuggestionInfo(current, null, "unresolved-violation"));
          break;
        }
      }
    }

    if (ctx.needMore()) {
      try {
        addMissingReplicas(cloudManager, ctx);
      } catch (IOException e) {
        log.error("Unable to fetch cluster state", e);
      }
    }

    if (ctx.needMore()) {
      suggestOptimizations(ctx, Math.min(ctx.max - ctx.getSuggestions().size(), 10));
    }
    return ctx.getSuggestions();
  }

