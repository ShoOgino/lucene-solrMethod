  private StreamExpression toExpression(StreamFactory factory, boolean includeStreams) throws IOException {
    // function name
    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));
    
    // streams
    for (PushBackStream stream : streams) {
      if(includeStreams){
        expression.addParameter(stream.toExpression(factory));
      }
      else{
        expression.addParameter("<stream>");
      }
    }
    
    // on
    if (eq instanceof Expressible) {
      expression.addParameter(new StreamExpressionNamedParameter("on", ((Expressible) eq).toExpression(factory)));
    } else {
      throw new IOException(
          "This JoinStream contains a non-expressible equalitor - it cannot be converted to an expression");
    }
    
    return expression;
  }

