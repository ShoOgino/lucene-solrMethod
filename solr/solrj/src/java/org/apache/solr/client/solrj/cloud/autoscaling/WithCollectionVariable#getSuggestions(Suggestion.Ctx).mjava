  @Override
  public void getSuggestions(Suggestion.Ctx ctx) {
    if (ctx.violation.getViolatingReplicas().isEmpty()) return;

    Map<String, Object> nodeValues = ctx.session.nodeStateProvider.getNodeValues(ctx.violation.node, Collections.singleton("withCollection"));
    Map<String, String> withCollectionsMap = (Map<String, String>) nodeValues.get("withCollection");
    if (withCollectionsMap == null) return;

    Set<String> uniqueCollections = new HashSet<>();
    for (Violation.ReplicaInfoAndErr replicaInfoAndErr : ctx.violation.getViolatingReplicas()) {
      uniqueCollections.add(replicaInfoAndErr.replicaInfo.getCollection());
    }

    collectionLoop:
    for (String collection : uniqueCollections) {
      String withCollection = withCollectionsMap.get(collection);
      if (withCollection == null) continue;

      // can we find a node from which we can move a replica of the `withCollection`
      // without creating another violation?
      for (Row row : ctx.session.matrix) {
        if (ctx.violation.node.equals(row.node))  continue; // filter the violating node

        Set<String> hostedCollections = new HashSet<>();
        row.forEachReplica(replicaInfo -> hostedCollections.add(replicaInfo.getCollection()));

        if (hostedCollections.contains(withCollection) && !hostedCollections.contains(collection))  {
          // find the candidate replicas that we can move
          List<ReplicaInfo> movableReplicas = new ArrayList<>();
          row.forEachReplica(replicaInfo -> {
            if (replicaInfo.getCollection().equals(withCollection)) {
              movableReplicas.add(replicaInfo);
            }
          });

          for (ReplicaInfo toMove : movableReplicas) {
            // candidate source node for a move replica operation
            Suggester suggester = ctx.session.getSuggester(MOVEREPLICA)
                .forceOperation(true)
                .hint(Suggester.Hint.COLL_SHARD, new Pair<>(withCollection, "shard1"))
                .hint(Suggester.Hint.SRC_NODE, row.node)
                .hint(Suggester.Hint.REPLICA, toMove.getName())
                .hint(Suggester.Hint.TARGET_NODE, ctx.violation.node);
            if (ctx.addSuggestion(suggester) != null)
              continue collectionLoop; // one suggestion is enough for this collection
          }
        }
      }

      // we could not find a valid move, so we suggest adding a replica
      Suggester suggester = ctx.session.getSuggester(ADDREPLICA)
          .forceOperation(true)
          .hint(Suggester.Hint.COLL_SHARD, new Pair<>(withCollection, "shard1"))
          .hint(Suggester.Hint.TARGET_NODE, ctx.violation.node);
      ctx.addSuggestion(suggester);
    }
  }

