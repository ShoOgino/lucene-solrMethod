  public Tuple read() throws IOException {

    if(finished) {
      Map m = new HashMap();
      m.put("EOF", true);
      return new Tuple(m);
    } else {
      finished = true;
      Map<String, Object> map = new HashMap();
      Set<Map.Entry<String, Object>> entries = tupleParams.entrySet();

      for (Map.Entry<String, Object> entry : entries) {
        String name = entry.getKey();
        Object o = entry.getValue();
        if (o instanceof TupleStream) {
          List<Tuple> tuples = new ArrayList();
          TupleStream tStream = (TupleStream) o;
          tStream.setStreamContext(streamContext);
          try {
            tStream.open();
            TUPLES:
            while (true) {
              Tuple tuple = tStream.read();
              if (tuple.EOF) {
                break TUPLES;
              } else {
                tuples.add(tuple);
              }
            }
            map.put(name, tuples);
          } finally {
            tStream.close();
          }
        } else if ((o instanceof StreamEvaluator))  {
          Tuple eTuple = new Tuple(streamContext.getLets());
          StreamEvaluator evaluator = (StreamEvaluator) o;
          Object eo = evaluator.evaluate(eTuple);
          map.put(name, eo);
        } else {
          map.put(name, streamContext.getLets().get(o.toString()));
        }
      }
      return new Tuple(map);
    }
  }

