  @Override
  @SuppressWarnings("unchecked")
  public void setResponse(NamedList<Object> res) {
    super.setResponse(res);

    // Parse indexinfo
    indexInfo = (NamedList<Object>) res.get("index");

    NamedList<Object> schema = (NamedList<Object>) res.get("schema");
    NamedList<Object> flds = (NamedList<Object>) res.get("fields");
    NamedList<Object> dynamicFlds = (NamedList<Object>) res.get("dynamicFields");

    if (flds == null && schema != null ) {
      flds = (NamedList<Object>) schema.get("fields");
    }
    if (flds != null) {
      fieldInfo = new HashMap<>();
      for (Map.Entry<String, Object> field : flds) {
        FieldInfo f = new FieldInfo(field.getKey());
        f.read((NamedList<Object>) field.getValue());
        fieldInfo.put(field.getKey(), f);
      }
    }

    if (dynamicFlds == null && schema != null) {
      dynamicFlds = (NamedList<Object>) schema.get("dynamicFields");
    }
    if (dynamicFlds != null) {
      dynamicFieldInfo = new HashMap<>();
      for (Map.Entry<String, Object> dynamicField : dynamicFlds) {
        FieldInfo f = new FieldInfo(dynamicField.getKey());
        f.read((NamedList<Object>) dynamicField.getValue());
        dynamicFieldInfo.put(dynamicField.getKey(), f);
      }
    }

    if( schema != null ) {
      NamedList<Object> fldTypes = (NamedList<Object>) schema.get("types");
      if (fldTypes != null) {
        fieldTypeInfo = new HashMap<>();
        for (Map.Entry<String, Object> fieldType : fldTypes) {
          FieldTypeInfo ft = new FieldTypeInfo(fieldType.getKey());
          ft.read((NamedList<Object>) fieldType.getValue());
          fieldTypeInfo.put(fieldType.getKey(), ft);
        }
      }
    }
  }

