  @Override
  public Object doWork(Object value){
    if(null == value){
      return null;
    }
    else if(value instanceof List){
      return Arrays.stream(StatUtils.normalize(((List<?>)value).stream().mapToDouble(innerValue -> ((Number)innerValue).doubleValue()).toArray())).mapToObj(Double::new).collect(Collectors.toList());
    } else if (value instanceof Matrix) {
      Matrix matrix = (Matrix) value;
      double[][] data = matrix.getData();
      double[][] standardized = new double[data.length][];
      for(int i=0; i<data.length; i++) {
        double[] row = data[i];
        standardized[i] = StatUtils.normalize(row);
      }
      return new Matrix(standardized);
    } else {
      return doWork(Arrays.asList((BigDecimal)value));
    }
  }

