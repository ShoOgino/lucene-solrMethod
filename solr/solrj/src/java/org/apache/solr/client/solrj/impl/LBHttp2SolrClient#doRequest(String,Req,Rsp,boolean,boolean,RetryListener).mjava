  private Cancellable doRequest(String baseUrl, Req req, Rsp rsp, boolean isNonRetryable,
                         boolean isZombie, RetryListener listener) {
    rsp.server = baseUrl;
    req.getRequest().setBasePath(baseUrl);
    return ((Http2SolrClient)getClient(baseUrl)).asyncRequest(req.getRequest(), null, new AsyncListener<>() {
      @Override
      public void onSuccess(NamedList<Object> result) {
        rsp.rsp = result;
        if (isZombie) {
          zombieServers.remove(baseUrl);
        }
        listener.onSuccess(rsp);
      }

      @Override
      public void onFailure(Throwable oe) {
        try {
          throw (Exception) oe;
        } catch (BaseHttpSolrClient.RemoteExecutionException e) {
          listener.onFailure(e, false);
        } catch (SolrException e) {
          // we retry on 404 or 403 or 503 or 500
          // unless it's an update - then we only retry on connect exception
          if (!isNonRetryable && RETRY_CODES.contains(e.code())) {
            listener.onFailure((!isZombie) ? addZombie(baseUrl, e) : e, true);
          } else {
            // Server is alive but the request was likely malformed or invalid
            if (isZombie) {
              zombieServers.remove(baseUrl);
            }
            listener.onFailure(e, false);
          }
        } catch (SocketException e) {
          if (!isNonRetryable || e instanceof ConnectException) {
            listener.onFailure((!isZombie) ? addZombie(baseUrl, e) : e, true);
          } else {
            listener.onFailure(e, false);
          }
        } catch (SocketTimeoutException e) {
          if (!isNonRetryable) {
            listener.onFailure((!isZombie) ? addZombie(baseUrl, e) : e, true);
          } else {
            listener.onFailure(e, false);
          }
        } catch (SolrServerException e) {
          Throwable rootCause = e.getRootCause();
          if (!isNonRetryable && rootCause instanceof IOException) {
            listener.onFailure((!isZombie) ? addZombie(baseUrl, e) : e, true);
          } else if (isNonRetryable && rootCause instanceof ConnectException) {
            listener.onFailure((!isZombie) ? addZombie(baseUrl, e) : e, true);
          } else {
            listener.onFailure(e, false);
          }
        } catch (Exception e) {
          listener.onFailure(new SolrServerException(e), false);
        }
      }
    });
  }

