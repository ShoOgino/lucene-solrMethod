    public SolrRequest getOperation() {
      if (!isInitialized) {
        Set<String> collections = (Set<String>) hints.get(Hint.COLL);
        String shard = (String) hints.get(Hint.SHARD);
        if (collections != null) {
          for (String coll : collections) {
            // if this is not a known collection from the existing clusterstate,
            // then add it
            if (session.matrix.stream().noneMatch(row -> row.collectionVsShardVsReplicas.containsKey(coll))) {
              session.addClausesForCollection(session.dataProvider, coll);
            }
            for (Row row : session.matrix) {
              if (!row.collectionVsShardVsReplicas.containsKey(coll))
                row.collectionVsShardVsReplicas.put(coll, new HashMap<>());
              if (shard != null) {
                Map<String, List<ReplicaInfo>> shardInfo = row.collectionVsShardVsReplicas.get(coll);
                if (!shardInfo.containsKey(shard)) shardInfo.put(shard, new ArrayList<>());
              }
            }
          }
          Collections.sort(session.expandedClauses);
        }
        Set<String> srcNodes = (Set<String>) hints.get(Hint.SRC_NODE);
        if (srcNodes != null && !srcNodes.isEmpty()) {
          // the source node is dead so live nodes may not have it
          for (String srcNode : srcNodes) {
            if(session.matrix.stream().noneMatch(row -> row.node.equals(srcNode)))
            session.matrix.add(new Row(srcNode, session.getPolicy().params, session.dataProvider));
          }
        }
        session.applyRules();
        originalViolations.addAll(session.getViolations());
        this.operation = init();
        isInitialized = true;
      }
      return operation;
    }

