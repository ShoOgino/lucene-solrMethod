  @Override
  public Object doWork(Object value) throws IOException {
    if(null == value){
      return value;
    }
    else if(!(value instanceof List<?>)){
      throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - found type %s for value, expecting a List",toExpression(constructingFactory), value.getClass().getSimpleName()));
    }

    List<Number> list = (List<Number>)value;

    if(0 == list.size()){
      return list;
    }

    double[] vec = new double[list.size()];
    for(int i=0; i< vec.length; i++) {
      vec[i] = list.get(i).doubleValue();
    }

    return StatUtils.sumSq(vec);
  }

