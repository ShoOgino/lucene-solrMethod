  @Override
  public Object doWork(Object... values) throws IOException {

    if(null == values){
      return null;
    }

    double min = 0;
    double max = 1;

    if(values.length == 3) {
      min = ((Number)values[1]).doubleValue();
      max = ((Number)values[2]).doubleValue();
    }

    if(values[0] instanceof Matrix) {
      Matrix matrix = (Matrix)values[0];
      double[][] data = matrix.getData();
      double[][] scaled = new double[data.length][];
      for(int i=0; i<scaled.length; i++) {
        double[] row = data[i];
        scaled[i] = scale(row, min, max);
      }

      return new Matrix(scaled);

    } else if(values[0] instanceof List) {
      @SuppressWarnings({"unchecked"})
      List<Number> vec = (List)values[0];
      double[] data = new double[vec.size()];

      for(int i=0; i<vec.size(); i++) {
        data[i] = vec.get(i).doubleValue();
      }

      data = scale(data, min, max);
      List<Number> scaled = new ArrayList<>(data.length);
      for(double d : data) {
        scaled.add(d);
      }

      return scaled;
    } else {
      throw new IOException();
    }
  }

