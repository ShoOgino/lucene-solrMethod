  /**
   * Parses the given named list and builds a token infoform it. Expects a named list of the form:
   * <br>
   * <pre><code>
   *  &lt;arr name="Tokenizer"&gt;
   *      &lt;str name="text"&gt;the_text&lt;/str&gt;
   *      &lt;str name="rawText"&gt;the_raw_text&lt;/str&gt; (optional)
   *      &lt;str name="type"&gt;the_type&lt;/str&gt;
   *      &lt;int name="start"&gt;1&lt;/str&gt;
   *      &lt;int name="end"&gt;3&lt;/str&gt;
   *      &lt;int name="position"&gt;1&lt;/str&gt;
   *      &lt;bool name="match"&gt;true | false&lt;/bool&gt; (optional)
   *  &lt;/arr&gt;
   * </code></pre>
   *
   * @param tokenNL The named list to parse.
   *
   * @return The built token info.
   */
  protected TokenInfo buildTokenInfo(NamedList<Object> tokenNL) {
    String text = (String) tokenNL.get("text");
    String rawText = (String) tokenNL.get("rawText");
    String type = (String) tokenNL.get("type");
    int start = (Integer) tokenNL.get("start");
    int end = (Integer) tokenNL.get("end");
    int position = (Integer) tokenNL.get("position");
    Boolean match = (Boolean) tokenNL.get("match");
    return new TokenInfo(text, rawText, type, start, end, position, (match == null ? false : match));
  }

