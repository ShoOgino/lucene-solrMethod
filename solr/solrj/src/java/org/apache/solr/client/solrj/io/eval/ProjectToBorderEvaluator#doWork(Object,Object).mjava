  @Override
  public Object doWork(Object value1, Object value2) throws IOException {
    if(!(value1 instanceof ConvexHull2D)){
      throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - found type %s for value, expecting a ConvexHull2D",toExpression(constructingFactory), value1.getClass().getSimpleName()));
    }

    if(!(value2 instanceof Matrix)){
      throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - found type %s for value, expecting a Matrix",toExpression(constructingFactory), value2.getClass().getSimpleName()));
    }

    ConvexHull2D convexHull2D = (ConvexHull2D)value1;
    Matrix matrix = (Matrix)value2;
    double[][] data = matrix.getData();
    Region<Euclidean2D> region = convexHull2D.createRegion();
    double[][] borderPoints = new double[data.length][2];
    int i = 0;
    for(double[] row : data) {
      BoundaryProjection<Euclidean2D> boundaryProjection = region.projectToBoundary(new Vector2D(row));
      Vector2D point = (Vector2D)boundaryProjection.getProjected();
      borderPoints[i][0] = point.getX();
      borderPoints[i][1] = point.getY();
      i++;
    }

    return new Matrix(borderPoints);

  }

