  @Override
  public Object doWork(Object... values) throws IOException {

    if(values.length < 3) {
      throw new IOException("knn expects three parameters a Matrix, numeric array and k");
    }

    Matrix matrix = null;
    double[] vec = null;
    int k = 0;

    if(values[0] instanceof Matrix) {
      matrix = (Matrix)values[0];
    } else {
      throw new IOException("The first parameter for knn should be a matrix.");
    }

    if(values[1] instanceof List) {
      @SuppressWarnings({"unchecked"})
      List<Number> nums = (List<Number>)values[1];
      vec = new double[nums.size()];
      for(int i=0; i<nums.size(); i++) {
        vec[i] = nums.get(i).doubleValue();
      }
    } else {
      throw new IOException("The second parameter for knn should be a numeric array.");
    }

    if(values[2] instanceof Number) {
      k = ((Number)values[2]).intValue();
    } else {
      throw new IOException("The third parameter for knn should be k.");
    }

    DistanceMeasure distanceMeasure = null;

    if(values.length == 4) {
      distanceMeasure = (DistanceMeasure)values[3];
    } else {
      distanceMeasure = new EuclideanDistance();
    }

    return search(matrix, vec, k, distanceMeasure);
  }

