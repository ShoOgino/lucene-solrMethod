  private StreamExpression toExpression(StreamFactory factory, boolean includeStreams) throws IOException {

    // function name
    StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()));

    // stream
    if(includeStreams) {
      if (highPriorityTasks instanceof Expressible) {
        expression.addParameter(((Expressible) highPriorityTasks).toExpression(factory));
      } else {
        throw new IOException("The SchedulerStream contains a non-expressible TupleStream - it cannot be converted to an expression");
      }

      if (tasks instanceof Expressible) {
        expression.addParameter(((Expressible) tasks).toExpression(factory));
      } else {
        throw new IOException("The SchedulerStream contains a non-expressible TupleStream - it cannot be converted to an expression");
      }
    }

    return expression;
  }

