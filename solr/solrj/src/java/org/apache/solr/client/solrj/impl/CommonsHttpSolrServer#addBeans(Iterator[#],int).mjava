  /**
   * Adds the beans supplied by the given iterator, specifying max time before they become committed
   * @param commitWithinMs  the time in milliseconds before a commit automatically is triggered
   * @param beanIterator  the iterator which returns Beans
   * @return the response from the SolrServer
   */
  public UpdateResponse addBeans(final Iterator<?> beanIterator, int commitWithinMs)
          throws SolrServerException, IOException {
    UpdateRequest req = new UpdateRequest();
    req.setDocIterator(new Iterator<SolrInputDocument>() {

      public boolean hasNext() {
        return beanIterator.hasNext();
      }

      public SolrInputDocument next() {
        Object o = beanIterator.next();
        if (o == null) return null;
        return getBinder().toSolrInputDocument(o);
      }

      public void remove() {
        beanIterator.remove();
      }
    });
    req.setCommitWithin(commitWithinMs);
    return req.process(this);
  }

