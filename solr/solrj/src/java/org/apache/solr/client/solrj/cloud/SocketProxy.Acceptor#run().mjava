    public void run() {
      try {
        while (!socket.isClosed()) {
          pause.get().await();
          try {
            Socket source = socket.accept();
            pause.get().await();
            if (receiveBufferSize > 0) {
              source.setReceiveBufferSize(receiveBufferSize);
            }
            if (log.isInfoEnabled()) {
              log.info("accepted {}, receiveBufferSize: {}", source, source.getReceiveBufferSize());
            }
            synchronized (connections) {
              connections.add(new Bridge(source, target));
            }
          } catch (SocketTimeoutException expected) {}
        }
      } catch (Exception e) {
        if (log.isDebugEnabled()) {
          log.debug("acceptor: finished for reason: {}", e.getLocalizedMessage());
        }
      }
    }

