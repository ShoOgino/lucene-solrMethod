  /**
   * Evaluate the date based on the specified function
   *
   * @param date
   * @return the evaluated value
   */
  private Number evaluate(LocalDateTime date) throws IOException {
    switch (function) {
      case year:
        return date.getYear();
      case month:
        return date.getMonthValue();
      case day:
        return date.getDayOfMonth();
      case dayofyear:
        return date.getDayOfYear();
      case hour:
        return date.getHour();
      case minute:
        return date.getMinute();
      case second:
        return date.getSecond();
      case dayofquarter:
        return date.get(IsoFields.DAY_OF_QUARTER);
      case quarter:
        return date.get(IsoFields.QUARTER_OF_YEAR);
      case week:
        return date.get(IsoFields.WEEK_OF_WEEK_BASED_YEAR);
      case epoch:
        return date.atZone(ZoneOffset.UTC).toInstant().toEpochMilli();
    }
    throw new IOException(String.format(Locale.ROOT, "Unsupported function %s called on LocalDateTime %s", function, date.toString()));
  }

