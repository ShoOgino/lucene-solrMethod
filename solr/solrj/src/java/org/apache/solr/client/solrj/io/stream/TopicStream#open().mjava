  public void open() throws IOException {
    this.tuples = new TreeSet<>();
    this.solrStreams = new ArrayList<>();
    this.eofTuples = Collections.synchronizedMap(new HashMap<>());

    if(checkpoints.size() == 0 && streamContext.numWorkers > 1) {
      //Each worker must maintain its own checkpoints
      this.id = this.id+"_"+streamContext.workerID;
    }

    if(streamContext.getSolrClientCache() != null) {
      cloudSolrClient = streamContext.getSolrClientCache().getCloudSolrClient(zkHost);
    } else {
      final List<String> hosts = new ArrayList<String>();
      hosts.add(zkHost);
      cloudSolrClient = new Builder(hosts, Optional.empty())
          .build();
      this.cloudSolrClient.connect();
    }

    if(checkpoints.size() == 0) {
      getPersistedCheckpoints();
      if(checkpoints.size() == 0) {
        getCheckpoints();
      }
    }

    constructStreams();
    openStreams();
  }

