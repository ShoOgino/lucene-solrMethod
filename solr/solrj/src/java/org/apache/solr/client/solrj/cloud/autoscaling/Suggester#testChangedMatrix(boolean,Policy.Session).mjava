  List<Violation> testChangedMatrix(boolean executeInStrictMode, Policy.Session session) {
    if (this.deviations != null) this.lastBestDeviation = this.deviations;
    this.deviations = null;
    Policy.setApproxValuesAndSortNodes(session.getPolicy().clusterPreferences, session.matrix);
    List<Violation> errors = new ArrayList<>();
    for (Clause clause : session.expandedClauses) {
      Clause originalClause = clause.derivedFrom == null ? clause : clause.derivedFrom;
      if (this.deviations == null) this.deviations = new LinkedHashMap<>();
      this.deviations.put(originalClause, new double[1]);
      List<Violation> errs = clause.test(session, this.deviations == null ? null : this.deviations.get(originalClause));
      if (!errs.isEmpty() &&
          (executeInStrictMode || clause.strict)) errors.addAll(errs);
    }
    if (!errors.isEmpty()) deviations = null;
    return errors;
  }

