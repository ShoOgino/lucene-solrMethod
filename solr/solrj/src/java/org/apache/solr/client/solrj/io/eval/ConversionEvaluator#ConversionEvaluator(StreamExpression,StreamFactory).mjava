  public ConversionEvaluator(StreamExpression expression, StreamFactory factory) throws IOException {
    super(expression, factory);

    if (3 != subEvaluators.size()) {
      throw new EvaluatorException(new IOException(String.format(Locale.ROOT, "Invalid expression %s - expecting 3 value but found %d", expression, subEvaluators.size())));
    }

    try {
      from = LENGTH_CONSTANT.valueOf(subEvaluators.get(0).toExpression(factory).toString().toUpperCase(Locale.ROOT));
      to = LENGTH_CONSTANT.valueOf(subEvaluators.get(1).toExpression(factory).toString().toUpperCase(Locale.ROOT));
      this.convert = getConvert(from, to);
    } catch (IllegalArgumentException e) {
      throw new EvaluatorException(e);
    }
  }

