  //Gets the highest version number for the slice.
  private long getCheckpoint(Slice slice, Set<String> liveNodes) throws IOException {
    Collection<Replica> replicas = slice.getReplicas();
    long checkpoint = -1;
    ModifiableSolrParams params = new ModifiableSolrParams();
    params.set("q","*:*");
    params.set(SORT, "_version_ desc");
    params.set(DISTRIB, "false");
    params.set("rows", 1);
    for(Replica replica : replicas) {
      if(replica.getState() == Replica.State.ACTIVE && liveNodes.contains(replica.getNodeName())) {
        String coreUrl = replica.getCoreUrl();
        SolrStream solrStream = new SolrStream(coreUrl, params);

        if(streamContext != null) {
          StreamContext localContext = new StreamContext();
          localContext.setSolrClientCache(streamContext.getSolrClientCache());
          solrStream.setStreamContext(localContext);
        }

        try {
          solrStream.open();
          Tuple tuple = solrStream.read();
          if(tuple.EOF) {
            return 0;
          } else {
            checkpoint = tuple.getLong("_version_");
          }
          break;
        } finally {
          solrStream.close();
        }
      }
    }
    return checkpoint;
  }

