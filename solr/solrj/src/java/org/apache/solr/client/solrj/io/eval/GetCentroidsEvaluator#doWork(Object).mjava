  @Override
  public Object doWork(Object value) throws IOException {
    if(!(value instanceof KmeansEvaluator.ClusterTuple)){
      throw new IOException(String.format(Locale.ROOT,"Invalid expression %s - found type %s for value, expecting a clustering result",toExpression(constructingFactory), value.getClass().getSimpleName()));
    } else {
      KmeansEvaluator.ClusterTuple clusterTuple = (KmeansEvaluator.ClusterTuple)value;
      List<CentroidCluster<KmeansEvaluator.ClusterPoint>> clusters = clusterTuple.getClusters();
      double[][] data = new double[clusters.size()][];
      for(int i=0; i<clusters.size(); i++) {
        CentroidCluster<KmeansEvaluator.ClusterPoint> centroidCluster = clusters.get(i);
        Clusterable clusterable = centroidCluster.getCenter();
        data[i] = clusterable.getPoint();
      }
      Matrix centroids = new Matrix(data);
      centroids.setColumnLabels(clusterTuple.getColumnLabels());
      return centroids;
    }
  }

