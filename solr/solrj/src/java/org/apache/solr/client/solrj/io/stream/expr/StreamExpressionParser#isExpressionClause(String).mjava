  /* Returns true if the clause is a valid expression clause. This is defined to
   * mean it begins with ( and ends with )
   * Expects that the passed in clause has already been trimmed of leading and
   * trailing spaces*/
  private static boolean isExpressionClause(String clause){
    // operator(.....something.....)
    
    // must be balanced
    if(!isBalanced(clause)){ return false; }
    
    // find first (, then check from start to that location and only accept alphanumeric
    int firstOpenParen = findNextClear(clause, 0, '(');
    if(firstOpenParen <= 0 || firstOpenParen == clause.length() - 1){ return false; }
    String functionName = clause.substring(0, firstOpenParen).trim();
    if(!wordToken(functionName)){ return false; }
    
    // Must end with )
    return clause.endsWith(")");
  }

