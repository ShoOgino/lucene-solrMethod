  public HttpClusterStateProvider(List<String> solrUrls, HttpClient httpClient) throws Exception {
    this.httpClient = httpClient == null? HttpClientUtil.createClient(null): httpClient;
    this.clientIsInternal = httpClient == null;
    for (String solrUrl: solrUrls) {
      urlScheme = solrUrl.startsWith("https")? "https": "http";
      try (SolrClient initialClient = new HttpSolrClient.Builder().withBaseSolrUrl(solrUrl).withHttpClient(httpClient).build()) {
        Set<String> liveNodes = fetchLiveNodes(initialClient); // throws exception if unable to fetch
        this.liveNodes = liveNodes;
        liveNodesTimestamp = System.nanoTime();
        break;
      } catch (IOException e) {
        log.warn("Attempt to fetch live_nodes from " + solrUrl + " failed.", e);
      }
    }

    if (this.liveNodes == null || this.liveNodes.isEmpty()) {
      throw new RuntimeException("Tried fetching live_nodes using Solr URLs provided, i.e. " + solrUrls + ". However, "
          + "succeeded in obtaining the cluster state from none of them."
          + "If you think your Solr cluster is up and is accessible,"
          + " you could try re-creating a new CloudSolrClient using working"
          + " solrUrl(s) or zkHost(s).");
    }
  }

