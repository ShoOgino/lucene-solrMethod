  private SPNEGOAuthentication createSPNEGOAuthentication() {
    SPNEGOAuthentication authentication = new SPNEGOAuthentication(null){

      public boolean matches(String type, URI uri, String realm) {
        return this.getType().equals(type);
      }
    };
    String clientAppName = System.getProperty("solr.kerberos.jaas.appname", "Client");
    AppConfigurationEntry[] entries = jaasConfig.getAppConfigurationEntry(clientAppName);
    if (entries == null) {
      log.warn("Could not find login configuration entry for {}. SPNego authentication may not be successful.", (Object)clientAppName);
      return authentication;
    }
    if (entries.length != 1) {
      log.warn("Multiple login modules are specified in the configuration file");
      return authentication;
    }
    Map<String, ?> options = entries[0].getOptions();
    String keyTab = (String)options.get("keyTab");
    if (keyTab != null) {
      authentication.setUserKeyTabPath(Paths.get(keyTab, new String[0]));
    }
    authentication.setServiceName("HTTP");
    authentication.setUserName((String)options.get("principal"));
    if ("true".equalsIgnoreCase((String)options.get("useTicketCache"))) {
      authentication.setUseTicketCache(true);
      String ticketCachePath = (String)options.get("ticketCache");
      if (ticketCachePath != null) {
        authentication.setTicketCachePath(Paths.get(ticketCachePath));
      }
      authentication.setRenewTGT("true".equalsIgnoreCase((String)options.get("renewTGT")));
    }
    return authentication;
  }

