  /**
  * Reads a Tuple from the stream. The Stream is completed when Tuple.EOF == true.
  **/

  public Tuple read() throws IOException {
    try {
      Map fields = jsonTupleStream.next();

      if (fields == null) {
        //Return the EOF tuple.
        Map m = new HashMap();
        m.put("EOF", true);
        return new Tuple(m);
      } else {

        String msg = (String) fields.get("_EXCEPTION_");
        if (msg != null) {
          HandledException ioException = new HandledException(this.baseUrl + ":" + msg);
          throw ioException;
        }

        if (trace) {
          fields.put("_CORE_", this.baseUrl);
        }

        if (fieldMappings != null) {
          fields = mapFields(fields, fieldMappings);
        }
        return new Tuple(fields);
      }
    } catch (HandledException e) {
      throw e;
    } catch (Exception e) {
      //The Stream source did not provide an exception in a format that the SolrStream could propagate.
      e.printStackTrace();
      throw new IOException(this.baseUrl+": An exception has occurred on the server, refer to server log for details.");
    }
  }

