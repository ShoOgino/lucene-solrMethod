  @Override
  @SuppressWarnings({"unchecked"})
  public Object doWork(Object ... values) throws IOException{

    if(values.length == 2) {
      Object first = values[0];
      Object second = values[1];
      Covariance covariance = new Covariance();

      return covariance.covariance(
          ((List) first).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray(),
          ((List) second).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray()
      );
    } else if(values.length == 1) {
      Matrix matrix = (Matrix) values[0];
      double[][] data = matrix.getData();
      Covariance covariance = new Covariance(data, true);
      RealMatrix coMatrix = covariance.getCovarianceMatrix();
      double[][] coData = coMatrix.getData();
      Matrix realMatrix = new Matrix(coData);
      List<String> labels = CorrelationEvaluator.getColumnLabels(matrix.getColumnLabels(), coData.length);
      realMatrix.setColumnLabels(labels);
      realMatrix.setRowLabels(labels);
      return realMatrix;
    } else {
      throw new IOException("The cov function expects either two numeric arrays or a matrix as parameters.");
    }
  }

