  /**
   * Add a property to the "params" block supported by the JSON query DSL
   *
   * The JSON query DSL has special support for a few query parameters (limit/rows, offset/start, filter/fq, etc.).  But
   * many other query parameters are not explicitly covered by the query DSL.  This method can be used to add any of
   * these other parameters to the JSON request.
   * <p>
   * This method may be called multiple times; each call with a different {@code name} will add a new param name/value
   * to the params subtree. Invocations that repeat a {@code name} will overwrite the previously specified parameter
   * values associated with that name.
   *
   * @param name the name of the parameter to add
   * @param value the value of the parameter to add.  Usually a String, Number (Integer, Long, Double), or Boolean.
   *
   * @throws IllegalArgumentException if either {@code name} or {@code value} are null
   */
  @SuppressWarnings({"unchecked"})
  public JsonQueryRequest withParam(String name, Object value) {
    if (name == null) {
      throw new IllegalArgumentException("'name' parameter must be non-null");
    }
    if (value == null) {
      throw new IllegalArgumentException("'value' parameter must be non-null");
    }

    ((Map<String, Object>)jsonRequestMap.computeIfAbsent("params", s -> new HashMap<String, Object>())).put(name, value);
    return this;
  }

