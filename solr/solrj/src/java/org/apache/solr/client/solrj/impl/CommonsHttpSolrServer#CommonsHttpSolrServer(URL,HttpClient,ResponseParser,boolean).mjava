  /**
   * @see #useMultiPartPost
   * @see #_parser
   */
  public CommonsHttpSolrServer(URL baseURL, HttpClient client, ResponseParser parser, boolean useMultiPartPost) {
    _baseURL = baseURL.toExternalForm();
    if( _baseURL.endsWith( "/" ) ) {
      _baseURL = _baseURL.substring( 0, _baseURL.length()-1 );
    }
    if( _baseURL.indexOf( '?' ) >=0 ) {
      throw new RuntimeException( "Invalid base url for solrj.  The base URL must not contain parameters: "+_baseURL );
    }

    if (client == null) {
      shutdownHttpClient  = true;
      _httpClient = new HttpClient(new MultiThreadedHttpConnectionManager()) ;

      // prevent retries  (note: this didn't work when set on mgr.. needed to be set on client)
      DefaultHttpMethodRetryHandler retryhandler = new DefaultHttpMethodRetryHandler(0, false);
      _httpClient.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, retryhandler);

      // set some better defaults if we created a new connection manager and client

      // increase the default connections
      this.setDefaultMaxConnectionsPerHost( 32 );  // 2
      this.setMaxTotalConnections( 128 ); // 20
    } else {
      _httpClient = client;
    }

    _parser = parser;
    
    this.useMultiPartPost = useMultiPartPost;
  }

