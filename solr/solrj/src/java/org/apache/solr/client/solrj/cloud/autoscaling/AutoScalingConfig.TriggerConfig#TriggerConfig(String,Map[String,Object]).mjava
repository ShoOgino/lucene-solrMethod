    public TriggerConfig(String name, Map<String, Object> properties) {
      this.name = name;
      if (properties != null) {
        this.properties = Collections.unmodifiableMap(new LinkedHashMap<>(properties));
      } else {
        this.properties = Collections.emptyMap();
      }
      String event = (String) this.properties.get(AutoScalingParams.EVENT);
      if (event != null) {
        TriggerEventType type = null;
        try {
          type = TriggerEventType.valueOf(event.toUpperCase(Locale.ROOT));
        } catch (Exception e) {
        }
        if (type == null) {
          this.event = TriggerEventType.INVALID;
        } else {
          this.event = type;
        }
      } else {
        this.event = TriggerEventType.INVALID;
      }
      enabled = Boolean.parseBoolean(String.valueOf(this.properties.getOrDefault("enabled", "true")));

      List<Map<String, Object>> newActions = (List<Map<String, Object>>)this.properties.get("actions");
      if (newActions != null) {
        this.actions = newActions.stream().map(ActionConfig::new).collect(collectingAndThen(toList(), Collections::unmodifiableList));
      } else {
        this.actions = Collections.emptyList();
      }
    }

