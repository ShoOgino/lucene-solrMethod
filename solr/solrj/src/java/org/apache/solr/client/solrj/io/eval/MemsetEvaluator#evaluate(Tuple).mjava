  @Override
  public Object evaluate(Tuple tuple) throws IOException {

    /*
    * Read all the tuples from the underlying stream and
    * load specific fields into arrays. Then return
    * a map with the variables names bound to the arrays.
    */

    try {
      in.setStreamContext(streamContext);
      in.open();
      Map<String, List<Number>> arrays = new HashMap<>();

      //Initialize the variables
      for(String var : vars) {
        if(size > -1) {
          arrays.put(var, new ArrayList<>(size));
        } else {
          arrays.put(var, new ArrayList<>());
        }
      }

      int count = 0;

      while (true) {
        Tuple t = in.read();
        if (t.EOF) {
          break;
        }

        if(size == -1 || count < size) {
          for (int i = 0; i < cols.length; i++) {
            String col = cols[i];
            String var = vars[i];
            List<Number> array = arrays.get(var);
            Number number = (Number) t.get(col);
            array.add(number);
          }
        }
        ++count;
      }

      return arrays;
    } catch (UncheckedIOException e) {
      throw e.getCause();
    } finally {
      in.close();
    }
  }

