  public List<Number> evaluate(Tuple tuple) throws IOException {

    if(subEvaluators.size() != 2) {
      throw new IOException("Moving average evaluator expects 2 parameters found: "+subEvaluators.size());
    }

    StreamEvaluator colEval = subEvaluators.get(0);
    StreamEvaluator windowEval = subEvaluators.get(1);

    int window = ((Number)windowEval.evaluate(tuple)).intValue();
    List<Number> numbers = (List<Number>)colEval.evaluate(tuple);

    if(window > numbers.size()) {
      throw new IOException("The window size cannot be larger then the array");
    }

    List<Number> moving = new ArrayList();

    DescriptiveStatistics descriptiveStatistics = new DescriptiveStatistics(window);
    for(int i=0; i<numbers.size(); i++) {
      descriptiveStatistics.addValue(numbers.get(i).doubleValue());
      if(descriptiveStatistics.getN() >= window) {
        moving.add(descriptiveStatistics.getMean());
      }
    }

    return moving;
  }

