  private boolean checkMapArray(@SuppressWarnings({"rawtypes"})List l, Map<String, Object> m) {
    @SuppressWarnings({"rawtypes"})
    List<Map> maps = null;
    for (Object o : l) {
      if (o instanceof Map) {
        if (maps == null) maps = new ArrayList<>();
        maps.add((Map) o);
      }
    }
    String key = null;
    if (maps != null) {
      if (maps.size() != l.size()) throwExp(m, "all elements of nodeset must be Objects");
      List<Condition> tags = new ArrayList<>(maps.size());
      for (@SuppressWarnings({"rawtypes"})Map map : maps) {
        String s = validateObjectInNodeset(m, map);
        if(key == null) key = s;
        if(!Objects.equals(key, s)){
          throwExp(m, "all element must have same key");
        }
        tags.add(parse(s, m));
      }
      if(this.put == Put.ON_EACH) throwExp(m, "cannot use put: ''on-each-node''  with an array value in nodeset ");
      this.tag = new Condition(key, tags,Operand.IN, null,this);
      return true;
    }
    return false;

  }

