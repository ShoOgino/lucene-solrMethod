  /**
   * Performs an explicit commit, causing pending documents to be committed for indexing
   *
   * @param collection the Solr collection to send the commit to
   * @param waitFlush  block until index changes are flushed to disk
   * @param waitSearcher  block until a new searcher is opened and registered as the
   *                      main query searcher, making the changes visible
   *
   * @return an {@link org.apache.solr.client.solrj.response.UpdateResponse} containing the response
   *         from the server
   *
   * @throws IOException If there is a low-level I/O error.
   * @throws SolrServerException if there is an error on the server
   */
  public UpdateResponse commit(String collection, boolean waitFlush, boolean waitSearcher)
      throws SolrServerException, IOException {
    return new UpdateRequest()
        .setAction(UpdateRequest.ACTION.COMMIT, waitFlush, waitSearcher)
        .process(this, collection);
  }

