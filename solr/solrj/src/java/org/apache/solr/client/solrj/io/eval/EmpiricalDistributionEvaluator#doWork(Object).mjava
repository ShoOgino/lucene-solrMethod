  @Override
  public Object doWork(Object value) throws IOException {

    if(!(value instanceof List<?>)){
      throw new StreamEvaluatorException("List value expected but found type %s for value %s", value.getClass().getName(), value.toString());
    }

    EmpiricalDistribution empiricalDistribution = new EmpiricalDistribution();
    
    double[] backingValues = ((List<?>)value).stream().mapToDouble(innerValue -> ((BigDecimal)innerValue).doubleValue()).sorted().toArray();
    empiricalDistribution.load(backingValues);

    return empiricalDistribution;
  }

