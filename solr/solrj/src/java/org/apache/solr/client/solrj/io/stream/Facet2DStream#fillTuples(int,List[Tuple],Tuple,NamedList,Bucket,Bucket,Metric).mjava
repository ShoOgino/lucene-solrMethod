  private void fillTuples(int level, List<Tuple> tuples, Tuple currentTuple, NamedList facets, Bucket x, Bucket y, Metric metric) {
    String bucketXName = x.toString();
    String bucketYName = y.toString();

    NamedList allXBuckets = (NamedList) facets.get("x");
    for (int b = 0; b < allXBuckets.size(); b++) {
      List buckets = (List) allXBuckets.get("buckets");
      for(int s=0; s<buckets.size(); s++) {

        NamedList bucket = (NamedList)buckets.get(s);
        Object val = bucket.get("val");
        if (val instanceof Integer) {
          val = ((Integer) val).longValue();
        }
        Tuple tx = currentTuple.clone();
        tx.put(bucketXName, val);

        NamedList allYBuckets = (NamedList) bucket.get("y");
        List ybuckets = (List)allYBuckets.get("buckets");

        for (int d = 0; d < ybuckets.size(); d++) {
          NamedList bucketY = (NamedList) ybuckets.get(d);
          Object valY = bucketY.get("val");
          if (valY instanceof Integer) {
            valY = ((Integer) valY).longValue();
          }
          Tuple yt = tx.clone();
          yt.put(bucketYName, valY);

          int m = 0;
          String identifier = metric.getIdentifier();
          if (!identifier.startsWith("count(")) {
            Number d1 = (Number) bucketY.get("agg");
            if (metric.outputLong) {
              if (d1 instanceof Long || d1 instanceof Integer) {
                yt.put(identifier, d1.longValue());
              } else {
                yt.put(identifier, Math.round(d1.doubleValue()));
              }
            } else {
              yt.put(identifier, d1.doubleValue());
            }
            ++m;
          } else {
            long l = ((Number)bucketY.get("count")).longValue();
            yt.put("count(*)", l);
          }
          tuples.add(yt);
        }
      }
    }
  }

