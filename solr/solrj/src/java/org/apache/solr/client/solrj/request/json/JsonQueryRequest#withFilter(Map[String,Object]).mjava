  /**
   * Add a filter query to run as a part of the JSON request
   *
   * This method may be called multiple times; each call will add a new filter to the request
   * <p>
   * <b>Example:</b> You wish to send the JSON request: "{'query':'*:*', 'filter': [{'lucene': {'df':'genre_s', 'query': 'scifi'}}]}".
   * The filter you want to add is: "{'lucene': {'df': 'genre_s', 'query': 'scifi'}}".  You would represent this filter
   * query as follows:
   * <pre>{@code
   *     final Map<String, Object> filterMap = new HashMap<>();
   *     final Map<String, Object> luceneQueryParamMap = new HashMap<>();
   *     filterMap.put("lucene", luceneQueryParamMap);
   *     luceneQueryParamMap.put("df", "genre_s");
   *     luceneQueryParamMap.put("query", "scifi");
   * }</pre>
   *
   * @param filterQuery a Map of values representing the filter request you wish to send.
   * @throws IllegalArgumentException if {@code filterQuery} is null
   */
  public JsonQueryRequest withFilter(Map<String, Object> filterQuery) {
    if (filterQuery == null) {
      throw new IllegalArgumentException("'filterQuery' parameter must be non-null");
    }
    jsonRequestMap.putIfAbsent("filter", new ArrayList<Object>());
    final List<Object> filters = (List<Object>) jsonRequestMap.get("filter");
    filters.add(filterQuery);
    return this;
  }

