  @Override
  public String getDatabaseProductVersion() throws SQLException {
    // Returns the version for the first live node in the Solr cluster.
    SolrQuery sysQuery = new SolrQuery();
    sysQuery.setRequestHandler("/admin/info/system");

    CloudSolrClient cloudSolrClient = this.connection.getClient();
    Set<String> liveNodes = cloudSolrClient.getZkStateReader().getClusterState().getLiveNodes();
    SolrClient solrClient = null;
    for (String node : liveNodes) {
      try {
        String nodeURL = cloudSolrClient.getZkStateReader().getBaseUrlForNodeName(node);
        solrClient = new HttpSolrClient(nodeURL);

        QueryResponse rsp = solrClient.query(sysQuery);
        return String.valueOf(((SimpleOrderedMap) rsp.getResponse().get("lucene")).get("solr-spec-version"));
      } catch (SolrServerException | IOException ignore) {
        return "";
      } finally {
        if (solrClient != null) {
          try {
            solrClient.close();
          } catch (IOException ignore) {
            // Don't worry about failing to close the Solr client
          }
        }
      }
    }

    // If no version found just return empty string
    return "";
  }

