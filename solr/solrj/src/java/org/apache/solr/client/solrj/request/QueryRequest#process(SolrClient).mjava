  /**
   * Send this request to a {@link SolrClient} and return the response
   * @param client the SolrClient to communicate with
   * @return the response
   * @throws org.apache.solr.client.solrj.SolrServerException if there is an error on the Solr server
   */
  @Override
  public QueryResponse process(SolrClient client) throws SolrServerException {
    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);
    QueryResponse res = createResponse(client);
    try {
      res.setResponse(client.request(this));
    } catch (IOException e) {
      throw new SolrServerException("Error executing query", e);
    }
    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);
    res.setElapsedTime(endTime - startTime);
    return res;
  }

