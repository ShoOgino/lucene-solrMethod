  public static Collection<Slice> getSlices(String collectionName,
                                            ZkStateReader zkStateReader,
                                            boolean checkAlias) throws IOException {
    ClusterState clusterState = zkStateReader.getClusterState();

    Map<String, DocCollection> collectionsMap = clusterState.getCollectionsMap();

    // Check collection case sensitive
    if(collectionsMap.containsKey(collectionName)) {
      return collectionsMap.get(collectionName).getActiveSlices();
    }

    // Check collection case insensitive
    for(String collectionMapKey : collectionsMap.keySet()) {
      if(collectionMapKey.equalsIgnoreCase(collectionName)) {
        return collectionsMap.get(collectionMapKey).getActiveSlices();
      }
    }

    if(checkAlias) {
      // check for collection alias
      Aliases aliases = zkStateReader.getAliases();
      String alias = aliases.getCollectionAlias(collectionName);
      if (alias != null) {
        Collection<Slice> slices = new ArrayList<>();

        List<String> aliasList = StrUtils.splitSmart(alias, ",", true);
        for (String aliasCollectionName : aliasList) {
          // Add all active slices for this alias collection
          slices.addAll(collectionsMap.get(aliasCollectionName).getActiveSlices());
        }

        return slices;
      }
    }

    throw new IOException("Slices not found for " + collectionName);
  }

