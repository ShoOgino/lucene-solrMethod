  public static Slice[] getSlices(String collectionName, ZkStateReader zkStateReader, boolean checkAlias) throws IOException {
    ClusterState clusterState = zkStateReader.getClusterState();

    Map<String, DocCollection> collectionsMap = clusterState.getCollectionsMap();

    //TODO we should probably split collection by comma to query more than one
    //  which is something already supported in other parts of Solr

    // check for alias or collection

    List<String> allCollections = new ArrayList();
    String[] collectionNames = collectionName.split(",");
    for(String col : collectionNames) {
      List<String> collections = checkAlias
          ? zkStateReader.getAliases().resolveAliases(col)  // if not an alias, returns collectionName
          : Collections.singletonList(collectionName);
      allCollections.addAll(collections);
    }

    // Lookup all actives slices for these collections
    List<Slice> slices = allCollections.stream()
        .map(collectionsMap::get)
        .filter(Objects::nonNull)
        .flatMap(docCol -> Arrays.stream(docCol.getActiveSlicesArr()))
        .collect(Collectors.toList());
    if (!slices.isEmpty()) {
      return slices.toArray(new Slice[slices.size()]);
    }

    // Check collection case insensitive
    for(Entry<String, DocCollection> entry : collectionsMap.entrySet()) {
      if(entry.getKey().equalsIgnoreCase(collectionName)) {
        return entry.getValue().getActiveSlicesArr();
      }
    }

    throw new IOException("Slices not found for " + collectionName);
  }

