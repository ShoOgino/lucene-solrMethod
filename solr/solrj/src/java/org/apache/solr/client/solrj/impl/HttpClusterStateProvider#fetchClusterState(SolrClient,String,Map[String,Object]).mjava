  @SuppressWarnings({"rawtypes", "unchecked"})
  private ClusterState fetchClusterState(SolrClient client, String collection, Map<String, Object> clusterProperties) throws SolrServerException, IOException {
    ModifiableSolrParams params = new ModifiableSolrParams();
    if (collection != null) {
      params.set("collection", collection);
    }
    params.set("action", "CLUSTERSTATUS");
    QueryRequest request = new QueryRequest(params);
    request.setPath("/admin/collections");
    NamedList cluster = (SimpleOrderedMap) client.request(request).get("cluster");
    Map<String, Object> collectionsMap;
    if (collection != null) {
      collectionsMap = Collections.singletonMap(collection,
          ((NamedList) cluster.get("collections")).get(collection));
    } else {
      collectionsMap = ((NamedList)cluster.get("collections")).asMap(10);
    }
    int znodeVersion;
    if (collection != null) {
      znodeVersion =  (int)((Map<String, Object>)(collectionsMap).get(collection)).get("znodeVersion");
    } else {
      znodeVersion = -1;
    }
    Set<String> liveNodes = new HashSet((List<String>)(cluster.get("live_nodes")));
    this.liveNodes = liveNodes;
    liveNodesTimestamp = System.nanoTime();
    ClusterState cs = ClusterState.load(znodeVersion, collectionsMap, liveNodes, ZkStateReader.CLUSTER_STATE);
    if (clusterProperties != null) {
      Map<String, Object> properties = (Map<String, Object>) cluster.get("properties");
      if (properties != null) {
        clusterProperties.putAll(properties);
      }
    }
    return cs;
  }

