  private Convert getConvert(LENGTH_CONSTANT from, LENGTH_CONSTANT to) throws IOException {
    switch(from) {
      case INCHES:
        switch(to) {
          case MILLIMETERS:
            return (double d) -> d*25.4;
          case CENTIMETERS:
            return (double d) -> d*2.54;
          case METERS:
            return (double d) -> d*0.0254;
          default:
            throw new EvaluatorException("No conversion available from "+from+" to "+to);
        }
      case FEET:
        switch(to) {
          case METERS:
            return (double d) -> d * .30;
        }
      case YARDS:
        switch(to) {
          case METERS:
            return (double d) -> d * .91;
          case KILOMETERS:
            return (double d) -> d * 0.00091;
          default:
            throw new EvaluatorException("No conversion available from "+from+" to "+to);
        }
      case MILES:
        switch(to) {
          case KILOMETERS:
            return (double d) -> d * 1.61;
          default:
            throw new EvaluatorException("No conversion available from "+from+" to "+to);
        }
      case MILLIMETERS:
        switch (to) {
          case INCHES:
            return (double d) -> d * 0.039;
          default:
            throw new EvaluatorException("No conversion available from "+from+" to "+to);
        }
      case CENTIMETERS:
        switch(to) {
          case INCHES:
            return (double d) -> d * 0.39;
          default:
            throw new EvaluatorException("No conversion available from "+from+" to "+to);
        }
      case METERS:
        switch(to) {
          case FEET:
            return (double d) -> d * 3.28;
          default:
            throw new EvaluatorException("No conversion available from "+from+" to "+to);
        }
      case KILOMETERS:
        switch(to) {
          case MILES:
            return (double d) -> d * 0.62;
          case FEET:
            return (double d) -> d * 3280.8;
        }
      default:
        throw new EvaluatorException("No conversion available from "+from);
    }
  }

