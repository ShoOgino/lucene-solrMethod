  @SuppressWarnings({"unchecked", "rawtypes"})
  private StreamComparator parseComp(String sort, String fl) throws IOException {

    HashSet fieldSet = null;

    if(fl != null) {
      fieldSet = new HashSet();
      String[] fls = fl.split(",");
      for (String f : fls) {
        fieldSet.add(f.trim()); //Handle spaces in the field list.
      }
    }

    String[] sorts = sort.split(",");
    StreamComparator[] comps = new StreamComparator[sorts.length];
    for(int i=0; i<sorts.length; i++) {
      String s = sorts[i];

      String[] spec = s.trim().split("\\s+"); //This should take into account spaces in the sort spec.

      if (spec.length != 2) {
        throw new IOException("Invalid sort spec:" + s);
      }

      String fieldName = spec[0].trim();
      String order = spec[1].trim();

      if(fieldSet != null && !fieldSet.contains(spec[0])) {
        throw new IOException("Fields in the sort spec must be included in the field list:"+spec[0]);
      }

      comps[i] = new FieldComparator(fieldName, order.equalsIgnoreCase("asc") ? ComparatorOrder.ASCENDING : ComparatorOrder.DESCENDING);
    }

    if(comps.length > 1) {
      return new MultipleFieldComparator(comps);
    } else {
      return comps[0];
    }
  }

