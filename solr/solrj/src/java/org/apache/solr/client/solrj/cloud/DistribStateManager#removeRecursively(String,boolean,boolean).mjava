  /**
   * Remove data recursively.
   * @param root root path
   * @param ignoreMissing ignore errors if root or any children path is missing
   * @param includeRoot when true delete also the root path
   */
  default void removeRecursively(String root, boolean ignoreMissing, boolean includeRoot) throws NoSuchElementException, IOException, NotEmptyException, KeeperException, InterruptedException, BadVersionException {
    List<String> tree;
    try {
      tree = listTree(root);
    } catch (NoSuchElementException e) {
      if (ignoreMissing) {
        return;
      } else {
        throw e;
      }
    }
    Collections.reverse(tree);
    for (String p : tree) {
      if (p.equals("/")) {
        continue;
      }
      if (p.equals(root) && !includeRoot) {
        continue;
      }
      try {
        removeData(p, -1);
      } catch (NoSuchElementException e) {
        if (!ignoreMissing) {
          throw e;
        }
      }
    }
  }

