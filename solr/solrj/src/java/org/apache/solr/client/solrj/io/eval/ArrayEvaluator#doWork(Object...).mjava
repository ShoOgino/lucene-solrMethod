  @Override
  public Object doWork(Object ... values) throws IOException{
  
    List<Object> newList = Arrays.stream(values).collect(Collectors.toList());
    
    if(null != sortComparator){
      // validate everything is comparable
      for(Object value : newList){
        if(!(value instanceof Comparable<?>)){
          throw new IOException(String.format(Locale.ROOT, "Unable to evaluate because a non-Comparable value ('%s') was found and sorting was requested", value.toString()));
        }
      }
      
      newList = newList.stream().map(value -> (Comparable)value).sorted(sortComparator).collect(Collectors.toList());
    }
    
    return newList;
  }

