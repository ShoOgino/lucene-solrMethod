  public List<Map> evaluate(Tuple tuple) throws IOException {

    StreamEvaluator colEval1 = subEvaluators.get(0);

    List<Number> numbers1 = (List<Number>)colEval1.evaluate(tuple);
    double[] column1 = new double[numbers1.size()];

    for(int i=0; i<numbers1.size(); i++) {
      column1[i] = numbers1.get(i).doubleValue();
    }

    int bins = 10;
    if(subEvaluators.size() == 2) {
      StreamEvaluator binsEval = subEvaluators.get(1);
      Number binsNum = (Number) binsEval.evaluate(tuple);
      bins = binsNum.intValue();
    }

    EmpiricalDistribution empiricalDistribution = new EmpiricalDistribution(bins);
    empiricalDistribution.load(column1);

    List<Map> binList = new ArrayList();

    List<SummaryStatistics> summaries = empiricalDistribution.getBinStats();
    for(SummaryStatistics statisticalSummary : summaries) {
      Map map = new HashMap();
      map.put("max", statisticalSummary.getMax());
      map.put("mean", statisticalSummary.getMean());
      map.put("min", statisticalSummary.getMin());
      map.put("stdev", statisticalSummary.getStandardDeviation());
      map.put("sum", statisticalSummary.getSum());
      map.put("N", statisticalSummary.getN());
      map.put("var", statisticalSummary.getVariance());
      binList.add(map);
    }

    return binList;
  }

