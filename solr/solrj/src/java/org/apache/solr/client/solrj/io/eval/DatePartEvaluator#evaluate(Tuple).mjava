  @Override
  public Number evaluate(Tuple tuple) throws IOException {

    try {
      Object fieldValue = tuple.get(fieldName);
      Instant instant = null;
      LocalDateTime date = null;

      if (fieldValue == null) return null;

      if (fieldValue instanceof String) {
        instant = getInstant((String)fieldValue);
      } else if (fieldValue instanceof Instant) {
        instant = (Instant) fieldValue;
      } else if (fieldValue instanceof Date) {
        instant = ((Date) fieldValue).toInstant();
      } else if (fieldValue instanceof LocalDateTime) {
        date = ((LocalDateTime) fieldValue);
      }

      if (instant != null) {
        if (function.equals(FUNCTION.epoch)) return instant.toEpochMilli();
        date = LocalDateTime.ofInstant(instant, ZoneOffset.UTC);
      }

      if (date != null) {
        return evaluate(date);
      }

    } catch (DateTimeParseException e) {
      throw new IOException(String.format(Locale.ROOT,"Invalid field %s - The field must be a string formatted in the ISO_INSTANT date format.",fieldName));
    }

    throw new IOException(String.format(Locale.ROOT,"Invalid field %s - The field must be a string formatted ISO_INSTANT or of type Instant,Date or LocalDateTime.",fieldName));
  }

