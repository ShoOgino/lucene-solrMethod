  private void fillSingleContentStream(Collection<ContentStream> streams, HttpEntityEnclosingRequestBase postOrPut) throws IOException {
    // Single stream as body
    // Using a loop just to get the first one
    final ContentStream[] contentStream = new ContentStream[1];
    for (ContentStream content : streams) {
      contentStream[0] = content;
      break;
    }
    if (contentStream[0] instanceof RequestWriter.LazyContentStream) {
      Long size = contentStream[0].getSize();
      postOrPut.setEntity(new InputStreamEntity(contentStream[0].getStream(), size == null ? -1 : size) {
        @Override
        public Header getContentType() {
          return new BasicHeader("Content-Type", contentStream[0].getContentType());
        }

        @Override
        public boolean isRepeatable() {
          return false;
        }

      });
    } else {
      Long size = contentStream[0].getSize();
      postOrPut.setEntity(new InputStreamEntity(contentStream[0].getStream(), size == null ? -1 : size) {
        @Override
        public Header getContentType() {
          return new BasicHeader("Content-Type", contentStream[0].getContentType());
        }

        @Override
        public boolean isRepeatable() {
          return false;
        }
      });
    }
  }

