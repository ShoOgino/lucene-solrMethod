  public List<BigDecimal> evaluateAll(final Tuple tuple) throws IOException {
    // evaluate each and confirm they are all either null or numeric
    List<BigDecimal> results = new ArrayList<BigDecimal>();
    for(StreamEvaluator subEvaluator : subEvaluators){
      Object result = subEvaluator.evaluate(tuple);
      
      if(null == result){
        results.add(null);
      }
      else if(result instanceof Number){
        results.add(new BigDecimal(result.toString()));
      } else if(result instanceof List) {
        List l = (List) result;
        for(Object o : l) {
          if(o instanceof Number) {
            results.add(new BigDecimal(o.toString()));
          } else {
            String message = String.format(Locale.ROOT,"Failed to evaluate to a numeric value - evaluator '%s' resulted in type '%s' and value '%s'",
                                           subEvaluator.toExpression(constructingFactory),
                                           o.getClass().getName(),
                                           o.toString());
            throw new IOException(message);
          }
        }
      }
      else{
        String message = String.format(Locale.ROOT,"Failed to evaluate to a numeric value - evaluator '%s' resulted in type '%s' and value '%s'", 
                                        subEvaluator.toExpression(constructingFactory),
                                        result.getClass().getName(),
                                        result.toString());
        throw new IOException(message);
      }
    }
    
    return results;
  }

