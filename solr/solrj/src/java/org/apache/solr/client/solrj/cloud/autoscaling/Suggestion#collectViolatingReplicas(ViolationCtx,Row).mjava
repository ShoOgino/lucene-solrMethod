  private static void collectViolatingReplicas(ViolationCtx ctx, Row row) {
    if (ctx.clause.tag.varType.isPerNodeValue) {
      row.forEachReplica(replica -> {
        if (ctx.clause.collection.isPass(replica.getCollection()) && ctx.clause.getShard().isPass(replica.getShard())) {
          ctx.currentViolation.addReplica(new ReplicaInfoAndErr(replica)
              .withDelta(ctx.clause.tag.delta(row.getVal(ctx.clause.tag.name))));
        }
      });
    } else {
      row.forEachReplica(replica -> {
        if (ctx.clause.replica.isPass(0) && !ctx.clause.tag.isPass(row)) return;
        if (!ctx.clause.replica.isPass(0) && ctx.clause.tag.isPass(row)) return;
        if (!ctx.currentViolation.matchShard(replica.getShard())) return;
        if (!ctx.clause.collection.isPass(ctx.currentViolation.coll) || !ctx.clause.shard.isPass(ctx.currentViolation.shard))
          return;
        ctx.currentViolation.addReplica(new ReplicaInfoAndErr(replica).withDelta(ctx.clause.tag.delta(row.getVal(ctx.clause.tag.name))));
      });

    }


  }

