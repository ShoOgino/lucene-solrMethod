  private List<DocField> collectInfo(Class clazz) {
    List<DocField> fields = new ArrayList<DocField>();
    Class superClazz = clazz;
    List<AccessibleObject> members = new ArrayList<AccessibleObject>();

    while (superClazz != null && superClazz != Object.class) {
      members.addAll(Arrays.asList(superClazz.getDeclaredFields()));
      members.addAll(Arrays.asList(superClazz.getDeclaredMethods()));
      superClazz = superClazz.getSuperclass();
    }

    for (AccessibleObject member : members) {
      // TODO: Fix below code to use c.isAnnotationPresent(). It was changed
      // to the null check to work around a bug in JDK 8 b78 (see LUCENE-4808).
      if (member.getAnnotation(Field.class) != null) {
        member.setAccessible(true);
        fields.add(new DocField(member));
      }
    }
    return fields;
  }

