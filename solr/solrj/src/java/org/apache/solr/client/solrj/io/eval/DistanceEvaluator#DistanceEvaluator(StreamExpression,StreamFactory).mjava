  public DistanceEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{
    super(expression, factory);
    List<StreamExpressionNamedParameter> namedParams = factory.getNamedOperands(expression);
    if(namedParams.size() > 0) {
      if (namedParams.size() > 1) {
        throw new IOException("distance function expects only one named parameter 'type'.");
      }

      StreamExpressionNamedParameter namedParameter = namedParams.get(0);
      String name = namedParameter.getName();
      if (!name.equalsIgnoreCase("type")) {
        throw new IOException("distance function expects only one named parameter 'type'.");
      }

      String typeParam = namedParameter.getParameter().toString().trim();
      this.type= DistanceType.valueOf(typeParam);
    } else {
      this.type = DistanceType.euclidean;
    }
  }

