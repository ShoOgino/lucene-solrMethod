  @Override
  public Object doWork(Object value1, Object value2) throws IOException {

    if(value1 instanceof Matrix) {
      Matrix matrix = (Matrix) value1;
      double[][] data = matrix.getData();

      List<String> labels = matrix.getColumnLabels();
      Set<String> features = new HashSet<>();
      loadFeatures(value2, features);

      List<String> newColumnLabels = new ArrayList<>();

      for(String label : labels) {
        if(features.contains(label)) {
         newColumnLabels.add(label);
        }
      }

      double[][] selectFeatures = new double[data.length][newColumnLabels.size()];

      for(int i=0; i<data.length; i++) {
        double[] currentRow = data[i];
        double[] newRow = new double[newColumnLabels.size()];

        int index = -1;
        for(int l=0; l<currentRow.length; l++) {
          String label = labels.get(l);
          if(features.contains(label)) {
            newRow[++index] = currentRow[l];
          }
        }
        selectFeatures[i] = newRow;
      }

      Matrix newMatrix = new Matrix(selectFeatures);
      newMatrix.setRowLabels(matrix.getRowLabels());
      newMatrix.setColumnLabels(newColumnLabels);
      return newMatrix;
    } else {
      throw new IOException("The featureSelect function expects a matrix as a parameter");
    }
  }

