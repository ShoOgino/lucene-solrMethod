  /**
   * Deletes a list of documents by unique ID, specifying max time before commit
   *
   * @param collection the Solr collection to delete the documents from
   * @param ids  the list of document IDs to delete; must be non-null and contain elements
   * @param commitWithinMs  max time (in ms) before a commit will happen
   *
   * @return an {@link org.apache.solr.client.solrj.response.UpdateResponse} containing the response
   *         from the server
   *
   * @throws IOException If there is a low-level I/O error.
   * @throws SolrServerException if there is an error on the server
   *
   * @since 5.1
   */
  public UpdateResponse deleteById(String collection, List<String> ids, int commitWithinMs) throws SolrServerException, IOException {
    if (ids == null) throw new IllegalArgumentException("'ids' parameter must be non-null");
    if (ids.isEmpty()) throw new IllegalArgumentException("'ids' parameter must not be empty; should contain IDs to delete");

    UpdateRequest req = new UpdateRequest();
    req.deleteById(ids);
    req.setCommitWithin(commitWithinMs);
    return req.process(this, collection);
  }

