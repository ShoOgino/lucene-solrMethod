  @Override
  public Map<String, Map<String, List<Replica>>> getReplicaInfo(String node, Collection<String> keys) {
    @SuppressWarnings({"unchecked"})
    Map<String, Map<String, List<Replica>>> result = nodeVsCollectionVsShardVsReplicaInfo.computeIfAbsent(node, Utils.NEW_HASHMAP_FUN);
    if (!keys.isEmpty()) {
      Map<String, Pair<String, Replica>> metricsKeyVsTagReplica = new HashMap<>();
      forEachReplica(result, r -> {
        for (String key : keys) {
          if (r.getProperties().containsKey(key)) continue;// it's already collected
          String perReplicaMetricsKey = "solr.core." + r.getCollection() + "." + r.getShard() + "." + Utils.parseMetricsReplicaName(r.getCollection(), r.getCoreName()) + ":";
          String perReplicaValue = key;
          perReplicaMetricsKey += perReplicaValue;
          metricsKeyVsTagReplica.put(perReplicaMetricsKey, new Pair<>(key, r));
        }
      });

      if (!metricsKeyVsTagReplica.isEmpty()) {
        Map<String, Object> tagValues = fetchReplicaMetrics(node, metricsKeyVsTagReplica);
        tagValues.forEach((k, o) -> {
          Pair<String, Replica> p = metricsKeyVsTagReplica.get(k);
          if (p.second() != null) p.second().getProperties().put(p.first(), o);
        });

      }
    }
    return result;
  }

