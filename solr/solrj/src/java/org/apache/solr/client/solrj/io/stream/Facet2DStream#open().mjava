  public void open() throws IOException {
    if (cache != null) {
      cloudSolrClient = cache.getCloudSolrClient(zkHost);
    } else {
      final List<String> hosts = new ArrayList<>();
      hosts.add(zkHost);
      cloudSolrClient = new Builder(hosts, Optional.empty()).withSocketTimeout(30000).withConnectionTimeout(15000).build();
    }
    FieldComparator[] adjustedSorts = adjustSorts(x, y, bucketSort);

    String json = getJsonFacetString(x, y, metric, adjustedSorts, dimensionX, dimensionY);
    System.out.println("#######JSON:"+json);
    //assert expectedJson(json);

    ModifiableSolrParams paramsLoc = new ModifiableSolrParams(params);
    paramsLoc.set("json.facet", json);
    paramsLoc.set("rows", "0");

    QueryRequest request = new QueryRequest(paramsLoc, SolrRequest.METHOD.POST);
    try {
      NamedList response = cloudSolrClient.request(request, collection);
      System.out.println("###### Response:"+response.toString());
      getTuples(response, x, y, metric);
      this.out = tuples.iterator();

    } catch (Exception e) {
      throw new IOException(e);
    }
  }

