  @Override
  public Object doWork(Object... values) throws IOException{

    Object value = values[0];

    double sumTo = 1.0;

    if(values.length == 2) {
      Number n = (Number)values[1];
      sumTo = n.doubleValue();
    }

    if(null == value){
      return null;
    } else if(value instanceof Matrix) {
      Matrix matrix = (Matrix) value;

      double[][] data = matrix.getData();
      double[][] unitData = new double[data.length][];
      for(int i=0; i<data.length; i++) {
        double[] row = data[i];
        double[] unitRow = MathArrays.normalizeArray(row, sumTo);
        unitData[i] = unitRow;
      }

      Matrix m = new Matrix(unitData);
      m.setRowLabels(matrix.getRowLabels());
      m.setColumnLabels(matrix.getColumnLabels());
      return m;
    } else if(value instanceof List) {
      @SuppressWarnings({"unchecked"})
      List<Number> vals = (List<Number>)value;
      double[] doubles = new double[vals.size()];
      for(int i=0; i<doubles.length; i++) {
        doubles[i] = vals.get(i).doubleValue();
      }

      List<Number> unitList = new ArrayList<>(doubles.length);
      double[] unitArray = MathArrays.normalizeArray(doubles, sumTo);
      for(double d : unitArray) {
        unitList.add(d);
      }

      return unitList;
    } else {
      throw new IOException("The unit function expects either a numeric array or matrix as a parameter");
    }
  }

