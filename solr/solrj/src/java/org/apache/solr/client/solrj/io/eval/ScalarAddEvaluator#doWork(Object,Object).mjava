  @Override
  public Object doWork(Object value1, Object value2) throws IOException{

    double d = ((Number)value1).doubleValue();
    if(value2 instanceof List){
      List<Number> nums = (List<Number>)value2;
      List<Number> out = new ArrayList();
      for(Number num : nums) {
        out.add(operate(num.doubleValue(), d));
      }

      return out;

    } else if (value2 instanceof Matrix) {
      Matrix matrix = (Matrix) value2;
      double[][] data = matrix.getData();
      double[][] newData = new double[data.length][];
      for(int i=0; i<data.length; i++) {
        double[] row = data[i];
        double[] newRow = new double[row.length];

        for(int j=0; j<row.length; j++) {
          newRow[j] = operate(row[j], d);
        }

        newData[i] = newRow;
      }
      return new Matrix(newData);
    } else {
      throw new IOException("scalar add, subtract, multiply and divide operate on numeric arrays and matrices only.");
    }
  }

