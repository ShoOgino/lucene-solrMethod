  SolrRequest tryEachNode(boolean strict) {
    //iterate through elements and identify the least loaded
    List<Clause.Violation> leastSeriousViolation = null;
    Integer targetNodeIndex = null;
    Integer sourceNodeIndex = null;
    ReplicaInfo fromReplicaInfo = null;
    for (Pair<ReplicaInfo, Row> fromReplica : getValidReplicas(true, true, -1)) {
      Row fromRow = fromReplica.second();
      ReplicaInfo replicaInfo = fromReplica.first();
      String coll = replicaInfo.collection;
      String shard = replicaInfo.shard;
      Pair<Row, ReplicaInfo> pair = fromRow.removeReplica(coll, shard);
      Row tmpRow = pair.first();
      if (tmpRow == null) {
        //no such replica available
        continue;
      }
      tmpRow.violations.clear();

      final int i = getMatrix().indexOf(fromRow);
      for (int j = getMatrix().size() - 1; j > i; j--) {
        Row targetRow = getMatrix().get(j);
        if (!isAllowed(targetRow.node, Hint.TARGET_NODE)) continue;
        targetRow = targetRow.addReplica(coll, shard);
        targetRow.violations.clear();
        List<Violation> errs = testChangedMatrix(strict, getModifiedMatrix(getModifiedMatrix(getMatrix(), tmpRow, i), targetRow, j));
        if (!containsNewErrors(errs) && isLessSerious(errs, leastSeriousViolation)) {
          leastSeriousViolation = errs;
          targetNodeIndex = j;
          sourceNodeIndex = i;
          fromReplicaInfo = replicaInfo;
        }
      }
    }
    if (targetNodeIndex != null && sourceNodeIndex != null) {
      getMatrix().set(sourceNodeIndex, getMatrix().get(sourceNodeIndex).removeReplica(fromReplicaInfo.collection, fromReplicaInfo.shard).first());
      getMatrix().set(targetNodeIndex, getMatrix().get(targetNodeIndex).addReplica(fromReplicaInfo.collection, fromReplicaInfo.shard));
      return new CollectionAdminRequest.MoveReplica(
          fromReplicaInfo.collection,
          fromReplicaInfo.name,
          getMatrix().get(targetNodeIndex).node);
    }
    return null;
  }

