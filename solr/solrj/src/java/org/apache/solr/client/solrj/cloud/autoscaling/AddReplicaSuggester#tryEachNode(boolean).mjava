  SolrRequest tryEachNode(boolean strict) {
    Set<Pair<String, String>> shards = (Set<Pair<String, String>>) hints.getOrDefault(Hint.COLL_SHARD, Collections.emptySet());
    if (shards.isEmpty()) {
      throw new RuntimeException("add-replica requires 'collection' and 'shard'");
    }
    for (Pair<String, String> shard : shards) {
      Replica.Type type = Replica.Type.get((String) hints.get(Hint.REPLICATYPE));
      //iterate through elemenodesnts and identify the least loaded
      List<Violation> leastSeriousViolation = null;
      Row bestNode = null;
      for (int i = getMatrix().size() - 1; i >= 0; i--) {
        Row row = getMatrix().get(i);
        if (!isNodeSuitableForReplicaAddition(row)) continue;
        Row tmpRow = row.addReplica(shard.first(), shard.second(), type);
        List<Violation> errs = testChangedMatrix(strict, tmpRow.session.matrix);
        if (!containsNewErrors(errs)) {
          if (isLessSerious(errs, leastSeriousViolation)) {
            leastSeriousViolation = errs;
            bestNode = tmpRow;
          }
        }
      }

      if (bestNode != null) {// there are no rule violations
        this.session = bestNode.session;
        return CollectionAdminRequest
            .addReplicaToShard(shard.first(), shard.second())
            .setType(type)
            .setNode(bestNode.node);
      }
    }

    return null;
  }

