  @SuppressWarnings({"rawtypes"})
  public StreamOperation constructOperation(StreamExpression expression) throws IOException {
    String function = expression.getFunctionName();
    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(function);
    if (classSupplier != null) {
      Class<? extends Expressible> clazz = classSupplier.get();
      if (Expressible.class.isAssignableFrom(clazz) && StreamOperation.class.isAssignableFrom(clazz)) {
        return (StreamOperation) createInstance(clazz, new Class[]{StreamExpression.class, StreamFactory.class}, new Object[]{expression, this});
      }
    }

    throw new IOException(String.format(Locale.ROOT, "Invalid operation expression %s - function '%s' is unknown (not mapped to a valid StreamOperation)", expression, expression.getFunctionName()));
  }

