  /**
   * Copy between local file system and Zookeeper, or from one Zookeeper node to another,
   * optionally copying recursively.
   *
   * @param src     Source to copy from. Both src and dst may be Znodes. However, both may NOT be local
   * @param dst     The place to copy the files too. Both src and dst may be Znodes. However both may NOT be local
   * @param recurse if the source is a directory, reccursively copy the contents iff this is true.
   * @throws SolrServerException  Explanatory exception due to bad params, failed operation, etc.
   * @throws KeeperException      Could not perform the Zookeeper operation.
   * @throws InterruptedException Thread interrupted
   */
  public static void zkTransfer(SolrZkClient zkClient, String src, Boolean srcIsZk,
                         String dst, Boolean dstIsZk, 
                         Boolean recurse) throws SolrServerException, KeeperException, InterruptedException, IOException {

    if (srcIsZk == false && dstIsZk == false) {
      throw new SolrServerException("One or both of source or destination must specify ZK nodes.");
    }

    // Make sure -recurse is specified if the source has children.
    if (recurse == false) {
      if (srcIsZk) {
        if (zkClient.getChildren(src, null, true).size() != 0) {
          throw new SolrServerException("Zookeeper node " + src + " has children and recurse is false");
        }
      } else if (Files.isDirectory(Paths.get(src))) {
        throw new SolrServerException("Local path " + Paths.get(src).toAbsolutePath() + " is a directory and recurse is false");
      }
    }
    if (srcIsZk == false && dstIsZk == false) {
      throw new SolrServerException("At least one of the source and dest parameters must be prefixed with 'zk:' ");
    }
    dst = normalizeDest(src, dst);

    if (srcIsZk && dstIsZk) {
      traverseZkTree(zkClient, src, VISIT_ORDER.VISIT_PRE, new ZkCopier(zkClient, src, dst));
      return;
    }
    if (dstIsZk) {
      uploadToZK(zkClient, Paths.get(src), dst, null);
      return;
    }

    // Copying individual files from ZK requires special handling since downloadFromZK assumes it's a directory.
    // This is kind of a weak test for the notion of "directory" on Zookeeper.
    if (zkClient.getChildren(src, null, true).size() > 0) {
      downloadFromZK(zkClient, src, Paths.get(dst));
      return;
    }

    if (Files.isDirectory(Paths.get(dst))) {
      if (dst.endsWith("/") == false) dst += "/";
      dst = normalizeDest(src, dst);
    }
    byte[] data = zkClient.getData(src, null, null, true);
    Path filename = Paths.get(dst);
    Files.createDirectories(filename.getParent());
    log.info("Writing file {}", filename);
    Files.write(filename, data);
  }

