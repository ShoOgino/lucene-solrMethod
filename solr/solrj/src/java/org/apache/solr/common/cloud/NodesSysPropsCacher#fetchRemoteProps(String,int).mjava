  private void fetchRemoteProps(String node, int fetchRound) {
    for (int i = 0; i < NUM_RETRY; i++) {
      if (isClosed && fetchRound != fetchCounting.get())
        return;

      try {
        Map<String, Object> props = nodeStateProvider.getNodeValues(node, tags);
        cache.put(node, Collections.unmodifiableMap(props));
        break;
      } catch (Exception e) {
        try {
          // 1, 4, 9
          int backOffTime = 1000 * (i+1);
          backOffTime = backOffTime * backOffTime;
          backOffTime = Math.min(10000, backOffTime);
          Thread.sleep(backOffTime);
        } catch (InterruptedException e1) {
          Thread.currentThread().interrupt();
          log.info("Exception on caching node:{} system.properties:{}, retry {}/{}", node, tags, i+1, NUM_RETRY, e);
          break;
        }
        log.info("Exception on caching node:{} system.properties:{}, retry {}/{}", node, tags, i+1, NUM_RETRY, e);
      }
    }
  }

