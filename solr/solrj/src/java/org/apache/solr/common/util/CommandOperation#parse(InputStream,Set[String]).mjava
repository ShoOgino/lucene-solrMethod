  /**
   * Parse the command operations into command objects from javabin payload
   * * @param singletonCommands commands that cannot be repeated
   */
  @SuppressWarnings({"unchecked", "rawtypes"})
  public static List<CommandOperation> parse(InputStream in, Set<String> singletonCommands) throws IOException {
    List<CommandOperation> operations = new ArrayList<>();

    final HashMap map = new HashMap(0) {
      @Override
      public Object put(Object key, Object value) {
        List vals = null;
        if (value instanceof List && !singletonCommands.contains(key)) {
          vals = (List) value;
        } else {
          vals = Collections.singletonList(value);
        }
        for (Object val : vals) {
          operations.add(new CommandOperation(String.valueOf(key), val));
        }
        return null;
      }
    };

    try (final JavaBinCodec jbc = new JavaBinCodec() {
      int level = 0;
      @Override
      protected Map<Object, Object> newMap(int size) {
        level++;
        return level == 1 ? map : super.newMap(size);
      }
    }) {
      jbc.unmarshal(in);
    }
    return operations;
  }

