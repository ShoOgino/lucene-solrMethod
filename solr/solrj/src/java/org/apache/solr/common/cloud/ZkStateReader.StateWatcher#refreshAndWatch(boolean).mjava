    /**
     * Refresh collection state from ZK and leave a watch for future changes.
     * As a side effect, updates {@link #clusterState} and {@link #watchedCollectionStates}
     * with the results of the refresh.
     *
     * @param expectExists if true, error if no state node exists
     */
    public void refreshAndWatch(boolean expectExists) {
      try {
        DocCollection newState = fetchCollectionState(coll, this);
        updateWatchedCollection(coll, newState);
      } catch (KeeperException.NoNodeException e) {
        if (expectExists) {
          log.warn("State node vanished for collection: " + coll, e);
        }
      } catch (KeeperException e) {
        if (e.code() == KeeperException.Code.SESSIONEXPIRED
                || e.code() == KeeperException.Code.CONNECTIONLOSS) {
          log.warn("ZooKeeper watch triggered, but Solr cannot talk to ZK");
          return;
        }
        log.error("Unwatched collection: " + coll, e);
        throw new ZooKeeperException(ErrorCode.SERVER_ERROR, "", e);

      } catch (InterruptedException e) {
        Thread.currentThread().interrupt();
        log.error("Unwatched collection :" + coll, e);
      }
    }

