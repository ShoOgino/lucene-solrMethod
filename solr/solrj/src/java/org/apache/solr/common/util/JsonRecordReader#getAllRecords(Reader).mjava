  /**
   * Uses {@link #streamRecords streamRecords} to getInst the JSON source but with
   * a handler that collects all the emitted records into a single List which
   * is returned upon completion.
   *
   * @param r the stream reader
   * @return results a List of emitted records
   */
  public List<Map<String, Object>> getAllRecords(Reader r) throws IOException {
    final List<Map<String, Object>> results = new ArrayList<>();
    // Deep copy is required here because the stream might hold on to the map
    streamRecords(r, (record, path) -> results.add(Utils.getDeepCopy(record, 2)));
    return results;
  }

