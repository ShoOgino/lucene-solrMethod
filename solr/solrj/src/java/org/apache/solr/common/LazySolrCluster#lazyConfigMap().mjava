    private SimpleMap<CollectionConfig> lazyConfigMap() {
        Set<String> configNames = new HashSet<>();
        new SimpleZkMap(zkStateReader, ZkStateReader.CONFIGS_ZKNODE)
                .abortableForEach((name, resource) -> {
                    if (!name.contains("/")) {
                        configNames.add(name);
                        return Boolean.TRUE;
                    }
                    return Boolean.FALSE;
                });

        return new SimpleMap<CollectionConfig>() {
            @Override
            public CollectionConfig get(String key) {
                if (configNames.contains(key)) {
                    return new ConfigImpl(key);
                } else {
                    return null;
                }
            }

            @Override
            public void forEachEntry(BiConsumer<String, ? super CollectionConfig> fun) {
                for (String name : configNames) {
                    fun.accept(name, new ConfigImpl(name));
                }
            }

            @Override
            public int size() {
                return configNames.size();
            }
        };
    }

