    @Override
    @SuppressWarnings({"rawtypes"})
    public void handleUnknownClass(Object o) {
      // avoid materializing MapWriter / IteratorWriter to Map / List
      // instead serialize them directly
      if (o instanceof MapWriter) {
        MapWriter mapWriter = (MapWriter) o;
        startObject();
        final boolean[] first = new boolean[1];
        first[0] = true;
        mapWriter._forEachEntry((k, v) -> {
          if (first[0]) {
            first[0] = false;
          } else {
            writeValueSeparator();
          }
          indent();
          writeString(k.toString());
          writeNameSeparator();
          write(v);
        });
        endObject();
      } else if (o instanceof IteratorWriter) {
        IteratorWriter iteratorWriter = (IteratorWriter) o;
        startArray();
        final boolean[] first = new boolean[1];
        first[0] = true;
        try {
          iteratorWriter.writeIter(new IteratorWriter.ItemWriter() {
            @Override
            public IteratorWriter.ItemWriter add(Object o) throws IOException {
              if (first[0]) {
                first[0] = false;
              } else {
                writeValueSeparator();
              }
              indent();
              write(o);
              return this;
            }
          });
        } catch (IOException e) {
          throw new RuntimeException("this should never happen", e);
        }
        endArray();
      } else {
        super.handleUnknownClass(o);
      }
    }

