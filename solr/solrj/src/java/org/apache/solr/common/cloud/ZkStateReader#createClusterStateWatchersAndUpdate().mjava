  @SuppressWarnings({"unchecked"})
  public synchronized void createClusterStateWatchersAndUpdate() throws KeeperException, InterruptedException {
    // We need to fetch the current cluster state and the set of live nodes

    log.debug("Updating cluster state from ZooKeeper... ");

    try {
      // on reconnect of SolrZkClient force refresh and re-add watches.
      loadClusterProperties();
      refreshLiveNodes(new LiveNodeWatcher());
      refreshCollections();
      refreshCollectionList(new CollectionsChildWatcher());
      refreshAliases(aliasesManager);

      if (securityNodeListener != null) {
        addSecurityNodeWatcher(pair -> {
          ConfigData cd = new ConfigData();
          cd.data = pair.first() == null || pair.first().length == 0 ? EMPTY_MAP : Utils.getDeepCopy((Map) fromJSON(pair.first()), 4, false);
          cd.version = pair.second() == null ? -1 : pair.second().getVersion();
          securityData = cd;
          securityNodeListener.run();
        });
        securityData = getSecurityProps(true);
      }

      collectionPropsObservers.forEach((k, v) -> {
        collectionPropsWatchers.computeIfAbsent(k, PropsWatcher::new).refreshAndWatch(true);
      });
    } catch (KeeperException.NoNodeException nne) {
      throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE,
          "Cannot connect to cluster at " + zkClient.getZkServerAddress() + ": cluster not found/not ready");
    }
  }

