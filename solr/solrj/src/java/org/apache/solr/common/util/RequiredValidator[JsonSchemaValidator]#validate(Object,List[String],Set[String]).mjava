  boolean validate( Object o, List<String> errs, Set<String> requiredProps) {
    if (o instanceof Map) {
      @SuppressWarnings({"rawtypes"})
      Set fnames = ((Map) o).keySet();
      for (String requiredProp : requiredProps) {
        if (requiredProp.contains(".")) {
          if (requiredProp.endsWith(".")) {
            errs.add("Illegal required attribute name (ends with '.': " + requiredProp + ").  This is a bug.");
            return false;
          }
          String subprop = requiredProp.substring(requiredProp.indexOf(".") + 1);
          if (!validate(((Map)o).get(requiredProp), errs, Collections.singleton(subprop))) {
            return false;
          }
        } else {
          if (!fnames.contains(requiredProp)) {
            errs.add("Missing required attribute '" + requiredProp + "' in object " + Utils.toJSONString(o));
            return false;
          }
        }
      }
      return true;
    }
    return false;
  }

