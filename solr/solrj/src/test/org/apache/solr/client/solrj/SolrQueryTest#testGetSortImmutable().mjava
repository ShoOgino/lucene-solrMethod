  /*
   * Verifies that getSort() returns an immutable map,
   * for both empty and non-empty situations
   */
  public void testGetSortImmutable() {
    SolrQuery q = new SolrQuery("dog");

    try {
      q.getSorts().add(new SortClause("price",  SolrQuery.ORDER.asc));
      fail("The returned (empty) map should be immutable; put() should fail!");
    } catch (UnsupportedOperationException uoe) {
      // pass
    }

    q.addSort("qty", SolrQuery.ORDER.desc);
    try {
      q.getSorts().add(new SortClause("price",  SolrQuery.ORDER.asc));
      fail("The returned (non-empty) map should be immutable; put() should fail!");
    } catch (UnsupportedOperationException uoe) {
      // pass
    }

    // Should work even when setSorts passes an Immutable List
    q.setSorts(Arrays.asList(new SortClause("price",  SolrQuery.ORDER.asc)));
    q.addSort(new SortClause("price",  SolrQuery.ORDER.asc));
  }

