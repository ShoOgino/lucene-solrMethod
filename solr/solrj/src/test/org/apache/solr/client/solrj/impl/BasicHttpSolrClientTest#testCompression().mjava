  @Test
  public void testCompression() throws Exception {
    final SolrQuery q = new SolrQuery("*:*");
    
    final String clientUrl = jetty.getBaseUrl().toString() + "/debug/foo";
    try (HttpSolrClient client = getHttpSolrClient(clientUrl)) {
      // verify request header gets set
      DebugServlet.clear();
      expectThrows(ParseException.class, () -> client.query(q));
      assertNull(DebugServlet.headers.toString(), DebugServlet.headers.get("Accept-Encoding"));
    }
    
    try (HttpSolrClient client = getHttpSolrClient(clientUrl, null, null, true)) {
      try {
        client.query(q);
      } catch (ParseException ignored) {}
      assertNotNull(DebugServlet.headers.get("Accept-Encoding"));
    }
    
    try (HttpSolrClient client = getHttpSolrClient(clientUrl, null, null, false)) {
      try {
        client.query(q);
      } catch (ParseException ignored) {}
    }
    assertNull(DebugServlet.headers.get("Accept-Encoding"));
    
    // verify server compresses output
    HttpGet get = new HttpGet(jetty.getBaseUrl().toString() + "/collection1" +
                              "/select?q=foo&wt=xml");
    get.setHeader("Accept-Encoding", "gzip");
    ModifiableSolrParams params = new ModifiableSolrParams();
    params.set(HttpClientUtil.PROP_ALLOW_COMPRESSION, true);
    
    RequestConfig config = RequestConfig.custom().setDecompressionEnabled(false).build();   
    get.setConfig(config);
    
    CloseableHttpClient httpclient = HttpClientUtil.createClient(params);
    HttpEntity entity = null;
    try {
      HttpResponse response = httpclient.execute(get, HttpClientUtil.createNewHttpClientRequestContext());
      entity = response.getEntity();
      Header ceheader = entity.getContentEncoding();
      assertNotNull(Arrays.asList(response.getAllHeaders()).toString(), ceheader);
      assertEquals("gzip", ceheader.getValue());
    } finally {
      if (entity != null) {
        entity.getContent().close();
      }
      HttpClientUtil.close(httpclient);
    }
    
    // verify compressed response can be handled
    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + "/collection1")) {
      QueryResponse response = client.query(new SolrQuery("foo"));
      assertEquals(0, response.getStatus());
    }
  }

