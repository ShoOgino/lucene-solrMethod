  @Test
  public void testPivotFacetsStatsNotSupported() throws Exception {
    SolrClient client = getSolrClient();

    // Empty the database...
    client.deleteByQuery("*:*");// delete everything!
    client.commit();
    assertNumFound("*:*", 0); // make sure it got in

    // results of this test should be the same regardless of whether any docs in index
    if (random().nextBoolean()) {
      client.add(makeTestDoc("id", 1, "features", "aaa", "cat", "a", "inStock", true, "popularity", 12, "price", .017));
      client.commit();
    }

    ignoreException("is not currently supported");

    // boolean field
    SolrQuery query = new SolrQuery("*:*");
    query.addFacetPivotField("{!stats=s1}features,manu");
    query.addGetFieldStatistics("{!key=inStock_val tag=s1}inStock");

    SolrException e = expectThrows(SolrException.class, () -> client.query(query));
    assertEquals("Pivot facet on boolean is not currently supported, bad request returned", 400, e.code());
    assertTrue(e.getMessage().contains("is not currently supported"));
    assertTrue(e.getMessage().contains("boolean"));

    // asking for multiple stat tags -- see SOLR-6663
    SolrQuery query2 = new SolrQuery("*:*");
    query2.addFacetPivotField("{!stats=tag1,tag2}features,manu");
    query2.addGetFieldStatistics("{!tag=tag1}price", "{!tag=tag2}popularity");
    query2.setFacetMinCount(0);
    query2.setRows(0);

    e = expectThrows(SolrException.class, () -> client.query(query2));
    assertEquals(400, e.code());
    assertTrue(e.getMessage().contains("stats"));
    assertTrue(e.getMessage().contains("comma"));
    assertTrue(e.getMessage().contains("tag"));

    // text field
    SolrQuery query3 = new SolrQuery("*:*");
    query3.addFacetPivotField("{!stats=s1}features,manu");
    query3.addGetFieldStatistics("{!tag=s1}features");
    query3.setFacetMinCount(0);
    query3.setRows(0);
    e = expectThrows(SolrException.class, () -> client.query(query3));
    assertEquals("Pivot facet on string is not currently supported, bad request returned", 400, e.code());
    assertTrue(e.getMessage().contains("is not currently supported"));
    assertTrue(e.getMessage().contains("text_general"));
  }

