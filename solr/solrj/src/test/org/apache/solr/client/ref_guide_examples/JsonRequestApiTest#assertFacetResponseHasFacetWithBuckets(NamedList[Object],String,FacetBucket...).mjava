  private void assertFacetResponseHasFacetWithBuckets(NamedList<Object> facetResponse, String expectedFacetName, FacetBucket... expectedBuckets) {
    Object o = facetResponse.get(expectedFacetName);
    if (o == null) fail("Response has no top-level facet named '" + expectedFacetName + "'");
    if (!(o instanceof NamedList)) fail("Response has a property for the expected facet '" + expectedFacetName + "' property, but it is not a NamedList");

    final NamedList<Object> expectedFacetTopLevel = (NamedList<Object>) o;
    o = expectedFacetTopLevel.get("buckets");
    if (o == null) fail("Response has no 'buckets' property under 'facets'");
    if (!(o instanceof List)) fail("Response has no 'buckets' property containing actual facet information.");

    final List<NamedList> bucketList = (List<NamedList>) o;
    assertEquals("Expected " + expectedBuckets.length + " buckets, but found " + bucketList.size(),
        expectedBuckets.length, bucketList.size());
    for (int i = 0; i < expectedBuckets.length; i++) {
      final FacetBucket expectedBucket = expectedBuckets[i];
      final NamedList<Object> actualBucket = bucketList.get(i);
      assertEquals(expectedBucket.getVal(), actualBucket.get("val"));
      assertEquals(expectedBucket.getCount(), actualBucket.get("count"));
    }
  }

