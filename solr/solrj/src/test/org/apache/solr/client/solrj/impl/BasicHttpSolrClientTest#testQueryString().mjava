  @Test
  public void testQueryString() throws Exception {

    final String clientUrl = jetty.getBaseUrl().toString() + "/debug/foo";
    try(HttpSolrClient client = getHttpSolrClient(clientUrl)) {
      // test without request query params
      DebugServlet.clear();
      client.setQueryParams(setOf("serverOnly"));
      UpdateRequest req = new UpdateRequest();
      setReqParamsOf(req, "serverOnly", "notServer");
      expectThrows(ParseException.class, () -> client.request(req));
      verifyServletState(client, req);
  
      // test without server query params
      DebugServlet.clear();
      client.setQueryParams(setOf());
      UpdateRequest req2 = new UpdateRequest();
      req2.setQueryParams(setOf("requestOnly"));
      setReqParamsOf(req2, "requestOnly", "notRequest");
      expectThrows(ParseException.class, () -> client.request(req2));
      verifyServletState(client, req2);
  
      // test with both request and server query params
      DebugServlet.clear();
      UpdateRequest req3 = new UpdateRequest();
      client.setQueryParams(setOf("serverOnly", "both"));
      req3.setQueryParams(setOf("requestOnly", "both"));
      setReqParamsOf(req3, "serverOnly", "requestOnly", "both", "neither");
      expectThrows(ParseException.class, () -> client.request(req3));
      verifyServletState(client, req3);
  
      // test with both request and server query params with single stream
      DebugServlet.clear();
      UpdateRequest req4 = new UpdateRequest();
      req4.add(new SolrInputDocument());
      client.setQueryParams(setOf("serverOnly", "both"));
      req4.setQueryParams(setOf("requestOnly", "both"));
      setReqParamsOf(req4, "serverOnly", "requestOnly", "both", "neither");
      expectThrows(ParseException.class, () -> client.request(req4));
      // NOTE: single stream requests send all the params
      // as part of the query string.  So add "neither" to the request
      // so it passes the verification step.
      req4.setQueryParams(setOf("requestOnly", "both", "neither"));
      verifyServletState(client, req4);
    }
  }

