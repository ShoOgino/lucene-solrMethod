  public static void fixRequiredProps(Map<String, Object> testData) {
    Map<String, Object> clusterState = (Map<String, Object>) testData.get("clusterstate");
    clusterState.forEach((collection, val) -> {
      Map<String, Object> docColl = (Map<String, Object>) val;
      Map<String, Object> shards = (Map<String, Object>) docColl.get("shards");
      shards.forEach((shardName, val2) -> {
        Map<String, Object> shard = (Map<String, Object>) val2;
        Map<String, Object> replicas = (Map<String, Object>) shard.get("replicas");
        replicas.forEach((coreNode, val3) -> {
          Map<String, Object> replica = (Map<String, Object>) val3;
          if (!replica.containsKey("node_name")) {
            replica.put("node_name", "node1");
          }
          if (!replica.containsKey("core")) {
            replica.put("core", "core_" + coreNode);
          }
        });
      });
    });
    Map<String, Object> replicaInfo = (Map<String, Object>) testData.get("replicaInfo");
    replicaInfo.forEach((node, val) -> {
      Map m1 = (Map) val;
      m1.forEach((coll, val2) -> {
        Map m2 = (Map) val2;
        m2.forEach((shard, val3) -> {
          List l3 = (List) val3;
          l3.forEach(o -> {
            Map replica = (Map) o;
            String coreNode = replica.keySet().iterator().next().toString();
            replica = (Map) replica.get(coreNode);
            if (!replica.containsKey("node_name")) {
              replica.put("node_name", "node1");
            }
            if (!replica.containsKey("core")) {
              replica.put("core", "core_" + coreNode);
            }
          });
        });
      });
    });
  }

