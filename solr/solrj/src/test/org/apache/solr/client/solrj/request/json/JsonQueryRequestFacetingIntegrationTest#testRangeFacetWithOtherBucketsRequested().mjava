  @Test
  public void testRangeFacetWithOtherBucketsRequested() throws Exception {
    final JsonQueryRequest request = new JsonQueryRequest()
        .setQuery("*:*")
        .withFacet("price_range",
            new RangeFacetMap("price", 0, 100, 20)
                .setOtherBuckets(RangeFacetMap.OtherBuckets.ALL)
        );

    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);
    final NestableJsonFacet topLevelFacetData = response.getJsonFacetingResponse();

    assertHasFacetWithBucketValues(topLevelFacetData, "price_range",
        new FacetBucket(0.0f, 5),
        new FacetBucket(20.0f, 0),
        new FacetBucket(40.0f, 0),
        new FacetBucket(60.0f, 1),
        new FacetBucket(80.0f, 1));
    assertEquals(0, topLevelFacetData.getBucketBasedFacets("price_range").getBefore());
    assertEquals(9, topLevelFacetData.getBucketBasedFacets("price_range").getAfter());
    assertEquals(7, topLevelFacetData.getBucketBasedFacets("price_range").getBetween());
  }

