  @Test
  public void testInvalidExpression() throws Exception {

    StreamEvaluator evaluator;

    try {
      evaluator = factory.constructEvaluator("nope(a)");
      evaluator.evaluate(new Tuple(null));
      assertTrue(false);
    } catch (Exception e) {
      assertTrue(e.getCause().getCause().getMessage().contains("Invalid date expression nope"));
      assertTrue(e.getCause().getCause().getMessage().contains("expecting one of [year, month, day"));
    }

    try {
      evaluator = factory.constructEvaluator("week()");
      assertTrue(false);
    } catch (Exception e) {
      assertTrue(e.getCause().getCause().getMessage().contains("Invalid expression week()"));
    }

    try {
      evaluator = factory.constructEvaluator("week(a, b)");
      assertTrue(false);
    } catch (Exception e) {
      assertTrue(e.getCause().getCause().getMessage().contains("expecting one value but found 2"));
    }

    try {
      evaluator = factory.constructEvaluator("Week()");
      assertTrue(false);
    } catch (Exception e) {
      assertTrue(e.getMessage().contains("Invalid evaluator expression Week() - function 'Week' is unknown"));
    }
  }

