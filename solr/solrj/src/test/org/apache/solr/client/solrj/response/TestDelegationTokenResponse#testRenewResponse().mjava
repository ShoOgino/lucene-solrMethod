  @Test
  public void testRenewResponse() throws Exception {
    DelegationTokenRequest.Renew renewRequest = new DelegationTokenRequest.Renew("token");
    DelegationTokenResponse.Renew renewResponse = new DelegationTokenResponse.Renew();

    // not a map
    try {
      delegationTokenResponse(renewRequest, renewResponse, "");
      renewResponse.getExpirationTime();
      fail("Expected SolrException");
    } catch (SolrException se) {
    }

    // doesn't have long
    delegationTokenResponse(renewRequest, renewResponse, getMapJson("notLong", "123"));
    assertNull(renewResponse.getExpirationTime());

    // long isn't valid
    try {
      delegationTokenResponse(renewRequest, renewResponse, getMapJson("long", "aaa"));
      renewResponse.getExpirationTime();
      fail("Expected SolrException");
    } catch (SolrException se) {
    }

    // valid
    Long expirationTime = new Long(Long.MAX_VALUE);
    delegationTokenResponse(renewRequest, renewResponse,
      getMapJson("long", expirationTime));
    assertEquals(expirationTime, renewResponse.getExpirationTime());
  }

