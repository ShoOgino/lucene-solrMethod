  @SuppressWarnings("serial")
  @Test
  public void iterableTypes() throws Exception{
    values.clear();
    
    values.put("a", new PriorityQueue<Boolean>(){{ add(true); add(false); }});
    values.put("b", new PriorityQueue<Double>(){{ add(0.0); add(1.1); }});
    values.put("c", new PriorityQueue<Integer>(){{ add(0); add(1); }});
    values.put("d", new PriorityQueue<Long>(){{ add(0L); add(1L); }});
    values.put("e", new PriorityQueue<String>(){{ add("first"); add("second"); }});
    
    Tuple tuple = new Tuple(values);
    
    for(String fieldName : new String[]{ "a", "b", "c", "d", "e" }){
      Assert.assertTrue(new FieldValueEvaluator(fieldName).evaluate(tuple) instanceof Collection);
      Assert.assertEquals(2, ((Collection<?>)new FieldValueEvaluator(fieldName).evaluate(tuple)).size());
    }
    
    // the priority queue is doing natural ordering, so false is first
    Assert.assertEquals(true, ((Collection<?>)new FieldValueEvaluator("a").evaluate(tuple)).toArray()[1]);
    Assert.assertEquals(1.1, ((Collection<?>)new FieldValueEvaluator("b").evaluate(tuple)).toArray()[1]);
    Assert.assertEquals(1, ((Collection<?>)new FieldValueEvaluator("c").evaluate(tuple)).toArray()[1]);
    Assert.assertEquals(1L, ((Collection<?>)new FieldValueEvaluator("d").evaluate(tuple)).toArray()[1]);
    Assert.assertEquals("second", ((Collection<?>)new FieldValueEvaluator("e").evaluate(tuple)).toArray()[1]);
  }

