@BeforeClass
public static void configureCluster() throws Exception {
  numShards = random().nextInt(2) + 1;  //1 - 3
  numWorkers = numShards > 2 ? random().nextInt(numShards - 1) + 1 : numShards;
  configureCluster(numShards)
      .addConfig("conf", getFile("solrj").toPath().resolve("solr").resolve("configsets").resolve("streaming").resolve("conf"))
      .configure();

  String collection;
  useAlias = random().nextBoolean();
  if (useAlias) {
    collection = COLLECTIONORALIAS + "_collection";
  } else {
    collection = COLLECTIONORALIAS;
  }
  CollectionAdminRequest.createCollection(collection, "conf", numShards, 1).process(cluster.getSolrClient());
  cluster.waitForActiveCollection(collection, numShards, numShards);
  if (useAlias) {
    CollectionAdminRequest.createAlias(COLLECTIONORALIAS, collection).process(cluster.getSolrClient());
  }

  zkHost = cluster.getZkServer().getZkAddress();
  streamFactory.withCollectionZkHost(COLLECTIONORALIAS, zkHost);
}

