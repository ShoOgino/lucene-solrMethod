  @Test
  public void testAllFunctions() throws Exception {

    //year, month, day, dayofyear, hour, minute, quarter, week, second, epoch
    testFunction("year(a)", "1995-12-31T23:59:59Z", 1995);
    testFunction("month(a)","1995-12-31T23:59:59Z", 12);
    testFunction("day(a)",  "1995-12-31T23:59:59Z", 31);
    testFunction("dayofyear(a)",  "1995-12-31T23:59:59Z", 365);
    testFunction("dayofquarter(a)",  "1995-12-31T23:59:59Z", 92);
    testFunction("hour(a)",   "1995-12-31T23:59:59Z", 23);
    testFunction("minute(a)", "1995-12-31T23:59:59Z", 59);
    testFunction("quarter(a)","1995-12-31T23:59:59Z", 4);
    testFunction("week(a)",   "1995-12-31T23:59:59Z", 52);
    testFunction("second(a)", "1995-12-31T23:59:58Z", 58);
    testFunction("epoch(a)",  "1995-12-31T23:59:59Z", 820454399000l);

    testFunction("year(a)", "2017-03-17T10:30:45Z", 2017);
    testFunction("year('a')", "2017-03-17T10:30:45Z", 2017);
    testFunction("month(a)","2017-03-17T10:30:45Z", 3);
    testFunction("day(a)",  "2017-03-17T10:30:45Z", 17);
    testFunction("day('a')",  "2017-03-17T10:30:45Z", 17);
    testFunction("dayofyear(a)",  "2017-03-17T10:30:45Z", 76);
    testFunction("dayofquarter(a)",  "2017-03-17T10:30:45Z", 76);
    testFunction("hour(a)",   "2017-03-17T10:30:45Z", 10);
    testFunction("minute(a)", "2017-03-17T10:30:45Z", 30);
    testFunction("quarter(a)","2017-03-17T10:30:45Z", 1);
    testFunction("week(a)",   "2017-03-17T10:30:45Z", 11);
    testFunction("second(a)", "2017-03-17T10:30:45Z", 45);
    testFunction("epoch(a)",  "2017-03-17T10:30:45Z", 1489746645000l);

    testFunction("epoch(a)",  new Date(1489746645500l).toInstant().toString(), 1489746645500l);
    testFunction("epoch(a)",  new Date(820454399990l).toInstant().toString(), 820454399990l);

    //Additionally test all functions to make sure they return a non-null number
    for (DatePartEvaluator.FUNCTION function : DatePartEvaluator.FUNCTION.values()) {
      StreamEvaluator evaluator = factory.constructEvaluator(function+"(a)");
      values.clear();
      values.put("a", "2017-03-17T10:30:45Z");
      Object result = evaluator.evaluate(new Tuple(values));
      assertNotNull(function+" should return a result",result);
      assertTrue(function+" should return a number", result instanceof Number);
    }
  }

