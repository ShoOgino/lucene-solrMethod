  /**
   * The internal client created by HttpSolrClient is a SystemDefaultHttpClient
   * which takes care of merging request level params (such as timeout) with the
   * configured defaults.
   *
   * However, if an external HttpClient is passed to HttpSolrClient,
   * the logic in InternalHttpClient.executeMethod replaces the configured defaults
   * by request level params if they exist. That is why we must test a setting such
   * as timeout with an external client to assert that the defaults are indeed being
   * used
   *
   * See SOLR-6245 for more details
   */
  @Test
  public void testTimeoutWithExternalClient() throws Exception {
    HttpClientBuilder builder = HttpClientBuilder.create();
    RequestConfig config = RequestConfig.custom().setSocketTimeout(2000).build();
    builder.setDefaultRequestConfig(config);
    HttpSolrClient solrClient = null;
    try (CloseableHttpClient httpClient = builder.build()) {
      solrClient = new HttpSolrClient(jetty.getBaseUrl().toString() +
          "/slow/foo", httpClient);

      SolrQuery q = new SolrQuery("*:*");
      try {
        QueryResponse response = solrClient.query(q, SolrRequest.METHOD.GET);
        fail("No exception thrown.");
      } catch (SolrServerException e) {
        assertTrue(e.getMessage().contains("Timeout"));
      }
    } finally {
      if (solrClient != null) {
        solrClient.shutdown();
      }
    }
  }

