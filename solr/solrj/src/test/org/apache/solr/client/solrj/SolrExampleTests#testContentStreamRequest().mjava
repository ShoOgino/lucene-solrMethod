 @Test
 public void testContentStreamRequest() throws Exception {
    SolrClient client = getSolrClient();
    client.deleteByQuery("*:*");// delete everything!
    client.commit();
    QueryResponse rsp = client.query( new SolrQuery( "*:*") );
    Assert.assertEquals(0, rsp.getResults().getNumFound());

    ContentStreamUpdateRequest up = new ContentStreamUpdateRequest("/update");
    File file = getFile("solrj/books.csv");
    final int opened[] =  new int[] {0};
    final int closed[] =  new int[] {0};

    boolean assertClosed = random().nextBoolean();
    if (assertClosed) {
      byte[] allBytes = Files.readAllBytes(file.toPath());

      ContentStreamBase.ByteArrayStream contentStreamMock = new ContentStreamBase.ByteArrayStream(allBytes, "solrj/books.csv", "application/csv") {
        @Override
        public InputStream getStream() throws IOException {
          opened [0]++;
          return new ByteArrayInputStream( allBytes ) {
            @Override
            public void close() throws IOException {
              super.close();
              closed[0]++;
            }
          };
        }
      };
      up.addContentStream(contentStreamMock);
    } else {
      up.addFile(file, "application/csv");
    }
    
    up.setAction(AbstractUpdateRequest.ACTION.COMMIT, true, true);
    NamedList<Object> result = client.request(up);
    assertNotNull("Couldn't upload books.csv", result);
    
    if (assertClosed) {
      assertEquals("open only once",1, opened[0]);
      assertEquals("close exactly once",1, closed[0]);
    }
    rsp = client.query( new SolrQuery( "*:*") );
    Assert.assertEquals( 10, rsp.getResults().getNumFound() );
 }

