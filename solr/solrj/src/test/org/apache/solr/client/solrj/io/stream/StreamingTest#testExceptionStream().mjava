  @Test
  @Ignore
  public void testExceptionStream() throws Exception {

    new UpdateRequest()
        .add(id, "0", "a_s", "hello0", "a_i", "0", "a_f", "1")
        .add(id, "2", "a_s", "hello0", "a_i", "2", "a_f", "2")
        .add(id, "3", "a_s", "hello3", "a_i", "3", "a_f", "3")
        .add(id, "4", "a_s", "hello4", "a_i", "4", "a_f", "4")
        .add(id, "1", "a_s", "hello0", "a_i", "1", "a_f", "5")
        .add(id, "5", "a_s", "hello3", "a_i", "10", "a_f", "6")
        .add(id, "6", "a_s", "hello4", "a_i", "11", "a_f", "7")
        .add(id, "7", "a_s", "hello3", "a_i", "12", "a_f", "8")
        .add(id, "8", "a_s", "hello3", "a_i", "13", "a_f", "9")
        .add(id, "9", "a_s", "hello0", "a_i", "14", "a_f", "10")
        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);

    StreamContext streamContext = new StreamContext();
    SolrClientCache solrClientCache = new SolrClientCache();
    streamContext.setSolrClientCache(solrClientCache);
    //Test an error that comes originates from the /select handler
    try {
      SolrParams sParamsA = mapParams("q", "*:*", "fl", "a_s,a_i,a_f,blah", "sort", "blah asc");
      CloudSolrStream stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);
      ExceptionStream estream = new ExceptionStream(stream);
      estream.setStreamContext(streamContext);
      Tuple t = getTuple(estream);
      assertTrue(t.EOF);
      assertTrue(t.EXCEPTION);
      assertTrue(t.getException().contains("sort param field can't be found: blah"));

      //Test an error that comes originates from the /export handler
      sParamsA = mapParams("q", "*:*", "fl", "a_s,a_i,a_f,score", "sort", "a_s asc", "qt", "/export");
      stream = new CloudSolrStream(zkHost, COLLECTIONORALIAS, sParamsA);
      estream = new ExceptionStream(stream);
      estream.setStreamContext(streamContext);
      t = getTuple(estream);
      assertTrue(t.EOF);
      assertTrue(t.EXCEPTION);
      //The /export handler will pass through a real exception.
      assertTrue(t.getException().contains("undefined field:"));
    } finally {
      solrClientCache.close();
    }
  }

