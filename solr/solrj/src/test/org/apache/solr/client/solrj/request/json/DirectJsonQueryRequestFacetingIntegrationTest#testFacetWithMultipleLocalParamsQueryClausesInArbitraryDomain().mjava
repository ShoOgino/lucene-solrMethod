  public void testFacetWithMultipleLocalParamsQueryClausesInArbitraryDomain() throws Exception {
    final String jsonBody = String.join("\n","{",
        "  'query': 'cat:electronics',",
        "  'facet': {",
        "    'cats_matching_solr': {",
        "      'type': 'terms',",
        "      'field': 'cat',",
        "      'domain': {",
        "        'query': ['{!lucene df=\"cat\" v=\"search\"}', '{!lucene df=\"name\" v=\"Solr\"}']",
        "      }",
        "    }",
        "  }",
        "}");
    final DirectJsonQueryRequest request = new DirectJsonQueryRequest(jsonBody);
    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);

    assertEquals(0, response.getStatus());
    final SolrDocumentList returnedDocs = response.getResults();
    assertEquals(NUM_ELECTRONICS, returnedDocs.getNumFound());
    assertEquals(10, returnedDocs.size());
    final NamedList<Object> rawResponse = response.getResponse();

    // Test top level facets
    assertHasFacetWithBucketValues(rawResponse,"cats_matching_solr",
        new FacetBucket("search",1),
        new FacetBucket("software", 1));
  }

