  @Test
  public void addManyFieldsWithManySubAddsWithNegative() throws Exception{
    StreamEvaluator evaluator = factory.constructEvaluator("add(add(a,b),add(c,d),add(c,a))");
    Object result;
    
    values.clear();
    values.put("a", -1);
    values.put("b", 2);
    values.put("c", 3);
    values.put("d", 4);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertEquals(10D, result);
    
    values.clear();
    values.put("a", 1.1);
    values.put("b", 2);
    values.put("c", -3);
    values.put("d", 4);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(result instanceof Double);
    Assert.assertEquals(2.2D, result);
    
    values.clear();
    values.put("a", 1.1);
    values.put("b", 2.1);
    values.put("c", -3.1);
    values.put("d", 4.1);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(result instanceof Double);
    Assert.assertEquals(2.2D, result);
    
    values.clear();
    values.put("a", 1.1);
    values.put("b", 2.1);
    values.put("c", -3.1);
    values.put("d", 5.223456789123456);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(result instanceof Double);
    Assert.assertEquals(3.323456789123456, result);
    
    values.clear();
    values.put("a", 123456789123456789L);
    values.put("b", -123456789123456789L);
    values.put("c", 123456789123456789L);
    values.put("d", 123456789123456789L);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertEquals(4 * 123456789123456789D, result);
    
    values.clear();
    values.put("a", -4.12345678);
    values.put("b", -4.12345678);
    values.put("c", -4.12345678);
    values.put("d", -4.12345678);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(result instanceof Double);
    Assert.assertEquals(6 * -4.12345678, result);
  }

