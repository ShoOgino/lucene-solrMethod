  @Test
  public void powTwoFieldsWithValues() throws Exception{
    StreamEvaluator evaluator = factory.constructEvaluator("pow(a,b)");
    Object result;
    
    values.clear();
    values.put("a", 2);
    values.put("b", 5);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(result instanceof Number);
    Assert.assertEquals(BigDecimal.valueOf(Math.pow(2, 5)), BigDecimal.valueOf(result instanceof Long ? (long)result : (double)result));
    
    values.clear();
    values.put("a", 1.1);
    values.put("b", 2);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(result instanceof Number);
    Assert.assertEquals(Math.pow(1.1, 2), result);
    
    values.clear();
    values.put("a", 1.1);
    values.put("b", 2.1);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(result instanceof Number);
    Assert.assertEquals(Math.pow(1.1, 2.1), result);
    
    values.clear();
    values.put("a", -1.1);
    values.put("b", 2.1);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(Double.isNaN((double)result));
    
    values.clear();
    values.put("a", 1.1);
    values.put("b", -2.1);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(result instanceof Number);
    Assert.assertEquals(Math.pow(1.1, -2.1), result);
    
    values.clear();
    values.put("a", -1.1);
    values.put("b", -2.1);
    result = evaluator.evaluate(new Tuple(values));
    Assert.assertTrue(Double.isNaN((double)result));
  }

