  @Test
  public void testDistributed() throws Exception
  {
    UpdateRequest up = new UpdateRequest();
    up.setAction(ACTION.COMMIT, true, true);
    up.deleteByQuery("*:*");
    up.process(getSolrCore0());
    up.process(getSolrCore1());
    up.clear();
    
    // Add something to each core
    SolrInputDocument doc = new SolrInputDocument();
    // Add to core0
    doc.setField( "id", "core0" );
    up.add( doc );
    up.process( getSolrCore0() );
    up.clear();

    // Add to core1
    doc.setField( "id", "core1" );
    up.add( doc );
    up.process( getSolrCore1() );
    up.clear();
    
    SolrQuery q = new SolrQuery();
    QueryRequest r = new QueryRequest( q );
    q.setQuery( "*:*" );
    assertEquals( 1, r.process( getSolrCore0() ).getResults().size() );
    assertEquals( 1, r.process( getSolrCore1() ).getResults().size() );
    
    // Distributed
    String baseURL = "127.0.0.1:"+port+context+"/";
    q = new SolrQuery( "*:*" );
    q.set( ShardParams.SHARDS, baseURL+"core0,"+baseURL+"core1" );
    q.set( "fl", "id,s:[shard]" );
    r = new QueryRequest( q );
    SolrDocumentList docs = r.process( getSolrCore0() ).getResults();
    assertEquals( 2, docs.size() );
    for( SolrDocument d : docs ) {
      String id = (String)d.get("id");
      String shard = (String)d.get("s");
      assertEquals(baseURL+id, shard); // The shard ends with the core name
    }
  }

