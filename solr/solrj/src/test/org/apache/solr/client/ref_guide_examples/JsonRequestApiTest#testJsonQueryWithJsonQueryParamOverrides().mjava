  @Test
  public void testJsonQueryWithJsonQueryParamOverrides() throws Exception {
    SolrClient solrClient = cluster.getSolrClient();
    final int expectedResults = 4;

    // This subtest has its own scope so that it and its twin below can can have identical variable declarations (as they appear as separate snippets in the ref-guide)
    {
      // tag::solrj-json-query-param-overrides[]
      final ModifiableSolrParams overrideParams = new ModifiableSolrParams();
      final JsonQueryRequest queryWithParamOverrides = new JsonQueryRequest(overrideParams)
          .setQuery("memory")
          .setLimit(10)
          .withFilter("inStock:true");
      overrideParams.set("json.limit", 5);
      overrideParams.add("json.filter", "\"cat:electronics\"");
      QueryResponse queryResponse = queryWithParamOverrides.process(solrClient, COLLECTION_NAME);
      // end::solrj-json-query-param-overrides[]

      assertResponseFoundNumDocs(queryResponse, expectedResults);
    }

    // tag::solrj-json-query-param-overrides-equivalent[]
    final JsonQueryRequest query = new JsonQueryRequest()
        .setQuery("memory")
        .setLimit(5)
        .withFilter("inStock:true")
        .withFilter("cat:electronics");
    QueryResponse queryResponse = query.process(solrClient, COLLECTION_NAME);
    // end::solrj-json-query-param-overrides-equivalent[]

    assertResponseFoundNumDocs(queryResponse, expectedResults);
  }

