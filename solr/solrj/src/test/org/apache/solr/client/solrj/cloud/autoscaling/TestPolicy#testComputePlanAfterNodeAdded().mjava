  public void testComputePlanAfterNodeAdded() {

    String dataproviderdata = "{" +
        "     liveNodes:[" +
        "       '127.0.0.1:51078_solr'," +
        "       '127.0.0.1:51147_solr']," +
        "     replicaInfo:{" +
        "       '127.0.0.1:51147_solr':{}," +
        "       '127.0.0.1:51078_solr':{testNodeAdded:{shard1:[" +
        "             { core_node3 : { type : NRT}}," +
        "             { core_node4 : { type : NRT}}]}}}," +
        "     nodeValues:{" +
        "       '127.0.0.1:51147_solr':{" +
        "         node:'127.0.0.1:51147_solr'," +
        "         cores:0," +
        "         freedisk : 880.5428657531738}," +
        "       '127.0.0.1:51078_solr':{" +
        "         node:'127.0.0.1:51078_solr'," +
        "         cores:2," +
        "         freedisk:880.5428695678711}}}";

    String autoScalingjson = "cluster-preferences:[" +
        "       {minimize : cores}," +
        "       {'maximize':freedisk , precision:100}],    " +
        " cluster-policy:[{cores:'<10',node:'#ANY'}," +
        "       {replica:'<2', shard:'#EACH',node:'#ANY'}," +
        "       { nodeRole:overseer,replica:0}]}";
    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));
    Policy.Session session = policy.createSession(cloudManagerWithData(dataproviderdata));
    Suggester suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)
        .hint(Hint.TARGET_NODE, "127.0.0.1:51147_solr");
    SolrRequest op = suggester.getSuggestion();
    log.info("" + op);
    assertNotNull(op);
  }

