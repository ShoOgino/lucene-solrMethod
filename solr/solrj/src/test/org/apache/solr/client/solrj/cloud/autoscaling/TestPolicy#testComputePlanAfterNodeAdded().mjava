  public void testComputePlanAfterNodeAdded() {
    String autoScalingjson = "cluster-preferences:[" +
        "       {minimize : cores}," +
        "       {'maximize':freedisk , precision:100}],    " +
        " cluster-policy:[{cores:'<10',node:'#ANY'}," +
        "       {replica:'<2', shard:'#EACH',node:'#ANY'}," +
        "       { nodeRole:overseer,replica:0}]}";
    if(useNodeset){
      autoScalingjson = "cluster-preferences:[" +
          "       {minimize : cores}," +
          "       {'maximize':freedisk , precision:100}],    " +
          " cluster-policy:[{cores:'<10',node:'#ANY'}," +
          "       {replica:'<2', shard:'#EACH',node:'#ANY'}," +
          "       {nodeset:{ nodeRole:overseer},replica:0}]}";

    }
    @SuppressWarnings({"unchecked"})
    Policy policy = new Policy((Map<String, Object>) Utils.fromJSONString(autoScalingjson));
    Policy.Session session = policy.createSession(cloudManagerWithData((Map) loadFromResource("testComputePlanAfterNodeAdded.json")));
    Suggester suggester = session.getSuggester(CollectionParams.CollectionAction.MOVEREPLICA)
        .hint(Hint.TARGET_NODE, "127.0.0.1:51147_solr");
    @SuppressWarnings({"rawtypes"})
    SolrRequest op = suggester.getSuggestion();
    log.info("{}", op);
    assertNotNull("operation expected ", op);
  }

