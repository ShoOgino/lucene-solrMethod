  @Test
  public void testCompression() throws Exception {
    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +
                                               "/debug/foo");
    SolrQuery q = new SolrQuery("*:*");
    
    // verify request header gets set
    DebugServlet.clear();
    try {
      server.query(q);
    } catch (Throwable t) {}
    assertNull(DebugServlet.headers.get("Accept-Encoding"));
    server.setAllowCompression(true);
    try {
      server.query(q);
    } catch (Throwable t) {}
    assertNotNull(DebugServlet.headers.get("Accept-Encoding"));
    server.setAllowCompression(false);
    try {
      server.query(q);
    } catch (Throwable t) {}
    assertNull(DebugServlet.headers.get("Accept-Encoding"));
    
    // verify server compresses output
    HttpGet get = new HttpGet(jetty.getBaseUrl().toString() + "/collection1" +
                              "/select?q=foo&wt=xml");
    get.setHeader("Accept-Encoding", "gzip");
    HttpClient client = HttpClientUtil.createClient(null);
    HttpEntity entity = null;
    try {
      HttpResponse response = client.execute(get);
      entity = response.getEntity();
      Header ceheader = entity.getContentEncoding();
      assertEquals("gzip", ceheader.getValue());
      
    } finally {
      if(entity!=null) {
        entity.getContent().close();
      }
      client.getConnectionManager().shutdown();
    }
    
    // verify compressed response can be handled
    server = new HttpSolrServer(jetty.getBaseUrl().toString() + "/collection1");
    server.setAllowCompression(true);
    q = new SolrQuery("foo");
    QueryResponse response = server.query(q);
    assertEquals(0, response.getStatus());
    server.shutdown();
  }

