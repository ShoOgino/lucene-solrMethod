  public void testMoveReplicaLeaderlast() {

    List<Pair<Replica, Row>> validReplicas = new ArrayList<>();
    Map<String, Object> propMap = Utils.makeMap(
        "leader", "true",
        ZkStateReader.NODE_NAME_PROP, "node1",
        ZkStateReader.REPLICA_TYPE, Replica.Type.NRT.toString(),
        ZkStateReader.CORE_NAME_PROP, "core1");
    Replica replica = new Replica("r1", propMap, "c1", "s1");
    Replica replicaInfo = new Replica(replica.name, replica.node, replica.collection, replica.shard, replica.core,
        replica.getState(), replica.type, replica.getProperties());
    validReplicas.add(new Pair<>(replicaInfo, null));

    replicaInfo = new Replica("r4", "n1", "c1_s2_r1", "c1", "s2", Replica.State.ACTIVE, Replica.Type.NRT,
        Utils.makeMap(ZkStateReader.LEADER_PROP, "true"));
    validReplicas.add(new Pair<>(replicaInfo, null));


    propMap.put("leader", false);
    propMap.put("core", "r2");
    propMap.put("node_name", "n1");
    replica = new Replica("r2", propMap,"c1","s1");
    replicaInfo = new Replica(replica.name, replica.node, replica.collection, replica.shard, replica.core,
        replica.getState(), replica.type, new HashMap<>());
    validReplicas.add(new Pair<>(replicaInfo, null));

    propMap.put("core", "r2");
    replica = new Replica("r3", propMap,"c1","s1");
    replicaInfo = new Replica(replica.name, replica.node, replica.collection, replica.shard, replica.core,
        replica.getState(), replica.type, new HashMap<>());
    validReplicas.add(new Pair<>(replicaInfo, null));


    validReplicas.sort(MoveReplicaSuggester.leaderLast);
    assertEquals("r2", validReplicas.get(0).first().getName());
    assertEquals("r3", validReplicas.get(1).first().getName());
    assertEquals("r1", validReplicas.get(2).first().getName());
    assertEquals("r4", validReplicas.get(3).first().getName());

  }

