  public void testMoveReplicaLeaderlast() {

    List<Pair<ReplicaInfo, Row>> validReplicas = new ArrayList<>();
    Map<String, Object> propMap = Utils.makeMap(
        "leader", "true",
        ZkStateReader.NODE_NAME_PROP, "node1",
        ZkStateReader.REPLICA_TYPE, Replica.Type.NRT.toString(),
        ZkStateReader.CORE_NAME_PROP, "core1");
    Replica replica = new Replica("r1", propMap, "c1", "s1");
    ReplicaInfo replicaInfo = new ReplicaInfo(replica.collection, replica.slice ,replica, new HashMap<>());
    validReplicas.add(new Pair<>(replicaInfo, null));

    replicaInfo = new ReplicaInfo("r4", "c1_s2_r1", "c1", "s2", Replica.Type.NRT, "n1", Collections.singletonMap("leader", "true"));
    validReplicas.add(new Pair<>(replicaInfo, null));


    propMap.put("leader", false);
    replica = new Replica("r2", propMap,"c1","s1");
    replicaInfo = new ReplicaInfo(replica.collection, replica.slice, replica, new HashMap<>());
    validReplicas.add(new Pair<>(replicaInfo, null));

    replica = new Replica("r3", propMap,"c1","s1");
    replicaInfo = new ReplicaInfo(replica.collection,replica.slice, replica, new HashMap<>());
    validReplicas.add(new Pair<>(replicaInfo, null));


    validReplicas.sort(MoveReplicaSuggester.leaderLast);
    assertEquals("r2", validReplicas.get(0).first().getName());
    assertEquals("r3", validReplicas.get(1).first().getName());
    assertEquals("r1", validReplicas.get(2).first().getName());
    assertEquals("r4", validReplicas.get(3).first().getName());

  }

