  private void testJDBCMethods(String collection, String connectionString, Properties properties, String sql) throws Exception {
    try (Connection con = DriverManager.getConnection(connectionString, properties)) {
      assertTrue(con.isValid(DEFAULT_CONNECTION_TIMEOUT));

      assertEquals(zkServer.getZkAddress(), con.getCatalog());
      con.setCatalog(zkServer.getZkAddress());
      assertEquals(zkServer.getZkAddress(), con.getCatalog());

      assertEquals(collection, con.getSchema());
      con.setSchema(collection);
      assertEquals(collection, con.getSchema());

      DatabaseMetaData databaseMetaData = con.getMetaData();
      assertNotNull(databaseMetaData);

      assertEquals(con, databaseMetaData.getConnection());
      assertEquals(connectionString, databaseMetaData.getURL());

      assertEquals(4, databaseMetaData.getJDBCMajorVersion());
      assertEquals(0, databaseMetaData.getJDBCMinorVersion());

      assertEquals("Apache Solr", databaseMetaData.getDatabaseProductName());

      // The following tests require package information that is not available when running via Maven
//      assertEquals(this.getClass().getPackage().getSpecificationVersion(), databaseMetaData.getDatabaseProductVersion());
//      assertEquals(0, databaseMetaData.getDatabaseMajorVersion());
//      assertEquals(0, databaseMetaData.getDatabaseMinorVersion());

//      assertEquals(this.getClass().getPackage().getSpecificationTitle(), databaseMetaData.getDriverName());
//      assertEquals(this.getClass().getPackage().getSpecificationVersion(), databaseMetaData.getDriverVersion());
//      assertEquals(0, databaseMetaData.getDriverMajorVersion());
//      assertEquals(0, databaseMetaData.getDriverMinorVersion());

      try(ResultSet rs = databaseMetaData.getCatalogs()) {
        assertTrue(rs.next());
        assertEquals(zkServer.getZkAddress(), rs.getString("TABLE_CAT"));
        assertFalse(rs.next());
      }

      List<String> collections = new ArrayList<>();
      collections.addAll(cloudClient.getZkStateReader().getClusterState().getCollections());
      Collections.sort(collections);
      try(ResultSet rs = databaseMetaData.getSchemas()) {
        for(String acollection : collections) {
          assertTrue(rs.next());
          assertEquals(acollection, rs.getString("TABLE_SCHEM"));
          assertEquals(zkServer.getZkAddress(), rs.getString("TABLE_CATALOG"));
        }
        assertFalse(rs.next());
      }

      assertNull(con.getWarnings());
      con.clearWarnings();
      assertNull(con.getWarnings());

      try (Statement statement = con.createStatement()) {
        assertEquals(con, statement.getConnection());

        assertNull(statement.getWarnings());
        statement.clearWarnings();
        assertNull(statement.getWarnings());

        try (ResultSet rs = statement.executeQuery(sql)) {
          assertEquals(statement, rs.getStatement());

          checkResultSetMetadata(rs);
          checkResultSet(rs);
        }

        assertTrue(statement.execute(sql));
        assertEquals(-1, statement.getUpdateCount());

        try (ResultSet rs = statement.getResultSet()) {
          assertEquals(statement, rs.getStatement());

          checkResultSetMetadata(rs);
          checkResultSet(rs);
        }

        assertFalse(statement.getMoreResults());
      }
    }
  }

