  @Test
  public void testStreamingRequest() throws Exception {
    SolrServer server = getSolrServer();
    // Empty the database...
    server.deleteByQuery("*:*");// delete everything!
    server.commit();
    assertNumFound("*:*", 0); // make sure it got in
    
    // Add some docs to the index
    UpdateRequest req = new UpdateRequest();
    for (int i = 0; i < 10; i++) {
      SolrInputDocument doc = new SolrInputDocument();
      doc.addField("id", "" + i);
      doc.addField("cat", "foocat");
      req.add(doc);
    }
    req.setAction(ACTION.COMMIT, true, true);
    req.process(server);
    
    // Make sure it ran OK
    SolrQuery query = new SolrQuery("*:*");
    query.set(CommonParams.FL, "id,score,_docid_");
    QueryResponse response = server.query(query);
    assertEquals(0, response.getStatus());
    assertEquals(10, response.getResults().getNumFound());
    
    // Now make sure each document gets output
    final AtomicInteger cnt = new AtomicInteger(0);
    server.queryAndStreamResponse(query, new StreamingResponseCallback() {
      
      @Override
      public void streamDocListInfo(long numFound, long start, Float maxScore) {
        assertEquals(10, numFound);
      }
      
      @Override
      public void streamSolrDocument(SolrDocument doc) {
        cnt.incrementAndGet();
        
        // Make sure the transformer works for streaming
        Float score = (Float) doc.get("score");
        assertEquals("should have score", new Float(1.0), score);
      }
      
    });
    assertEquals(10, cnt.get());
  }

