  @Test
  @BadApple(bugUrl="https://issues.apache.org/jira/browse/SOLR-12028") // added 20-Sep-2018
  public void testGetShardsTolerantAsBool() {
    ModifiableSolrParams params = new ModifiableSolrParams();
    // shards.tolerant param is not set; default should be false
    assertFalse(ShardParams.getShardsTolerantAsBool(params));

    // shards.tolerant boolean true param should return true
    for (String trueValue : new String[] { "true", "yes", "on"}) {
      params.set(ShardParams.SHARDS_TOLERANT, trueValue);
      assertTrue(ShardParams.getShardsTolerantAsBool(params));
    }

    // shards.tolerant boolean false param should return false
    for (String falseValue : new String[] { "false", "no", "off"}) {
      params.set(ShardParams.SHARDS_TOLERANT, falseValue);
      assertFalse(ShardParams.getShardsTolerantAsBool(params));
    }
    
    // shards.tolerant=requireZkConnected should return false
    params.set(ShardParams.SHARDS_TOLERANT, ShardParams.REQUIRE_ZK_CONNECTED);
    assertFalse(ShardParams.getShardsTolerantAsBool(params));

    // values that aren't "requireZkConnected" or boolean should throw an exception
    params.set(ShardParams.SHARDS_TOLERANT, "bogusValue");
    Exception exception = expectThrows(SolrException.class, () -> ShardParams.getShardsTolerantAsBool(params));
    assertTrue(exception.getMessage().startsWith("invalid boolean value: "));
  }

