  public void testNestedDocs() throws Exception {
    String json = "{a:{" +
        "b:{c:d}," +
        "x:y" +
        "}}";
    JsonRecordReader streamer = JsonRecordReader.getInst("/|/a/b", Arrays.asList("/a/x", "/a/b/*"));
    streamer.streamRecords(new StringReader(json), (record, path) -> {
      assertEquals(record.get("x"), "y");
      assertEquals(((Map) record.get(null)).get("c"), "d");
    });
    json = "{a:{" +
        "b:[{c:c1, e:e1},{c:c2, e :e2, d:{p:q}}]," +
        "x:y" +
        "}}";
    streamer.streamRecords(new StringReader(json), (record, path) -> {
      assertEquals(record.get("x"), "y");
      List l = (List) record.get(null);
      Map m = (Map) l.get(0);
      assertEquals(m.get("c"), "c1");
      assertEquals(m.get("e"), "e1");
      m = (Map) l.get(1);
      assertEquals(m.get("c"), "c2");
      assertEquals(m.get("e"), "e2");
    });
    streamer = JsonRecordReader.getInst("/|/a/b", Arrays.asList("$FQN:/**"));
    streamer.streamRecords(new StringReader(json), (record, path) -> {
      assertEquals(record.get("a.x"), "y");
      List l = (List) record.get(null);
      Map m = (Map) l.get(0);
      assertEquals(m.get("c"), "c1");
      assertEquals(m.get("e"), "e1");
      m = (Map) l.get(1);
      assertEquals(m.get("c"), "c2");
      assertEquals(m.get("e"), "e2");
      assertEquals(m.get("d.p"), "q");
    });
  }

