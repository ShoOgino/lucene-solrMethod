  @Test
  public void testSimpleCollectionWatch() throws Exception {

    CloudSolrClient client = cluster.getSolrClient();
    cluster.createCollection("testcollection", CLUSTER_SIZE, 1, "config", new HashMap<>());

    client.waitForState("testcollection", MAX_WAIT_TIMEOUT, TimeUnit.SECONDS, DocCollection::isFullyActive);

    // shutdown a node and check that we get notified about the change
    final AtomicInteger nodeCount = new AtomicInteger(0);
    final CountDownLatch latch = new CountDownLatch(1);
    client.registerCollectionStateWatcher("testcollection", (liveNodes, collectionState) -> {
      // we can't just count liveNodes here, because that's updated by a separate watcher,
      // and it may be the case that we're triggered by a node setting itself to DOWN before
      // the liveNodes watcher is called
      log.info("State changed: {}", collectionState);
      for (Slice slice : collectionState) {
        for (Replica replica : slice) {
          if (replica.isActive(liveNodes))
            nodeCount.incrementAndGet();
        }
      }
      latch.countDown();
    });

    cluster.stopJettySolrRunner(random().nextInt(cluster.getJettySolrRunners().size()));
    assertTrue("CollectionStateWatcher was never notified of cluster change", latch.await(MAX_WAIT_TIMEOUT, TimeUnit.SECONDS));

    assertThat(nodeCount.intValue(), is(3));

  }

