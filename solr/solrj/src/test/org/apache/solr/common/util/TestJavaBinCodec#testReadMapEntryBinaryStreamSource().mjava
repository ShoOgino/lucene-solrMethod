  @Test
  public void  testReadMapEntryBinaryStreamSource() throws IOException {
    // now lets look at binary files
    Map.Entry<Object, Object> entryFromBinFileA = getMapFromJavaBinCodec(SOLRJ_JAVABIN_BACKCOMPAT_BIN);
    Map.Entry<Object, Object> entryFromBinFileA_clone = getMapFromJavaBinCodec(SOLRJ_JAVABIN_BACKCOMPAT_BIN);

    assertEquals("same map entry references should be equal",entryFromBinFileA,entryFromBinFileA);

    // Commenting-out this test as it may have inadvertent effect on someone changing this in future
    // but keeping this in code to make a point, that even the same exact bin file,
    // there could be sub-objects in the key or value of the maps, with types that do not implement equals
    // and in these cases equals would fail as these sub-objects would be equated on their memory-references which is highly probbale to be unique
    // and hence the top-level map's equals will also fail
    // assertNotEquals("2 different references even though from same source are un-equal",entryFromBinFileA,entryFromBinFileA_clone);


    // read in a different binary file and this should definitely not be equal to the other bi file
    Map.Entry<Object, Object> entryFromBinFileB = getMapFromJavaBinCodec(SOLRJ_JAVABIN_BACKCOMPAT_BIN_CHILD_DOCS);
    assertNotEquals("2 different references from 2 different source bin streams should still be unequal",entryFromBinFileA,entryFromBinFileB);
  }

