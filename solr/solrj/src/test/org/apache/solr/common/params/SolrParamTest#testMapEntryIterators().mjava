  public void testMapEntryIterators() {

    ModifiableSolrParams aaa = new ModifiableSolrParams();
    aaa.add("foo", "a1");
    aaa.add("foo", "a2");

    assertIterSize("aaa: foo", 1, aaa);
    assertIterSize("required aaa: foo", 1, aaa.required());

    assertArrayEquals(new String[] { "a1", "a2" }, aaa.getParams("foo"));

    aaa.add("yak", "a3");

    assertIterSize("aaa: foo & yak", 2, aaa);
    assertIterSize("required aaa: foo & yak", 2, aaa.required());

    assertArrayEquals(new String[] { "a1", "a2" }, aaa.getParams("foo"));
    assertArrayEquals(new String[] { "a3" }, aaa.getParams("yak"));

    ModifiableSolrParams bbb = new ModifiableSolrParams();
    bbb.add("foo", "b1");
    bbb.add("foo", "b2");
    bbb.add("zot", "b3");

    assertIterSize("bbb: foo & zot", 2, bbb);
    assertIterSize("required bbb: foo & zot", 2, bbb.required());

    assertArrayEquals(new String[] { "b1", "b2" }, bbb.getParams("foo"));
    assertArrayEquals(new String[] { "b3" }, bbb.getParams("zot"));

    SolrParams append = SolrParams.wrapAppended(aaa, bbb);

    assertIterSize("append: aaa + bbb", 3, append);
    assertIterSize("required appended: aaa + bbb", 3, append.required());

    assertArrayEquals(new String[] { "a1", "a2", "b1", "b2", }, append.getParams("foo"));
    assertArrayEquals(new String[] { "a3" }, append.getParams("yak"));
    assertArrayEquals(new String[] { "b3" }, append.getParams("zot"));

    Iterator<Map.Entry<String, String[]>> it = append.iterator();
    assertArrayEquals(new String[] { "a1", "a2", "b1", "b2", }, it.next().getValue());
    assertArrayEquals(new String[] { "a3" }, it.next().getValue());
    assertArrayEquals(new String[] { "b3" }, it.next().getValue());

  }

