  public void testSrcField() throws Exception {
    String json = "{\n" +
        "  \"id\" : \"123\",\n" +
        "  \"description\": \"Testing /json/docs srcField 1\",\n" +
        "\n" +
        "  \"nested_data\" : {\n" +
        "    \"nested_inside\" : \"check check check 1\"\n" +
        "  }\n" +
        "}";

    String json2 =
        " {\n" +
            "  \"id\" : \"345\",\n" +
            "  \"payload\": \""+ StringUtils.repeat("0123456789", 819) +
            "\",\n" +
            "  \"description\": \"Testing /json/docs srcField 2\",\n" +
            "\n" +
            "  \"nested_data\" : {\n" +
            "    \"nested_inside\" : \"check check check 2\"\n" +
            "  }\n" +
            "}";

    String json3 =
        " {\n" +
            "  \"id\" : \"678\",\n" +
            "  \"description\": \"Testing /json/docs srcField 3\",\n" +
            "\n" +
            "  \"nested_data\" : {\n" +
            "    \"nested_inside\" : \"check check check 3\"\n" +
            "  }\n" +
            "}";


    JsonRecordReader streamer = JsonRecordReader.getInst("/", Arrays.asList("id:/id"));
    RecordingJSONParser parser = new RecordingJSONParser(new StringReader(json + json2 + json3));

    streamer.streamRecords(parser, new JsonRecordReader.Handler() {
      int count = 0;

      @Override
      public void handle(Map<String, Object> record, String path) {
        count++;
        String buf = parser.getBuf();
        parser.resetBuf();

        @SuppressWarnings({"rawtypes"})
        Map m = (Map) Utils.fromJSONString(buf);
        if (count == 1) {
          assertEquals(m.get("id"), "123");
          assertEquals(m.get("description"), "Testing /json/docs srcField 1");
          assertEquals(((Map) m.get("nested_data")).get("nested_inside"), "check check check 1");
        }
        if (count++ == 2) {
          assertEquals(m.get("id"), "345");
          assertEquals(m.get("description"), "Testing /json/docs srcField 2");
          assertEquals(((Map) m.get("nested_data")).get("nested_inside"), "check check check 2");
        }
        if (count++ == 3) {
          assertEquals(m.get("id"), "678");
          assertEquals(m.get("description"), "Testing /json/docs srcField 3");
          assertEquals(((Map) m.get("nested_data")).get("nested_inside"), "check check check 3");
        }

      }
    });

  }

