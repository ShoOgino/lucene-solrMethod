  @Test
  public void testStrictPositive() throws IOException {
    assertEquals(O("foo","bar", "ban", "buzz"),
         ObjectBuilder.fromJSONStrict("{\"foo\":\"bar\", \"ban\":\"buzz\"}"));
    assertEquals(O("foo","bar" ),
        ObjectBuilder.fromJSONStrict("{\"foo\":\"bar\"/*, \"ban\":\"buzz\"*/}"));
    assertEquals(O("foo","bar" ),
        ObjectBuilder.fromJSONStrict("{\"foo\":\"bar\"} /*\"ban\":\"buzz\"*/"));
    assertEquals("foo",
        ObjectBuilder.fromJSONStrict("\"foo\""));
    
    assertEquals("fromJSON() ignores tail.",O("foo","bar" ),
        ObjectBuilder.fromJSON("{\"foo\":\"bar\"} \"ban\":\"buzz\"}"));
    
    assertEquals("old method ignores tails", "foo",
        ObjectBuilder.fromJSON("\"foo\" \"baar\" "));
    expectThrows(ParseException.class,
        () -> ObjectBuilder.fromJSONStrict("\"foo\" \"bar\""));
    
    expectThrows(ParseException.class,
         () -> ObjectBuilder.fromJSONStrict("{\"foo\":\"bar\"} \"ban\":\"buzz\"}"));
    expectThrows(ParseException.class,
        () -> ObjectBuilder.getValStrict(new JSONParser("{\"foo\":\"bar\"} \"ban\":\"buzz\"}")));
    expectThrows(ParseException.class,
        () -> new ObjectBuilder(new JSONParser("{\"foo\":\"bar\"} \"ban\":\"buzz\"}")).getValStrict());


  }

