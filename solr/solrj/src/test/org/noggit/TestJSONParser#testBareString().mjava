  @Test
  public void testBareString() throws Exception {
    flags=JSONParser.ALLOW_UNQUOTED_STRING_VALUES | JSONParser.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;
    String[] strings = new String[] {"t","f","n","a","tru","fals","nul","abc","trueX","falseXY","nullZ","truetrue", "$true", "a.bc.def","a_b-c/d"};

    for (String s : strings) {
      parse(s, new Object[]{s, e});
      parse("[" + s + "]", new Object[]{a, s, A, e});
      parse("[ " + s + ", "+s +" ]", new Object[]{a, s, s, A, e});
      parse("[" + s + ","+s +"]",    new Object[]{a, s, s, A, e});
      parse("\u00a0[\u00a0\r\n\t\u00a0" + s + "\u00a0,\u00a0\u00a0"+s +"\u00a0]\u00a0",    new Object[]{a, s, s, A, e});
    }

    flags |= JSONParser.ALLOW_UNQUOTED_KEYS;
    for (String s : strings) {
      parse("{" + s + ":" + s + "}", new Object[]{m, s, s, M, e});
      parse("{ " + s + " \t\n\r:\t\n\r " + s + "\t\n\r}", new Object[]{m, s, s, M, e});
    }

    parse("{true:true, false:false, null:null}",new Object[]{m,"true",t,"false",f,"null",N,M,e});

    flags=JSONParser.FLAGS_DEFAULT;
  }

