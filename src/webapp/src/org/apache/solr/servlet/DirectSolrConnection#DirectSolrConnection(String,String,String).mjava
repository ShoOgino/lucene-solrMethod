  /**
   * This constructor is designed to make it easy for JNI embedded applications 
   * to setup the entire solr environment with a simple interface.  It takes three parameters:
   * 
   * <code>instanceDir:</code> The solr instance directory.  If null, it will check the standard 
   * places first (JNDI,properties,"solr" directory)
   * 
   * <code>dataDir:</code> where the index is stored. 
   * 
   * <code>loggingPath:</code> Path to a java.util.logging.config.file.  If the path represents
   * an absolute path or is relative to the CWD, it will use that.  Next it will try a path 
   * relative to the instanceDir.  If none of these files exist, it will error.
   */
  public DirectSolrConnection( String instanceDir, String dataDir, String loggingPath )
  {
    // If a loggingPath is specified, try using that (this needs to happen first)
    if( loggingPath != null ) {
      File loggingConfig = new File( loggingPath );
      if( !loggingConfig.exists() && instanceDir != null ) {
        loggingConfig = new File( new File(instanceDir), loggingPath  );
      }
      if( loggingConfig.exists() ) {
        System.setProperty("java.util.logging.config.file", loggingConfig.getAbsolutePath() ); 
      }
      else {
        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, "can not find logging file: "+loggingConfig );
      }
    }
    
// TODO! Set the instance directory
//    if( instanceDir != null ) {
//      if( Config.isInstanceDirInitialized() ) {
//        String dir = Config.getInstanceDir();
//        if( !dir.equals( instanceDir ) ) {
//          throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, "already initalized: "+dir  );
//        }
//      }
//      Config.setInstanceDir( instanceDir );
//    }
    SolrConfig config = SolrConfig.createInstance("solrconfig.xml");
    
    // If the Data directory is specified, initialize SolrCore directly
    if( dataDir != null ) {
      IndexSchema schema = new IndexSchema(config, instanceDir+"/conf/schema.xml");
      core = new SolrCore( dataDir, config, schema );
    }
    else {
      core = SolrCore.getSolrCore();
    }
    parser = new SolrRequestParsers( core );
  }

