  /**
   * Adds the documents supplied by the given iterator. A commit is called after all the documents are added.
   * If an exception is thrown, commit is not called.
   *
   * @param docIterator  the iterator which returns SolrInputDocument instances
   * @param commitParams additional parameters such as optimize, waitFlush, waitSearcher
   *
   * @return the response from the SolrServer
   */
  public UpdateResponse addAndCommit(Iterator<SolrInputDocument> docIterator, SolrParams commitParams)
          throws SolrServerException, IOException {
    UpdateRequest req = new UpdateRequest();
    req.setDocIterator(docIterator);
    if (commitParams instanceof ModifiableSolrParams) {
      req.setParams((ModifiableSolrParams) commitParams);
    } else if (commitParams != null) {
      req.setParams(new ModifiableSolrParams(commitParams));
    }
    req.setParam(UpdateParams.COMMIT, "true");
    return req.process(this);
  }

