  // performance test vs HashMap<String,Object>
  // HashMap will have an edge because we are testing with
  // non-dynamically created keys and String caches hashCode
  public static void main(String[] args) {
    int a=0;
    String impl = args[a++].intern();          // hash OR chars OR char
    int iter1 = Integer.parseInt(args[a++]);   // iterations of put()
    int iter2 = Integer.parseInt(args[a++]);   // iterations of get()

    int ret=0;
    long start = System.currentTimeMillis();
    Set<String> stopwords = (Set<String>) StopAnalyzer.ENGLISH_STOP_WORDS_SET;
    // words = "this is a different test to see what is really going on here... I hope it works well but I'm not sure it will".split(" ");
    char[][] stopwordschars = new char[stopwords.size()][];
    Iterator<String> it = stopwords.iterator();
    for (int i=0; i<stopwords.size(); i++) {
      stopwordschars[i] = it.next().toCharArray();
    }

    String[] testwords = "now is the time for all good men to come to the aid of their country".split(" ");
    // testwords = "this is a different test to see what is really going on here... I hope it works well but I'm not sure it will".split(" ");
    char[][] testwordchars = new char[testwords.length][];

    for (int i=0; i<testwordchars.length; i++) {
      testwordchars[i] = testwords[i].toCharArray();
    }

    HashMap<String,Integer> hm=null;
    CharArrayMap<Integer> cm=null;

    if (impl=="hash") {
      for (int i=0; i<iter1; i++) {

        hm = new HashMap<String,Integer>();
        int v=0;
        for (String word : stopwords) {
          hm.put(word, ++v);
        }
        ret += hm.size();
      }
    } else if (impl=="chars") {
      for (int i=0; i<iter1; i++) {
        cm = new CharArrayMap<Integer>(2,false);
        int v=0;
        for (String s : stopwords) {
          cm.put(s,++v);
        }
        ret += cm.size();
      }
    } else if (impl=="char") {
      for (int i=0; i<iter1; i++) {
        cm = new CharArrayMap<Integer>(2,false);
        int v=0;
        for (char[] s : stopwordschars) {
          cm.put(s,++v);
        }
        ret += cm.size();
      }
    }


    if (impl=="hash") {
      for (int i=0; i<iter2; i++) {
        for (String word : testwords) {
          Integer v = hm.get(word);
          ret += v==null ? 0 : v;
        }
      }
    } else if (impl=="chars") {
      for (int i=0; i<iter2; i++) {
        for (String word : testwords) {
          Integer v = cm.get(word);
          ret += v==null ? 0 : v;
        }
      }
    } else if (impl=="char") {
      for (int i=0; i<iter2; i++) {
        for (char[] word : testwordchars) {
          Integer v = cm.get(word);
          ret += v==null ? 0 : v;
        }
      }
    }

    long end = System.currentTimeMillis();

    System.out.println("result=" + ret);
    System.out.println("time=" +(end-start));
  }

