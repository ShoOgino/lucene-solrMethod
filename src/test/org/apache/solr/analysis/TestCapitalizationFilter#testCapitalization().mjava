  public void testCapitalization() throws Exception 
  {
    Map<String,String> args = new HashMap<String, String>();
    args.put( CapitalizationFilterFactory.KEEP, "and the it BIG" );
    args.put( CapitalizationFilterFactory.ONLY_FIRST_WORD, "true" );  
    
    CapitalizationFilterFactory factory = new CapitalizationFilterFactory();
    factory.init( args );
    char[] termBuffer;
    termBuffer = "kiTTEN".toCharArray();
    factory.processWord(termBuffer, 0, termBuffer.length, 0 );
    assertEquals( "Kitten",  new String(termBuffer, 0, termBuffer.length));

    factory.forceFirstLetter = true;

    termBuffer = "and".toCharArray();
    factory.processWord(termBuffer, 0, termBuffer.length, 0 );
    assertEquals( "And",  new String(termBuffer, 0, termBuffer.length));//first is forced

    termBuffer = "AnD".toCharArray();
    factory.processWord(termBuffer, 0, termBuffer.length, 0 );
    assertEquals( "And",  new String(termBuffer, 0, termBuffer.length));//first is forced, but it's not a keep word, either

    factory.forceFirstLetter = false;
    termBuffer = "AnD".toCharArray();
    factory.processWord(termBuffer, 0, termBuffer.length, 0 );
    assertEquals( "And",  new String(termBuffer, 0, termBuffer.length)); //first is not forced, but it's not a keep word, either

    factory.forceFirstLetter = true;
    termBuffer = "big".toCharArray();
    factory.processWord(termBuffer, 0, termBuffer.length, 0 );
    assertEquals( "Big",  new String(termBuffer, 0, termBuffer.length));
    termBuffer = "BIG".toCharArray();
    factory.processWord(termBuffer, 0, termBuffer.length, 0 );
    assertEquals( "BIG",  new String(termBuffer, 0, termBuffer.length));
    
    String out = tsToString( factory.create( new IterTokenStream( "Hello thEre my Name is Ryan" ) ) );
    assertEquals( "Hello there my name is ryan", out );
    
    // now each token
    factory.onlyFirstWord = false;
    out = tsToString( factory.create( new IterTokenStream( "Hello thEre my Name is Ryan" ) ) );
    assertEquals( "Hello There My Name Is Ryan", out );
    
    // now only the long words
    factory.minWordLength = 3;
    out = tsToString( factory.create( new IterTokenStream( "Hello thEre my Name is Ryan" ) ) );
    assertEquals( "Hello There my Name is Ryan", out );
    
    // without prefix
    out = tsToString( factory.create( new IterTokenStream( "McKinley" ) ) );
    assertEquals( "Mckinley", out );
    
    // Now try some prefixes
    factory = new CapitalizationFilterFactory();
    args.put( "okPrefix", "McK" );  // all words
    factory.init( args );
    out = tsToString( factory.create( new IterTokenStream( "McKinley" ) ) );
    assertEquals( "McKinley", out );
    
    // now try some stuff with numbers
    factory.forceFirstLetter = false;
    factory.onlyFirstWord = false;
    out = tsToString( factory.create( new IterTokenStream( "1st 2nd third" ) ) );
    assertEquals( "1st 2nd Third", out );
    
    factory.forceFirstLetter = true;
    out = tsToString( factory.create( new IterTokenStream( "the The the" ) ) );
    assertEquals( "The The the", out );
  }

