  public Map indexRandom(int nThreads, int iterations, int range, Directory dir) throws IOException, InterruptedException {
    IndexWriter w = new IndexWriter(dir, autoCommit, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);
    w.setUseCompoundFile(false);
    /***
    w.setMaxMergeDocs(Integer.MAX_VALUE);
    w.setMaxFieldLength(10000);
    w.setRAMBufferSizeMB(1);
    w.setMergeFactor(10);
    ***/

    // force many merges
    w.setMergeFactor(mergeFactor);
    w.setRAMBufferSizeMB(.1);
    w.setMaxBufferedDocs(maxBufferedDocs);

    threads = new IndexingThread[nThreads];
    for (int i=0; i<threads.length; i++) {
      IndexingThread th = new IndexingThread();
      th.w = w;
      th.base = 1000000*i;
      th.range = range;
      th.iterations = iterations;
      threads[i] = th;
    }

    for (int i=0; i<threads.length; i++) {
      threads[i].start();
    }
    for (int i=0; i<threads.length; i++) {
      threads[i].join();
    }

    // w.optimize();
    w.close();    

    Map docs = new HashMap();
    for (int i=0; i<threads.length; i++) {
      IndexingThread th = threads[i];
      synchronized(th) {
        docs.putAll(th.docs);
      }
    }

    checkIndex(dir);

    return docs;
  }

