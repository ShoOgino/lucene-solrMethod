  // disable until hardcoded file names are fixes:
  public void _testExactFileNames() throws IOException {

    String outputDir = "lucene.backwardscompat0.index";
    Directory dir = FSDirectory.getDirectory(outputDir, true);
    IndexWriter writer = new IndexWriter(dir, new WhitespaceAnalyzer(), true);
    for(int i=0;i<35;i++) {
      addDoc(writer, i);
    }
    assertEquals("wrong doc count", 35, writer.docCount());
    writer.close();

    // Delete one doc so we get a .del file:
    IndexReader reader = IndexReader.open(dir);
    Term searchTerm = new Term("id", "7");
    int delCount = reader.deleteDocuments(searchTerm);
    assertEquals("didn't delete the right number of documents", 1, delCount);

    // Set one norm so we get a .s0 file:
    reader.setNorm(21, "content", (float) 1.5);
    reader.close();

    // Now verify file names:
    String[] expected = {"_0.cfs",
                         "_0_1.del",
                         "_1.cfs",
                         "_2.cfs",
                         "_2_1.s0",
                         "_3.cfs",
                         "segments_a",
                         "segments.gen"};

    String[] actual = dir.list();
    Arrays.sort(expected);
    Arrays.sort(actual);
    if (!Arrays.equals(expected, actual)) {
      fail("incorrect filenames in index: expected:\n    " + asString(expected) + "\n  actual:\n    " + asString(actual));
    }

    rmDir(outputDir);
  }

