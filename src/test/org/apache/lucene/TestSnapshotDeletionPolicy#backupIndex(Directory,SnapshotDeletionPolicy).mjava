  /** Example showing how to use the SnapshotDeletionPolicy
   *  to take a backup.  This method does not really do a
   *  backup; instead, it reads every byte of every file
   *  just to test that the files indeed exist and are
   *  readable even while the index is changing. */
  public void backupIndex(Directory dir, SnapshotDeletionPolicy dp) throws IOException {

    // To backup an index we first take a snapshot:
    IndexCommitPoint cp = dp.snapshot();
    try {

      // While we hold the snapshot, and nomatter how long
      // we take to do the backup, the IndexWriter will
      // never delete the files in the snapshot:
      Collection files = cp.getFileNames();
      Iterator it = files.iterator();
      while(it.hasNext()) {
        final String fileName = (String) it.next();
        // NOTE: in a real backup you would not use
        // readFile; you would need to use something else
        // that copies the file to a backup location.  This
        // could even be a spawned shell process (eg "tar",
        // "zip") that takes the list of files and builds a
        // backup.
        readFile(dir, fileName);
      }

    } finally {
      // Make sure to release the snapshot, otherwise these
      // files will never be deleted during this IndexWriter
      // session:
      dp.release();
    }
  }

