  // Call readBytes() repeatedly, with various chunk sizes (from 1 byte to
  // larger than the buffer size), and see that it returns the bytes we expect.
  // Our input comes from a dynamically generated "file" -
  // see MyBufferedIndexInput below.
  public void testReadBytes() throws Exception {
    final Random r = newRandom();

    MyBufferedIndexInput input = new MyBufferedIndexInput();
    runReadBytes(input, BufferedIndexInput.BUFFER_SIZE, r);

    // This tests the workaround code for LUCENE-1566 where readBytesInternal
    // provides a workaround for a JVM Bug that incorrectly raises a OOM Error
    // when a large byte buffer is passed to a file read.
    // NOTE: this does only test the chunked reads and NOT if the Bug is triggered.
    //final int tmpFileSize = 1024 * 1024 * 5;
    final int inputBufferSize = 128;
    File tmpInputFile = File.createTempFile("IndexInput", "tmpFile");
    tmpInputFile.deleteOnExit();
    writeBytes(tmpInputFile, TEST_FILE_LENGTH);

    // run test with chunk size of 10 bytes
    runReadBytesAndClose(new SimpleFSIndexInput(tmpInputFile,
                                                inputBufferSize, 10), inputBufferSize, r);
    // run test with chunk size of 100 MB - default
    runReadBytesAndClose(new SimpleFSIndexInput(tmpInputFile,
                                                inputBufferSize), inputBufferSize, r);
    // run test with chunk size of 10 bytes
    runReadBytesAndClose(new NIOFSIndexInput(tmpInputFile,
                                             inputBufferSize, 10), inputBufferSize, r);
    // run test with chunk size of 100 MB - default
    runReadBytesAndClose(new NIOFSIndexInput(tmpInputFile,
                                             inputBufferSize), inputBufferSize, r);
  }

