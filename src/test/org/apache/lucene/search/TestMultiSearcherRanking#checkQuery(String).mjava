  /**
   * checks if a query yields the same result when executed on
   * a single IndexSearcher containing all documents and on a
   * MultiSearcher aggregating sub-searchers
   * @param queryStr  the query to check.
   * @throws IOException
   * @throws ParseException
   */
  private void checkQuery(String queryStr) throws IOException, ParseException {
    // check result hit ranking
    if(verbose) System.out.println("Query: " + queryStr);
      QueryParser queryParser = new QueryParser(TEST_VERSION_CURRENT, FIELD_NAME, new StandardAnalyzer(TEST_VERSION_CURRENT));
    Query query = queryParser.parse(queryStr);
    ScoreDoc[] multiSearcherHits = multiSearcher.search(query, null, 1000).scoreDocs;
    ScoreDoc[] singleSearcherHits = singleSearcher.search(query, null, 1000).scoreDocs;
    assertEquals(multiSearcherHits.length, singleSearcherHits.length);
    for (int i = 0; i < multiSearcherHits.length; i++) {
      Document docMulti = multiSearcher.doc(multiSearcherHits[i].doc);
      Document docSingle = singleSearcher.doc(singleSearcherHits[i].doc);
      if(verbose) System.out.println("Multi:  " + docMulti.get(FIELD_NAME) + " score="
          + multiSearcherHits[i].score);
      if(verbose) System.out.println("Single: " + docSingle.get(FIELD_NAME) + " score="
          + singleSearcherHits[i].score);
      assertEquals(multiSearcherHits[i].score, singleSearcherHits[i].score,
          0.001f);
      assertEquals(docMulti.get(FIELD_NAME), docSingle.get(FIELD_NAME));
    }
    if(verbose) System.out.println();
  }

