  static List/*<Token>*/ getTokens(TokenStream tstream) throws IOException {
    List/*<Token>*/ tokens = new ArrayList/*<Token>*/();
    while (true) {
      Token t = tstream.next();
      if (t==null) break;
      tokens.add(t);
    }
    return tokens;
  }
/*
  public static class IterTokenStream extends TokenStream {
    Iterator<Token> toks;
    public IterTokenStream(Token... toks) {
      this.toks = Arrays.asList(toks).iterator();
    }
    public IterTokenStream(Iterable<Token> toks) {
      this.toks = toks.iterator();
    }
    public IterTokenStream(Iterator<Token> toks) {
      this.toks = toks;
    }
    public IterTokenStream(String ... text) {
      int off = 0;
      ArrayList<Token> t = new ArrayList<Token>( text.length );
      for( String txt : text ) {
        t.add( new Token( txt, off, off+txt.length() ) );
        off += txt.length() + 2;
      }
      this.toks = t.iterator();
    }
    @Override
    public Token next() {
      if (toks.hasNext()) {
        return toks.next();
      }
      return null;
    }
  }
*/

