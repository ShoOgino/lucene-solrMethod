  /** the original code from lucene sandbox
  public final Token next() throws IOException {
    Token token = input.next();
    if (token == null)
      return null;
    stemmer.setCurrent(token.termText());
    try {
      stemMethod.invoke(stemmer, EMPTY_ARGS);
    } catch (Exception e) {
      throw new RuntimeException(e.toString());
    }
    return new Token(stemmer.getCurrent(),
                     token.startOffset(), token.endOffset(), token.type());
  }
  **/

  public Token next() throws IOException {
    Token tok = input.next();
    if (tok==null) return null;
    String tokstr = tok.termText();

    // if protected, don't stem.  use this to avoid stemming collisions.
    if (protWords != null && protWords.contains(tokstr)) {
      return tok;
    }

    stemmer.setCurrent(tokstr);
    stemmer.stem();
    String newstr = stemmer.getCurrent();
    if (tokstr.equals(newstr)) {
      return tok;
    } else {
      // TODO: it would be nice if I could just set termText directly like
      // lucene packages can.
      Token newtok = new Token(newstr, tok.startOffset(), tok.endOffset(), tok.type());
      newtok.setPositionIncrement(tok.getPositionIncrement());
      return newtok;
    }

  }

