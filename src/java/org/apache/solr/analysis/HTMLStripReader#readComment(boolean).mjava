  // tries to read comments the way browsers do, not
  // strictly by the standards.
  //
  // GRRRR.  it turns out that in the wild, a <script> can have a HTML comment
  // that contains a script that contains a quoted comment.
  // <script><!-- document.write("<!--embedded comment-->") --></script>
  //
  private int readComment(boolean inScript) throws IOException {
    // at this point "<!" has  been read
    int ch = next();
      if (ch!='-') {
      // not a comment
      push(ch);
      return MISMATCH;
    }

    ch = next();
      if (ch!='-') {
      // not a comment
      push(ch);
      push('-');
      return MISMATCH;
    }
    /*two extra calls to next() here, so make sure we don't read past our mark*/
    while ((numRead - lastMark) < safeReadAheadLimit -3 ) {
      ch = next();
      if (ch<0) return MISMATCH;
      if (ch=='-') {
        ch = next();
        if (ch<0) return MISMATCH;
        if (ch!='-') {
          push(ch);
          continue;
        }

        ch = next();
        if (ch<0) return MISMATCH;
        if (ch!='>') {
          push(ch);
          push('-');
          continue;
        }

        return MATCH;
      } else if ((ch=='\'' || ch=='"') && inScript) {
        push(ch);
        int ret=readScriptString();
        // if this wasn't a string, there's not much we can do
        // at this point without having a stack of stream states in
        // order to "undo" just the latest.
      } else if (ch=='<') {
        eatSSI();
      }

    }
    return MISMATCH;

  }

