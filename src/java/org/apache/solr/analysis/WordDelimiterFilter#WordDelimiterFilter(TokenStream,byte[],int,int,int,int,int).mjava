  /**
   *
   * @param in Token stream to be filtered.
   * @param charTypeTable
   * @param generateWordParts If 1, causes parts of words to be generated: "PowerShot" => "Power" "Shot"
   * @param generateNumberParts If 1, causes number subwords to be generated: "500-42" => "500" "42"
   * @param catenateWords  1, causes maximum runs of word parts to be catenated: "wi-fi" => "wifi"
   * @param catenateNumbers If 1, causes maximum runs of number parts to be catenated: "500-42" => "50042"
   * @param catenateAll If 1, causes all subword parts to be catenated: "wi-fi-4000" => "wifi4000"
   */
  public WordDelimiterFilter(TokenStream in, byte[] charTypeTable, int generateWordParts, int generateNumberParts, int catenateWords, int catenateNumbers, int catenateAll) {
    super(in);
    this.generateWordParts = generateWordParts;
    this.generateNumberParts = generateNumberParts;
    this.catenateWords = catenateWords;
    this.catenateNumbers = catenateNumbers;
    this.catenateAll = catenateAll;
    this.charTypeTable = charTypeTable;
  }

