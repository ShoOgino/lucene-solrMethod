  private int readNumericEntity() throws IOException {
    // "&#" has already been read at this point

    // is this decimal, hex, or nothing at all.
    int ch = next();
    int base=10;
    boolean invalid=false;
    sb.setLength(0);

    if (isDigit(ch)) {
      // decimal character entity
      sb.append((char)ch);
      for (int i=0; i<10; i++) {
        ch = next();
        if (isDigit(ch)) {
          sb.append((char)ch);
        } else {
          break;
        }
      }
    } else if (ch=='x') {
      // hex character entity
      base=16;
      sb.setLength(0);
      for (int i=0; i<10; i++) {
        ch = next();
        if (isHex(ch)) {
          sb.append((char)ch);
        } else {
          break;
        }
      }
    } else {
      return MISMATCH;
    }


    // In older HTML, an entity may not have always been terminated
    // with a semicolon.  We'll also treat EOF or whitespace as terminating
    // the entity.
    try {
      if (ch==';' || ch==-1) {
        numWhitespace = sb.length() + 2;// + 2 accounts for &, #, and ;, then, take away 1 for the fact that we do output a char
        return Integer.parseInt(sb.toString(), base);
      }

      // if whitespace terminated the entity, we need to return
      // that whitespace on the next call to read().
      if (isSpace(ch)) {
        push(ch);
        numWhitespace = sb.length() + 2;// + 2 accounts for &, #, and ;, then, take away 1 for the fact that we do output a char
        return Integer.parseInt(sb.toString(), base);
      }
    } catch (NumberFormatException e) {
      return MISMATCH;
    }

    // Not an entity...
    return MISMATCH;
  }

