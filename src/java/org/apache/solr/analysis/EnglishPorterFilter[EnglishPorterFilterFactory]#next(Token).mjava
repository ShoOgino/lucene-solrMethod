  /**
   * the original code from lucene sandbox
   * public final Token next() throws IOException {
   * Token token = input.next();
   * if (token == null)
   * return null;
   * stemmer.setCurrent(token.termText());
   * try {
   * stemMethod.invoke(stemmer, EMPTY_ARGS);
   * } catch (Exception e) {
   * throw new RuntimeException(e.toString());
   * }
   * return new Token(stemmer.getCurrent(),
   * token.startOffset(), token.endOffset(), token.type());
   * }
   */

  @Override
  public Token next(Token token) throws IOException {
    Token result = input.next(token);
    if (result != null) {
      char[] termBuffer = result.termBuffer();
      int len = result.termLength();
      // if protected, don't stem.  use this to avoid stemming collisions.
      if (protWords != null && protWords.contains(termBuffer, 0, len)) {
        return result;
      }
      stemmer.setCurrent(new String(termBuffer, 0, len));//ugh, wish the Stemmer took a char array
      stemmer.stem();
      String newstr = stemmer.getCurrent();
      result.setTermBuffer(newstr.toCharArray(), 0, newstr.length());
    }
    return result;
  }

