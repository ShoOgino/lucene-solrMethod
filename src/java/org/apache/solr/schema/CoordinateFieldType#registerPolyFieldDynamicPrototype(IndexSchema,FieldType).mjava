  /**
   * Helper method for creating a dynamic field SchemaField prototype.  Returns a {@link org.apache.solr.schema.SchemaField} with
   * the {@link org.apache.solr.schema.FieldType} given and a name of "*" + {@link org.apache.solr.schema.FieldType#POLY_FIELD_SEPARATOR} + {@link org.apache.solr.schema.FieldType#typeName}
   * and props of indexed=true, stored=false.
   * @param schema the IndexSchema
   * @param type The {@link org.apache.solr.schema.FieldType} of the prototype.
   * @return The {@link org.apache.solr.schema.SchemaField}
   */

  static SchemaField registerPolyFieldDynamicPrototype(IndexSchema schema, FieldType type){
    String name = "*" + FieldType.POLY_FIELD_SEPARATOR + type.typeName;
    Map<String, String> props = new HashMap<String, String>();
    //Just set these, delegate everything else to the field type
    props.put("indexed", "true");
    props.put("stored", "false");
    int p = SchemaField.calcProps(name, type, props);
    SchemaField proto = SchemaField.create(name,
            type, p, null);
    schema.registerDynamicField(proto);
    return proto;
  }

