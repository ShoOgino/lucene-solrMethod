  /**
   * Returns the number of documents that match both <code>a</code> and <code>b</code>.
   * <p>
   * This method is cache-aware and may check as well as modify the cache.
   *
   * @param a
   * @param b
   * @return the numer of documents in the intersection between <code>a</code> and <code>b</code>.
   * @throws IOException
   */
  public int numDocs(Query a, DocSet b) throws IOException {
    // reverse: do the query on filter and filter using docs...
    // or if filter is a term query, can get the freq and
    // drive things off that.
    //  this higher level API leaves open more optimization possibilities.
    // prob only worth it if cacheHitRatio is bad...

    return b.intersectionSize(getDocSet(a));
  }

