  @Override
  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException, ParseException, InstantiationException, IllegalAccessException 
  {
    ResponseBuilder builder = new ResponseBuilder();
    req.getContext().put( RESPONSE_BUILDER_CONTEXT_KEY, builder );
    
    // The semantics of debugging vs not debugging are different enough that 
    // it makes sense to have two control loops
    if( !req.getParams().getBool( CommonParams.DEBUG_QUERY, false ) ) {
      // Prepare
      for( SearchComponent c : components ) {
        c.prepare( req, rsp );
      }
  
      // Process
      for( SearchComponent c : components ) {
        c.process( req, rsp );
      }
    }
    else {
      builder.setDebug( true );
      RTimer timer = new RTimer();
      
      // Prepare
      RTimer subt = timer.sub( "prepare" );
      for( SearchComponent c : components ) {
        builder.setTimer( subt.sub( c.getName() ) );
        c.prepare( req, rsp );
        builder.getTimer().stop();
      }
      subt.stop();
  
      // Process
      subt = timer.sub( "process" );
      for( SearchComponent c : components ) {
        builder.setTimer( subt.sub( c.getName() ) );
        c.process( req, rsp );
        builder.getTimer().stop();
      }
      subt.stop();
      timer.stop();
      
      // add the timing info
      if( builder.getDebugInfo() == null ) {
        builder.setDebugInfo( new SimpleOrderedMap<Object>() );
      }
      builder.getDebugInfo().add( "timing", timer.asNamedList() );
    }
  }

