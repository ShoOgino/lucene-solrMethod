  private void createMainQuery(ResponseBuilder rb) {
    ShardRequest sreq = new ShardRequest();
    sreq.purpose = ShardRequest.PURPOSE_GET_TOP_IDS;

    sreq.params = new ModifiableSolrParams(rb.req.getParams());
    // TODO: base on current params or original params?

    // don't pass through any shards param
    sreq.params.remove("shards");

    // set the start (offset) to 0 for each shard request so we can properly merge
    // results from the start.
    sreq.params.set("start","0");

    // TODO: should we even use the SortSpec?  That's obtained from the QParser, and
    // perhaps we shouldn't attempt to parse the query at this level?
    // Alternate Idea: instead of specifying all these things at the upper level,
    // we could just specify that this is a shard request.
    sreq.params.set("rows", rb.getSortSpec().getOffset() + rb.getSortSpec().getCount());


    // in this first phase, request only the unique key field
    // and any fields needed for merging.
    sreq.params.set(ResponseBuilder.FIELD_SORT_VALUES,"true");

    if (rb.getSortSpec().includesScore()) {
      sreq.params.set("fl",  rb.req.getSchema().getUniqueKeyField().getName() + ",score");
    } else {
      sreq.params.set("fl",  rb.req.getSchema().getUniqueKeyField().getName());      
    }

    rb.addRequest(this, sreq);
  }

