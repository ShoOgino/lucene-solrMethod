  @Override
  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception 
  {    
    SolrParams params = req.getParams();
    UpdateRequestProcessorChain processingChain = 
      req.getCore().getUpdateProcessingChain( params.get( UpdateParams.UPDATE_PROCESSOR ) );
    
    UpdateRequestProcessor processor = processingChain.createProcessor(req, rsp);
    Iterable<ContentStream> streams = req.getContentStreams();
    if( streams == null ) {
      if (!RequestHandlerUtils.handleCommit(processor, params, false) && !RequestHandlerUtils.handleRollback(processor, params, false)) {
        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, "missing content stream");
      }
    }
    else {
      // Cycle through each stream
      for( ContentStream stream : req.getContentStreams() ) {
        Reader reader = stream.getReader();
        try {
          if( log.isTraceEnabled() ) {
            String body = IOUtils.toString( reader );
            log.trace( "body", body );
            reader = new StringReader( body );
          }
          
          XMLStreamReader parser = inputFactory.createXMLStreamReader(reader);
          this.processUpdate( processor, parser );
        }
        finally {
          IOUtils.closeQuietly(reader);
        }
      }
      
      // Perhaps commit from the parameters
      RequestHandlerUtils.handleCommit( processor, params, false );
      // Perhaps rollback from the parameters
      RequestHandlerUtils.handleRollback( processor, params, false );
    }
    
    // finish the request
    processor.finish(); 
  }

