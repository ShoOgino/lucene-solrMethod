  private static Map<String,TopTermQueue> getTopTerms( IndexReader reader, Set<String> fields, int numTerms, Set<String> junkWords ) throws Exception 
  {
    Map<String,TopTermQueue> info = new HashMap<String, TopTermQueue>();
    TermEnum terms = reader.terms();
    
    while (terms.next()) {
      String field = terms.term().field();
      String t = terms.term().text();

      // Compute distinct terms for every field
      TopTermQueue tiq = info.get( field );
      if( tiq == null ) {
        tiq = new TopTermQueue( numTerms );
        info.put( field, tiq );
      }
      tiq.distinctTerms++;
      tiq.histogram.add( terms.docFreq() );  // add the term to the histogram
      
      // Only save the distinct terms for fields we worry about
      if (fields != null && fields.size() > 0) {
        if( !fields.contains( field ) ) {
          continue;
        }
      }
      if( junkWords != null && junkWords.contains( t ) ) {
        continue;
      }
      
      if( terms.docFreq() > tiq.minFreq ) {
        tiq.put(new TopTermQueue.TermInfo(terms.term(), terms.docFreq()));
        if (tiq.size() >= numTerms) { // if tiq full
          tiq.pop(); // remove lowest in tiq
          tiq.minFreq = ((TopTermQueue.TermInfo)tiq.top()).docFreq; // reset minFreq
        }
      }
    }
    return info;
  }

