  /**************** old hit collector... new one is in base class
  // final DeleteHitCollector deleter = new DeleteHitCollector();
  class DeleteHitCollector extends HitCollector {
    public int deleted=0;
    public void collect(int doc, float score) {
      try {
        searcher.getReader().delete(doc);
        deleted++;
      } catch (IOException e) {
        try { closeSearcher(); } catch (Exception ee) { SolrException.log(SolrCore.log,ee); }
        SolrException.log(SolrCore.log,e);
        throw new SolrException(500,"Error deleting doc# "+doc,e);
      }
    }
  }
  ***************************/

  public void commit(CommitUpdateCommand cmd) throws IOException {
    Future[] waitSearcher = null;
    if (cmd.waitSearcher) {
      waitSearcher = new Future[1];
    }

    synchronized (this) {
      pset.clear();
      closeSearcher();  // flush any deletes
      if (cmd.optimize) {
        openWriter();  // writer needs to be open to optimize
        writer.optimize();
      }
      closeWriter();

      callPostCommitCallbacks();

      core.getSearcher(true,false,waitSearcher);
    }

    if (waitSearcher[0] != null) {
      try {
        waitSearcher[0].get();
      } catch (InterruptedException e) {
        SolrException.log(log,e);
      } catch (ExecutionException e) {
        SolrException.log(log,e);
      }
    }

    return;
  }

