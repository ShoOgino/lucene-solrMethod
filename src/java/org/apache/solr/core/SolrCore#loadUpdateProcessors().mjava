  /**
   * Load the request processors configured in solrconfig.xml
   */
  private Map<String, UpdateRequestProcessorFactory> loadUpdateProcessors() {
    final Map<String,UpdateRequestProcessorFactory> map = new HashMap<String, UpdateRequestProcessorFactory>();
    
    // If this is a more general use-case, this could be a regular type
    AbstractPluginLoader<UpdateRequestProcessorFactory> loader 
      = new AbstractPluginLoader<UpdateRequestProcessorFactory>( "updateRequestProcessor" ) {

      @Override
      protected void init(UpdateRequestProcessorFactory plugin, Node node) throws Exception {
        plugin.init( node );
      }

      @Override
      protected UpdateRequestProcessorFactory register(String name, UpdateRequestProcessorFactory plugin) throws Exception {
        return map.put( name, plugin );
      }
    };

    NodeList nodes = (NodeList)SolrConfig.config.evaluate("updateRequestProcessor/factory", XPathConstants.NODESET);
    UpdateRequestProcessorFactory def = loader.load( nodes ); 
    if( def == null ) {
      def = new ChainedUpdateProcessorFactory(); // the default
      def.init( null );
    }
    map.put( null, def );
    map.put( "", def );
    return map;
  }

