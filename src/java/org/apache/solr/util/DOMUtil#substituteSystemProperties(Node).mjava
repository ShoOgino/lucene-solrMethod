  /**
   * Replaces ${system.property[:default value]} references in all attributes
   * and text nodes of supplied node.  If the system property is not defined, an empty string
   * is substituted or the default value if provided.
   *
   * @param node DOM node to walk for substitutions
   */
  public static void substituteSystemProperties(Node node) {
    // loop through child nodes
    Node child;
    Node next = node.getFirstChild();
    while ((child = next) != null) {

      // set next before we change anything
      next = child.getNextSibling();

      // handle child by node type
      if (child.getNodeType() == Node.TEXT_NODE) {
        child.setNodeValue(substituteSystemProperty(child.getNodeValue()));
      } else if (child.getNodeType() == Node.ELEMENT_NODE) {
        // handle child elements with recursive call
        NamedNodeMap attributes = child.getAttributes();
        for (int i = 0; i < attributes.getLength(); i++) {
          Node attribute = attributes.item(i);
          attribute.setNodeValue(substituteSystemProperty(attribute.getNodeValue()));
        }
        substituteSystemProperties(child);
      }
    }
  }

