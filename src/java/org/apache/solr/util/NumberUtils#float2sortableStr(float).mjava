  //
  // IEEE floating point format is defined so that it sorts correctly
  // when interpreted as a signed integer (or signed long in the case
  // of a double) for positive values.  For negative values, all the bits except
  // the sign bit must be inverted.
  // This correctly handles all possible float values including -Infinity and +Infinity.
  // Note that in float-space, NaN<x is false, NaN>x is false, NaN==x is false, NaN!=x is true
  // for all x (including NaN itself).  Internal to Solr, NaN==NaN is true and NaN
  // sorts higher than Infinity, so a range query of [-Infinity TO +Infinity] will
  // exclude NaN values, but a query of "NaN" will find all NaN values.
  // Also, -0==0 in float-space but -0<0 after this transformation.
  //
  public static String float2sortableStr(float val) {
    int f = Float.floatToRawIntBits(val);
    if (f<0) f ^= 0x7fffffff;
    return int2sortableStr(f);
  }

