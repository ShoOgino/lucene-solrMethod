  /** Determines the amount of RAM that may be used for
   * buffering added documents and deletions before they are
   * flushed to the Directory.  Generally for faster
   * indexing performance it's best to flush by RAM usage
   * instead of document count and use as large a RAM buffer
   * as you can.
   *
   * <p>When this is set, the writer will flush whenever
   * buffered documents and deletions use this much RAM.
   * Pass in {@link #DISABLE_AUTO_FLUSH} to prevent
   * triggering a flush due to RAM usage.  Note that if
   * flushing by document count is also enabled, then the
   * flush will be triggered by whichever comes first.</p>
   *
   * <p> <b>NOTE</b>: the account of RAM usage for pending
   * deletions is only approximate.  Specifically, if you
   * delete by Query, Lucene currently has no way to measure
   * the RAM usage if individual Queries so the accounting
   * will under-estimate and you should compensate by either
   * calling commit() periodically yourself, or by using
   * {@link #setMaxBufferedDeleteTerms} to flush by count
   * instead of RAM usage (each buffered delete Query counts
   * as one).
   *
   * <p> The default value is {@link #DEFAULT_RAM_BUFFER_SIZE_MB}.</p>
   * 
   * @throws IllegalArgumentException if ramBufferSize is
   * enabled but non-positive, or it disables ramBufferSize
   * when maxBufferedDocs is already disabled
   */
  public void setRAMBufferSizeMB(double mb) {
    if (mb != DISABLE_AUTO_FLUSH && mb <= 0.0)
      throw new IllegalArgumentException(
          "ramBufferSize should be > 0.0 MB when enabled");
    if (mb == DISABLE_AUTO_FLUSH && getMaxBufferedDocs() == DISABLE_AUTO_FLUSH)
      throw new IllegalArgumentException(
          "at least one of ramBufferSize and maxBufferedDocs must be enabled");
    docWriter.setRAMBufferSizeMB(mb);
    if (infoStream != null)
      message("setRAMBufferSizeMB " + mb);
  }

