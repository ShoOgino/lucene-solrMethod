  /** Writes & syncs to the Directory dir, taking care to
   *  remove the segments file on exception */
  public final void commit(Directory dir) throws IOException {
    boolean success = false;
    try {
      write(dir);
      success = true;
    } finally {
      if (!success) {
        // Must carefully compute fileName from "generation"
        // since lastGeneration isn't incremented:
        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,
                                                                             "",
                                                                             generation);
        dir.deleteFile(segmentFileName);
      }
    }

    // NOTE: if we crash here, we have left a segments_N
    // file in the directory in a possibly corrupt state (if
    // some bytes made it to stable storage and others
    // didn't).  But, the segments_N file now includes
    // checksum at the end, which should catch this case.
    // So when a reader tries to read it, it will throw a
    // CorruptIndexException, which should cause the retry
    // logic in SegmentInfos to kick in and load the last
    // good (previous) segments_N-1 file.

    final String fileName = getCurrentSegmentFileName();
    success = false;
    try {
      dir.sync(fileName);
      success = true;
    } finally {
      if (!success)
        dir.deleteFile(fileName);
    }
  }

