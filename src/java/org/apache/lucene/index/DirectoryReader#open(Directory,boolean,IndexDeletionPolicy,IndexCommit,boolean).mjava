  static IndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly) throws CorruptIndexException, IOException {
    SegmentInfos.FindSegmentsFile finder = new SegmentInfos.FindSegmentsFile(directory) {

      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {

        SegmentInfos infos = new SegmentInfos();
        infos.read(directory, segmentFileName);

        if (readOnly)
          return new ReadOnlyDirectoryReader(directory, infos, deletionPolicy, closeDirectory);
        else
          return new DirectoryReader(directory, infos, deletionPolicy, closeDirectory, false);
      }
    };

    IndexReader reader = null;
    try {
      reader = (IndexReader) finder.run(commit);
    } finally {
      // We passed false above for closeDirectory so that
      // the directory would not be closed before we were
      // done retrying, so at this point if we truly failed
      // to open a reader, which means an exception is being
      // thrown, then close the directory now:
      if (reader == null && closeDirectory) {
        try {
          directory.close();
        } catch (IOException ioe) {
          // suppress, so we keep throwing original failure
          // from opening the reader
        }
      }
    }

    return reader;
  }

