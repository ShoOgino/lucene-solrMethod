  /** <p>Expert: prepare for commit, specifying
   *  commitUserData String.  This does the first phase of
   *  2-phase commit.  You can only call this when
   *  autoCommit is false.  This method does all steps
   *  necessary to commit changes since this writer was
   *  opened: flushes pending added and deleted docs, syncs
   *  the index files, writes most of next segments_N file.
   *  After calling this you must call either {@link
   *  #commit()} to finish the commit, or {@link
   *  #rollback()} to revert the commit and undo all changes
   *  done since the writer was opened.</p>
   * 
   *  You can also just call {@link #commit(String)} directly
   *  without prepareCommit first in which case that method
   *  will internally call prepareCommit.
   *
   *  @param commitUserData Opaque String that's recorded
   *  into the segments file in the index, and retrievable
   *  by {@link IndexReader#getCommitUserData}.  Note that
   *  when IndexWriter commits itself, for example if open
   *  with autoCommit=true, or, during {@link #close}, the
   *  commitUserData is unchanged (just carried over from
   *  the prior commit).  If this is null then the previous
   *  commitUserData is kept.  Also, the commitUserData will
   *  only "stick" if there are actually changes in the
   *  index to commit.  Therefore it's best to use this
   *  feature only when autoCommit is false.
   */
  public final void prepareCommit(String commitUserData) throws CorruptIndexException, IOException {
    prepareCommit(commitUserData, false);
  }

