  /**
   * Commit changes resulting from delete, undeleteAll, or setNorm operations
   * 
   * @throws IOException
   */
  protected final synchronized void commit() throws IOException{
    if(hasChanges){
      if (deleter == null) {
        // In the MultiReader case, we share this deleter
        // across all SegmentReaders:
        setDeleter(new IndexFileDeleter(segmentInfos, directory));
        deleter.deleteFiles();
      }
      if(directoryOwner){
        deleter.clearPendingFiles();
        doCommit();
        String oldInfoFileName = segmentInfos.getCurrentSegmentFileName();
        segmentInfos.write(directory);
        // Attempt to delete all files we just obsoleted:

        deleter.deleteFile(oldInfoFileName);
        deleter.commitPendingFiles();
        deleter.deleteFiles();
        if (writeLock != null) {
          writeLock.release();  // release write lock
          writeLock = null;
        }
      }
      else
        doCommit();
    }
    hasChanges = false;
  }

