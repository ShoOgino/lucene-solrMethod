  protected void doAfterFlushRamSegments(boolean flushedRamSegments)
      throws IOException {
    if (bufferedDeleteTerms.size() > 0) {
      if (getInfoStream() != null)
        getInfoStream().println(
            "flush " + numBufferedDeleteTerms + " buffered terms on "
                + segmentInfos.size() + " segments.");

      if (flushedRamSegments) {
        IndexReader reader = null;
        try {
          reader = SegmentReader.get(segmentInfos.info(segmentInfos.size() - 1));
          reader.setDeleter(getDeleter());

          // apply delete terms to the segment just flushed from ram
          // apply appropriately so that a delete term is only applied to
          // the documents buffered before it, not those buffered after it
          applyDeletesSelectively(bufferedDeleteTerms, reader);
        } finally {
          if (reader != null)
            reader.close();
        }
      }

      int infosEnd = segmentInfos.size();
      if (flushedRamSegments) {
        infosEnd--;
      }

      for (int i = 0; i < infosEnd; i++) {
        IndexReader reader = null;
        try {
          reader = SegmentReader.get(segmentInfos.info(i));
          reader.setDeleter(getDeleter());

          // apply delete terms to disk segments
          // except the one just flushed from ram
          applyDeletes(bufferedDeleteTerms, reader);
        } finally {
          if (reader != null)
            reader.close();
        }
      }

      // clean up bufferedDeleteTerms
      bufferedDeleteTerms.clear();
      numBufferedDeleteTerms = 0;
    }
  }

