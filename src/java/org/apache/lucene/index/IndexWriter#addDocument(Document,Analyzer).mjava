  /**
   * Adds a document to this index, using the provided analyzer instead of the
   * value of {@link #getAnalyzer()}.  If the document contains more than
   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are
   * discarded.
   *
   * <p>See {@link #addDocument(Document)} for details on
   * index and IndexWriter state after an Exception, and
   * flushing/merging temporary free space requirements.</p>
   *
   * @throws CorruptIndexException if the index is corrupt
   * @throws IOException if there is a low-level IO error
   */
  public void addDocument(Document doc, Analyzer analyzer) throws CorruptIndexException, IOException {
    ensureOpen();
    int status = 0;
    boolean success = false;
    try {
      status = docWriter.addDocument(doc, analyzer);
      success = true;
    } finally {
      if (!success) {

        if (infoStream != null)
          message("hit exception adding document");

        synchronized (this) {
          // If docWriter has some aborted files that were
          // never incref'd, then we clean them up here
          if (docWriter != null) {
            final List files = docWriter.abortedFiles();
            if (files != null)
              deleter.deleteNewFiles(files);
          }
        }
      }
    }
    if ((status & 1) != 0)
      flush(true, false);
    checkMaxTermLength(status);
  }

