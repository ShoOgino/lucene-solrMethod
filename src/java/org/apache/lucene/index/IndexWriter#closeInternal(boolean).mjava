  private void closeInternal(boolean waitForMerges) throws CorruptIndexException, IOException {
    try {
      if (infoStream != null)
        message("now flush at close");

      // Only allow a new merge to be triggered if we are
      // going to wait for merges:
      flush(waitForMerges, true);

      mergePolicy.close();

      finishMerges(waitForMerges);

      mergeScheduler.close();

      if (commitPending) {
        boolean success = false;
        try {
          segmentInfos.write(directory);         // now commit changes
          success = true;
        } finally {
          if (!success) {
            if (infoStream != null)
              message("hit exception committing segments file during close");
            deletePartialSegmentsFile();
          }
        }
        if (infoStream != null)
          message("close: wrote segments file \"" + segmentInfos.getCurrentSegmentFileName() + "\"");
        synchronized(this) {
          deleter.checkpoint(segmentInfos, true);
        }
        commitPending = false;
        rollbackSegmentInfos = null;
      }

      if (infoStream != null)
        message("at close: " + segString());

      if (writeLock != null) {
        writeLock.release();                          // release write lock
        writeLock = null;
      }
      closed = true;
      docWriter = null;

      synchronized(this) {
        deleter.close();
      }
      
      if (closeDir)
        directory.close();
    } finally {
      synchronized(this) {
        if (!closed)
          closing = false;
        notifyAll();
      }
    }
  }

