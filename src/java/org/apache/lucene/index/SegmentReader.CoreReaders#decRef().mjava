    synchronized void decRef() throws IOException {

      if (ref.decrementAndGet() == 0) {

        // close everything, nothing is shared anymore with other readers
        if (tis != null) {
          tis.close();
          // null so if an app hangs on to us we still free most ram
          tis = null;
        }
        
        if (tisNoIndex != null) {
          tisNoIndex.close();
        }
        
        if (freqStream != null) {
          freqStream.close();
        }

        if (proxStream != null) {
          proxStream.close();
        }

        if (termVectorsReaderOrig != null) {
          termVectorsReaderOrig.close();
        }
  
        if (fieldsReaderOrig != null) {
          fieldsReaderOrig.close();
        }
  
        if (cfsReader != null) {
          cfsReader.close();
        }
  
        if (storeCFSReader != null) {
          storeCFSReader.close();
        }

        // Force FieldCache to evict our entries at this
        // point.  If the exception occurred while
        // initialzing the core readers, then
        // origInstance will be null, and we don't want
        // to call FieldCache.purge (it leads to NPE):
        if (origInstance != null) {
          FieldCache.DEFAULT.purge(origInstance);
        }
      }
    }

