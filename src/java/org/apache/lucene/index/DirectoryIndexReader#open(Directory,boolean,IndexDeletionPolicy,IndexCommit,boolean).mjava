  static DirectoryIndexReader open(final Directory directory, final boolean closeDirectory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly) throws CorruptIndexException, IOException {

    SegmentInfos.FindSegmentsFile finder = new SegmentInfos.FindSegmentsFile(directory) {

      protected Object doBody(String segmentFileName) throws CorruptIndexException, IOException {

        SegmentInfos infos = new SegmentInfos();
        infos.read(directory, segmentFileName);

        DirectoryIndexReader reader;

        if (infos.size() == 1) {          // index is optimized
          reader = SegmentReader.get(readOnly, infos, infos.info(0), closeDirectory);
        } else if (readOnly) {
          reader = new ReadOnlyMultiSegmentReader(directory, infos, closeDirectory);
        } else {
          reader = new MultiSegmentReader(directory, infos, closeDirectory, false);
        }
        reader.setDeletionPolicy(deletionPolicy);
        return reader;
      }
    };

    if (commit == null)
      return (DirectoryIndexReader) finder.run();
    else {
      if (directory != commit.getDirectory())
        throw new IOException("the specified commit does not match the specified Directory");
      // This can & will directly throw IOException if the
      // specified commit point has been deleted:
      return (DirectoryIndexReader) finder.doBody(commit.getSegmentsFileName());
    }
  }

