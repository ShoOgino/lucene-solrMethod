  /**
   * The default implementation of this method accesses all declared
   * fields of this object and prints the values in the following syntax:
   * 
   * <pre>
   *   public String toString() {
   *     return "start=" + startOffset + ",end=" + endOffset;
   *   }
   * </pre>
   * 
   * This method may be overridden by subclasses.
   */
  public String toString() {
    StringBuffer buffer = new StringBuffer();
    Class clazz = this.getClass();
    Field[] fields = clazz.getDeclaredFields();
    try {
      for (int i = 0; i < fields.length; i++) {
        Field f = fields[i];
        f.setAccessible(true);
        Object value = f.get(this);
        if (value == null) {
          buffer.append(f.getName() + "=null");
        } else {
          buffer.append(f.getName() + "=" + value);
        }
        if (i < fields.length - 1) {
          buffer.append(',');
        }
      }
    } catch (IllegalAccessException e) {
      // this should never happen, because we're just accessing fields
      // from 'this'
      throw new RuntimeException(e);
    }
    
    return buffer.toString();
  }

