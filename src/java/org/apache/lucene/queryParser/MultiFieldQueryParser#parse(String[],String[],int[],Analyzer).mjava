  /**
   * Parses a query, searching on the fields specified. Use this if you need to
   * specify certain fields as required, and others as prohibited.
   * <p>
   * <pre>
   *  Usage:
   * <code>
   * String[] fields = { &quot;filename&quot;, &quot;contents&quot;, &quot;description&quot; };
   * int[] flags = { MultiFieldQueryParser.NORMAL_FIELD,
   *     MultiFieldQueryParser.REQUIRED_FIELD,
   *     MultiFieldQueryParser.PROHIBITED_FIELD, };
   * parse(query, fields, flags, analyzer);
   * </code>
   * </pre>
   * 
   * <p>
   * The code above would construct a query:
   * <pre>
   * <code>
   *  (filename:query1) +(contents:query2) -(description:query3)
   * </code>
   * </pre>
   * 
   * @param queries Queries string to parse
   * @param fields Fields to search on
   * @param flags Flags describing the fields
   * @param analyzer Analyzer to use
   * @throws ParseException if query parsing fails
   * @throws TokenMgrError if query parsing fails
   * @throws IllegalArgumentException if the length of the queries, fields, and flags array differ
   * @deprecated use {@link #parse(String[], String[], BooleanClause.Occur[], Analyzer)} instead
   */
  public static Query parse(String[] queries, String[] fields, int[] flags,
      Analyzer analyzer) throws ParseException
  {
    if (!(queries.length == fields.length && queries.length == flags.length))
      throw new IllegalArgumentException("queries, fields, and flags array have have different length");
    BooleanQuery bQuery = new BooleanQuery();
    for (int i = 0; i < fields.length; i++)
    {
      QueryParser qp = new QueryParser(fields[i], analyzer);
      Query q = qp.parse(queries[i]);
      int flag = flags[i];
      switch (flag)
      {
        case REQUIRED_FIELD:
          bQuery.add(q, BooleanClause.Occur.MUST);
          break;
        case PROHIBITED_FIELD:
          bQuery.add(q, BooleanClause.Occur.MUST_NOT);
          break;
        default:
          bQuery.add(q, BooleanClause.Occur.SHOULD);
          break;
      }
    }
    return bQuery;
  }

