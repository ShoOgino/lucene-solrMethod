    /** Determine the current document score.  Initially invalid, until {@link #next()} is called the first time.
     * @return the score of the current generated document
     */
    public float score() throws IOException {
        float max = ((Scorer) subScorers.get(0)).score(), sum = max;
        for (int i = 1, doc = ((Scorer) subScorers.get(0)).doc(); i < subScorers.size() && ((Scorer) subScorers.get(i)).doc() == doc; i++) {
            float sub = ((Scorer) subScorers.get(i)).score();
            sum += sub;
            max = Math.max(max, sub);
        }
        return max + (sum - max)*tieBreakerMultiplier;
    }

