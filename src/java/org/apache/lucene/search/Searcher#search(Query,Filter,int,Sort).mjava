  /** Search implementation with arbitrary sorting.  Finds
   * the top <code>n</code> hits for <code>query</code>, applying
   * <code>filter</code> if non-null, and sorting the hits by the criteria in
   * <code>sort</code>.
   * 
   * <b>NOTE:</b> currently, this method tracks document scores and sets them in
   * the returned {@link FieldDoc}, however in 3.0 it will move to not track
   * document scores. If document scores tracking is still needed, you can use
   * {@link #search(Weight, Filter, Collector)} and pass in a
   * {@link TopFieldCollector} instance.
   *
   * @throws BooleanQuery.TooManyClauses
   */
  public TopFieldDocs search(Query query, Filter filter, int n,
                             Sort sort) throws IOException {
    return search(createWeight(query), filter, n, sort);
  }

