  /** Constructs a BooleanClause with query <code>q</code>, required
   * <code>r</code> and prohibited <code>p</code>.
   * @deprecated use BooleanClause(Query, Occur) instead
   * <ul>
   *  <li>For BooleanClause(query, true, false) use BooleanClause(query, BooleanClause.Occur.MUST)
   *  <li>For BooleanClause(query, false, false) use BooleanClause(query, BooleanClause.Occur.SHOULD)
   *  <li>For BooleanClause(query, false, true) use BooleanClause(query, BooleanClause.Occur.MUST_NOT)
   * </ul>
   */ 
  public BooleanClause(Query q, boolean r, boolean p) {
    // TODO: remove for Lucene 2.0
    query = q;
    required = r;
    prohibited = p;
    if (required) {
      if (prohibited) {
        // prohibited && required doesn't make sense, but we want the old behaviour:
        occur = Occur.MUST_NOT;
      } else {
         occur = Occur.MUST;
      }
    } else {
      if (prohibited) {
         occur = Occur.MUST_NOT;
      } else {
         occur = Occur.SHOULD;
      }
    }
  }

