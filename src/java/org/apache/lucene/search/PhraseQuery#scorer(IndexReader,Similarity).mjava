  final Scorer scorer(IndexReader reader, Similarity similarity)
    throws IOException {
    if (terms.size() == 0)			  // optimize zero-term case
      return null;
    if (terms.size() == 1) {			  // optimize one-term case
      Term term = (Term)terms.elementAt(0);
      TermDocs docs = reader.termDocs(term);
      if (docs == null)
	return null;
      return new TermScorer(docs, similarity,
                            reader.norms(term.field()), weight);
    }

    TermPositions[] tps = new TermPositions[terms.size()];
    for (int i = 0; i < terms.size(); i++) {
      TermPositions p = reader.termPositions((Term)terms.elementAt(i));
      if (p == null)
	return null;
      tps[i] = p;
    }

    if (slop == 0)				  // optimize exact case
      return new ExactPhraseScorer(tps, similarity,
                                   reader.norms(field), weight);
    else
      return
	new SloppyPhraseScorer(tps, similarity, slop,
                               reader.norms(field), weight);

  }

