    /**
     * Creates a hit queue sorted by the given field.  Hits are sorted by the field, then
	 * by index order.
     * @param reader  IndexReader to use.
     * @param field   Field to sort by.
     * @param size    Number of hits to return - see {@link PriorityQueue#initialize(int) initialize}
     * @throws IOException  If the internal term enumerator fails.
     */
    FieldSortedHitQueue (IndexReader reader, String field, int size)
    throws IOException {

		// reset the cache if we have a new reader
        int hash = reader.hashCode();
        if (hash != lastReaderHash) {
            lastReaderHash = hash;
            fieldCache.clear();
        }

		// initialize the PriorityQueue
        initialize (size);

		// set the sort
        comparators[0] = initializeSort (reader, field);
    }

