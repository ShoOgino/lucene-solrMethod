    public final void score(HitCollector results, int end) throws IOException {
        Similarity similarity = getSimilarity();
        while (last.doc < end) {			  // find doc w/ all the terms
            while (first.doc < last.doc) {		  // scan forward in first
                do {
                    first.next();
                } while (first.doc < last.doc);
                firstToLast();
                if (last.doc >= end)
                    return;
            }

            // found doc with all terms
            freq = phraseFreq();                        // check for phrase

            if (freq > 0.0) {
                float score = similarity.tf(freq) * value;  // compute score
                score *= Similarity.decodeNorm(norms[first.doc]); // normalize
                results.collect(first.doc, score);	  // add to results
            }
            last.next();				  // resume scanning
        }
    }

