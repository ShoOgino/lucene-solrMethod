  /** Constructs a query selecting all terms greater than
   * <code>lowerTerm</code> but less than <code>upperTerm</code>.
   * There must be at least one term and either term may be null,
   * in which case there is no bound on that side, but if there are
   * two terms, both terms <b>must</b> be for the same field.
   *
   * @param lowerTerm The Term at the lower end of the range
   * @param upperTerm The Term at the upper end of the range
   * @param inclusive If true, both <code>lowerTerm</code> and
   *  <code>upperTerm</code> will themselves be included in the range.
   */
  public RangeQuery(Term lowerTerm, Term upperTerm, boolean inclusive) {
    this(lowerTerm, upperTerm, inclusive, null);
  }

