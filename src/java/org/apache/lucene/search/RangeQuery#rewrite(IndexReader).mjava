    public Query rewrite(IndexReader reader) throws IOException {
      BooleanQuery query = new BooleanQuery();
      // if we have a lowerTerm, start there. otherwise, start at beginning
      if (lowerTerm == null) lowerTerm = new Term(getField(), "");
      TermEnum enumerator = reader.terms(lowerTerm);
      try {
        String lowerText = null;
        String field;
        boolean checkLower = false;
          if (!inclusive) {             // make adjustments to set to exclusive
            if (lowerTerm != null) {
              lowerText = lowerTerm.text();
              checkLower = true;
            }
            if (upperTerm != null) {
              // set upperTerm to an actual term in the index
              TermEnum uppEnum = reader.terms(upperTerm);
              upperTerm = uppEnum.term();
            }
          }
          String testField = getField();
          do {
            Term term = enumerator.term();
            if (term != null && term.field() == testField) {
              if (!checkLower || term.text().compareTo(lowerText) > 0) {
                checkLower = false;
                if (upperTerm != null) {
                  int compare = upperTerm.compareTo(term);
                  /* if beyond the upper term, or is exclusive and
                   * this is equal to the upper term, break out */
                  if ((compare < 0) || (!inclusive && compare == 0)) break;
                }
                TermQuery tq = new TermQuery(term); // found a match
                tq.setBoost(getBoost());          // set the boost
                query.add(tq, false, false); // add to query
              }
            }
            else {
              break;
            }
          }
          while (enumerator.next());
      } finally {
        enumerator.close();
      }
      return query;
    }

