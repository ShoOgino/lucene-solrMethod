  public CacheEntry[] getCacheEntries() {
    List result = new ArrayList(17);
    Iterator outerKeys = caches.keySet().iterator();
    while (outerKeys.hasNext()) {
      Class cacheType = (Class)outerKeys.next();
      Cache cache = (Cache)caches.get(cacheType);
      Iterator innerKeys = cache.readerCache.keySet().iterator();
      while (innerKeys.hasNext()) {
        // we've now materialized a hard ref
        Object readerKey = innerKeys.next();
        // innerKeys was backed by WeakHashMap, sanity check
        // that it wasn't GCed before we made hard ref
        if (null != readerKey && cache.readerCache.containsKey(readerKey)) {
          Map innerCache = ((Map)cache.readerCache.get(readerKey));
          Iterator keys = innerCache.keySet().iterator();
          while (keys.hasNext()) {
            Entry entry = (Entry) keys.next();
            result.add(new CacheEntryImpl(readerKey, entry.field,
                                          cacheType, entry.type,
                                          entry.custom, entry.locale,
                                          innerCache.get(entry)));
          }
        }
      }
    }
    return (CacheEntry[]) result.toArray(new CacheEntry[result.size()]);
  }

