    public Scorer scorer(IndexReader reader) throws IOException {
      if (termArrays.size() == 0)                  // optimize zero-term case
        return null;
    
      if (termArrays.size() == 1) {                // optimize one-term case
        Term[] terms = (Term[])termArrays.get(0);
      
        BooleanScorer bos = new BooleanScorer(searcher.getSimilarity());
        for (int i=0; i<terms.length; i++) {
          TermDocs docs = reader.termDocs(terms[i]);
          if (docs != null)
            bos.add(new TermScorer(this, docs, searcher.getSimilarity(),
                                   reader.norms(field)), false, false);
        }
      
        return bos;
      }

      TermPositions[] tps = new TermPositions[termArrays.size()];
      for (int i=0; i<tps.length; i++) {
        Term[] terms = (Term[])termArrays.get(i);
      
        TermPositions p;
        if (terms.length > 1)
          p = new MultipleTermPositions(reader, terms);
        else
          p = reader.termPositions(terms[0]);
      
        if (p == null)
          return null;
      
        tps[i] = p;
      }
    
      if (slop == 0)
        return new ExactPhraseScorer(this, tps, searcher.getSimilarity(),
                                     reader.norms(field));
      else
        return new SloppyPhraseScorer(this, tps, searcher.getSimilarity(),
                                      slop, reader.norms(field));
    }

