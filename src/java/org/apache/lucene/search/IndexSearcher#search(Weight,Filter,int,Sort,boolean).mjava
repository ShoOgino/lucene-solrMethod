  /**
   * Just like {@link #search(Weight, Filter, int, Sort)}, but you choose
   * whether or not the fields in the returned {@link FieldDoc} instances should
   * be set by specifying fillFields.<br>
   * <b>NOTE:</b> currently, this method tracks document scores and sets them in
   * the returned {@link FieldDoc}, however in 3.0 it will move to not track
   * document scores. If document scores tracking is still needed, you can use
   * {@link #search(Weight, Filter, Collector)} and pass in a
   * {@link TopFieldCollector} instance.
   */
  public TopFieldDocs search(Weight weight, Filter filter, final int nDocs,
                             Sort sort, boolean fillFields)
      throws IOException {
    
    SortField[] fields = sort.fields;
    boolean legacy = false;
    for(int i = 0; i < fields.length; i++) {
      SortField field = fields[i];
      String fieldname = field.getField();
      int type = field.getType();
      // Resolve AUTO into its true type
      if (type == SortField.AUTO) {
        int autotype = SortField.detectFieldType(reader, fieldname);
        if (autotype == SortField.STRING) {
          fields[i] = new SortField (fieldname, field.getLocale(), field.getReverse());
        } else {
          fields[i] = new SortField (fieldname, autotype, field.getReverse());
        }
      }

      if (field.getUseLegacySearch()) {
        legacy = true;
      }
    }
    
    if (legacy) {
      // Search the single top-level reader
      TopDocCollector collector = new TopFieldDocCollector(reader, sort, nDocs);
      HitCollectorWrapper hcw = new HitCollectorWrapper(collector);
      hcw.setNextReader(reader, 0);
      doSearch(reader, weight, filter, hcw);
      return (TopFieldDocs) collector.topDocs();
    }
    // Search each sub-reader
    // TODO: The following should be changed to first obtain a Scorer and then ask it
    // if it's going to return in-order or out-of-order docs, and create TSDC
    // accordingly.
    TopFieldCollector collector = TopFieldCollector.create(sort, nDocs,
        fillFields, fieldSortDoTrackScores, fieldSortDoMaxScore, false);
    search(weight, filter, collector);
    return (TopFieldDocs) collector.topDocs();
  }

