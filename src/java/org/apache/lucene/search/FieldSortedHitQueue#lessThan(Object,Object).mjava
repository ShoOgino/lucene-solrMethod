    /**
     * Compares documents based on the value of the term in the field
     * being sorted by.  Documents which should appear at the top of the
     * list should have low values in the term; documents which should
     * appear at the end should have high values.
     *
     * <p>In the context of this method, "less than" means "less relevant",
     * so documents at the top of the list are "greatest" and documents at
     * the bottom are "least".
     *
     * <p>Document A is considered less than Document B
     * if A.field.term > B.field.term or A.doc > B.doc.
     *
     * @param a  ScoreDoc object for document a.
     * @param b  ScoreDoc object for document b.
     * @return true if document a is less than document b.
     * @see ScoreDoc
     */
    protected final boolean lessThan (Object a, Object b) {
        ScoreDoc hitA = (ScoreDoc) a;
        ScoreDoc hitB = (ScoreDoc) b;
        int scoreA = fieldOrder[hitA.doc];
        int scoreB = fieldOrder[hitB.doc];
        if (scoreA == scoreB)
            return hitA.doc > hitB.doc;
        else
            return scoreA > scoreB;   // bigger is really less - the ones at the top should be the lowest
    }

