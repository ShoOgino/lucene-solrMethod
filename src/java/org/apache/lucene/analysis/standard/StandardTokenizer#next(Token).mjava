  /*
   * (non-Javadoc)
   *
   * @see org.apache.lucene.analysis.TokenStream#next()
   */
  public Token next(Token result) throws IOException {
      int posIncr = 1;

      while(true) {
	int tokenType = scanner.getNextToken();

	if (tokenType == StandardTokenizerImpl.YYEOF) {
	    return null;
	}

        if (scanner.yylength() <= maxTokenLength) {
          result.clear();
          result.setPositionIncrement(posIncr);
          scanner.getText(result);
          final int start = scanner.yychar();
          result.setStartOffset(start);
          result.setEndOffset(start+result.termLength());
          // This 'if' should be removed in the next release. For now, it converts
          // invalid acronyms to HOST. When removed, only the 'else' part should
          // remain.
          if (tokenType == StandardTokenizerImpl.ACRONYM_DEP) {
            if (replaceInvalidAcronym) {
              result.setType(StandardTokenizerImpl.TOKEN_TYPES[StandardTokenizerImpl.HOST]);
              result.setTermLength(result.termLength() - 1); // remove extra '.'
            } else {
              result.setType(StandardTokenizerImpl.TOKEN_TYPES[StandardTokenizerImpl.ACRONYM]);
            }
          } else {
            result.setType(StandardTokenizerImpl.TOKEN_TYPES[tokenType]);
          }
          return result;
        } else
          // When we skip a too-long term, we still increment the
          // position increment
          posIncr++;
      }
    }

