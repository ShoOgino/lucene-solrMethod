	/**
	 * Consumers (e. g. the indexer) use this method to advance the stream 
	 * to the next token. Implementing classes must implement this method 
	 * and update the appropriate {@link Attribute}s with content of the 
	 * next token.
	 * <p>
	 * This method is called for every token of a document, so an efficient
	 * implementation is crucial for good performance. To avoid calls to 
	 * {@link #addAttribute(Class)} and {@link #getAttribute(Class)} and
	 * downcasts, references to all {@link Attribute}s that this stream uses 
	 * should be retrieved during instantiation.   
	 * <p>
	 * To make sure that filters and consumers know which attributes are available
   * the attributes must be added during instantiation. Filters and 
   * consumers are not required to check for availability of attributes in {@link #incrementToken()}.
	 * 
	 * @return false for end of stream; true otherwise
	 *
	 * <p>
	 * <b>Note that this method will be defined abstract in Lucene 3.0.</b>
	 */
	public boolean incrementToken() throws IOException {
	  // subclasses must implement this method; will be made abstract in Lucene 3.0
	  return false;
	}

