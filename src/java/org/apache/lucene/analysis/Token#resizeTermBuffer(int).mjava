  /** Grows the termBuffer to at least size newSize, preserving the
   *  existing content. Note: If the next operation is to change
   *  the contents of the term buffer use
   *  {@link #setTermBuffer(char[], int, int)},
   *  {@link #setTermBuffer(String)}, or
   *  {@link #setTermBuffer(String, int, int)}
   *  to optimally combine the resize with the setting of the termBuffer.
   *  @param newSize minimum size of the new termBuffer
   *  @return newly created termBuffer with length >= newSize
   */
  public char[] resizeTermBuffer(int newSize) {
    char[] newCharBuffer = growTermBuffer(newSize);
    if (termBuffer == null) {
      // If there were termText, then preserve it.
      // note that if termBuffer is null then newCharBuffer cannot be null
      assert newCharBuffer != null;
      if (termText != null) {
        termText.getChars(0, termText.length(), newCharBuffer, 0);
      }
      termBuffer = newCharBuffer;
    } else if (newCharBuffer != null) {
      // Note: if newCharBuffer != null then termBuffer needs to grow.
      // If there were a termBuffer, then preserve it
      System.arraycopy(termBuffer, 0, newCharBuffer, 0, termBuffer.length);
      termBuffer = newCharBuffer;      
    }
    termText = null;
    return termBuffer;
  }

