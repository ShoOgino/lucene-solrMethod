    /**
     * Do some substitutions for the term to reduce overstemming:
     *
     * - Substitute Umlauts with their corresponding vowel: ��� -> aou,
     *   "�" is substituted by "ss"
     * - Substitute a second char of a pair of equal characters with
     *   an asterisk: ?? -> ?*
     * - Substitute some common character combinations with a token:
     *   sch/ch/ei/ie/ig/st -> $/�/%/&/#/!
     */
    private void substitute( StringBuffer buffer ) {
		substCount = 0;
		for ( int c = 0; c < buffer.length(); c++ ) {
			// Replace the second char of a pair of the equal characters with an asterisk
			if ( c > 0 && buffer.charAt( c ) == buffer.charAt ( c - 1 )  ) {
				buffer.setCharAt( c, '*' );
			}
			// Substitute Umlauts.
			else if ( buffer.charAt( c ) == '�' ) {
				buffer.setCharAt( c, 'a' );
			}
			else if ( buffer.charAt( c ) == '�' ) {
				buffer.setCharAt( c, 'o' );
			}
			else if ( buffer.charAt( c ) == '�' ) {
				buffer.setCharAt( c, 'u' );
			}
			// Take care that at least one character is left left side from the current one
			if ( c < buffer.length() - 1 ) {
				if ( buffer.charAt( c ) == '�' ) {
					buffer.setCharAt( c, 's' );
					buffer.insert( c + 1, 's' );
					substCount++;
				}
				// Masking several common character combinations with an token
				else if ( ( c < buffer.length() - 2 ) && buffer.charAt( c ) == 's' && buffer.charAt( c + 1 ) == 'c' && buffer.charAt( c + 2 ) == 'h' ) {
					buffer.setCharAt( c, '$' );
					buffer.delete( c + 1, c + 3 );
					substCount =+ 2;
				}
				else if ( buffer.charAt( c ) == 'c' && buffer.charAt( c + 1 ) == 'h' ) {
					buffer.setCharAt( c, '�' );
					buffer.deleteCharAt( c + 1 );
					substCount++;
				}
				else if ( buffer.charAt( c ) == 'e' && buffer.charAt( c + 1 ) == 'i' ) {
					buffer.setCharAt( c, '%' );
					buffer.deleteCharAt( c + 1 );
					substCount++;
				}
				else if ( buffer.charAt( c ) == 'i' && buffer.charAt( c + 1 ) == 'e' ) {
					buffer.setCharAt( c, '&' );
					buffer.deleteCharAt( c + 1 );
					substCount++;
				}
				else if ( buffer.charAt( c ) == 'i' && buffer.charAt( c + 1 ) == 'g' ) {
					buffer.setCharAt( c, '#' );
					buffer.deleteCharAt( c + 1 );
					substCount++;
				}
				else if ( buffer.charAt( c ) == 's' && buffer.charAt( c + 1 ) == 't' ) {
					buffer.setCharAt( c, '!' );
					buffer.deleteCharAt( c + 1 );
					substCount++;
				}
			}
		}
    }

