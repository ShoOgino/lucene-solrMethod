	/**
	 * Undoes the changes made by substitute(). That are character pairs and
	 * character combinations. Umlauts will remain as their corresponding vowel,
	 * as "�" remains as "ss".
	 *
	 * @return  The term without the not human readable substitutions.
	 */
	private StringBuffer resubstitute( StringBuffer buffer ) {
		for ( int c = 0; c < buffer.length(); c++ ) {
			if ( buffer.charAt( c ) == '*' ) {
				char x = buffer.charAt( c - 1 );
				buffer.setCharAt( c, x );
			}
			else if ( buffer.charAt( c ) == '$' ) {
				buffer.setCharAt( c, 's' );
				buffer.insert( c + 1, new char[]{'c', 'h'}, 0, 2 );
			}
			else if ( buffer.charAt( c ) == '�' ) {
				buffer.setCharAt( c, 'c' );
				buffer.insert( c + 1, 'h' );
			}
			else if ( buffer.charAt( c ) == '%' ) {
				buffer.setCharAt( c, 'e' );
				buffer.insert( c + 1, 'i' );
			}
			else if ( buffer.charAt( c ) == '&' ) {
				buffer.setCharAt( c, 'i' );
				buffer.insert( c + 1, 'e' );
			}
			else if ( buffer.charAt( c ) == '#' ) {
				buffer.setCharAt( c, 'i' );
				buffer.insert( c + 1, 'g' );
			}
			else if ( buffer.charAt( c ) == '!' ) {
				buffer.setCharAt( c, 's' );
				buffer.insert( c + 1, 't' );
			}
		}
		return buffer;
	}

