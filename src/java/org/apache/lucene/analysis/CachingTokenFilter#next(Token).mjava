  /** @deprecated */
  public Token next(final Token reusableToken) throws IOException {
    assert reusableToken != null;
    if (cache == null) {
      // fill cache lazily
      cache = new LinkedList();
      fillCache(reusableToken);
      iterator = cache.iterator();
    }
    
    if (!iterator.hasNext()) {
      // the cache is exhausted, return null
      return null;
    }
    // Since the TokenFilter can be reset, the tokens need to be preserved as immutable.
    Token nextToken = (Token) iterator.next();
    return (Token) nextToken.clone();
  }

