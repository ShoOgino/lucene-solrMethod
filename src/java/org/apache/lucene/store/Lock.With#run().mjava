    /** Calls {@link #doBody} while <it>lock</it> is obtained.  Blocks if lock
     * cannot be obtained immediately.  Retries to obtain lock once per second
     * until it is obtained, or until it has tried ten times. */
    public Object run() throws IOException {
      boolean locked = false;
      try {
	locked = lock.obtain();
	int sleepCount = 0;
	while (!locked) {
	  if (++sleepCount == maxSleeps) {
	    throw new IOException("Timed out waiting for: " + lock);
	  }
	  try {
	    Thread.sleep(sleepInterval);
	  } catch (InterruptedException e) {
	    throw new IOException(e.toString());
	  }
	  locked = lock.obtain();
	}

	return doBody();
	
      } finally {
	if (locked)
	  lock.release();
      }
    }

