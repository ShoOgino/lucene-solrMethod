  private void init(File path, boolean create, LockFactory lockFactory) throws IOException {

    // Set up lockFactory with cascaded defaults: if an instance was passed in,
    // use that; else if locks are disabled, use NoLockFactory; else if the
    // system property org.apache.lucene.lockClass is set, instantiate that;
    // else, use SimpleFSLockFactory:

    if (lockFactory == null) {

      if (disableLocks) {
        // Locks are disabled:
        lockFactory = NoLockFactory.getNoLockFactory();
      } else {
        String lockClassName = System.getProperty("org.apache.lucene.store.FSDirectoryLockFactoryClass");

        if (lockClassName != null) {
          Class c;

          try {
            c = Class.forName(lockClassName);
          } catch (ClassNotFoundException e) {
            throw new IOException("unable to find LockClass " + lockClassName);
          }

          try {
            lockFactory = (LockFactory) c.newInstance();          
          } catch (IllegalAccessException e) {
            throw new IOException("IllegalAccessException when instantiating LockClass " + lockClassName);
          } catch (InstantiationException e) {
            throw new IOException("InstantiationException when instantiating LockClass " + lockClassName);
          } catch (ClassCastException e) {
            throw new IOException("unable to cast LockClass " + lockClassName + " instance to a LockFactory");
          }
        } else {
          // Our default lock is SimpleFSLockFactory:
          File lockDir;
          if (LOCK_DIR == null) {
            lockDir = directory;
          } else {
            lockDir = new File(LOCK_DIR);
          }
          lockFactory = new SimpleFSLockFactory(lockDir);
        }
      }
    }

    // Must initialize directory here because setLockFactory uses it
    // (when the LockFactory calls getLockID).  But we want to create
    // the lockFactory before calling init() because init() needs to
    // use the lockFactory to clear old locks.  So this breaks
    // chicken/egg:
    directory = path;

    setLockFactory(lockFactory);

    init(path, create);
  }

