  /**
   * Converts a millisecond time to a string suitable for indexing.
   * 
   * @param time the date expressed as milliseconds since January 1, 1970, 00:00:00 GMT
   * @param resolution the desired resolution, see
   *  {@link #round(long, DateTools.Resolution)}
   * @return a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,
   *  depeding on <code>resolution</code>
   */
  public static String timeToString(long time, Resolution resolution) {
    Calendar cal = Calendar.getInstance();
    cal.setTimeInMillis(round(time, resolution));

    SimpleDateFormat sdf = new SimpleDateFormat();
    String pattern = null;
    if (resolution == Resolution.YEAR) {
      pattern = "yyyy";
    } else if (resolution == Resolution.MONTH) {
      pattern = "yyyyMM";
    } else if (resolution == Resolution.DAY) {
      pattern = "yyyyMMdd";
    } else if (resolution == Resolution.HOUR) {
      pattern = "yyyyMMddHH";
    } else if (resolution == Resolution.MINUTE) {
      pattern = "yyyyMMddHHmm";
    } else if (resolution == Resolution.SECOND) {
      pattern = "yyyyMMddHHmmss";
    } else if (resolution == Resolution.MILLISECOND) {
      pattern = "yyyyMMddHHmmssSSS";
    } else {
      throw new IllegalArgumentException("unknown resolution " + resolution);
    }
    sdf.applyPattern(pattern);
    return sdf.format(cal.getTime());
  }

