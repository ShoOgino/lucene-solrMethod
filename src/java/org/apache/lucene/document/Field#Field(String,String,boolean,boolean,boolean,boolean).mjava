  /**
   * 
   * @param name The name of the field
   * @param string The string to process
   * @param store true if the field should store the string
   * @param index true if the field should be indexed
   * @param token true if the field should be tokenized
   * @param storeTermVector true if we should store the Term Vector info
   * 
   * @deprecated use {@link #Field(String, String, Field.Store, Field.Index, Field.TermVector)} instead
   */ 
  public Field(String name, String string,
	       boolean store, boolean index, boolean token, boolean storeTermVector) {
    if (name == null)
      throw new NullPointerException("name cannot be null");
    if (string == null)
      throw new NullPointerException("value cannot be null");
    if (!index && storeTermVector)
      throw new IllegalArgumentException("cannot store a term vector for fields that are not indexed");

    this.name = name.intern();			  // field names are interned
    this.stringValue = string;
    this.isStored = store;
    this.isIndexed = index;
    this.isTokenized = token;
    this.storeTermVector = storeTermVector;
  }

