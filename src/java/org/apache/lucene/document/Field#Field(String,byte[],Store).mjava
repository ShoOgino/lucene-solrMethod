  /**
   * Create a stored field with binary value. Optionally the value may be compressed.
   * 
   * @param name The name of the field
   * @param value The binary value
   * @param store How <code>value</code> should be stored (compressed or not.)
   */
  public Field(String name, byte[] value, Store store) {
    if (name == null)
      throw new IllegalArgumentException("name cannot be null");
    if (value == null)
      throw new IllegalArgumentException("value cannot be null");
    if (store == Store.NO)
      throw new IllegalArgumentException("binary values can't be unstored");
    if (store == Store.COMPRESS)
      this.isCompressed = true;
    
    this.name = name.intern();
    //wrap the byte[] to a ByteBuffer object
    this.fieldsData = value;
    
    this.isBinary    = true;
    this.isStored    = true;
    
    this.isIndexed   = false;
    this.isTokenized = false;
    this.storeTermVector = false;
  }

