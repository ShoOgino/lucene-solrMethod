        private boolean r_append_U_to_stems_ending_with_d_or_g() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            int v_10;
            int v_11;
            int v_12;
            int v_13;
            int v_14;
            int v_15;
            // (, line 430
            // test, line 431
            v_1 = limit - cursor;
            // (, line 431
            // or, line 431
            lab0: do {
                v_2 = limit - cursor;
                lab1: do {
                    // literal, line 431
                    if (!(eq_s_b(1, "d")))
                    {
                        break lab1;
                    }
                    break lab0;
                } while (false);
                cursor = limit - v_2;
                // literal, line 431
                if (!(eq_s_b(1, "g")))
                {
                    return false;
                }
            } while (false);
            cursor = limit - v_1;
            // or, line 433
            lab2: do {
                v_3 = limit - cursor;
                lab3: do {
                    // (, line 432
                    // test, line 432
                    v_4 = limit - cursor;
                    // (, line 432
                    // (, line 432
                    // goto, line 432
                    golab4: while(true)
                    {
                        v_5 = limit - cursor;
                        lab5: do {
                            if (!(in_grouping_b(g_vowel, 97, 305)))
                            {
                                break lab5;
                            }
                            cursor = limit - v_5;
                            break golab4;
                        } while (false);
                        cursor = limit - v_5;
                        if (cursor <= limit_backward)
                        {
                            break lab3;
                        }
                        cursor--;
                    }
                    // or, line 432
                    lab6: do {
                        v_6 = limit - cursor;
                        lab7: do {
                            // literal, line 432
                            if (!(eq_s_b(1, "a")))
                            {
                                break lab7;
                            }
                            break lab6;
                        } while (false);
                        cursor = limit - v_6;
                        // literal, line 432
                        if (!(eq_s_b(1, "\u0131")))
                        {
                            break lab3;
                        }
                    } while (false);
                    cursor = limit - v_4;
                    // <+, line 432
                    {
                        int c = cursor;
                        insert(cursor, cursor, "\u0131");
                        cursor = c;
                    }
                    break lab2;
                } while (false);
                cursor = limit - v_3;
                lab8: do {
                    // (, line 434
                    // test, line 434
                    v_7 = limit - cursor;
                    // (, line 434
                    // (, line 434
                    // goto, line 434
                    golab9: while(true)
                    {
                        v_8 = limit - cursor;
                        lab10: do {
                            if (!(in_grouping_b(g_vowel, 97, 305)))
                            {
                                break lab10;
                            }
                            cursor = limit - v_8;
                            break golab9;
                        } while (false);
                        cursor = limit - v_8;
                        if (cursor <= limit_backward)
                        {
                            break lab8;
                        }
                        cursor--;
                    }
                    // or, line 434
                    lab11: do {
                        v_9 = limit - cursor;
                        lab12: do {
                            // literal, line 434
                            if (!(eq_s_b(1, "e")))
                            {
                                break lab12;
                            }
                            break lab11;
                        } while (false);
                        cursor = limit - v_9;
                        // literal, line 434
                        if (!(eq_s_b(1, "i")))
                        {
                            break lab8;
                        }
                    } while (false);
                    cursor = limit - v_7;
                    // <+, line 434
                    {
                        int c = cursor;
                        insert(cursor, cursor, "i");
                        cursor = c;
                    }
                    break lab2;
                } while (false);
                cursor = limit - v_3;
                lab13: do {
                    // (, line 436
                    // test, line 436
                    v_10 = limit - cursor;
                    // (, line 436
                    // (, line 436
                    // goto, line 436
                    golab14: while(true)
                    {
                        v_11 = limit - cursor;
                        lab15: do {
                            if (!(in_grouping_b(g_vowel, 97, 305)))
                            {
                                break lab15;
                            }
                            cursor = limit - v_11;
                            break golab14;
                        } while (false);
                        cursor = limit - v_11;
                        if (cursor <= limit_backward)
                        {
                            break lab13;
                        }
                        cursor--;
                    }
                    // or, line 436
                    lab16: do {
                        v_12 = limit - cursor;
                        lab17: do {
                            // literal, line 436
                            if (!(eq_s_b(1, "o")))
                            {
                                break lab17;
                            }
                            break lab16;
                        } while (false);
                        cursor = limit - v_12;
                        // literal, line 436
                        if (!(eq_s_b(1, "u")))
                        {
                            break lab13;
                        }
                    } while (false);
                    cursor = limit - v_10;
                    // <+, line 436
                    {
                        int c = cursor;
                        insert(cursor, cursor, "u");
                        cursor = c;
                    }
                    break lab2;
                } while (false);
                cursor = limit - v_3;
                // (, line 438
                // test, line 438
                v_13 = limit - cursor;
                // (, line 438
                // (, line 438
                // goto, line 438
                golab18: while(true)
                {
                    v_14 = limit - cursor;
                    lab19: do {
                        if (!(in_grouping_b(g_vowel, 97, 305)))
                        {
                            break lab19;
                        }
                        cursor = limit - v_14;
                        break golab18;
                    } while (false);
                    cursor = limit - v_14;
                    if (cursor <= limit_backward)
                    {
                        return false;
                    }
                    cursor--;
                }
                // or, line 438
                lab20: do {
                    v_15 = limit - cursor;
                    lab21: do {
                        // literal, line 438
                        if (!(eq_s_b(1, "\u00F6")))
                        {
                            break lab21;
                        }
                        break lab20;
                    } while (false);
                    cursor = limit - v_15;
                    // literal, line 438
                    if (!(eq_s_b(1, "\u00FC")))
                    {
                        return false;
                    }
                } while (false);
                cursor = limit - v_13;
                // <+, line 438
                {
                    int c = cursor;
                    insert(cursor, cursor, "\u00FC");
                    cursor = c;
                }
            } while (false);
            return true;
        }

