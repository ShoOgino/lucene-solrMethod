    /**
     * Returns a (possibly reused) TokenStream which tokenizes all the text 
     * in the provided Reader.
     *
     * @return  A TokenStream built from a RussianLetterTokenizer filtered with
     *                  RussianLowerCaseFilter, StopFilter, and RussianStemFilter
     */
    public TokenStream reusableTokenStream(String fieldName, Reader reader) 
      throws IOException {
    SavedStreams streams = (SavedStreams) getPreviousTokenStream();
    if (streams == null) {
      streams = new SavedStreams();
      streams.source = new RussianLetterTokenizer(reader, charset);
      streams.result = new RussianLowerCaseFilter(streams.source, charset);
      streams.result = new StopFilter(streams.result, stopSet);
      streams.result = new RussianStemFilter(streams.result, charset);
      setPreviousTokenStream(streams);
    } else {
      streams.source.reset(reader);
    }
    return streams.result;
  }

