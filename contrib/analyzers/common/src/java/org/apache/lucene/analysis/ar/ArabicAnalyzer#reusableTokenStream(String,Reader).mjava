  /**
   * Returns a (possibly reused) TokenStream which tokenizes all the text 
   * in the provided Reader.
   *
   * @return  A TokenStream built from an ArabicTokenizer filtered with
   *            StopFilter, LowerCaseFilter, ArabicNormalizationFilter and 
   *            ArabicStemFilter.
   */
  public TokenStream reusableTokenStream(String fieldName, Reader reader)
      throws IOException {
    SavedStreams streams = (SavedStreams) getPreviousTokenStream();
    if (streams == null) {
      streams = new SavedStreams();
      streams.source = new ArabicLetterTokenizer(reader);
      streams.result = new StopFilter(streams.source, stoptable);
      streams.result = new LowerCaseFilter(streams.result);
      streams.result = new ArabicNormalizationFilter(streams.result);
      streams.result = new ArabicStemFilter(streams.result);
      setPreviousTokenStream(streams);
    } else {
      streams.source.reset(reader);
    }
    return streams.result;
  }

