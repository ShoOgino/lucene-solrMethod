  /**
   * Returns a (possibly reused) TokenStream which tokenizes all the text 
   * in the provided Reader.
   * 
   * @return A TokenStream build from a ArabicLetterTokenizer filtered with
   *         LowerCaseFilter, ArabicNormalizationFilter,
   *         PersianNormalizationFilter and Persian Stop words
   */
  public TokenStream reusableTokenStream(String fieldName, Reader reader)
      throws IOException {
    SavedStreams streams = (SavedStreams) getPreviousTokenStream();
    if (streams == null) {
      streams = new SavedStreams();
      streams.source = new ArabicLetterTokenizer(reader);
      streams.result = new LowerCaseFilter(streams.source);
      streams.result = new ArabicNormalizationFilter(streams.result);
      /* additional persian-specific normalization */
      streams.result = new PersianNormalizationFilter(streams.result);
      /*
       * the order here is important: the stopword list is normalized with the
       * above!
       */
      streams.result = new StopFilter(streams.result, stoptable);
      setPreviousTokenStream(streams);
    } else {
      streams.source.reset(reader);
    }
    return streams.result;
  }

