  private void ngram(final Token token) {
    int termLength = token.termLength();
    char[] termBuffer = token.termBuffer();
    int gramSize = minGram;
    while (gramSize <= maxGram) {
      // if the remaining input is too short, we can't generate any n-grams
      if (gramSize > termLength) {
        return;
      }

      // if we have hit the end of our n-gram size range, quit
      if (gramSize > maxGram) {
        return;
      }

      // grab gramSize chars from front or back
      int start = side == Side.FRONT ? 0 : termLength - gramSize;
      int end = start + gramSize;
      Token tok = (Token) token.clone();
      tok.setStartOffset(start);
      tok.setEndOffset(end);
      tok.setTermBuffer(termBuffer, start, gramSize);
      ngrams.add(tok);
      gramSize++;
    }
  }

