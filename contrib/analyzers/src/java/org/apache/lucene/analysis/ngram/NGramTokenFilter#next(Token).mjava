  /** Returns the next token in the stream, or null at EOS. */
  public final Token next(final Token reusableToken) throws IOException {
    assert reusableToken != null;
    if (!ngrams.isEmpty()) {
        return (Token)ngrams.removeFirst();
    }

    Token token = null;

    while (ngrams.isEmpty() && (token = input.next()) != null) {
        ngram(token);
    }

    if (token == null) {
        return null;
    }

    if (!ngrams.isEmpty()) {
        return (Token)ngrams.removeFirst();
    } else {
        return null;
    }
  }

