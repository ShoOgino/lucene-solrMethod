  public Token next(final Token reusableToken) throws IOException {
    assert reusableToken != null;

    if (!prefixExhausted) {
      Token nextToken = prefix.next(reusableToken);
      if (nextToken == null) {
        prefixExhausted = true;
      } else {
        previousPrefixToken.reinit(nextToken);
        // Make it a deep copy
        Payload p = previousPrefixToken.getPayload();
        if (p != null) {
          previousPrefixToken.setPayload((Payload) p.clone());
        }
        return nextToken;
      }
    }

    Token nextToken = suffix.next(reusableToken);
    if (nextToken == null) {
      return null;
    }

    return updateSuffixToken(nextToken, previousPrefixToken);
  }

