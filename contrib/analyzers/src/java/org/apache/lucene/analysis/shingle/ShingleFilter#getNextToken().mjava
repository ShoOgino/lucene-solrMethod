  /**
   * Get the next token from the input stream and push it on the token buffer.
   * If we encounter a token with position increment > 1, we put filler tokens
   * on the token buffer.
   * <p/>
   * Returns null when the end of the input stream is reached.
   * @return the next token, or null if at end of input stream
   * @throws IOException if the input stream has a problem
   */
  private Token getNextToken() throws IOException {
    if (tokenBuf.isEmpty()) {
      Token lastToken = input.next();
      if (lastToken != null) {
        for (int i = 1; i < lastToken.getPositionIncrement(); i++) {
          tokenBuf.add(new Token(FILLER_TOKEN, lastToken.startOffset(),
                                 lastToken.startOffset()));
        }
        tokenBuf.add(lastToken);
        return getNextToken();
      } else {
        return null;
      }
    } else {
      return (Token)tokenBuf.remove(0);
    }
  }

