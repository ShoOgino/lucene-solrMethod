  /**
   * Return a {@link List} of all tokens in the map, ordered by startOffset.
   * 
   * @return {@link List} of all tokens in the map.
   */
  public List toTokenList() {
    List result = new ArrayList();
    int s = -1, count = 0, size = tokenListTable.size();
    List tokenList;

    while (count < size) {
      if (isStartExist(s)) {
        tokenList = (List) tokenListTable.get(new Integer(s));
        for (Iterator iter = tokenList.iterator(); iter.hasNext();) {
          SegToken st = (SegToken) iter.next();
          result.add(st);
        }
        count++;
      }
      s++;
    }
    return result;
  }

