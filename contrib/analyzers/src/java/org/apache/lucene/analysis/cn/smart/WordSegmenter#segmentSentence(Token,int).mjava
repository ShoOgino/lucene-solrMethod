  /**
   * 调用HHMMSegment程序将当前的sentence Token分词，返回分词结果，保存在Token List中
   * 
   * @param sentenceToken 句子的Token
   * @param shortPathCount HHMM算法分词所需要的优化前的最短路径个数。一般越大分词结果越精确，但是计算代价也较高。
   * @return 分词结果的Token List
   */
  public List segmentSentence(Token sentenceToken, int shortPathCount) {
    String sentence = sentenceToken.term();

    List segTokenList = hhmmSegmenter.process(sentence);

    List result = new ArrayList();

    // i从1到rawTokens.length-2，也就是说将“始##始”，“末##末”两个RawToken去掉
    for (int i = 1; i < segTokenList.size() - 1; i++) {
      result.add(convertSegToken((SegToken) segTokenList.get(i), sentence,
          sentenceToken.startOffset(), "word"));
    }
    return result;

  }

