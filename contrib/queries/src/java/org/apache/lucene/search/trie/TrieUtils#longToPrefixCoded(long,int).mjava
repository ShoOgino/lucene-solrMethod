  /**
   * Expert: Returns prefix coded bits after reducing the precision by <code>shift</code> bits.
   * This is method is used by {@link #trieCodeLong}.
   */
  public static String longToPrefixCoded(final long val, final int shift) {
    if (shift>63 || shift<0)
      throw new IllegalArgumentException("Illegal shift value, must be 0..63");
    int nChars = (63-shift)/7 + 1;
    final char[] arr = new char[nChars+1];
    arr[0] = (char)(SHIFT_START_LONG + shift);
    long sortableBits = val ^ 0x8000000000000000L;
    sortableBits >>>= shift;
    while (nChars>=1) {
      // Store 7 bits per character for good efficiency when UTF-8 encoding.
      // The whole number is right-justified so that lucene can prefix-encode
      // the terms more efficiently.
      arr[nChars--] = (char)(sortableBits & 0x7f);
      sortableBits >>>= 7;
    }
    return new String(arr);
  }

