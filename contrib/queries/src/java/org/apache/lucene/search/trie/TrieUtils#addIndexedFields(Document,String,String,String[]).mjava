  /**
   * Expert: Indexes the full precision value only in the main field (for sorting), and indexes all other
   * lower precision values in the <code>lowerPrecision</code> field.
   * If you do not specify the same field name for the main and lower precision one,
   * it is possible to sort the field using a <code>SortField</code> instance
   * returned by {@link #getLongSortField} or {@link #getIntSortField}.
   * <p>This method does not store the fields and saves no term frequency or norms
   * (which are normally not needed for trie fields). If you want to additionally store
   * the value, you can use the normal methods of {@link Document} to achive this, just specify
   * <code>Field.Store.YES</code>, <code>Field.Index.NO</code> and the same main field name.
   * <p>Examples:
   * <pre>
   *  addIndexedFields(doc, "mydouble", "mydoubletrie", trieCodeLong(doubleToSortableLong(1.414d), 4));
   *  addIndexedFields(doc, "mylong", "mylongtrie", trieCodeLong(123456L, 4));
   * </pre>
   * @see #addIndexedFields(Document,String,String[])
   **/
  public static void addIndexedFields(Document doc, String field, String lowerPrecisionField, String[] trieCoded) {
    addIndexedFields(doc, new String[]{field, lowerPrecisionField}, trieCoded);
  }

