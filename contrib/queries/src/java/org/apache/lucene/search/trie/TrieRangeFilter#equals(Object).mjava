  /**
   * Two instances are equal if they have the same trie-encoded range bounds, same field, and same variant.
   * If one of the instances uses an exclusive lower bound, it is equal to a range with inclusive bound,
   * when the inclusive lower bound is equal to the incremented exclusive lower bound of the other one.
   * The same applys for the upper bound in other direction.
   */
  //@Override
  public final boolean equals(final Object o) {
    if (o instanceof TrieRangeFilter) {
      TrieRangeFilter q=(TrieRangeFilter)o;
      // trieVariants are singleton per type, so no equals needed.
      return (field==q.field && min.equals(q.min) && max.equals(q.max) && trieVariant==q.trieVariant);
    } else return false;
  }

