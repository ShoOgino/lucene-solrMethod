  /**
   * Expert: A trie filter for matching trie coded values
   * using the given field names. If the array of field names is shorter than the
   * trieCoded one, all trieCoded values with higher index get the last field name.
   * <code>precisionStep</code> must me equal or a multiple of the <code>precisionStep</code>
   * used for indexing the values.
   * You can leave the bounds open, by supplying <code>null</code> for <code>min</code> and/or
   * <code>max</code>. Inclusive/exclusive bounds can also be supplied.
   * To query double values use the converter {@link TrieUtils#doubleToSortableLong}.
   * <p>This is the counterpart to {@link TrieUtils#addIndexedFields(Document,String[],String[])}.
   */
  public LongTrieRangeFilter(final String[] fields, final int precisionStep,
    Long min, Long max, final boolean minInclusive, final boolean maxInclusive
  ) {
    super(fields, precisionStep, min, max, minInclusive, maxInclusive);
  }

