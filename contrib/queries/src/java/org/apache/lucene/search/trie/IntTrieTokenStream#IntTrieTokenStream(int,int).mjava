  /**
   * Creates a token stream for indexing <code>value</code> with the given
   * <code>precisionStep</code>. As instance creating is a major cost,
   * consider using a {@link #IntTrieTokenStream(int)} instance once for
   * indexing a large number of documents and assign a value with
   * {@link #setValue} for each document.
   * To index float values use the converter {@link TrieUtils#doubleToSortableLong}.
   */
  public IntTrieTokenStream(final int value, final int precisionStep) {
    if (precisionStep<1 || precisionStep>32)
      throw new IllegalArgumentException("precisionStep may only be 1..32");
    this.value = value;
    this.precisionStep = precisionStep;
    termAtt = (TermAttribute) addAttribute(TermAttribute.class);
    typeAtt = (TypeAttribute) addAttribute(TypeAttribute.class);
    posIncrAtt = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);
    shiftAtt = (ShiftAttribute) addAttribute(ShiftAttribute.class);
  }

