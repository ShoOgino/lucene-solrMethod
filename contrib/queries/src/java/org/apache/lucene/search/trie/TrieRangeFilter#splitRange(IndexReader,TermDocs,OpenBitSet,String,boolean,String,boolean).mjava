  /** Splits range recursively (and returns number of terms) */
  private int splitRange(
    final IndexReader reader, final TermDocs termDocs, final OpenBitSet bits,
    final String min, final boolean lowerBoundOpen, final String max, final boolean upperBoundOpen
  ) throws IOException {
    int count=0;
    final int length=min.length();
    final String minShort=lowerBoundOpen ? min.substring(0,length-1) : trieVariant.incrementTrieCoded(min.substring(0,length-1));
    final String maxShort=upperBoundOpen ? max.substring(0,length-1) : trieVariant.decrementTrieCoded(max.substring(0,length-1));

    if (length==1 || minShort.compareTo(maxShort)>=0) {
      // we are in the lowest precision or the current precision is not existent
      count+=setBits(reader, termDocs, bits, min, max);
    } else {
      // Avoid too much seeking: first go deeper into lower precision
      // (in IndexReader's TermEnum these terms are earlier).
      // Do this only, if the current length is not trieVariant.TRIE_CODED_LENGTH (not full precision),
      // because terms from the highest prec come before all lower prec terms
      // (because the field name is ordered before the suffixed one).
      if (length!=trieVariant.TRIE_CODED_LENGTH) count+=splitRange(
        reader,termDocs,bits,
        minShort,lowerBoundOpen,
        maxShort,upperBoundOpen
      );
      // Avoid too much seeking: set bits for lower part of current (higher) precision.
      // These terms come later in IndexReader's TermEnum.
      if (!lowerBoundOpen) {
        count+=setBits(reader, termDocs, bits, min, trieVariant.decrementTrieCoded(minShort+trieVariant.TRIE_CODED_SYMBOL_MIN));
      }
      // Avoid too much seeking: set bits for upper part of current precision.
      // These terms come later in IndexReader's TermEnum.
      if (!upperBoundOpen) {
        count+=setBits(reader, termDocs, bits, trieVariant.incrementTrieCoded(maxShort+trieVariant.TRIE_CODED_SYMBOL_MAX), max);
      }
      // If the first step (see above) was not done (because length==trieVariant.TRIE_CODED_LENGTH) we do it now.
      if (length==trieVariant.TRIE_CODED_LENGTH) count+=splitRange(
        reader,termDocs,bits,
        minShort,lowerBoundOpen,
        maxShort,upperBoundOpen
      );
    }
    return count;
  }

