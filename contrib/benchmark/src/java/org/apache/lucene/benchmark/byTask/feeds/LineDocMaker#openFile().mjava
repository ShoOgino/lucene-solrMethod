  synchronized void openFile() {
    try {
      if (fileIn != null) {
        fileIn.close();
      }
      fileIS = new FileInputStream(fileName);
      if (bzipCompressionEnabled) {
        // According to BZip2CompressorInputStream's code, it reads the first 
        // two file header chars ('B' and 'Z'). We only need to wrap the
        // underlying stream with a BufferedInputStream, since the code uses
        // the read() method exclusively.
        fileIS = new BufferedInputStream(fileIS, READER_BUFFER_BYTES);
        fileIS = csFactory.createCompressorInputStream("bzip2", fileIS);
      }
      // Wrap the stream with a BufferedReader for several reasons:
      // 1. We need the readLine() method.
      // 2. Even if bzip.compression is enabled, and is wrapped with
      // BufferedInputStream, wrapping with a buffer can still improve
      // performance, since the BIS buffer will be used to read from the
      // compressed stream, while the BR buffer will be used to read from the
      // uncompressed stream.
      fileIn = new BufferedReader(new InputStreamReader(fileIS, "UTF-8"), READER_BUFFER_BYTES);
    } catch (IOException e) {
      throw new RuntimeException(e);
    } catch (CompressorException e) {
      throw new RuntimeException(e);
    }
  }

