  /* (non-Javadoc)
   * @see org.apache.lucene.search.Filter#getDocIdSet(org.apache.lucene.index.IndexReader)
   */
  @Override
  public DocIdSet getDocIdSet(IndexReader reader) throws CorruptIndexException, IOException {
    
    BitSet bits = new BitSet(reader.maxDoc());
    int chainSize = chain.length;
    int actionSize = actionType.length;
    int i = 0;
    
    /**
     * taken from ChainedFilter, first and on an empty bitset results in 0
     */
    if (actionType[i] == AND){
       try {
      	//System.out.println(chain[i] );
        bits = (BitSet) ((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet().clone();
      } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
      }
      ++i;
    }
    
    for( ; i < chainSize; i++) {
    	
      int action = (i < actionSize)? actionType[i]: DEFAULT;
      //System.out.println(chain[i] + ": "+  action);
      switch (action){
      
      case (SERIALAND):
        try {
            bits.and(((ISerialChainFilter) chain[i]).bits(reader, bits));
          } catch (CorruptIndexException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
          } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
          } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
          }
        break;
      case (SERIALOR):
        try {
            bits.or(((ISerialChainFilter) chain[i]).bits(reader,bits));
          } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
          }
        break;
      case (AND):
        bits.and(chain[i].bits(reader));
        break;
      case (OR):
        bits.or(((DocIdBitSet)chain[i].getDocIdSet(reader)).getBitSet());
        break;
      }
    }
    
//    System.out.println("++++++====================");
//    new Exception().printStackTrace();
    
    return new DocIdBitSet(bits);
  }

