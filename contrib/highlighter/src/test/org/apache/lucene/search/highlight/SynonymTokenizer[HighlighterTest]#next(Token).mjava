  public Token next(final Token reusableToken) throws IOException {
    assert reusableToken != null;
    if (currentRealToken == null) {
      Token nextRealToken = realStream.next(reusableToken);
      if (nextRealToken == null) {
        return null;
      }
      String expansions = (String) synonyms.get(nextRealToken.term());
      if (expansions == null) {
        return nextRealToken;
      }
      st = new StringTokenizer(expansions, ",");
      if (st.hasMoreTokens()) {
        currentRealToken = (Token) nextRealToken.clone();
      }
      return currentRealToken;
    } else {
      reusableToken.reinit(st.nextToken(),
                           currentRealToken.startOffset(),
                           currentRealToken.endOffset());
      reusableToken.setPositionIncrement(0);
      if (!st.hasMoreTokens()) {
        currentRealToken = null;
        st = null;
      }
      return reusableToken;
    }
  }

