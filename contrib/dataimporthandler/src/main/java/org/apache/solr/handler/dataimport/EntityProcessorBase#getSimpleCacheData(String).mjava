  /**
   * If where clause is not present the cache is a Map of query vs List of Rows.
   * Only used by cache implementations.
   *
   * @param query string for which cached row is to be returned
   * @return the cached row corresponding to the given query
   */
  protected Map<String, Object> getSimpleCacheData(String query) {
    List<Map<String, Object>> rows = simpleCache.get(query);
    if (rows != null) {
      dataSourceRowCache = new ArrayList<Map<String, Object>>(rows);
      return getFromRowCacheTransformed();
    } else {
      rows = getAllNonCachedRows();
      if (rows.isEmpty()) {
        return null;
      } else {
        dataSourceRowCache = new ArrayList<Map<String, Object>>(rows);
        simpleCache.put(query, rows);
        return getFromRowCacheTransformed();
      }
    }
  }

