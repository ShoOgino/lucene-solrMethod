    /**Build the node structure from the xpath
     * @param paths the xpaths split by '/'
     * @param fieldName name of the field
     * @param multiValued . is multiValued or not
     * @param record is this xpath a record or a field
     * @param flags extra flags
     */
    private void build(List<String> paths, String fieldName,
                      boolean multiValued, boolean record, int flags) {
      String name = paths.remove(0);
      if (paths.isEmpty() && name.startsWith("@")) {
        if (attributes == null) {
          attributes = new ArrayList<Node>();
        }
        name = name.substring(1);
        attributes.add(new Node(name, fieldName, multiValued));

      } else {
        if (childNodes == null)
          childNodes = new ArrayList<Node>();
        Node n = getOrAddChildNode(name);
        if (paths.isEmpty()) {
          if (record) {
            n.isRecord = true;
            n.forEachPath = fieldName;
          } else {
            n.hasText = true;
            n.fieldName = fieldName;
            n.multiValued = multiValued;
            n.flatten = flags == FLATTEN;
          }
        } else {
          n.build(paths, fieldName, multiValued, record, flags);
        }
      }
    }

