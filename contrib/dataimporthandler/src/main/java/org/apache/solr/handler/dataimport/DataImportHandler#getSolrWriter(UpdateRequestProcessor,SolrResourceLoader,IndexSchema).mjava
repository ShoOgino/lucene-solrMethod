  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,
                                   final SolrResourceLoader loader, final IndexSchema schema) {

    return new SolrWriter(processor, loader.getConfigDir()) {

      @Override
      public boolean upload(SolrDoc d) {
        try {
          SolrInputDocument document = ((SolrDocumentWrapper) d).doc;
          if (requestParams.debug) {
            if (debugDocuments == null)
              debugDocuments = new ArrayList<SolrInputDocument>();
            debugDocuments.add(document);
            if (debugDocuments.size() >= requestParams.rows) {
              // Abort this operation now
              importer.getDocBuilder().abort();
            }
          }

          return super.upload(document);
        } catch (RuntimeException e) {
          LOG.log(Level.SEVERE, "Exception while adding: " + d, e);
          return false;
        }
      }

      public void log(int event, String name, Object row) {
        if (debugLogger == null) {
          debugLogger = new DebugLogger();
        }
        debugLogger.log(event, name, row);
      }


      public Class loadClass(String name) throws ClassNotFoundException {
        return loader.findClass(name);
      }

      public SolrDoc getSolrDocInstance() {
        return new SolrDocumentWrapper();
      }
    };
  }

