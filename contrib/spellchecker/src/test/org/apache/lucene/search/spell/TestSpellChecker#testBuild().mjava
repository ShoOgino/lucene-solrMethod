  public void testBuild() {
    try {
      IndexReader r = IndexReader.open(userindex);

      spellChecker.clearIndex();

      addwords(r, "field1");
      int num_field1 = this.numdoc();

      addwords(r, "field2");
      int num_field2 = this.numdoc();

      assertEquals(num_field2, num_field1 + 1);

      // test small word
      String[] similar = spellChecker.suggestSimilar("fvie", 2);
      assertEquals(similar[0], "five");

      similar = spellChecker.suggestSimilar("fiv", 2);
      assertEquals(similar[0], "five");

      similar = spellChecker.suggestSimilar("ive", 2);
      assertEquals(similar[0], "five");

      similar = spellChecker.suggestSimilar("fives", 2);
      assertEquals(similar[0], "five");

      similar = spellChecker.suggestSimilar("fie", 2);
      assertEquals(similar[0], "five");

      similar = spellChecker.suggestSimilar("fi", 2);
      assertEquals(0, similar.length);

      // test restraint to a field
      similar = spellChecker.suggestSimilar("tousand", 10, r, "field1", false);
      assertEquals(0, similar.length); // there isn't the term thousand in the field field1

      similar = spellChecker.suggestSimilar("tousand", 10, r, "field2", false);
      assertEquals(1, similar.length); // there is the term thousand in the field field2
    } catch (IOException e) {
      e.printStackTrace();
      fail();
    }

  }

