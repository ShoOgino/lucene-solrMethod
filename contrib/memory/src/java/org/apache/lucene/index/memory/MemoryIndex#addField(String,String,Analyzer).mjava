	/**
	 * Convenience method; Tokenizes the given field text and adds the resulting
	 * terms to the index; Equivalent to adding a tokenized, indexed,
	 * termVectorStored, unstored, non-keyword Lucene
	 * {@link org.apache.lucene.document.Field}.
	 * 
	 * @param fieldName
	 *            a name to be associated with the text
	 * @param text
	 *            the text to tokenize and index.
	 * @param analyzer
	 *            the analyzer to use for tokenization
	 */
	public void addField(String fieldName, String text, Analyzer analyzer) {
		if (fieldName == null)
			throw new IllegalArgumentException("fieldName must not be null");
		if (text == null)
			throw new IllegalArgumentException("text must not be null");
		if (analyzer == null)
			throw new IllegalArgumentException("analyzer must not be null");
		
		TokenStream stream;
		if (analyzer instanceof PatternAnalyzer) {
			stream = ((PatternAnalyzer) analyzer).tokenStream(fieldName, text);
		} else {
			stream = analyzer.tokenStream(fieldName, new StringReader(text));
		}
		addField(fieldName, stream);
	}

