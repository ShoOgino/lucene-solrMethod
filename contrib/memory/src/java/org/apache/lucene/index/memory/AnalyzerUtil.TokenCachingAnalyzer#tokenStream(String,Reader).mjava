    public TokenStream tokenStream(String fieldName, Reader reader) {
      final ArrayList tokens = (ArrayList) cache.get(fieldName);
      if (tokens == null) { // not yet cached
        final ArrayList tokens2 = new ArrayList();
        cache.put(fieldName, tokens2);
        return new TokenFilter(child.tokenStream(fieldName, reader)) {

          public Token next() throws IOException {
            Token token = input.next(); // from filter super class
            if (token != null) tokens2.add(token);
            return token;
          }
        };
      } else { // already cached
        return new TokenStream() {

          private Iterator iter = tokens.iterator();

          public Token next() {
            if (!iter.hasNext()) return null;
            return (Token) iter.next();
          }
        };
      }
    }

