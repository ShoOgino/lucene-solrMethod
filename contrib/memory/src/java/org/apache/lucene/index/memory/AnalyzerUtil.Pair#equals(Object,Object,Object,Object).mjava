    /** Compares two 'pairs' <code>x</code> and <code>y</code> for equality.
     * 
     * In other words determines <code>xA.equals(yA)</code> and <code>xB.equals(yB)</code>, 
     * taking care of <code>null</code> values.
     * This is a static method that avoids the inefficiency of temporary {@link Pair} objects.
     * 
     * @return <code>true</code> if the pair <code>x</code> and the pair <code>y</code> are equal; <code>false</code> otherwise.
     */
    public static boolean equals(Object xA, Object yA, Object xB, Object yB) {
      // compare A
      if (xA != yA) {
        if (xA == null && yA != null)
          return false;
        if (xA != null && yA == null)
          return false;
        if (!xA.equals(yA))
          return false;
      }

      // compare B
      if (xB != yB) {
        if (xB == null && yB != null)
          return false;
        if (xB != null && yB == null)
          return false;
        if (!xB.equals(yB))
          return false;
      }

      return true;
    }

