  /** Returns the next token in the stream, or null at EOS. */
  public Token next(final Token reusableToken) throws IOException {
    assert reusableToken != null;
    while (todo > 0 && index < stack.length) { // pop from stack
      Token nextToken = createToken(stack[index++], current, reusableToken);
      if (nextToken != null) {
        todo--;
        return nextToken;
      }
    }
    
    Token nextToken = input.next(reusableToken);
    if (nextToken == null) return null; // EOS; iterator exhausted
    
    stack = synonyms.getSynonyms(nextToken.term()); // push onto stack
    if (stack.length > maxSynonyms) randomize(stack);
    index = 0;
    current = (Token) nextToken.clone();
    todo = maxSynonyms;
    return nextToken;
  }

