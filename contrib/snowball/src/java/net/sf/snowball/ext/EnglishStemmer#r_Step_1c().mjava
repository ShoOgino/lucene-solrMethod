        private boolean r_Step_1c() {
            int v_1;
            int v_2;
            // (, line 82
            // [, line 83
            ket = cursor;
            // or, line 83
            lab0: do {
                v_1 = limit - cursor;
                lab1: do {
                    // literal, line 83
                    if (!(eq_s_b(1, "y")))
                    {
                        break lab1;
                    }
                    break lab0;
                } while (false);
                cursor = limit - v_1;
                // literal, line 83
                if (!(eq_s_b(1, "Y")))
                {
                    return false;
                }
            } while (false);
            // ], line 83
            bra = cursor;
            if (!(out_grouping_b(g_v, 97, 121)))
            {
                return false;
            }
            // not, line 84
            {
                v_2 = limit - cursor;
                lab2: do {
                    // atlimit, line 84
                    if (cursor > limit_backward)
                    {
                        break lab2;
                    }
                    return false;
                } while (false);
                cursor = limit - v_2;
            }
            // <-, line 85
            slice_from("i");
            return true;
        }

