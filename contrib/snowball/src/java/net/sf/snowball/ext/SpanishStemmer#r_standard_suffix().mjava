        private boolean r_standard_suffix() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            // (, line 86
            // [, line 87
            ket = cursor;
            // substring, line 87
            among_var = find_among_b(a_6, 42);
            if (among_var == 0)
            {
                return false;
            }
            // ], line 87
            bra = cursor;
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 98
                    // call R2, line 99
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 99
                    slice_del();
                    break;
                case 2:
                    // (, line 103
                    // call R2, line 104
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 104
                    slice_del();
                    // try, line 105
                    v_1 = limit - cursor;
                    lab0: do {
                        // (, line 105
                        // [, line 105
                        ket = cursor;
                        // literal, line 105
                        if (!(eq_s_b(2, "ic")))
                        {
                            cursor = limit - v_1;
                            break lab0;
                        }
                        // ], line 105
                        bra = cursor;
                        // call R2, line 105
                        if (!r_R2())
                        {
                            cursor = limit - v_1;
                            break lab0;
                        }
                        // delete, line 105
                        slice_del();
                    } while (false);
                    break;
                case 3:
                    // (, line 109
                    // call R2, line 110
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 110
                    slice_from("log");
                    break;
                case 4:
                    // (, line 113
                    // call R2, line 114
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 114
                    slice_from("u");
                    break;
                case 5:
                    // (, line 117
                    // call R2, line 118
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 118
                    slice_from("ente");
                    break;
                case 6:
                    // (, line 121
                    // call R1, line 122
                    if (!r_R1())
                    {
                        return false;
                    }
                    // delete, line 122
                    slice_del();
                    // try, line 123
                    v_2 = limit - cursor;
                    lab1: do {
                        // (, line 123
                        // [, line 124
                        ket = cursor;
                        // substring, line 124
                        among_var = find_among_b(a_3, 4);
                        if (among_var == 0)
                        {
                            cursor = limit - v_2;
                            break lab1;
                        }
                        // ], line 124
                        bra = cursor;
                        // call R2, line 124
                        if (!r_R2())
                        {
                            cursor = limit - v_2;
                            break lab1;
                        }
                        // delete, line 124
                        slice_del();
                        switch(among_var) {
                            case 0:
                                cursor = limit - v_2;
                                break lab1;
                            case 1:
                                // (, line 125
                                // [, line 125
                                ket = cursor;
                                // literal, line 125
                                if (!(eq_s_b(2, "at")))
                                {
                                    cursor = limit - v_2;
                                    break lab1;
                                }
                                // ], line 125
                                bra = cursor;
                                // call R2, line 125
                                if (!r_R2())
                                {
                                    cursor = limit - v_2;
                                    break lab1;
                                }
                                // delete, line 125
                                slice_del();
                                break;
                        }
                    } while (false);
                    break;
                case 7:
                    // (, line 133
                    // call R2, line 134
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 134
                    slice_del();
                    // try, line 135
                    v_3 = limit - cursor;
                    lab2: do {
                        // (, line 135
                        // [, line 136
                        ket = cursor;
                        // substring, line 136
                        among_var = find_among_b(a_4, 2);
                        if (among_var == 0)
                        {
                            cursor = limit - v_3;
                            break lab2;
                        }
                        // ], line 136
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                cursor = limit - v_3;
                                break lab2;
                            case 1:
                                // (, line 138
                                // call R2, line 138
                                if (!r_R2())
                                {
                                    cursor = limit - v_3;
                                    break lab2;
                                }
                                // delete, line 138
                                slice_del();
                                break;
                        }
                    } while (false);
                    break;
                case 8:
                    // (, line 144
                    // call R2, line 145
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 145
                    slice_del();
                    // try, line 146
                    v_4 = limit - cursor;
                    lab3: do {
                        // (, line 146
                        // [, line 147
                        ket = cursor;
                        // substring, line 147
                        among_var = find_among_b(a_5, 3);
                        if (among_var == 0)
                        {
                            cursor = limit - v_4;
                            break lab3;
                        }
                        // ], line 147
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                cursor = limit - v_4;
                                break lab3;
                            case 1:
                                // (, line 150
                                // call R2, line 150
                                if (!r_R2())
                                {
                                    cursor = limit - v_4;
                                    break lab3;
                                }
                                // delete, line 150
                                slice_del();
                                break;
                        }
                    } while (false);
                    break;
                case 9:
                    // (, line 156
                    // call R2, line 157
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 157
                    slice_del();
                    // try, line 158
                    v_5 = limit - cursor;
                    lab4: do {
                        // (, line 158
                        // [, line 159
                        ket = cursor;
                        // literal, line 159
                        if (!(eq_s_b(2, "at")))
                        {
                            cursor = limit - v_5;
                            break lab4;
                        }
                        // ], line 159
                        bra = cursor;
                        // call R2, line 159
                        if (!r_R2())
                        {
                            cursor = limit - v_5;
                            break lab4;
                        }
                        // delete, line 159
                        slice_del();
                    } while (false);
                    break;
            }
            return true;
        }

