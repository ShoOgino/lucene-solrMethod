        private boolean r_verb_suffix() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            // setlimit, line 165
            v_1 = limit - cursor;
            // tomark, line 165
            if (cursor < I_pV)
            {
                return false;
            }
            cursor = I_pV;
            v_2 = limit_backward;
            limit_backward = cursor;
            cursor = limit - v_1;
            // (, line 165
            // [, line 166
            ket = cursor;
            // substring, line 166
            among_var = find_among_b(a_5, 38);
            if (among_var == 0)
            {
                limit_backward = v_2;
                return false;
            }
            // ], line 166
            bra = cursor;
            switch(among_var) {
                case 0:
                    limit_backward = v_2;
                    return false;
                case 1:
                    // (, line 168
                    // call R2, line 168
                    if (!r_R2())
                    {
                        limit_backward = v_2;
                        return false;
                    }
                    // delete, line 168
                    slice_del();
                    break;
                case 2:
                    // (, line 176
                    // delete, line 176
                    slice_del();
                    break;
                case 3:
                    // (, line 181
                    // delete, line 181
                    slice_del();
                    // try, line 182
                    v_3 = limit - cursor;
                    lab0: do {
                        // (, line 182
                        // [, line 182
                        ket = cursor;
                        // literal, line 182
                        if (!(eq_s_b(1, "e")))
                        {
                            cursor = limit - v_3;
                            break lab0;
                        }
                        // ], line 182
                        bra = cursor;
                        // delete, line 182
                        slice_del();
                    } while (false);
                    break;
            }
            limit_backward = v_2;
            return true;
        }

