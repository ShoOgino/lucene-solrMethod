        private boolean r_Step_2() {
            int among_var;
            // (, line 57
            // [, line 58
            ket = cursor;
            // substring, line 58
            among_var = find_among_b(a_3, 20);
            if (among_var == 0)
            {
                return false;
            }
            // ], line 58
            bra = cursor;
            // call R1, line 58
            if (!r_R1())
            {
                return false;
            }
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 59
                    // <-, line 59
                    slice_from("tion");
                    break;
                case 2:
                    // (, line 60
                    // <-, line 60
                    slice_from("ence");
                    break;
                case 3:
                    // (, line 61
                    // <-, line 61
                    slice_from("ance");
                    break;
                case 4:
                    // (, line 62
                    // <-, line 62
                    slice_from("able");
                    break;
                case 5:
                    // (, line 63
                    // <-, line 63
                    slice_from("ent");
                    break;
                case 6:
                    // (, line 64
                    // <-, line 64
                    slice_from("e");
                    break;
                case 7:
                    // (, line 66
                    // <-, line 66
                    slice_from("ize");
                    break;
                case 8:
                    // (, line 68
                    // <-, line 68
                    slice_from("ate");
                    break;
                case 9:
                    // (, line 69
                    // <-, line 69
                    slice_from("al");
                    break;
                case 10:
                    // (, line 71
                    // <-, line 71
                    slice_from("al");
                    break;
                case 11:
                    // (, line 72
                    // <-, line 72
                    slice_from("ful");
                    break;
                case 12:
                    // (, line 74
                    // <-, line 74
                    slice_from("ous");
                    break;
                case 13:
                    // (, line 76
                    // <-, line 76
                    slice_from("ive");
                    break;
                case 14:
                    // (, line 77
                    // <-, line 77
                    slice_from("ble");
                    break;
            }
            return true;
        }

