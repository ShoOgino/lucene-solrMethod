        private boolean r_standard_suffix() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            // (, line 73
            // do, line 74
            v_1 = limit - cursor;
            lab0: do {
                // (, line 74
                // [, line 75
                ket = cursor;
                // substring, line 75
                among_var = find_among_b(a_1, 7);
                if (among_var == 0)
                {
                    break lab0;
                }
                // ], line 75
                bra = cursor;
                // call R1, line 75
                if (!r_R1())
                {
                    break lab0;
                }
                switch(among_var) {
                    case 0:
                        break lab0;
                    case 1:
                        // (, line 77
                        // delete, line 77
                        slice_del();
                        break;
                    case 2:
                        // (, line 80
                        if (!(in_grouping_b(g_s_ending, 98, 116)))
                        {
                            break lab0;
                        }
                        // delete, line 80
                        slice_del();
                        break;
                }
            } while (false);
            cursor = limit - v_1;
            // do, line 84
            v_2 = limit - cursor;
            lab1: do {
                // (, line 84
                // [, line 85
                ket = cursor;
                // substring, line 85
                among_var = find_among_b(a_2, 4);
                if (among_var == 0)
                {
                    break lab1;
                }
                // ], line 85
                bra = cursor;
                // call R1, line 85
                if (!r_R1())
                {
                    break lab1;
                }
                switch(among_var) {
                    case 0:
                        break lab1;
                    case 1:
                        // (, line 87
                        // delete, line 87
                        slice_del();
                        break;
                    case 2:
                        // (, line 90
                        if (!(in_grouping_b(g_st_ending, 98, 116)))
                        {
                            break lab1;
                        }
                        // hop, line 90
                        {
                            int c = cursor - 3;
                            if (limit_backward > c || c > limit)
                            {
                                break lab1;
                            }
                            cursor = c;
                        }
                        // delete, line 90
                        slice_del();
                        break;
                }
            } while (false);
            cursor = limit - v_2;
            // do, line 94
            v_3 = limit - cursor;
            lab2: do {
                // (, line 94
                // [, line 95
                ket = cursor;
                // substring, line 95
                among_var = find_among_b(a_4, 8);
                if (among_var == 0)
                {
                    break lab2;
                }
                // ], line 95
                bra = cursor;
                // call R2, line 95
                if (!r_R2())
                {
                    break lab2;
                }
                switch(among_var) {
                    case 0:
                        break lab2;
                    case 1:
                        // (, line 97
                        // delete, line 97
                        slice_del();
                        // try, line 98
                        v_4 = limit - cursor;
                        lab3: do {
                            // (, line 98
                            // [, line 98
                            ket = cursor;
                            // literal, line 98
                            if (!(eq_s_b(2, "ig")))
                            {
                                cursor = limit - v_4;
                                break lab3;
                            }
                            // ], line 98
                            bra = cursor;
                            // not, line 98
                            {
                                v_5 = limit - cursor;
                                lab4: do {
                                    // literal, line 98
                                    if (!(eq_s_b(1, "e")))
                                    {
                                        break lab4;
                                    }
                                    cursor = limit - v_4;
                                    break lab3;
                                } while (false);
                                cursor = limit - v_5;
                            }
                            // call R2, line 98
                            if (!r_R2())
                            {
                                cursor = limit - v_4;
                                break lab3;
                            }
                            // delete, line 98
                            slice_del();
                        } while (false);
                        break;
                    case 2:
                        // (, line 101
                        // not, line 101
                        {
                            v_6 = limit - cursor;
                            lab5: do {
                                // literal, line 101
                                if (!(eq_s_b(1, "e")))
                                {
                                    break lab5;
                                }
                                break lab2;
                            } while (false);
                            cursor = limit - v_6;
                        }
                        // delete, line 101
                        slice_del();
                        break;
                    case 3:
                        // (, line 104
                        // delete, line 104
                        slice_del();
                        // try, line 105
                        v_7 = limit - cursor;
                        lab6: do {
                            // (, line 105
                            // [, line 106
                            ket = cursor;
                            // or, line 106
                            lab7: do {
                                v_8 = limit - cursor;
                                lab8: do {
                                    // literal, line 106
                                    if (!(eq_s_b(2, "er")))
                                    {
                                        break lab8;
                                    }
                                    break lab7;
                                } while (false);
                                cursor = limit - v_8;
                                // literal, line 106
                                if (!(eq_s_b(2, "en")))
                                {
                                    cursor = limit - v_7;
                                    break lab6;
                                }
                            } while (false);
                            // ], line 106
                            bra = cursor;
                            // call R1, line 106
                            if (!r_R1())
                            {
                                cursor = limit - v_7;
                                break lab6;
                            }
                            // delete, line 106
                            slice_del();
                        } while (false);
                        break;
                    case 4:
                        // (, line 110
                        // delete, line 110
                        slice_del();
                        // try, line 111
                        v_9 = limit - cursor;
                        lab9: do {
                            // (, line 111
                            // [, line 112
                            ket = cursor;
                            // substring, line 112
                            among_var = find_among_b(a_3, 2);
                            if (among_var == 0)
                            {
                                cursor = limit - v_9;
                                break lab9;
                            }
                            // ], line 112
                            bra = cursor;
                            // call R2, line 112
                            if (!r_R2())
                            {
                                cursor = limit - v_9;
                                break lab9;
                            }
                            switch(among_var) {
                                case 0:
                                    cursor = limit - v_9;
                                    break lab9;
                                case 1:
                                    // (, line 114
                                    // delete, line 114
                                    slice_del();
                                    break;
                            }
                        } while (false);
                        break;
                }
            } while (false);
            cursor = limit - v_3;
            return true;
        }

