        private boolean r_respell() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            // (, line 159
            // [, line 160
            ket = cursor;
            // substring, line 160
            among_var = find_among_b(a_3, 34);
            if (among_var == 0)
            {
                return false;
            }
            // ], line 160
            bra = cursor;
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 161
                    // <-, line 161
                    slice_from("ief");
                    break;
                case 2:
                    // (, line 162
                    // <-, line 162
                    slice_from("uc");
                    break;
                case 3:
                    // (, line 163
                    // <-, line 163
                    slice_from("um");
                    break;
                case 4:
                    // (, line 164
                    // <-, line 164
                    slice_from("rb");
                    break;
                case 5:
                    // (, line 165
                    // <-, line 165
                    slice_from("ur");
                    break;
                case 6:
                    // (, line 166
                    // <-, line 166
                    slice_from("ister");
                    break;
                case 7:
                    // (, line 167
                    // <-, line 167
                    slice_from("meter");
                    break;
                case 8:
                    // (, line 168
                    // <-, line 168
                    slice_from("olut");
                    break;
                case 9:
                    // (, line 169
                    // not, line 169
                    {
                        v_1 = limit - cursor;
                        lab0: do {
                            // literal, line 169
                            if (!(eq_s_b(1, "a")))
                            {
                                break lab0;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_1;
                    }
                    // not, line 169
                    {
                        v_2 = limit - cursor;
                        lab1: do {
                            // literal, line 169
                            if (!(eq_s_b(1, "i")))
                            {
                                break lab1;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_2;
                    }
                    // not, line 169
                    {
                        v_3 = limit - cursor;
                        lab2: do {
                            // literal, line 169
                            if (!(eq_s_b(1, "o")))
                            {
                                break lab2;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_3;
                    }
                    // <-, line 169
                    slice_from("l");
                    break;
                case 10:
                    // (, line 170
                    // <-, line 170
                    slice_from("bic");
                    break;
                case 11:
                    // (, line 171
                    // <-, line 171
                    slice_from("dic");
                    break;
                case 12:
                    // (, line 172
                    // <-, line 172
                    slice_from("pic");
                    break;
                case 13:
                    // (, line 173
                    // <-, line 173
                    slice_from("tic");
                    break;
                case 14:
                    // (, line 174
                    // <-, line 174
                    slice_from("ac");
                    break;
                case 15:
                    // (, line 175
                    // <-, line 175
                    slice_from("ec");
                    break;
                case 16:
                    // (, line 176
                    // <-, line 176
                    slice_from("ic");
                    break;
                case 17:
                    // (, line 177
                    // <-, line 177
                    slice_from("luc");
                    break;
                case 18:
                    // (, line 178
                    // <-, line 178
                    slice_from("uas");
                    break;
                case 19:
                    // (, line 179
                    // <-, line 179
                    slice_from("vas");
                    break;
                case 20:
                    // (, line 180
                    // <-, line 180
                    slice_from("cis");
                    break;
                case 21:
                    // (, line 181
                    // <-, line 181
                    slice_from("lis");
                    break;
                case 22:
                    // (, line 182
                    // <-, line 182
                    slice_from("eris");
                    break;
                case 23:
                    // (, line 183
                    // <-, line 183
                    slice_from("pans");
                    break;
                case 24:
                    // (, line 184
                    // not, line 184
                    {
                        v_4 = limit - cursor;
                        lab3: do {
                            // literal, line 184
                            if (!(eq_s_b(1, "s")))
                            {
                                break lab3;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_4;
                    }
                    // <-, line 184
                    slice_from("ens");
                    break;
                case 25:
                    // (, line 185
                    // <-, line 185
                    slice_from("ons");
                    break;
                case 26:
                    // (, line 186
                    // <-, line 186
                    slice_from("lus");
                    break;
                case 27:
                    // (, line 187
                    // <-, line 187
                    slice_from("rus");
                    break;
                case 28:
                    // (, line 188
                    // not, line 188
                    {
                        v_5 = limit - cursor;
                        lab4: do {
                            // literal, line 188
                            if (!(eq_s_b(1, "p")))
                            {
                                break lab4;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_5;
                    }
                    // not, line 188
                    {
                        v_6 = limit - cursor;
                        lab5: do {
                            // literal, line 188
                            if (!(eq_s_b(1, "t")))
                            {
                                break lab5;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_6;
                    }
                    // <-, line 188
                    slice_from("hes");
                    break;
                case 29:
                    // (, line 189
                    // <-, line 189
                    slice_from("mis");
                    break;
                case 30:
                    // (, line 190
                    // not, line 190
                    {
                        v_7 = limit - cursor;
                        lab6: do {
                            // literal, line 190
                            if (!(eq_s_b(1, "m")))
                            {
                                break lab6;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_7;
                    }
                    // <-, line 190
                    slice_from("ens");
                    break;
                case 31:
                    // (, line 192
                    // <-, line 192
                    slice_from("ers");
                    break;
                case 32:
                    // (, line 193
                    // not, line 193
                    {
                        v_8 = limit - cursor;
                        lab7: do {
                            // literal, line 193
                            if (!(eq_s_b(1, "n")))
                            {
                                break lab7;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_8;
                    }
                    // <-, line 193
                    slice_from("es");
                    break;
                case 33:
                    // (, line 194
                    // <-, line 194
                    slice_from("ys");
                    break;
                case 34:
                    // (, line 195
                    // <-, line 195
                    slice_from("ys");
                    break;
            }
            return true;
        }

