        private boolean r_owned() {
            int among_var;
            // (, line 153
            // [, line 154
            ket = cursor;
            // substring, line 154
            among_var = find_among_b(a_9, 12);
            if (among_var == 0)
            {
                return false;
            }
            // ], line 154
            bra = cursor;
            // call R1, line 154
            if (!r_R1())
            {
                return false;
            }
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 155
                    // delete, line 155
                    slice_del();
                    break;
                case 2:
                    // (, line 156
                    // <-, line 156
                    slice_from("e");
                    break;
                case 3:
                    // (, line 157
                    // <-, line 157
                    slice_from("a");
                    break;
                case 4:
                    // (, line 158
                    // delete, line 158
                    slice_del();
                    break;
                case 5:
                    // (, line 159
                    // <-, line 159
                    slice_from("e");
                    break;
                case 6:
                    // (, line 160
                    // <-, line 160
                    slice_from("a");
                    break;
                case 7:
                    // (, line 161
                    // delete, line 161
                    slice_del();
                    break;
                case 8:
                    // (, line 162
                    // <-, line 162
                    slice_from("e");
                    break;
                case 9:
                    // (, line 163
                    // delete, line 163
                    slice_del();
                    break;
            }
            return true;
        }

