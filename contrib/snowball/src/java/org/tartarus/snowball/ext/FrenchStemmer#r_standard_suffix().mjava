        private boolean r_standard_suffix() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            int v_10;
            int v_11;
            // (, line 91
            // [, line 92
            ket = cursor;
            // substring, line 92
            among_var = find_among_b(a_4, 43);
            if (among_var == 0)
            {
                return false;
            }
            // ], line 92
            bra = cursor;
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 96
                    // call R2, line 96
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 96
                    slice_del();
                    break;
                case 2:
                    // (, line 99
                    // call R2, line 99
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 99
                    slice_del();
                    // try, line 100
                    v_1 = limit - cursor;
                    lab0: do {
                        // (, line 100
                        // [, line 100
                        ket = cursor;
                        // literal, line 100
                        if (!(eq_s_b(2, "ic")))
                        {
                            cursor = limit - v_1;
                            break lab0;
                        }
                        // ], line 100
                        bra = cursor;
                        // or, line 100
                        lab1: do {
                            v_2 = limit - cursor;
                            lab2: do {
                                // (, line 100
                                // call R2, line 100
                                if (!r_R2())
                                {
                                    break lab2;
                                }
                                // delete, line 100
                                slice_del();
                                break lab1;
                            } while (false);
                            cursor = limit - v_2;
                            // <-, line 100
                            slice_from("iqU");
                        } while (false);
                    } while (false);
                    break;
                case 3:
                    // (, line 104
                    // call R2, line 104
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 104
                    slice_from("log");
                    break;
                case 4:
                    // (, line 107
                    // call R2, line 107
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 107
                    slice_from("u");
                    break;
                case 5:
                    // (, line 110
                    // call R2, line 110
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 110
                    slice_from("ent");
                    break;
                case 6:
                    // (, line 113
                    // call RV, line 114
                    if (!r_RV())
                    {
                        return false;
                    }
                    // delete, line 114
                    slice_del();
                    // try, line 115
                    v_3 = limit - cursor;
                    lab3: do {
                        // (, line 115
                        // [, line 116
                        ket = cursor;
                        // substring, line 116
                        among_var = find_among_b(a_2, 6);
                        if (among_var == 0)
                        {
                            cursor = limit - v_3;
                            break lab3;
                        }
                        // ], line 116
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                cursor = limit - v_3;
                                break lab3;
                            case 1:
                                // (, line 117
                                // call R2, line 117
                                if (!r_R2())
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // delete, line 117
                                slice_del();
                                // [, line 117
                                ket = cursor;
                                // literal, line 117
                                if (!(eq_s_b(2, "at")))
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // ], line 117
                                bra = cursor;
                                // call R2, line 117
                                if (!r_R2())
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // delete, line 117
                                slice_del();
                                break;
                            case 2:
                                // (, line 118
                                // or, line 118
                                lab4: do {
                                    v_4 = limit - cursor;
                                    lab5: do {
                                        // (, line 118
                                        // call R2, line 118
                                        if (!r_R2())
                                        {
                                            break lab5;
                                        }
                                        // delete, line 118
                                        slice_del();
                                        break lab4;
                                    } while (false);
                                    cursor = limit - v_4;
                                    // (, line 118
                                    // call R1, line 118
                                    if (!r_R1())
                                    {
                                        cursor = limit - v_3;
                                        break lab3;
                                    }
                                    // <-, line 118
                                    slice_from("eux");
                                } while (false);
                                break;
                            case 3:
                                // (, line 120
                                // call R2, line 120
                                if (!r_R2())
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // delete, line 120
                                slice_del();
                                break;
                            case 4:
                                // (, line 122
                                // call RV, line 122
                                if (!r_RV())
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // <-, line 122
                                slice_from("i");
                                break;
                        }
                    } while (false);
                    break;
                case 7:
                    // (, line 128
                    // call R2, line 129
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 129
                    slice_del();
                    // try, line 130
                    v_5 = limit - cursor;
                    lab6: do {
                        // (, line 130
                        // [, line 131
                        ket = cursor;
                        // substring, line 131
                        among_var = find_among_b(a_3, 3);
                        if (among_var == 0)
                        {
                            cursor = limit - v_5;
                            break lab6;
                        }
                        // ], line 131
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                cursor = limit - v_5;
                                break lab6;
                            case 1:
                                // (, line 132
                                // or, line 132
                                lab7: do {
                                    v_6 = limit - cursor;
                                    lab8: do {
                                        // (, line 132
                                        // call R2, line 132
                                        if (!r_R2())
                                        {
                                            break lab8;
                                        }
                                        // delete, line 132
                                        slice_del();
                                        break lab7;
                                    } while (false);
                                    cursor = limit - v_6;
                                    // <-, line 132
                                    slice_from("abl");
                                } while (false);
                                break;
                            case 2:
                                // (, line 133
                                // or, line 133
                                lab9: do {
                                    v_7 = limit - cursor;
                                    lab10: do {
                                        // (, line 133
                                        // call R2, line 133
                                        if (!r_R2())
                                        {
                                            break lab10;
                                        }
                                        // delete, line 133
                                        slice_del();
                                        break lab9;
                                    } while (false);
                                    cursor = limit - v_7;
                                    // <-, line 133
                                    slice_from("iqU");
                                } while (false);
                                break;
                            case 3:
                                // (, line 134
                                // call R2, line 134
                                if (!r_R2())
                                {
                                    cursor = limit - v_5;
                                    break lab6;
                                }
                                // delete, line 134
                                slice_del();
                                break;
                        }
                    } while (false);
                    break;
                case 8:
                    // (, line 140
                    // call R2, line 141
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 141
                    slice_del();
                    // try, line 142
                    v_8 = limit - cursor;
                    lab11: do {
                        // (, line 142
                        // [, line 142
                        ket = cursor;
                        // literal, line 142
                        if (!(eq_s_b(2, "at")))
                        {
                            cursor = limit - v_8;
                            break lab11;
                        }
                        // ], line 142
                        bra = cursor;
                        // call R2, line 142
                        if (!r_R2())
                        {
                            cursor = limit - v_8;
                            break lab11;
                        }
                        // delete, line 142
                        slice_del();
                        // [, line 142
                        ket = cursor;
                        // literal, line 142
                        if (!(eq_s_b(2, "ic")))
                        {
                            cursor = limit - v_8;
                            break lab11;
                        }
                        // ], line 142
                        bra = cursor;
                        // or, line 142
                        lab12: do {
                            v_9 = limit - cursor;
                            lab13: do {
                                // (, line 142
                                // call R2, line 142
                                if (!r_R2())
                                {
                                    break lab13;
                                }
                                // delete, line 142
                                slice_del();
                                break lab12;
                            } while (false);
                            cursor = limit - v_9;
                            // <-, line 142
                            slice_from("iqU");
                        } while (false);
                    } while (false);
                    break;
                case 9:
                    // (, line 144
                    // <-, line 144
                    slice_from("eau");
                    break;
                case 10:
                    // (, line 145
                    // call R1, line 145
                    if (!r_R1())
                    {
                        return false;
                    }
                    // <-, line 145
                    slice_from("al");
                    break;
                case 11:
                    // (, line 147
                    // or, line 147
                    lab14: do {
                        v_10 = limit - cursor;
                        lab15: do {
                            // (, line 147
                            // call R2, line 147
                            if (!r_R2())
                            {
                                break lab15;
                            }
                            // delete, line 147
                            slice_del();
                            break lab14;
                        } while (false);
                        cursor = limit - v_10;
                        // (, line 147
                        // call R1, line 147
                        if (!r_R1())
                        {
                            return false;
                        }
                        // <-, line 147
                        slice_from("eux");
                    } while (false);
                    break;
                case 12:
                    // (, line 150
                    // call R1, line 150
                    if (!r_R1())
                    {
                        return false;
                    }
                    if (!(out_grouping_b(g_v, 97, 251)))
                    {
                        return false;
                    }
                    // delete, line 150
                    slice_del();
                    break;
                case 13:
                    // (, line 155
                    // call RV, line 155
                    if (!r_RV())
                    {
                        return false;
                    }
                    // fail, line 155
                    // (, line 155
                    // <-, line 155
                    slice_from("ant");
                    return false;
                case 14:
                    // (, line 156
                    // call RV, line 156
                    if (!r_RV())
                    {
                        return false;
                    }
                    // fail, line 156
                    // (, line 156
                    // <-, line 156
                    slice_from("ent");
                    return false;
                case 15:
                    // (, line 158
                    // test, line 158
                    v_11 = limit - cursor;
                    // (, line 158
                    if (!(in_grouping_b(g_v, 97, 251)))
                    {
                        return false;
                    }
                    // call RV, line 158
                    if (!r_RV())
                    {
                        return false;
                    }
                    cursor = limit - v_11;
                    // fail, line 158
                    // (, line 158
                    // delete, line 158
                    slice_del();
                    return false;
            }
            return true;
        }

