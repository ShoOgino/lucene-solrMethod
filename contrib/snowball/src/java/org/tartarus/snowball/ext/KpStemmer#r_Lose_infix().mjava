        private boolean r_Lose_infix() {
            int v_2;
            int v_3;
            int v_4;
            // (, line 195
            // next, line 196
            if (cursor >= limit)
            {
                return false;
            }
            cursor++;
            // gopast, line 197
            golab0: while(true)
            {
                lab1: do {
                    // (, line 197
                    // [, line 197
                    bra = cursor;
                    // literal, line 197
                    if (!(eq_s(2, "ge")))
                    {
                        break lab1;
                    }
                    // ], line 197
                    ket = cursor;
                    break golab0;
                } while (false);
                if (cursor >= limit)
                {
                    return false;
                }
                cursor++;
            }
            // test, line 197
            v_2 = cursor;
            // hop, line 197
            {
                int c = cursor + 3;
                if (0 > c || c > limit)
                {
                    return false;
                }
                cursor = c;
            }
            cursor = v_2;
            // (, line 197
            // goto, line 197
            golab2: while(true)
            {
                v_3 = cursor;
                lab3: do {
                    if (!(in_grouping(g_v, 97, 121)))
                    {
                        break lab3;
                    }
                    cursor = v_3;
                    break golab2;
                } while (false);
                cursor = v_3;
                if (cursor >= limit)
                {
                    return false;
                }
                cursor++;
            }
            // goto, line 197
            golab4: while(true)
            {
                v_4 = cursor;
                lab5: do {
                    if (!(out_grouping(g_v, 97, 121)))
                    {
                        break lab5;
                    }
                    cursor = v_4;
                    break golab4;
                } while (false);
                cursor = v_4;
                if (cursor >= limit)
                {
                    return false;
                }
                cursor++;
            }
            // set GE_removed, line 198
            B_GE_removed = true;
            // delete, line 199
            slice_del();
            return true;
        }

