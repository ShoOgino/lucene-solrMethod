  public final Token next(final Token reusableToken) throws IOException {
    assert reusableToken != null;
    Token nextToken = input.next(reusableToken);
    if (nextToken != null) {
      char[] termBuffer = nextToken.termBuffer();
      String termText = new String(termBuffer, 0, nextToken.termLength());
      collator.getRawCollationKey(termText, reusableKey);
      ByteBuffer collationKeyBuf = ByteBuffer.wrap(reusableKey.bytes, 0, reusableKey.size);
      int encodedLength
        = IndexableBinaryStringTools.getEncodedLength(collationKeyBuf);
      if (encodedLength > termBuffer.length) {
        nextToken.resizeTermBuffer(encodedLength);
      }
      nextToken.setTermLength(encodedLength);
      CharBuffer wrappedTermBuffer = CharBuffer.wrap(nextToken.termBuffer());
      IndexableBinaryStringTools.encode(collationKeyBuf, wrappedTermBuffer);
    }
    return nextToken;
  }

