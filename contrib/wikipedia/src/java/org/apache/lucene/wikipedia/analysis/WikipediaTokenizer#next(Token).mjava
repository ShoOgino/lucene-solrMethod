  /*
  * (non-Javadoc)
  *
  * @see org.apache.lucene.analysis.TokenStream#next()
  */
  public Token next(final Token reusableToken) throws IOException {
    assert reusableToken != null;
    if (tokens != null && tokens.hasNext()){
      return (Token)tokens.next();
    }
    int tokenType = scanner.getNextToken();

    if (tokenType == WikipediaTokenizerImpl.YYEOF) {
      return null;
    }
    String type = WikipediaTokenizerImpl.TOKEN_TYPES[tokenType];
    if (tokenOutput == TOKENS_ONLY || untokenizedTypes.contains(type) == false){
      setupToken(reusableToken);
    } else if (tokenOutput == UNTOKENIZED_ONLY && untokenizedTypes.contains(type) == true){
      collapseTokens(reusableToken, tokenType);

    }
    else if (tokenOutput == BOTH){
      //collapse into a single token, add it to tokens AND output the individual tokens
      //output the untokenized Token first
      collapseAndSaveTokens(reusableToken, tokenType, type);
    }
    reusableToken.setPositionIncrement(scanner.getPositionIncrement());
    reusableToken.setType(type);
    return reusableToken;
  }

