  private void collapseAndSaveTokens(final Token reusableToken, int tokenType, String type) throws IOException {
    //collapse
    StringBuffer buffer = new StringBuffer(32);
    int numAdded = scanner.setText(buffer);
    //TODO: how to know how much whitespace to add
    int theStart = scanner.yychar();
    int lastPos = theStart + numAdded;
    int tmpTokType;
    int numSeen = 0;
    List tmp = new ArrayList();
    Token saved = new Token();
    setupSavedToken(saved, 0, type);
    tmp.add(saved);
    //while we can get a token and that token is the same type and we have not transitioned to a new wiki-item of the same type
    while ((tmpTokType = scanner.getNextToken()) != WikipediaTokenizerImpl.YYEOF && tmpTokType == tokenType && scanner.getNumWikiTokensSeen() > numSeen){
      int currPos = scanner.yychar();
      //append whitespace
      for (int i = 0; i < (currPos - lastPos); i++){
        buffer.append(' ');
      }
      numAdded = scanner.setText(buffer);
      saved = new Token();
      setupSavedToken(saved, scanner.getPositionIncrement(), type);
      tmp.add(saved);
      numSeen++;
      lastPos = currPos + numAdded;
    }
    //trim the buffer
    String s = buffer.toString().trim();
    reusableToken.setTermBuffer(s.toCharArray(), 0, s.length());
    reusableToken.setStartOffset(theStart);
    reusableToken.setEndOffset(theStart + s.length());
    reusableToken.setFlags(UNTOKENIZED_TOKEN_FLAG);
    //The way the loop is written, we will have proceeded to the next token.  We need to pushback the scanner to lastPos
    if (tmpTokType != WikipediaTokenizerImpl.YYEOF){
      scanner.yypushback(scanner.yylength());
    }
    tokens = tmp.iterator();
  }

