  public void testNormKiller() throws IOException {

    IndexReader r = IndexReader.open(store);
    byte[] oldNorms = r.norms("untokfield");    
    r.close();
    
    FieldNormModifier fnm = new FieldNormModifier(store, s);
    fnm.reSetNorms("untokfield");

    r = IndexReader.open(store);
    byte[] newNorms = r.norms("untokfield");
    r.close();
    assertFalse(Arrays.equals(oldNorms, newNorms));    

    
    // verify that we still get documents in the same order as originally
    IndexSearcher searcher = new IndexSearcher(store);
    final float[] scores = new float[NUM_DOCS];
    float lastScore = 0.0f;
    
    // default similarity should return the same score for all documents for this query
    searcher.search(new TermQuery(new Term("untokfield", "20061212")), new Collector() {
      private int docBase = 0;
      private Scorer scorer;
      public final void collect(int doc) throws IOException {
        scores[doc + docBase] = scorer.score();
      }
      public void setNextReader(IndexReader reader, int docBase) {
        this.docBase = docBase;
      }
      public void setScorer(Scorer scorer) throws IOException {
        this.scorer = scorer;
      }
    });
    searcher.close();
    
    lastScore = scores[0];
    for (int i = 0; i < NUM_DOCS; i++) {
      String msg = "i=" + i + ", " + scores[i] + " == " + lastScore;
      assertTrue(msg, scores[i] == lastScore);
      //System.out.println(msg);
      lastScore = scores[i];
    }
  }

