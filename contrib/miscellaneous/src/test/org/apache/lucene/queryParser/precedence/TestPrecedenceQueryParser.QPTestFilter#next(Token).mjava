    public Token next(final Token reusableToken) throws IOException {
      assert reusableToken != null;
      if (inPhrase) {
        inPhrase = false;
        reusableToken.setTermBuffer("phrase2");
        reusableToken.setStartOffset(savedStart);
        reusableToken.setEndOffset(savedEnd);
        return reusableToken;
      } else
        for (Token nextToken = input.next(reusableToken); nextToken != null; nextToken = input.next(reusableToken)) {
          if (nextToken.term().equals("phrase")) {
            inPhrase = true;
            savedStart = nextToken.startOffset();
            savedEnd = nextToken.endOffset();
            nextToken.setTermBuffer("phrase1");
            nextToken.setStartOffset(savedStart);
            nextToken.setEndOffset(savedEnd);
            return nextToken;
          } else if (!nextToken.term().equals("stop"))
            return nextToken;
        }
      return null;
    }

