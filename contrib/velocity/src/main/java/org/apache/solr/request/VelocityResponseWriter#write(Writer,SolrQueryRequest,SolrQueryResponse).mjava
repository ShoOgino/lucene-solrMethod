  public void write(Writer writer, SolrQueryRequest request, SolrQueryResponse response) throws IOException {
    VelocityEngine engine = getEngine(request);  // TODO: have HTTP headers available for configuring engine

    // TODO: Add layout capability, render to string buffer, then render layout
    Template template = getTemplate(engine, request);

    VelocityContext context = new VelocityContext();

    // TODO: Make this use the SolrJ API, rather than "embedded" Solr API
    context.put("request", request);    // TODO: inject a SolrRequest instead of a SolrQueryRequest
    context.put("response", response);  // TODO: inject a SolrResponse instead of a SolrQueryResponse
    context.put("page",new PageTool(request,response));
    context.put("esc", new EscapeTool());
   
    // create output, optionally wrap it into a json object
    if (request.getParams().getBool("v.json", false)) {
      StringWriter stringWriter = new StringWriter();
      template.merge(context, stringWriter);
      writer.write(request.getParams().get("v.json") + "(");
      writer.write(getJSONWrap(stringWriter.toString()));
      writer.write(')');
    } else {
      template.merge(context, writer);
    }
  }

