    /*
     * Test method for 'org.apache.lucene.gdata.storage.lucenestorage.SingleHostConcurrentStorageLock.setLock(String)'
     */
    public void testSetLock() throws InterruptedException {
        final String key = "someKey";
        final String nextKey = "fooKey";
        assertTrue(lock.setLock(key));
        assertTrue(lock.isKeyLocked(key));
        
        try{
            this.lock.setLock(key);
            fail("thread has already locked the key");
        }catch (Exception e) {
            // TODO: handle exception
        }
        
        try{
            assertTrue(lock.setLock(nextKey));
            fail("thread has already locked the key");
        }catch (Exception e) {
            // TODO: handle exception
        }
        
        Thread t = new Thread(new Runnable(){
            public void run(){
                threadResult = lock.setLock(key);
              
                
                
            }
        });
        t.start();
        t.join(300);
        assertFalse(threadResult);
        
        t = new Thread(new Runnable(){
            public void run(){
                threadResult = lock.setLock(nextKey);
              
                
                
            }
        });
        t.start();
        t.join(300);
        assertTrue(threadResult);
    }

