    /**
     * Inserts a new Entry to the Lucene index storage
     * 
     * @param wrapper -
     *            the wrapper containing the entry
     * @throws StorageException -
     *             if the entry can not be stored
     */
    public void insertEntry(StorageEntryWrapper wrapper)
            throws StorageException {
        if(wrapper.getOperation() != StorageOperation.INSERT)
            throw new StorageException("Illegal method call -- insertEntry does not accept other storage operations than insert");
        this.lock.lock();
        try {
            this.documentMap.put(wrapper.getEntryId(), wrapper
                    .getLuceneDocument());
            storageModified();
            /*
             * If storage not written write entry to recoverfile
             * and make the entry available via the buffer
             */
            if(this.modifiedCounter != 0)
                try{
                    this.controller.writeRecoverEntry(wrapper);
                    this.buffer.addEntry(wrapper);
                }catch (Exception e) {
                    /*
                     * remove from all resources
                     */
                    this.documentMap.remove(wrapper.getEntryId());
                }
        } finally {
            this.lock.unlock();
        }
    }

