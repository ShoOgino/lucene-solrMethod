    /** 
     * Builds a {@link BaseFeed} from the provided {@link Reader} 
     *  
     * @param feedId - 
     *            the feed ID to request the feed type from the registry 
     * @param reader - 
     *            the reader to build the feed from 
     * @param profile - extension profile to parse the resource 
     * @return - a BaseFeed instance 
     * @throws FeedNotFoundException - 
     *             if the feed is not registered 
     * @throws IOException - 
     *             if an I/O Exception occures on the provided reader 
     * @throws ParseException - 
     *             if the feed could not be parsed 
     */ 
    public static BaseFeed buildFeed(final String feedId, final Reader reader,final ExtensionProfile profile) 
            throws FeedNotFoundException, ParseException, IOException { 
 
        BaseFeed retVal = null; 
        try { 
            retVal = (BaseFeed) createEntityInstance(feedId); 
        } catch (FeedNotFoundException e) { 
            throw e; 
        } catch (Exception e) { 
            DataBuilderException ex = new DataBuilderException( 
                    "Could not build Feed for Feed class ", e); 
            ex.setStackTrace(e.getStackTrace()); 
            throw ex; 
        } 
        retVal.parseAtom(profile, reader); 
 
        return retVal; 
    } 

