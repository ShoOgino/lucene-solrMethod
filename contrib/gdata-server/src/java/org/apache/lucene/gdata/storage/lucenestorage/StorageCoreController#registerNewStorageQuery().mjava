    /**
     * Forces the controller to register a new <tt>StorageQuery</tt> instance.
     * This method will be called after an index has been modified to make the
     * changes available for searching.
     * 
     * @throws IOException -
     *             if an IO exception occurs
     */
    protected void registerNewStorageQuery() throws IOException {
    	if(this.isClosed.get())
    		throw new IllegalStateException("StorageController is already closed -- server is shutting down");
        this.storageControllerLock.lock();
        try{
        	if(this.isClosed.get())
        		throw new IllegalStateException("StorageController is already closed -- server is shutting down");
	        if (LOG.isInfoEnabled())
	            LOG.info("new StorageQuery requested -- create new storage buffer");
        
            if (this.storageQuery != null)
                this.storageQuery.decrementRef();
            this.searcher = new IndexSearcher(this.storageDir);
            this.storageQuery = null;
            this.currentBuffer = new StorageBuffer(this.storageBufferSize);

        }finally{
            try{
                this.closeCondition.signalAll();
                }catch (Throwable e) {/**/}
        	this.storageControllerLock.unlock();
        }

    }

