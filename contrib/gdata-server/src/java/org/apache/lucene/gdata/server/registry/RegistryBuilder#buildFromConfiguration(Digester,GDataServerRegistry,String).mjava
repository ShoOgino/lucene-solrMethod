    private static void buildFromConfiguration(Digester digester,
            GDataServerRegistry registry, String schemaURL) throws IOException, SAXException {
        digester.setValidating(true);
        digester.setSchema(schemaURL);
        digester.setErrorHandler(new SimpleSaxErrorHandler());
        digester.push(registry);
        /*
         * register services
         */
        digester.addObjectCreate("gdata/service", ProvidedServiceConfig.class);
        digester.addSetProperties("gdata/service");
        digester.addSetNext("gdata/service", "registerService");
        digester.addBeanPropertySetter("gdata/service/feed-class", "feedType");
        digester.addBeanPropertySetter("gdata/service/entry-class", "entryType");
        digester.addBeanPropertySetter("gdata/service/extension-profile",
                "extensionProfileClass");
        addIndexRule(digester);
        /*
         * load components and configurations
         */
        digester.addCallMethod("gdata/server-components/component",
                "registerComponent", 2, new Class[] { Class.class , ComponentConfiguration.class});
        digester.addCallParam("gdata/server-components/component/class",0);
            digester.addObjectCreate("gdata/server-components/component/configuration",ComponentConfiguration.class);
            digester.addCallMethod("gdata/server-components/component/configuration/property","set",2,new Class[]{String.class,String.class});
            digester.addCallParam("gdata/server-components/component/configuration/property",0,"name");
            digester.addCallParam("gdata/server-components/component/configuration/property",1);
        //second parameter on registerComponent -- top of the stack (Component configuration)
        digester.addCallParam("gdata/server-components/component/configuration",1,0);    
        digester.parse(RegistryBuilder.class
                .getResourceAsStream("/gdata-config.xml"));
        
    }

