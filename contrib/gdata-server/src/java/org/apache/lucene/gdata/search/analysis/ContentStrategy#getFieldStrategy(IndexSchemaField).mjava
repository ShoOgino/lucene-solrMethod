    /**
     * This factory method creates the <tt>ContentStrategy</tt> corresponding
     * to the set <tt>ContentType</tt> value in the <tt>IndexSchemaField</tt>
     * passed to the method as the single parameter.
     * <p>
     * The ContentType must not be null
     * </p>
     * 
     * @param fieldConfig -
     *            the field config to use to identify the corresponding
     *            <tt>ContentStrategy</tt>
     * @return - a new <tt>ContentStrategy</tt> instance
     */
    public static ContentStrategy getFieldStrategy(IndexSchemaField fieldConfig) {
        if (fieldConfig == null)
            throw new IllegalArgumentException(
                    "field configuration must not be null");
        ContentType type = fieldConfig.getContentType();
        if (type == null)
            throw new IllegalArgumentException(
                    "ContentType in IndexSchemaField must not be null");
        fieldConfig.getAnalyzerClass();

        switch (type) {
        case CATEGORY:
            return new GdataCategoryStrategy(fieldConfig);
        case HTML:
            return new HTMLStrategy(fieldConfig);
        case XHTML:
            return new XHtmlStrategy(fieldConfig);
        case GDATADATE:
            return new GdataDateStrategy(fieldConfig);
        case TEXT:
            return new PlainTextStrategy(fieldConfig);
        case KEYWORD:
            return new KeywordStrategy(fieldConfig);
        case CUSTOM:
            /*
             * check if this class can be created with default constructor is checked
             * in IndexSchemaField#setFieldClass and throws RuntimeEx if not. So
             * server can not start up.
             */
            return ReflectionUtils.getDefaultInstance(fieldConfig
                    .getFieldClass());
        case MIXED:
            return new MixedContentStrategy(fieldConfig);
        default:
            throw new RuntimeException("No content strategy found for " + type);
        }

    }

