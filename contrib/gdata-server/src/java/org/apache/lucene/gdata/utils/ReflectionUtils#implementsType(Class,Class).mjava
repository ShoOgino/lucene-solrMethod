    /**
     * Check if the given type implements a given super type
     * @param typeToCheck - type supposed to implement an interface
     * @param superType - the interface to be implemented by the type to check
     * @return <code>true</code> if and only if the super type is above in the type hierarchy of the given type, otherwise <code>false</code>
     */
    public static boolean implementsType(Class typeToCheck, Class superType) {
        if(superType == null)
            return false;
        if(!superType.isInterface())
            return  false;
        if (typeToCheck == null)
            return false;
        if (typeToCheck.equals(Object.class))
            return false;
        if (typeToCheck.equals(superType))
            return true;
        Class[] interfaces = typeToCheck.getInterfaces();
        for (int i = 0; i < interfaces.length; i++) {
            if (implementsType(interfaces[i], superType))
                return true;
        }
        return implementsType(typeToCheck.getSuperclass(),superType);
        
    }

