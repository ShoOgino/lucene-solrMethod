    /** 
     * Adds a {@link StorageEntryWrapper} to the buffer. If a wrapper 
     * representing the same entry are already in the buffer the wrapper will be 
     * replaced. 
     *  
     * @param wrapper - 
     *            the wrapper to buffer 
     */ 
    public void addEntry(final StorageEntryWrapper wrapper) { 
        this.writeLock.lock(); 
        try { 
            if (LOG.isInfoEnabled()) 
                LOG.info(" Buffering wrapper - " + wrapper.getOperation() 
                        + " ID: " + wrapper.getEntryId() + " FeedID: " 
                        + wrapper.getFeedId()); 
            if (wrapper.getOperation().equals(StorageOperation.DELETE)) 
                return; 
 
            String feedId = wrapper.getFeedId(); 
            if (this.bufferMap.containsKey(feedId)) 
                this.bufferMap.get(feedId).put(wrapper.getEntryId(), wrapper); 
            else { 
                Map<String, StorageEntryWrapper> newFeedMap = new HashMap<String, StorageEntryWrapper>( 
                        20); 
                newFeedMap.put(wrapper.getEntryId(), wrapper); 
                this.bufferMap.put(feedId, newFeedMap); 
            } 
        } finally { 
            /* 
             * add all to exclude from searches doc will be available via the 
             * buffer 
             */ 
            this.excludeList.add(wrapper.getEntryId()); 
            this.writeLock.unlock(); 
        } 
    } 

