  @Override
  public void collect(int doc) throws IOException {

    if (curDocs == null) {
      // Cache was too large
      if (curScores != null) {
        score = scorer.score();
      }
      this.doc = doc;
      other.collect(doc);
      return;
    }

    if (upto == curDocs.length) {
      base += upto;
      final int nextLength;
      // Max out at 512K arrays:
      if (curDocs.length < 524288) {
        nextLength = 8*curDocs.length;
      } else {
        nextLength = curDocs.length;
      }

      if (base + nextLength > maxDocsToCache) {
        // Too many docs to collect -- clear cache
        curDocs = null;
        if (curScores != null) {
          score = scorer.score();
        }
        this.doc = doc;
        other.collect(doc);
        cachedDocs.clear();
        cachedScores.clear();
        return;
      }
      curDocs = new int[nextLength];
      cachedDocs.add(curDocs);
      if (curScores != null) {
        curScores = new float[nextLength];
        cachedScores.add(curScores);
      }
      upto = 0;
    }
    curDocs[upto] = doc;
    // TODO: maybe specialize private subclass so we don't
    // null check per collect...
    if (curScores != null) {
      score = curScores[upto] = scorer.score();
    }
    upto++;
    this.doc = doc;
    other.collect(doc);
  }

