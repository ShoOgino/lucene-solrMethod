  /**
   * @param keyPrefix a prefix of the key used to cache the AEProvider
   * @param aePath the AnalysisEngine descriptor path
   * @param runtimeParameters map of runtime parameters to configure inside the AnalysisEngine
   * @return AEProvider
   */
  public synchronized AEProvider getAEProvider(String keyPrefix, String aePath, Map<String, Object> runtimeParameters) {
    String key = new StringBuilder(keyPrefix != null ? keyPrefix : "").append(aePath).append(runtimeParameters != null ?
        runtimeParameters.toString() : "").toString();
    if (providerCache.get(key) == null) {
      AEProvider aeProvider;
      if (runtimeParameters != null)
        aeProvider = new OverridingParamsAEProvider(aePath, runtimeParameters);
      else
        aeProvider = new BasicAEProvider(aePath);
      providerCache.put(key, aeProvider);
    }
    return providerCache.get(key);
  }

