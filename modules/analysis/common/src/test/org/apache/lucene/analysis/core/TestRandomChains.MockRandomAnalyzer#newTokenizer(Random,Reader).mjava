    // create a new random tokenizer from classpath
    private TokenizerSpec newTokenizer(Random random, Reader reader) {
      TokenizerSpec spec = new TokenizerSpec();
      boolean success = false;
      while (!success) {
        try {
          // TODO: check Reader+Version,Version+Reader too
          // also look for other variants and handle them special
          int idx = random.nextInt(tokenizers.size());
          try {
            Constructor<? extends Tokenizer> c = tokenizers.get(idx).getConstructor(Version.class, Reader.class);
            spec.tokenizer = c.newInstance(TEST_VERSION_CURRENT, reader);
          } catch (NoSuchMethodException e) {
            Constructor<? extends Tokenizer> c = tokenizers.get(idx).getConstructor(Reader.class);
            spec.tokenizer = c.newInstance(reader);
          }
          spec.toString = tokenizers.get(idx).toString();
          success = true;
        } catch (Exception e) {
          // ignore
        }
      }
      return spec;
    }

