  @BeforeClass
  public static void beforeClass() throws Exception {
    List<Class> analysisClasses = getClassesForPackage("org.apache.lucene.analysis");
    List<Class> tokenizersList = new ArrayList<Class>();
    List<Class> tokenfiltersList = new ArrayList<Class>();
    List<Class> charfiltersList = new ArrayList<Class>();
    for (Class c : analysisClasses) {
      // don't waste time with abstract classes or deprecated known-buggy ones
      if (Modifier.isAbstract(c.getModifiers()) || c.getAnnotation(Deprecated.class) != null
          // TODO: fix basetokenstreamtestcase not to trip because this one has no CharTermAtt
          || c.equals(EmptyTokenizer.class)
          // doesn't actual reset itself!
          || c.equals(CachingTokenFilter.class)
          // broken!
          || c.equals(NGramTokenizer.class)
          // broken!
          || c.equals(NGramTokenFilter.class)
          // broken!
          || c.equals(EdgeNGramTokenizer.class)
          // broken!
          || c.equals(EdgeNGramTokenFilter.class)) {
        continue;
      }
      if (Tokenizer.class.isAssignableFrom(c)) {
        tokenizersList.add(c);
      } else if (TokenFilter.class.isAssignableFrom(c)) {
        tokenfiltersList.add(c);
      } else if (CharStream.class.isAssignableFrom(c)) {
        charfiltersList.add(c);
      }
    }
    tokenizers = tokenizersList.toArray(new Class[0]);
    Arrays.sort(tokenizers, new Comparator<Class>() {
      @Override
      public int compare(Class arg0, Class arg1) {
        return arg0.getName().compareTo(arg1.getName());
      }
    });
    tokenfilters = tokenfiltersList.toArray(new Class[0]);
    Arrays.sort(tokenfilters, new Comparator<Class>() {
      @Override
      public int compare(Class arg0, Class arg1) {
        return arg0.getName().compareTo(arg1.getName());
      }
    });
    charfilters = charfiltersList.toArray(new Class[0]);
    Arrays.sort(charfilters, new Comparator<Class>() {
      @Override
      public int compare(Class arg0, Class arg1) {
        return arg0.getName().compareTo(arg1.getName());
      }
    });
    if (VERBOSE) {
      System.out.println("tokenizers = " + Arrays.toString(tokenizers));
      System.out.println("tokenfilters = " + Arrays.toString(tokenfilters));
      System.out.println("charfilters = " + Arrays.toString(charfilters));
    }
  }

