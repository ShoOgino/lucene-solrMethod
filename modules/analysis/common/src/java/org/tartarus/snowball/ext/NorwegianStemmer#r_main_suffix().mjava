        private boolean r_main_suffix() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            // (, line 37
            // setlimit, line 38
            v_1 = limit - cursor;
            // tomark, line 38
            if (cursor < I_p1)
            {
                return false;
            }
            cursor = I_p1;
            v_2 = limit_backward;
            limit_backward = cursor;
            cursor = limit - v_1;
            // (, line 38
            // [, line 38
            ket = cursor;
            // substring, line 38
            among_var = find_among_b(a_0, 29);
            if (among_var == 0)
            {
                limit_backward = v_2;
                return false;
            }
            // ], line 38
            bra = cursor;
            limit_backward = v_2;
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 44
                    // delete, line 44
                    slice_del();
                    break;
                case 2:
                    // (, line 46
                    // or, line 46
                    lab0: do {
                        v_3 = limit - cursor;
                        lab1: do {
                            if (!(in_grouping_b(g_s_ending, 98, 122)))
                            {
                                break lab1;
                            }
                            break lab0;
                        } while (false);
                        cursor = limit - v_3;
                        // (, line 46
                        // literal, line 46
                        if (!(eq_s_b(1, "k")))
                        {
                            return false;
                        }
                        if (!(out_grouping_b(g_v, 97, 248)))
                        {
                            return false;
                        }
                    } while (false);
                    // delete, line 46
                    slice_del();
                    break;
                case 3:
                    // (, line 48
                    // <-, line 48
                    slice_from("er");
                    break;
            }
            return true;
        }

