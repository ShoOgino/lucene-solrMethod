        private boolean r_Step_1a() {
            int among_var;
            int v_1;
            int v_2;
            // (, line 58
            // try, line 59
            v_1 = limit - cursor;
            lab0: do {
                // (, line 59
                // [, line 60
                ket = cursor;
                // substring, line 60
                among_var = find_among_b(a_1, 3);
                if (among_var == 0)
                {
                    cursor = limit - v_1;
                    break lab0;
                }
                // ], line 60
                bra = cursor;
                switch(among_var) {
                    case 0:
                        cursor = limit - v_1;
                        break lab0;
                    case 1:
                        // (, line 62
                        // delete, line 62
                        slice_del();
                        break;
                }
            } while (false);
            // [, line 65
            ket = cursor;
            // substring, line 65
            among_var = find_among_b(a_2, 6);
            if (among_var == 0)
            {
                return false;
            }
            // ], line 65
            bra = cursor;
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 66
                    // <-, line 66
                    slice_from("ss");
                    break;
                case 2:
                    // (, line 68
                    // or, line 68
                    lab1: do {
                        v_2 = limit - cursor;
                        lab2: do {
                            // (, line 68
                            // hop, line 68
                            {
                                int c = cursor - 2;
                                if (limit_backward > c || c > limit)
                                {
                                    break lab2;
                                }
                                cursor = c;
                            }
                            // <-, line 68
                            slice_from("i");
                            break lab1;
                        } while (false);
                        cursor = limit - v_2;
                        // <-, line 68
                        slice_from("ie");
                    } while (false);
                    break;
                case 3:
                    // (, line 69
                    // next, line 69
                    if (cursor <= limit_backward)
                    {
                        return false;
                    }
                    cursor--;
                    // gopast, line 69
                    golab3: while(true)
                    {
                        lab4: do {
                            if (!(in_grouping_b(g_v, 97, 121)))
                            {
                                break lab4;
                            }
                            break golab3;
                        } while (false);
                        if (cursor <= limit_backward)
                        {
                            return false;
                        }
                        cursor--;
                    }
                    // delete, line 69
                    slice_del();
                    break;
            }
            return true;
        }

