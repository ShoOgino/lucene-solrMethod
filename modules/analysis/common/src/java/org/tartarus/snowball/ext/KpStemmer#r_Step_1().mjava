        private boolean r_Step_1() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            // (, line 48
            // [, line 49
            ket = cursor;
            // among, line 49
            among_var = find_among_b(a_0, 7);
            if (among_var == 0)
            {
                return false;
            }
            // (, line 49
            // ], line 49
            bra = cursor;
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 51
                    // delete, line 51
                    slice_del();
                    break;
                case 2:
                    // (, line 52
                    // call R1, line 52
                    if (!r_R1())
                    {
                        return false;
                    }
                    // not, line 52
                    {
                        v_1 = limit - cursor;
                        lab0: do {
                            // (, line 52
                            // literal, line 52
                            if (!(eq_s_b(1, "t")))
                            {
                                break lab0;
                            }
                            // call R1, line 52
                            if (!r_R1())
                            {
                                break lab0;
                            }
                            return false;
                        } while (false);
                        cursor = limit - v_1;
                    }
                    // call C, line 52
                    if (!r_C())
                    {
                        return false;
                    }
                    // delete, line 52
                    slice_del();
                    break;
                case 3:
                    // (, line 53
                    // call R1, line 53
                    if (!r_R1())
                    {
                        return false;
                    }
                    // <-, line 53
                    slice_from("ie");
                    break;
                case 4:
                    // (, line 55
                    // or, line 55
                    lab1: do {
                        v_2 = limit - cursor;
                        lab2: do {
                            // (, line 55
                            // literal, line 55
                            if (!(eq_s_b(2, "ar")))
                            {
                                break lab2;
                            }
                            // call R1, line 55
                            if (!r_R1())
                            {
                                break lab2;
                            }
                            // call C, line 55
                            if (!r_C())
                            {
                                break lab2;
                            }
                            // ], line 55
                            bra = cursor;
                            // delete, line 55
                            slice_del();
                            // call lengthen_V, line 55
                            if (!r_lengthen_V())
                            {
                                break lab2;
                            }
                            break lab1;
                        } while (false);
                        cursor = limit - v_2;
                        lab3: do {
                            // (, line 56
                            // literal, line 56
                            if (!(eq_s_b(2, "er")))
                            {
                                break lab3;
                            }
                            // call R1, line 56
                            if (!r_R1())
                            {
                                break lab3;
                            }
                            // call C, line 56
                            if (!r_C())
                            {
                                break lab3;
                            }
                            // ], line 56
                            bra = cursor;
                            // delete, line 56
                            slice_del();
                            break lab1;
                        } while (false);
                        cursor = limit - v_2;
                        // (, line 57
                        // call R1, line 57
                        if (!r_R1())
                        {
                            return false;
                        }
                        // call C, line 57
                        if (!r_C())
                        {
                            return false;
                        }
                        // <-, line 57
                        slice_from("e");
                    } while (false);
                    break;
                case 5:
                    // (, line 59
                    // call R1, line 59
                    if (!r_R1())
                    {
                        return false;
                    }
                    // call V, line 59
                    if (!r_V())
                    {
                        return false;
                    }
                    // <-, line 59
                    slice_from("au");
                    break;
                case 6:
                    // (, line 60
                    // or, line 60
                    lab4: do {
                        v_3 = limit - cursor;
                        lab5: do {
                            // (, line 60
                            // literal, line 60
                            if (!(eq_s_b(3, "hed")))
                            {
                                break lab5;
                            }
                            // call R1, line 60
                            if (!r_R1())
                            {
                                break lab5;
                            }
                            // ], line 60
                            bra = cursor;
                            // <-, line 60
                            slice_from("heid");
                            break lab4;
                        } while (false);
                        cursor = limit - v_3;
                        lab6: do {
                            // (, line 61
                            // literal, line 61
                            if (!(eq_s_b(2, "nd")))
                            {
                                break lab6;
                            }
                            // delete, line 61
                            slice_del();
                            break lab4;
                        } while (false);
                        cursor = limit - v_3;
                        lab7: do {
                            // (, line 62
                            // literal, line 62
                            if (!(eq_s_b(1, "d")))
                            {
                                break lab7;
                            }
                            // call R1, line 62
                            if (!r_R1())
                            {
                                break lab7;
                            }
                            // call C, line 62
                            if (!r_C())
                            {
                                break lab7;
                            }
                            // ], line 62
                            bra = cursor;
                            // delete, line 62
                            slice_del();
                            break lab4;
                        } while (false);
                        cursor = limit - v_3;
                        lab8: do {
                            // (, line 63
                            // or, line 63
                            lab9: do {
                                v_4 = limit - cursor;
                                lab10: do {
                                    // literal, line 63
                                    if (!(eq_s_b(1, "i")))
                                    {
                                        break lab10;
                                    }
                                    break lab9;
                                } while (false);
                                cursor = limit - v_4;
                                // literal, line 63
                                if (!(eq_s_b(1, "j")))
                                {
                                    break lab8;
                                }
                            } while (false);
                            // call V, line 63
                            if (!r_V())
                            {
                                break lab8;
                            }
                            // delete, line 63
                            slice_del();
                            break lab4;
                        } while (false);
                        cursor = limit - v_3;
                        // (, line 64
                        // call R1, line 64
                        if (!r_R1())
                        {
                            return false;
                        }
                        // call C, line 64
                        if (!r_C())
                        {
                            return false;
                        }
                        // delete, line 64
                        slice_del();
                        // call lengthen_V, line 64
                        if (!r_lengthen_V())
                        {
                            return false;
                        }
                    } while (false);
                    break;
                case 7:
                    // (, line 65
                    // <-, line 65
                    slice_from("nd");
                    break;
            }
            return true;
        }

