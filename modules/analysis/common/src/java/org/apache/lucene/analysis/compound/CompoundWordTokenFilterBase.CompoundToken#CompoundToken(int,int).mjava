    /** Construct the compound token based on a slice of the current {@link CompoundWordTokenFilterBase#termAtt}. */
    public CompoundToken(int offset, int length) {
      final int newStart = CompoundWordTokenFilterBase.this.offsetAtt.startOffset() + offset;
      this.txt = CompoundWordTokenFilterBase.this.termAtt.subSequence(offset, offset + length);
      // TODO: This ignores the original endOffset, if a CharFilter/Tokenizer/Filter removed
      // chars from the term, offsets may not match correctly (other filters producing tokens
      // may also have this problem):
      this.startOffset = newStart;
      this.endOffset = newStart + length;
    }

