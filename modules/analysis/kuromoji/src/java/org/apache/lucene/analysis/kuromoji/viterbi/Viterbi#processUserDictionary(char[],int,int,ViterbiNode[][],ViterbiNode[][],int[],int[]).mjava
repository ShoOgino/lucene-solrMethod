  /**
   * Find token(s) in input text and set found token(s) in arrays as normal tokens
   * @param text	
   * @param startIndexArr
   * @param endIndexArr
   * @param startSizeArr
   * @param endSizeArr
   */
  private void processUserDictionary(char text[], int offset, int len, ViterbiNode[][] startIndexArr, ViterbiNode[][] endIndexArr, int[] startSizeArr, int[] endSizeArr) throws IOException {
    int[][] result = userDictionary.lookup(text, offset, len);
    for(int[] segmentation : result) {
      int wordId = segmentation[0];
      int index = segmentation[1];
      int length = segmentation[2];
      ViterbiNode node = new ViterbiNode(wordId, text, offset + index, length, userDictionary.getLeftId(wordId), userDictionary.getRightId(wordId), userDictionary.getWordCost(wordId), index, Type.USER);
      addToArrays(node, index + 1, index + 1 + length, startIndexArr, endIndexArr, startSizeArr, endSizeArr);
    }
  }

