  @Test
  public void testOutOfOrderCollectionScoringDisabled() throws Exception {
    // This used to fail, because ScoredDocIdCollector.acceptDocsOutOfOrder
    // returned true, even when scoring was enabled.
    final int[] docs = new int[] { 1, 0, 2 }; // out of order on purpose

    ScoredDocIdCollector sdic = ScoredDocIdCollector.create(docs.length, false);
    assertTrue(
        "when scoring disabled, out-of-order collection should be supported",
        sdic.acceptsDocsOutOfOrder());
    for (int i = 0; i < docs.length; i++) {
      sdic.collect(docs[i]);
    }

    assertEquals("expected 3 documents but got " + sdic.getScoredDocIDs().size(), 3, sdic.getScoredDocIDs().size());
    ScoredDocIDsIterator iter = sdic.getScoredDocIDs().iterator();
    Arrays.sort(docs);
    for (int i = 0; iter.next(); i++) {
      assertEquals("expected doc " + docs[i], docs[i], iter.getDocID());
    }
  }

