  @Override
  public final boolean incrementToken() throws IOException {
    if (this.categoryAttribute.getCategoryPath() != null) {
      // try adding the parent of the current category to the stream
      clearCategoryProperties();
      boolean added = false;
      // set the parent's ordinal, if illegal set -1
      int ordinal = this.ordinalProperty.getOrdinal();
      if (ordinal != -1) {
        ordinal = this.taxonomyWriter.getParent(ordinal);
        if (this.ordinalPolicy.shouldAdd(ordinal)) {
          this.ordinalProperty.setOrdinal(ordinal);
          try {
            this.categoryAttribute.addProperty(ordinalProperty);
          } catch (UnsupportedOperationException e) {
            throw new IOException(e.getLocalizedMessage());
          }
          added = true;
        } else {
          this.ordinalProperty.setOrdinal(-1);
        }
      }
      // set the parent's category path, if illegal set null
      CategoryPath cp = this.categoryAttribute.getCategoryPath();
      if (cp != null) {
        cp.trim(1);
        // if ordinal added, must also have category paths
        if (added || this.pathPolicy.shouldAdd(cp)) {
          this.categoryAttribute.setCategoryPath(cp);
          added = true;
        } else {
          this.categoryAttribute.clear();
        }
      }
      if (added) {
        // a legal parent exists
        return true;
      }
    }
    // no more parents - get new category
    if (input.incrementToken()) {
      int ordinal = taxonomyWriter.addCategory(this.categoryAttribute.getCategoryPath());
      this.ordinalProperty.setOrdinal(ordinal);
      try {
        this.categoryAttribute.addProperty(this.ordinalProperty);
      } catch (UnsupportedOperationException e) {
        throw new IOException(e.getLocalizedMessage());
      }
      return true;
    }
    return false;
  }

