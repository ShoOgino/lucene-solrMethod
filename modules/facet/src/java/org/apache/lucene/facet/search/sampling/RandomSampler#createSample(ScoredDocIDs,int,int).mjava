  @Override
  protected SampleResult createSample(ScoredDocIDs docids, int actualSize, int sampleSetSize) throws IOException {
    final int[] sample = new int[sampleSetSize];
    final int maxStep = (actualSize * 2 ) / sampleSetSize; //floor
    int remaining = actualSize;
    ScoredDocIDsIterator it = docids.iterator();
    int i = 0;
    // select sample docs with random skipStep, make sure to leave sufficient #docs for selection after last skip
    while (i<sample.length && remaining>(sampleSetSize-maxStep-i)) {
      int skipStep = 1 + random.nextInt(maxStep);
      // Skip over 'skipStep' documents
      for (int j=0; j<skipStep; j++) {
        it.next();
        -- remaining;
      }
      sample[i++] = it.getDocID();
    }
    // Add leftover documents to the sample set
    while (i<sample.length) {
      it.next();
      sample[i++] = it.getDocID();
    }
    ScoredDocIDs sampleRes = ScoredDocIdsUtils.createScoredDocIDsSubset(docids, sample);
    SampleResult res = new SampleResult(sampleRes, sampleSetSize/(double)actualSize);
    return res;
  }

