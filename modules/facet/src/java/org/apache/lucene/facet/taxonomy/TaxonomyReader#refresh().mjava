  /**
   * refresh() re-reads the taxonomy information if there were any changes to
   * the taxonomy since this instance was opened or last refreshed. Calling
   * refresh() is more efficient than close()ing the old instance and opening a
   * new one.
   * <P>
   * If there were no changes since this instance was opened or last refreshed,
   * then this call does nothing. Note, however, that this is still a relatively
   * slow method (as it needs to verify whether there have been any changes on
   * disk to the taxonomy), so it should not be called too often needlessly. In
   * faceted search, the taxonomy reader's refresh() should be called only after
   * a reopen() of the main index.
   * <P>
   * It should be noted that refresh() is similar in purpose to
   * IndexReader.reopen(), but the two methods behave differently. refresh()
   * refreshes the existing TaxonomyReader object, rather than opening a new one
   * in addition to the old one as reopen() does. The reason is that in a
   * taxonomy, one can only add new categories and cannot modify or delete
   * existing categories; Therefore, there is no reason to keep an old snapshot
   * of the taxonomy open - refreshing the taxonomy to the newest data and using
   * this new snapshots in all threads (whether new or old) is fine. This saves
   * us needing to keep multiple copies of the taxonomy open in memory.
   */
  public void refresh() throws IOException;

