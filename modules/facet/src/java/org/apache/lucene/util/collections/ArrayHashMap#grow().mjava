  /**
   * Allocates a new map of double the capacity, and fast-insert the old
   * key-value pairs.
   */
  @SuppressWarnings("unchecked")
  protected void grow() {
    ArrayHashMap<K,V> newmap = new ArrayHashMap<K,V>(capacity * 2);

    // Iterates fast over the collection. Any valid pair is put into the new
    // map without checking for duplicates or if there's enough space for
    // it.
    for (IndexIterator iterator = new IndexIterator(); iterator.hasNext();) {
      int index = iterator.next();
      newmap.prvt_put((K) keys[index], (V) values[index]);
    }

    // Copy that's data into this.
    capacity = newmap.capacity;
    size = newmap.size;
    firstEmpty = newmap.firstEmpty;
    values = newmap.values;
    keys = newmap.keys;
    next = newmap.next;
    baseHash = newmap.baseHash;
    hashFactor = newmap.hashFactor;
  }

