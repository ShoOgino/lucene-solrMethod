  /**
   * Returns an {@link InputStream} over the requested file. This method
   * attempts to identify the appropriate {@link InputStream} instance to return
   * based on the file name (e.g., if it ends with .bz2 or .bzip, return a
   * 'bzip' {@link InputStream}).
   */
  protected InputStream getInputStream(File file) throws IOException {
    // First, create a FileInputStream, as this will be required by all types.
    // Wrap with BufferedInputStream for better performance
    InputStream is = new BufferedInputStream(new FileInputStream(file), BUFFER_SIZE);
    
    String fileName = file.getName();
    int idx = fileName.lastIndexOf('.');
    String type = null;
    if (idx != -1) {
      type = extensionToType.get(fileName.substring(idx).toLowerCase(Locale.ENGLISH));
    }
    
    if (type!=null) { // bzip or gzip
    	try {
    		return closableCompressorInputStream(type,is);
    	} catch (CompressorException e) {
    		IOException ioe = new IOException(e.getMessage());
    		ioe.initCause(e);
    		throw ioe;
    	}
    } 
    
    return is;
  }

