  @Override
  public IndexableField createField(SimpleSpatialFieldInfo fieldInfo, Shape shape, boolean index, boolean store) {
    int detailLevel = grid.getMaxLevelForPrecision(shape,distErrPct);
    List<Node> cells = grid.getNodes(shape, detailLevel, true);//true=intermediates cells
    //If shape isn't a point, add a full-resolution center-point so that
    // PrefixFieldCacheProvider has the center-points.
    // TODO index each center of a multi-point? Yes/no?
    if (!(shape instanceof Point)) {
      Point ctr = shape.getCenter();
      //TODO should be smarter; don't index 2 tokens for this in CellTokenizer. Harmless though.
      cells.add(grid.getNodes(ctr,grid.getMaxLevels(),false).get(0));
    }

    String fname = fieldInfo.getFieldName();
    if( store ) {
      //TODO figure out how to re-use original string instead of reconstituting it.
      String wkt = grid.getSpatialContext().toString(shape);
      if( index ) {
        Field f = new Field(fname,wkt,TYPE_STORED);
        f.setTokenStream(new CellTokenStream(cells.iterator()));
        return f;
      }
      return new StoredField(fname,wkt);
    }
    
    if( index ) {
      return new Field(fname,new CellTokenStream(cells.iterator()),TYPE_UNSTORED);
    }
    
    throw new UnsupportedOperationException("Fields need to be indexed or store ["+fname+"]");
  }

