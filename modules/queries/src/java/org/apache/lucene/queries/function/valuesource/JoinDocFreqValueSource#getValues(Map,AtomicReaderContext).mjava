  @Override
  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException
  {
    final DocTerms terms = cache.getTerms(readerContext.reader(), field, true );
    final IndexReader top = ReaderUtil.getTopLevelContext(readerContext).reader();
    
    return new IntDocValues(this) {
      BytesRef ref = new BytesRef();

      @Override
      public int intVal(int doc) 
      {
        try {
          terms.getTerm(doc, ref);
          int v = top.docFreq( qfield, ref ); 
          //System.out.println( NAME+"["+field+"="+ref.utf8ToString()+"=("+qfield+":"+v+")]" );
          return v;
        } 
        catch (IOException e) {
          throw new RuntimeException("caught exception in function "+description()+" : doc="+doc, e);
        }
      }
    };
  }

