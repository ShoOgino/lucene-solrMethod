  /**
   * Checks if the list of {@link LookupResult}s already has a <code>key</code>. If so,
   * reorders that {@link LookupResult} to the first position.
   * 
   * @return Returns <code>true<code> if and only if <code>list</code> contained <code>key</code>.
   */
  private boolean checkExistingAndReorder(ArrayList<LookupResult> list, String key) {
    // We assume list does not have duplicates (because of how the FST is created).
    for (int i = list.size(); --i >= 0;) {
      if (key.equals(list.get(i).key)) {
        // Key found. Unless already at i==0, remove it and push up front so that the ordering
        // remains identical with the exception of the exact match.
        list.add(0,  list.remove(i));
        return true;
      }
    }
    return false;
  }

