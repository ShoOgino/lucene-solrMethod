    /** 
     * Approximately half of the currently available free heap, but no less
     * than {@link #MIN_BUFFER_SIZE_MB}. However if current heap allocation 
     * is insufficient for sorting consult with max allowed heap size. 
     */
    public static BufferSize automatic() {
      Runtime rt = Runtime.getRuntime();
      
      // take sizes in "conservative" order
      long max = rt.maxMemory();
      long total = rt.totalMemory();
      long free = rt.freeMemory();

      // by free mem (attempting to not grow the heap for this)
      long half = free/2;
      if (half >= ABSOLUTE_MIN_SORT_BUFFER_SIZE) { 
        return new BufferSize(Math.min(MIN_BUFFER_SIZE_MB * MB, half));
      }
      
      // by max mem (heap will grow)
      half = (max - total) / 2;
      return new BufferSize(Math.min(MIN_BUFFER_SIZE_MB * MB, half));
    }

