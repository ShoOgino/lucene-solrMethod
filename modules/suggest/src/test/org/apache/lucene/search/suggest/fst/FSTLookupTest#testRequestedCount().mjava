  public void testRequestedCount() throws Exception {
    // 'one' is promoted after collecting two higher ranking results.
    assertMatchEquals(lookup.lookup("one", true, 2), 
        "one/0.0", 
        "oneness/1.0");

    // 'one' is at the top after collecting all alphabetical results. 
    assertMatchEquals(lookup.lookup("one", false, 2), 
        "one/0.0", 
        "oneness/1.0");

    lookup = new FSTLookup(10, false);
    lookup.build(new TermFreqArrayIterator(evalKeys()));
    
    // 'one' is not promoted after collecting two higher ranking results.
    assertMatchEquals(lookup.lookup("one", true, 2),  
        "oneness/1.0",
        "onerous/1.0");

    // 'one' is at the top after collecting all alphabetical results. 
    assertMatchEquals(lookup.lookup("one", false, 2), 
        "one/0.0", 
        "oneness/1.0");
  }

