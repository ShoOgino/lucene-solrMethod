    /**
     * Utility method to invoke an object's method.
     * @param o Object to invoke the method on.
     * @param methodname Name of the method to invoke.
     * @param parameter Method parameters.
     * @param args Arguments the method requires.
     * @return Object returned by the method.
     */
    private static Object invokeMethod(Object o, String methodname,
                                       Class[] parameter, Object[] args)
    {
        Class c = o.getClass();
        try
        {
            Method m = c.getMethod(methodname, parameter);
            return m.invoke(o, args);
        }
        catch (NoSuchMethodException nsme)
        {
            cat.error(nsme.getMessage() + " This method doesn't exist..", nsme);
        }
        catch (IllegalAccessException iae)
        {
            cat.error("No access to " + iae.getMessage() + ".", iae);
        }
        catch (InvocationTargetException ite)
        {
            cat.error("Trouble invoking " + ite.getMessage(), ite);
        }
        return null;
    }

