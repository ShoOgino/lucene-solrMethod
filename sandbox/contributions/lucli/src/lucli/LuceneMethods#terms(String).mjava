	/** Provides a list of the top terms of the index.
	 *
	 * @param field  - the name of the command or null for all of them.
	 */
	public void terms(String field) throws IOException {
		TreeMap termMap = new TreeMap();
		IndexReader indexReader = IndexReader.open(indexName);
		TermEnum terms = indexReader.terms();
		while (terms.next()) {
			Term term = terms.term();
			//message(term.field() + ":" + term.text() + " freq:" + terms.docFreq());
			//if we're either not looking by field or we're matching the specific field
			if ((field == null) || field.equals(term.field()))
				termMap.put(new Integer((0 - terms.docFreq())), term.field() + ":" + term.text());
		}

		Iterator termIterator = termMap.keySet().iterator();
		for (int ii=0; termIterator.hasNext() && ii < 100; ii++) {
			Integer termFreq = (Integer) termIterator.next();
			String termDetails = (String) termMap.get(termFreq);
			message(termDetails + ": " + termFreq);
		}
		indexReader.close();
	}

