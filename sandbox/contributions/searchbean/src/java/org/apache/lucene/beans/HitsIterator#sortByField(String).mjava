    /** sorts hits by the given sort flag
     * fills an interal array
     * @param sortFlag field to sort results on
     */
    private void sortByField(String fieldName) throws IOException{
        long start = System.currentTimeMillis();
        Comparator c = null;
        if (fieldName == null){
            //logger.error("sort field is null");
            return;
        }

        SortedField sf = SortedField.getSortedField(fieldName);
        if (sf !=null){
            c = (Comparator) new CompareDocumentsByField();
        } else {
            //logger.error("Sort field not found");
            // use default sort of Lucene -- Relevance
            // Should I throw an exception here?
            arrayOfIndividualHits = null;
            return;
        }
        arrayOfIndividualHits = new Object[hitsCollection.length()];
        long first = System.currentTimeMillis();
        for (int i=0; i<hitsCollection.length(); i++) {
            int id = hitsCollection.id(i);
            arrayOfIndividualHits[i] = new IndividualHit(i, sf.getFieldValue(id), hitsCollection.score(i));
        }
        long second = System.currentTimeMillis();
        //logger.debug("HitsIterator.sortByField(): filling Obj[] took "+(second-first));

        Arrays.sort(arrayOfIndividualHits, c);
        //logger.debug("HitsIterator.sortByField(): sort took "+(System.currentTimeMillis()-second));

    }

