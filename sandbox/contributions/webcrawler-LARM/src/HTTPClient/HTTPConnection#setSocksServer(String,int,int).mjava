    /**
     * Sets the SOCKS server to use. The server will only be used for new
     * HTTPConnections created after this call and will not affect currrent
     * instances of HTTPConnection. A null or empty string host parameter
     * disables SOCKS. <P>
     *
     * In an application or using the Appletviewer an alternative to this method
     * is to set the following properties (either in the properties file or on
     * the command line): <var>HTTPClient.socksHost</var> , <var>
     * HTTPClient.socksPort</var> and <var>HTTPClient.socksVersion</var> .
     * Whether <var>HTTPClient.socksHost</var> is set or not determines whether
     * a SOCKS server is used; if <var>HTTPClient.socksPort</var> is not set it
     * defaults to 1080; if <var>HTTPClient.socksVersion</var> is not set an
     * attempt will be made to automatically determine the version used by the
     * server. <P>
     *
     * Note: If you have also set a proxy server then a connection will be made
     * to the SOCKS server, which in turn then makes a connection to the proxy
     * server (possibly via other SOCKS servers), which in turn makes the final
     * connection. <P>
     *
     * If the proxy server is running SOCKS version 5 and requires
     * username/password authorization, and you wish to set this authorization
     * information in the code, then you may use the <var>
     * AuthorizationInfo.addAuthorization()</var> method to do so. Specify the
     * same <var>host</var> and <var>port</var> as in this method, give the
     * <var>scheme</var> "SOCKS5" and the <var>realm</var> "USER/PASS", set the
     * <var>cookie</var> to null and the <var>params</var> to an array
     * containing a single <var>NVPair</var> in turn containing the username and
     * password. Example: <PRE>
     *     NVPair[] up = { new NVPair(username, password) };
     *     AuthorizationInfo.addAuthorization(host, port, "SOCKS5", "USER/PASS",
     *                                        null, up);
     * </PRE> If you have not given any authorization info and the proxy server
     * requires authorization then you will be prompted for the necessary info
     * via a popup the first time you do a request.
     *
     * @param host                the host on which the proxy server resides.
     * @param port                the port the proxy server is listening on.
     * @param version             the SOCKS version the server is running.
     *      Currently this must be '4' or '5'.
     * @exception SocksException  If <var>version</var> is not '4' or '5'.
     */
    public static void setSocksServer(String host, int port, int version)
        throws SocksException
    {
        if (port <= 0)
        {
            port = 1080;
        }

        if (host == null || host.length() == 0)
        {
            Default_Socks_client = null;
        }
        else
        {
            Default_Socks_client = new SocksClient(host, port, version);
        }
    }

