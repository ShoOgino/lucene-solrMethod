    /**
     * this is called whenever a link was found in the current document, Don't
     * create too many objects here, as this will be called millions of times
     *
     * @param link     Description of the Parameter
     * @param anchor   Description of the Parameter
     * @param isFrame  Description of the Parameter
     */
    public void handleLink(String link, String anchor, boolean isFrame)
    {
        try
        {
            // cut out Ref part


            int refPart = link.indexOf("#");
            //System.out.println(link);
            if (refPart == 0)
            {
                return;
            }
            else if (refPart > 0)
            {
                link = link.substring(0, refPart);
            }

            URL url = null;
            if (link.startsWith("http:"))
            {
                // distinguish between absolute and relative URLs

                url = new URL(link);
            }
            else
            {
                // relative url
                url = new URL(base, link);
            }
            if(url.getPath() == null || url.getPath().length() == 0)
            {
                url = new URL(url.getProtocol(), url.getHost(), url.getPort(), "/" + url.getFile());
            }
            URLMessage urlMessage = new URLMessage(url, contextUrl, isFrame ? URLMessage.LINKTYPE_FRAME : URLMessage.LINKTYPE_ANCHOR, anchor, hostResolver);

            //String urlString = urlMessage.getURLString();

            foundUrls.add(urlMessage);
            //messageHandler.putMessage(new actURLMessage(url)); // put them in the very end
        }
        catch (MalformedURLException e)
        {
            //log.log("malformed url: base:" + base + " -+- link:" + link);
            log.log("warning: " + e.getClass().getName() + ": " + e.getMessage());
        }
        catch (Exception e)
        {
            log.log("warning: " + e.getClass().getName() + ": " + e.getMessage());
            // e.printStackTrace();
        }

    }

