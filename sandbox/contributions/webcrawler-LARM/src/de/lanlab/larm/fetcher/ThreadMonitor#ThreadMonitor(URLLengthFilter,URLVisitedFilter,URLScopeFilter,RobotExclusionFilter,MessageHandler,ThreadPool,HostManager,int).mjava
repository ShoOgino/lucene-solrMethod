    /**
     * construct the monitor gets a reference to all monitored filters
     * @param threadPool  the pool to be observed
     * @param sampleDelta time in ms between samples
     */
    public ThreadMonitor(URLLengthFilter urlLengthFilter,
                         URLVisitedFilter urlVisitedFilter,
                         URLScopeFilter urlScopeFilter,
                         /*DNSResolver dnsResolver,*/
                         RobotExclusionFilter reFilter,
                         MessageHandler messageHandler,
                         ThreadPool threadPool,
                         HostManager hostManager,
                         int sampleDelta)
    {
        this.urlLengthFilter = urlLengthFilter;
        this.urlVisitedFilter = urlVisitedFilter;
        this.urlScopeFilter   = urlScopeFilter;
       /* this.dnsResolver = dnsResolver;*/
        this.hostManager = hostManager;
        this.reFilter = reFilter;
        this.messageHandler = messageHandler;

        this.threadPool = threadPool;
        bytesReadPerPeriod = new ArrayList();
        this.sampleDelta = sampleDelta;
        this.thread = new Thread(this, "ThreadMonitor");
        this.thread.setPriority(7);

        try
        {
            File logDir = new File("logs");
            logDir.mkdir();
            logWriter = new PrintWriter(new BufferedWriter(new FileWriter("logs/ThreadMonitor.log")));
        }
        catch(IOException e)
        {
            System.out.println("Couldn't create logfile (ThreadMonitor)");
        }

    }

