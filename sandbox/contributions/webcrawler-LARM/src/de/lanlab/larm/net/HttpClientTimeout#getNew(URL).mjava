    /*
     * public void SetTimeout(int i) throws SocketException {
     * serverSocket.setSoTimeout(i);
     * }
     */
    /*
     * This class has no public constructor for HTTP.  This method is used to
     * get an HttpClient to the specifed URL.  If there's currently an
     * active HttpClient to that server/port, you'll get that one.
     *
     * no longer syncrhonized -- it slows things down too much
     * synchronize at a higher level
     */
    /**
     *  Gets the New attribute of the HttpClientTimeout class
     *
     *@param  url              Description of Parameter
     *@return                  The New value
     *@exception  IOException  Description of Exception
     */
    public static HttpClientTimeout getNew(URL url) throws IOException {
        /*
         * see if one's already around
         */
        HttpClientTimeout ret = (HttpClientTimeout) kac.get(url);
        if (ret == null) {
            ret = new HttpClientTimeout(url);
            // CTOR called openServer()
        }
        else {
            ret.url = url;
        }
        // don't know if we're keeping alive until we parse the headers
        // for now, keepingAlive is false
        return ret;
    }

