    /**
     * inserts an object to the front of the queue
     *
     * @param o                   the object to be inserted. must implement Serializable
     * @exception StoreException  encapsulates Exceptions that occur when writing to hard disk
     */
    public synchronized void insert(Object o)
        throws StoreException
    {
        if (last == null && first == null)
        {
            first = last = newBlock();
            queueBlocks.addFirst(first);
            numBlocks++;
        }
        if (last == null && first != null)
        {
            // affirm((last==null && first==null) || (last!= null && first!=null));
            System.err.println("Error in CachingQueue: last!=first==null");
        }

        if (first.size() >= blockSize)
        {
            // save block and create a new one
            QueueBlock newBlock = newBlock();
            numBlocks++;
            if (last != first)
            {
                first.store();
            }
            queueBlocks.addFirst(newBlock);
            first = newBlock;
        }
        first.insert(o);
        size++;
    }

