    /**
     * Sets the proxy used by this instance. This can be used to override the
     * proxy setting inherited from the default proxy setting. A null or empty
     * string <var>host</var> parameter disables the proxy. <P>
     *
     * Note that if you set a proxy for the connection using this method, and a
     * request made over this connection is redirected to a different server,
     * then the connection used for new server will <em>not</em> pick this proxy
     * setting, but instead will use the default proxy settings.
     *
     * @param host  the host the proxy runs on
     * @param port  the port the proxy is listening on
     * @see         #setProxyServer(java.lang.String, int)
     */
    public synchronized void setCurrentProxy(String host, int port)
    {
        if (host == null || host.trim().length() == 0)
        {
            Proxy_Host = null;
        }
        else
        {
            Proxy_Host = host.trim().toLowerCase();
            if (port <= 0)
            {
                Proxy_Port = 80;
            }
            else
            {
                Proxy_Port = port;
            }
        }

        // the proxy might be talking a different version, so renegotiate
        switch (Protocol)
        {
            case HTTP:
            case HTTPS:
                if (force_1_0)
                {
                    ServerProtocolVersion = HTTP_1_0;
                    ServProtVersKnown = true;
                    RequestProtocolVersion = "HTTP/1.0";
                }
                else
                {
                    ServerProtocolVersion = HTTP_1_1;
                    ServProtVersKnown = false;
                    RequestProtocolVersion = "HTTP/1.1";
                }
                break;
            case HTTP_NG:
                ServerProtocolVersion = -1;
                /*
                 *  Unknown
                 */
                ServProtVersKnown = false;
                RequestProtocolVersion = "";
                break;
            case SHTTP:
                ServerProtocolVersion = -1;
                /*
                 *  Unknown
                 */
                ServProtVersKnown = false;
                RequestProtocolVersion = "Secure-HTTP/1.3";
                break;
            default:
                throw new Error("HTTPClient Internal Error: invalid protocol " +
                        Protocol);
        }

        keepAliveUnknown = true;
        doesKeepAlive = false;

        input_demux = null;
        early_stall = null;
        late_stall = null;
        prev_resp = null;
    }

