        public boolean stem() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            int v_10;
            int v_11;
            // (, line 212
            // do, line 214
            v_1 = cursor;
            lab0: do {
                // call prelude, line 214
                if (!r_prelude())
                {
                    break lab0;
                }
            } while (false);
            cursor = v_1;
            // do, line 215
            v_2 = cursor;
            lab1: do {
                // call mark_regions, line 215
                if (!r_mark_regions())
                {
                    break lab1;
                }
            } while (false);
            cursor = v_2;
            // backwards, line 216
            limit_backward = cursor; cursor = limit;
            // (, line 216
            // do, line 218
            v_3 = limit - cursor;
            lab2: do {
                // (, line 218
                // or, line 228
                lab3: do {
                    v_4 = limit - cursor;
                    lab4: do {
                        // (, line 219
                        // and, line 224
                        v_5 = limit - cursor;
                        // (, line 220
                        // or, line 220
                        lab5: do {
                            v_6 = limit - cursor;
                            lab6: do {
                                // call standard_suffix, line 220
                                if (!r_standard_suffix())
                                {
                                    break lab6;
                                }
                                break lab5;
                            } while (false);
                            cursor = limit - v_6;
                            lab7: do {
                                // call i_verb_suffix, line 221
                                if (!r_i_verb_suffix())
                                {
                                    break lab7;
                                }
                                break lab5;
                            } while (false);
                            cursor = limit - v_6;
                            // call verb_suffix, line 222
                            if (!r_verb_suffix())
                            {
                                break lab4;
                            }
                        } while (false);
                        cursor = limit - v_5;
                        // try, line 225
                        v_7 = limit - cursor;
                        lab8: do {
                            // (, line 225
                            // [, line 225
                            ket = cursor;
                            // or, line 225
                            lab9: do {
                                v_8 = limit - cursor;
                                lab10: do {
                                    // (, line 225
                                    // literal, line 225
                                    if (!(eq_s_b(1, "Y")))
                                    {
                                        break lab10;
                                    }
                                    // ], line 225
                                    bra = cursor;
                                    // <-, line 225
                                    slice_from("i");
                                    break lab9;
                                } while (false);
                                cursor = limit - v_8;
                                // (, line 226
                                // literal, line 226
                                if (!(eq_s_b(1, "\u00E7")))
                                {
                                    cursor = limit - v_7;
                                    break lab8;
                                }
                                // ], line 226
                                bra = cursor;
                                // <-, line 226
                                slice_from("c");
                            } while (false);
                        } while (false);
                        break lab3;
                    } while (false);
                    cursor = limit - v_4;
                    // call residual_suffix, line 229
                    if (!r_residual_suffix())
                    {
                        break lab2;
                    }
                } while (false);
            } while (false);
            cursor = limit - v_3;
            // do, line 234
            v_9 = limit - cursor;
            lab11: do {
                // call un_double, line 234
                if (!r_un_double())
                {
                    break lab11;
                }
            } while (false);
            cursor = limit - v_9;
            // do, line 235
            v_10 = limit - cursor;
            lab12: do {
                // call un_accent, line 235
                if (!r_un_accent())
                {
                    break lab12;
                }
            } while (false);
            cursor = limit - v_10;
            cursor = limit_backward;            // do, line 237
            v_11 = cursor;
            lab13: do {
                // call postlude, line 237
                if (!r_postlude())
                {
                    break lab13;
                }
            } while (false);
            cursor = v_11;
            return true;
        }

