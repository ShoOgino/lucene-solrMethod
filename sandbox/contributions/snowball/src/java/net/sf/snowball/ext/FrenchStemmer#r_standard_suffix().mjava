        private boolean r_standard_suffix() {
            int among_var;
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            int v_10;
            int v_11;
            // (, line 82
            // [, line 83
            ket = cursor;
            // substring, line 83
            among_var = find_among_b(a_3, 43);
            if (among_var == 0)
            {
                return false;
            }
            // ], line 83
            bra = cursor;
            switch(among_var) {
                case 0:
                    return false;
                case 1:
                    // (, line 87
                    // call R2, line 87
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 87
                    slice_del();
                    break;
                case 2:
                    // (, line 90
                    // call R2, line 90
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 90
                    slice_del();
                    // try, line 91
                    v_1 = limit - cursor;
                    lab0: do {
                        // (, line 91
                        // [, line 91
                        ket = cursor;
                        // literal, line 91
                        if (!(eq_s_b(2, "ic")))
                        {
                            cursor = limit - v_1;
                            break lab0;
                        }
                        // ], line 91
                        bra = cursor;
                        // or, line 91
                        lab1: do {
                            v_2 = limit - cursor;
                            lab2: do {
                                // (, line 91
                                // call R2, line 91
                                if (!r_R2())
                                {
                                    break lab2;
                                }
                                // delete, line 91
                                slice_del();
                                break lab1;
                            } while (false);
                            cursor = limit - v_2;
                            // <-, line 91
                            slice_from("iqU");
                        } while (false);
                    } while (false);
                    break;
                case 3:
                    // (, line 95
                    // call R2, line 95
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 95
                    slice_from("log");
                    break;
                case 4:
                    // (, line 98
                    // call R2, line 98
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 98
                    slice_from("u");
                    break;
                case 5:
                    // (, line 101
                    // call R2, line 101
                    if (!r_R2())
                    {
                        return false;
                    }
                    // <-, line 101
                    slice_from("ent");
                    break;
                case 6:
                    // (, line 104
                    // call RV, line 105
                    if (!r_RV())
                    {
                        return false;
                    }
                    // delete, line 105
                    slice_del();
                    // try, line 106
                    v_3 = limit - cursor;
                    lab3: do {
                        // (, line 106
                        // [, line 107
                        ket = cursor;
                        // substring, line 107
                        among_var = find_among_b(a_1, 6);
                        if (among_var == 0)
                        {
                            cursor = limit - v_3;
                            break lab3;
                        }
                        // ], line 107
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                cursor = limit - v_3;
                                break lab3;
                            case 1:
                                // (, line 108
                                // call R2, line 108
                                if (!r_R2())
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // delete, line 108
                                slice_del();
                                // [, line 108
                                ket = cursor;
                                // literal, line 108
                                if (!(eq_s_b(2, "at")))
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // ], line 108
                                bra = cursor;
                                // call R2, line 108
                                if (!r_R2())
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // delete, line 108
                                slice_del();
                                break;
                            case 2:
                                // (, line 109
                                // or, line 109
                                lab4: do {
                                    v_4 = limit - cursor;
                                    lab5: do {
                                        // (, line 109
                                        // call R2, line 109
                                        if (!r_R2())
                                        {
                                            break lab5;
                                        }
                                        // delete, line 109
                                        slice_del();
                                        break lab4;
                                    } while (false);
                                    cursor = limit - v_4;
                                    // (, line 109
                                    // call R1, line 109
                                    if (!r_R1())
                                    {
                                        cursor = limit - v_3;
                                        break lab3;
                                    }
                                    // <-, line 109
                                    slice_from("eux");
                                } while (false);
                                break;
                            case 3:
                                // (, line 111
                                // call R2, line 111
                                if (!r_R2())
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // delete, line 111
                                slice_del();
                                break;
                            case 4:
                                // (, line 113
                                // call RV, line 113
                                if (!r_RV())
                                {
                                    cursor = limit - v_3;
                                    break lab3;
                                }
                                // <-, line 113
                                slice_from("i");
                                break;
                        }
                    } while (false);
                    break;
                case 7:
                    // (, line 119
                    // call R2, line 120
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 120
                    slice_del();
                    // try, line 121
                    v_5 = limit - cursor;
                    lab6: do {
                        // (, line 121
                        // [, line 122
                        ket = cursor;
                        // substring, line 122
                        among_var = find_among_b(a_2, 3);
                        if (among_var == 0)
                        {
                            cursor = limit - v_5;
                            break lab6;
                        }
                        // ], line 122
                        bra = cursor;
                        switch(among_var) {
                            case 0:
                                cursor = limit - v_5;
                                break lab6;
                            case 1:
                                // (, line 123
                                // or, line 123
                                lab7: do {
                                    v_6 = limit - cursor;
                                    lab8: do {
                                        // (, line 123
                                        // call R2, line 123
                                        if (!r_R2())
                                        {
                                            break lab8;
                                        }
                                        // delete, line 123
                                        slice_del();
                                        break lab7;
                                    } while (false);
                                    cursor = limit - v_6;
                                    // <-, line 123
                                    slice_from("abl");
                                } while (false);
                                break;
                            case 2:
                                // (, line 124
                                // or, line 124
                                lab9: do {
                                    v_7 = limit - cursor;
                                    lab10: do {
                                        // (, line 124
                                        // call R2, line 124
                                        if (!r_R2())
                                        {
                                            break lab10;
                                        }
                                        // delete, line 124
                                        slice_del();
                                        break lab9;
                                    } while (false);
                                    cursor = limit - v_7;
                                    // <-, line 124
                                    slice_from("iqU");
                                } while (false);
                                break;
                            case 3:
                                // (, line 125
                                // call R2, line 125
                                if (!r_R2())
                                {
                                    cursor = limit - v_5;
                                    break lab6;
                                }
                                // delete, line 125
                                slice_del();
                                break;
                        }
                    } while (false);
                    break;
                case 8:
                    // (, line 131
                    // call R2, line 132
                    if (!r_R2())
                    {
                        return false;
                    }
                    // delete, line 132
                    slice_del();
                    // try, line 133
                    v_8 = limit - cursor;
                    lab11: do {
                        // (, line 133
                        // [, line 133
                        ket = cursor;
                        // literal, line 133
                        if (!(eq_s_b(2, "at")))
                        {
                            cursor = limit - v_8;
                            break lab11;
                        }
                        // ], line 133
                        bra = cursor;
                        // call R2, line 133
                        if (!r_R2())
                        {
                            cursor = limit - v_8;
                            break lab11;
                        }
                        // delete, line 133
                        slice_del();
                        // [, line 133
                        ket = cursor;
                        // literal, line 133
                        if (!(eq_s_b(2, "ic")))
                        {
                            cursor = limit - v_8;
                            break lab11;
                        }
                        // ], line 133
                        bra = cursor;
                        // or, line 133
                        lab12: do {
                            v_9 = limit - cursor;
                            lab13: do {
                                // (, line 133
                                // call R2, line 133
                                if (!r_R2())
                                {
                                    break lab13;
                                }
                                // delete, line 133
                                slice_del();
                                break lab12;
                            } while (false);
                            cursor = limit - v_9;
                            // <-, line 133
                            slice_from("iqU");
                        } while (false);
                    } while (false);
                    break;
                case 9:
                    // (, line 135
                    // <-, line 135
                    slice_from("eau");
                    break;
                case 10:
                    // (, line 136
                    // call R1, line 136
                    if (!r_R1())
                    {
                        return false;
                    }
                    // <-, line 136
                    slice_from("al");
                    break;
                case 11:
                    // (, line 138
                    // or, line 138
                    lab14: do {
                        v_10 = limit - cursor;
                        lab15: do {
                            // (, line 138
                            // call R2, line 138
                            if (!r_R2())
                            {
                                break lab15;
                            }
                            // delete, line 138
                            slice_del();
                            break lab14;
                        } while (false);
                        cursor = limit - v_10;
                        // (, line 138
                        // call R1, line 138
                        if (!r_R1())
                        {
                            return false;
                        }
                        // <-, line 138
                        slice_from("eux");
                    } while (false);
                    break;
                case 12:
                    // (, line 141
                    // call R1, line 141
                    if (!r_R1())
                    {
                        return false;
                    }
                    if (!(out_grouping_b(g_v, 97, 251)))
                    {
                        return false;
                    }
                    // delete, line 141
                    slice_del();
                    break;
                case 13:
                    // (, line 146
                    // call RV, line 146
                    if (!r_RV())
                    {
                        return false;
                    }
                    // fail, line 146
                    // (, line 146
                    // <-, line 146
                    slice_from("ant");
                    return false;
                case 14:
                    // (, line 147
                    // call RV, line 147
                    if (!r_RV())
                    {
                        return false;
                    }
                    // fail, line 147
                    // (, line 147
                    // <-, line 147
                    slice_from("ent");
                    return false;
                case 15:
                    // (, line 149
                    // test, line 149
                    v_11 = limit - cursor;
                    // (, line 149
                    if (!(in_grouping_b(g_v, 97, 251)))
                    {
                        return false;
                    }
                    // call RV, line 149
                    if (!r_RV())
                    {
                        return false;
                    }
                    cursor = limit - v_11;
                    // fail, line 149
                    // (, line 149
                    // delete, line 149
                    slice_del();
                    return false;
            }
            return true;
        }

