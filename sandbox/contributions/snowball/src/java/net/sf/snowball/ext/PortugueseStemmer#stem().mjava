        public boolean stem() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            int v_5;
            int v_6;
            int v_7;
            int v_8;
            int v_9;
            // (, line 199
            // do, line 200
            v_1 = cursor;
            lab0: do {
                // call prelude, line 200
                if (!r_prelude())
                {
                    break lab0;
                }
            } while (false);
            cursor = v_1;
            // do, line 201
            v_2 = cursor;
            lab1: do {
                // call mark_regions, line 201
                if (!r_mark_regions())
                {
                    break lab1;
                }
            } while (false);
            cursor = v_2;
            // backwards, line 202
            limit_backward = cursor; cursor = limit;
            // (, line 202
            // do, line 203
            v_3 = limit - cursor;
            lab2: do {
                // (, line 203
                // or, line 207
                lab3: do {
                    v_4 = limit - cursor;
                    lab4: do {
                        // (, line 204
                        // or, line 204
                        lab5: do {
                            v_5 = limit - cursor;
                            lab6: do {
                                // call standard_suffix, line 204
                                if (!r_standard_suffix())
                                {
                                    break lab6;
                                }
                                break lab5;
                            } while (false);
                            cursor = limit - v_5;
                            // call verb_suffix, line 204
                            if (!r_verb_suffix())
                            {
                                break lab4;
                            }
                        } while (false);
                        // do, line 205
                        v_6 = limit - cursor;
                        lab7: do {
                            // (, line 205
                            // [, line 205
                            ket = cursor;
                            // literal, line 205
                            if (!(eq_s_b(1, "i")))
                            {
                                break lab7;
                            }
                            // ], line 205
                            bra = cursor;
                            // test, line 205
                            v_7 = limit - cursor;
                            // literal, line 205
                            if (!(eq_s_b(1, "c")))
                            {
                                break lab7;
                            }
                            cursor = limit - v_7;
                            // call RV, line 205
                            if (!r_RV())
                            {
                                break lab7;
                            }
                            // delete, line 205
                            slice_del();
                        } while (false);
                        cursor = limit - v_6;
                        break lab3;
                    } while (false);
                    cursor = limit - v_4;
                    // call residual_suffix, line 207
                    if (!r_residual_suffix())
                    {
                        break lab2;
                    }
                } while (false);
            } while (false);
            cursor = limit - v_3;
            // do, line 209
            v_8 = limit - cursor;
            lab8: do {
                // call residual_form, line 209
                if (!r_residual_form())
                {
                    break lab8;
                }
            } while (false);
            cursor = limit - v_8;
            cursor = limit_backward;            // do, line 211
            v_9 = cursor;
            lab9: do {
                // call postlude, line 211
                if (!r_postlude())
                {
                    break lab9;
                }
            } while (false);
            cursor = v_9;
            return true;
        }

