        private boolean r_prelude() {
            int v_1;
            int v_2;
            int v_3;
            int v_4;
            // (, line 23
            // unset Y_found, line 24
            B_Y_found = false;
            // do, line 25
            v_1 = cursor;
            lab0: do {
                // (, line 25
                // [, line 25
                bra = cursor;
                // literal, line 25
                if (!(eq_s(1, "y")))
                {
                    break lab0;
                }
                // ], line 25
                ket = cursor;
                if (!(in_grouping(g_v, 97, 121)))
                {
                    break lab0;
                }
                // <-, line 25
                slice_from("Y");
                // set Y_found, line 25
                B_Y_found = true;
            } while (false);
            cursor = v_1;
            // do, line 26
            v_2 = cursor;
            lab1: do {
                // repeat, line 26
                replab2: while(true)
                {
                    v_3 = cursor;
                    lab3: do {
                        // (, line 26
                        // goto, line 26
                        golab4: while(true)
                        {
                            v_4 = cursor;
                            lab5: do {
                                // (, line 26
                                if (!(in_grouping(g_v, 97, 121)))
                                {
                                    break lab5;
                                }
                                // [, line 26
                                bra = cursor;
                                // literal, line 26
                                if (!(eq_s(1, "y")))
                                {
                                    break lab5;
                                }
                                // ], line 26
                                ket = cursor;
                                cursor = v_4;
                                break golab4;
                            } while (false);
                            cursor = v_4;
                            if (cursor >= limit)
                            {
                                break lab3;
                            }
                            cursor++;
                        }
                        // <-, line 26
                        slice_from("Y");
                        // set Y_found, line 26
                        B_Y_found = true;
                        continue replab2;
                    } while (false);
                    cursor = v_3;
                    break replab2;
                }
            } while (false);
            cursor = v_2;
            return true;
        }

