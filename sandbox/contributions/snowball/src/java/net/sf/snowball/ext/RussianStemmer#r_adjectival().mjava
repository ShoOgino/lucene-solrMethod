        private boolean r_adjectival() {
            int among_var;
            int v_1;
            int v_2;
            // (, line 140
            // call adjective, line 141
            if (!r_adjective())
            {
                return false;
            }
            // try, line 148
            v_1 = limit - cursor;
            lab0: do {
                // (, line 148
                // [, line 149
                ket = cursor;
                // substring, line 149
                among_var = find_among_b(a_2, 8);
                if (among_var == 0)
                {
                    cursor = limit - v_1;
                    break lab0;
                }
                // ], line 149
                bra = cursor;
                switch(among_var) {
                    case 0:
                        cursor = limit - v_1;
                        break lab0;
                    case 1:
                        // (, line 154
                        // or, line 154
                        lab1: do {
                            v_2 = limit - cursor;
                            lab2: do {
                                // literal, line 154
                                if (!(eq_s_b(1, "\u00C1")))
                                {
                                    break lab2;
                                }
                                break lab1;
                            } while (false);
                            cursor = limit - v_2;
                            // literal, line 154
                            if (!(eq_s_b(1, "\u00D1")))
                            {
                                cursor = limit - v_1;
                                break lab0;
                            }
                        } while (false);
                        // delete, line 154
                        slice_del();
                        break;
                    case 2:
                        // (, line 161
                        // delete, line 161
                        slice_del();
                        break;
                }
            } while (false);
            return true;
        }

